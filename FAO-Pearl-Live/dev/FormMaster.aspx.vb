Imports System.Data
Imports System.Data.SqlClient
Imports Newtonsoft.Json.Converters
Imports Newtonsoft.Json
Imports System.Web.Script.Serialization
Imports System.Web.Services

Partial Class FormMaster
    Inherits System.Web.UI.Page
    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    Dim con As New SqlConnection(conStr)
    Dim delDependancy As String = ""
    Dim MasterdelDependancy As String = ""
    Public Shared value As Boolean



    'Add Theme Code
    Protected Sub Page_PreInit1(ByVal sender As Object, ByVal e As EventArgs) Handles Me.PreInit
        Try
            If Not Session("CTheme") Is Nothing And Not Session("CTheme") = String.Empty Then
                Page.Theme = Convert.ToString(Session("CTheme"))
            Else
                Page.Theme = "Default"
            End If
        Catch ex As Exception
        End Try

    End Sub

    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init
        If Not Session("ACTION1") Is Nothing Then
            Dim dt As DataTable
            dt = CType(Session("FIELDS1"), DataTable)
            If dt.Rows.Count > 0 Then
                If Session("ACTION1").ToString() = "APPLYFIELDS" Then
                    Dim ob As New DynamicForm()
                    ob.ApplyFieldsOnCustom(dt, dt.Rows(0).Item("layoutdata"), pnlLayout)
                Else
                End If
            End If
        End If
        'Dim strs As String()
        'If (Not IsNothing(Session("CHILDACTIONSCREEN"))) Then
        '    If (Session("CHILDACTIONSCREEN").ToString() <> String.Empty) Then
        '        strs = Session("CHILDACTIONSCREEN").ToString().Split(",")
        '        If (strs.Length > 0) Then
        '        Else
        '            strs(0) = Session("CHILDACTIONSCREEN").ToString()
        '        End If
        '    End If
        'End If
        If (Not IsPostBack) Then
            Session("FORMNAME") = Nothing
        End If
        If (Not IsNothing(Session("FORMNAME"))) Then
            pnlGrid1.Controls.Add(New LiteralControl("<tr>"))
            pnlGrid1.Controls.Add(New LiteralControl("<td colspan='4'>"))
            pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabs"" ><ul>"))
            pnlGrid1.Controls.Add(New LiteralControl("<li><a href=""#tabPending0"">" & Session("FORMNAME").ToString() & "<asp:Label ID=""lblpending0"" runat=""server""></asp:Label></a></li>"))
            Dim strs As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")
            'If (Not IsNothing(Session("CHILDACTIONSCREEN"))) Then
            '    If (Session("CHILDACTIONSCREEN").ToString() <> String.Empty) Then
            '        strs = Session("CHILDACTIONSCREEN").ToString().Split(",")
            '    End If
            'End If



            If (Not IsNothing(strs)) Then

                For j As Integer = 1 To strs.Length
                    Dim childvalue As String() = strs(j - 1).ToString().Split(".")
                    If (childvalue.Length > 1) Then
                        pnlGrid1.Controls.Add(New LiteralControl("<li><a href=""#tabPending" & j.ToString() & """>" & childvalue(1).ToString() & "<asp:Label ID=""lblpending" & j & " "" runat=""server""></asp:Label></a></li>"))
                    End If
                Next

            End If

            pnlGrid1.Controls.Add(New LiteralControl("</ul>"))
            'pnlGrid1.Controls.Add(tabPending00)


            'tabPending00.Attributes.Add("Style", "display:block;")
            Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con1 As New SqlConnection(conStr1)
            Dim oda1 As New SqlDataAdapter("", con1)
            Dim ds1 As New DataSet


            oda1.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & Session("FORMNAME").ToString() & "' and EID=" & Session("eid") & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='" & Session("FORMNAME").ToString() & "' and EID=" & Session("eid") & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & Session("EVENTNAME").ToString() & "' and  F.EID = " & Session("EID") & "   Order By Displayorder"
            oda1.Fill(ds1, "data")
            pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabPending0"" style=""min-height:50px;max-height:200px;overflow-x:scroll;overflow-y:scroll;width:650px;"">"))
            Dim GRDCHLDVIEWMAIN As New GridView
            GRDCHLDVIEWMAIN.AutoGenerateColumns = "TRUE"
            Dim formname As String = Session("FORMNAME").ToString()
            GRDCHLDVIEWMAIN.ID = "GRD_" & formname.ToString().Replace(" ", "_")
            GRDCHLDVIEWMAIN.Width = "600"
            GRDCHLDVIEWMAIN.CssClass = "mGrid"
            GRDCHLDVIEWMAIN.AlternatingRowStyle.CssClass = "alt"
            AddHandler GRDCHLDVIEWMAIN.RowDataBound, AddressOf gvData_InlineEdit
            GRDCHLDVIEWMAIN.DataSource = ds1.Tables("data")
            GRDCHLDVIEWMAIN.DataBind()
            pnlGrid1.Controls.Add(GRDCHLDVIEWMAIN)

            pnlGrid1.Controls.Add(New LiteralControl("</div>"))


            If (Not IsNothing(strs)) Then
                For i As Integer = 1 To strs.Length
                    If (strs.Length > 0 And strs.ToString() <> String.Empty) Then
                        Dim childvalue As String() = strs(i - 1).ToString().Split(".")
                        If childvalue.Length > 1 Then


                            Dim conStrsS As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                            Dim consS As New SqlConnection(conStrsS)
                            Dim dasS As SqlDataAdapter = New SqlDataAdapter("", consS)
                            Dim dtChildS As New DataTable()
                            'dasS.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='CAS." & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & childvalue(1).ToString() & "' and  F.EID = " & Session("EID").ToString() & "   Order By Displayorder"
                            dasS.SelectCommand.CommandText = ";with sa (FieldID,displayName,FieldType,displayOrder,dropdown,isrequired,isActive,isEditable,fieldmapping) as (  select FieldID,displayName,FieldType,displayOrder,dropdown,case isRequired when 1 then 'Mandatory' else 'Nullable' end,case isActive when 0 then 'InActive' else 'Active' end,isEditable,fieldmapping from mmm_mst_fields where documenttype='" & childvalue(1).ToString() & "' and eid=" & Session("EID").ToString() & ")select  sa.FieldID,sa.displayName,sa.FieldType,sa.displayOrder,sa.dropdown,sa.isrequired,sa.isActive,sa.isEditable,case isnull((FF.fieldmapping),'0') when '0' then '0' else '1' end as [AF] from mmm_mst_fields as FF right join sa on FF.FieldMapping=sa.fieldmapping and FF.documenttype='" & strs(i - 1).ToString().ToString() & "' and FF.EID=" & Session("EID").ToString() & " order by displayorder"
                            dasS.Fill(dtChildS)
                            If (dtChildS.Rows.Count > 0) Then
                                pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabPending" & i.ToString() & """style=""max-height:200px;overflow-x:scroll;overflow-y:scroll;width:650px;"">"))
                                'Dim rights As String() = {"CREATE", "EDIT", "DELETE", "2", "4", "6"}
                                'pnlGrid1.Controls.Add(New LiteralControl("<table cellpadding=""0"" cellspacing=""0""><tr>"))
                                'For x As Integer = 0 To rights.Length - 4
                                '    pnlGrid1.Controls.Add(New LiteralControl("<td>"))
                                '    Dim chk As New CheckBox
                                '    chk.ID = "CHK_" & childvalue(1).ToString().Replace(" ", "_") & "_" & x
                                '    chk.Text = rights(x).ToString()
                                '    pnlGrid1.Controls.Add(chk)
                                '    pnlGrid1.Controls.Add(New LiteralControl("</td>"))
                                'Next
                                'pnlGrid1.Controls.Add(New LiteralControl("</tr></table>"))
                                'Dim chkedit As New CheckBoxList
                                'chkedit.ID = "chkrights"
                                'chkedit.Items.Add(New ListItem("Create", "2"))
                                'chkedit.Items.Add(New ListItem("Edit", "4"))
                                'chkedit.Items.Add(New ListItem("Delete", "6"))
                                'chkedit.RepeatDirection = RepeatDirection.Horizontal
                                'chkedit.EnableViewState = False
                                'pnlGrid1.Controls.Add(chkedit)
                                Dim chkedit As New CheckBoxList
                                chkedit.ID = "CHK_" & childvalue(1).ToString().Replace(" ", "_")
                                chkedit.Items.Add(New ListItem("Create", "2"))
                                chkedit.Items.Add(New ListItem("Edit", "4"))
                                chkedit.Items.Add(New ListItem("Delete", "8"))
                                chkedit.RepeatDirection = RepeatDirection.Horizontal
                                chkedit.EnableViewState = False
                                pnlGrid1.Controls.Add(chkedit)
                                Dim GRDCHLDVIEW As New GridView
                                GRDCHLDVIEW.AutoGenerateColumns = "TRUE"
                                GRDCHLDVIEW.ID = "GRD_" & childvalue(1).ToString().Replace(" ", "_")
                                GRDCHLDVIEW.Width = "600"
                                GRDCHLDVIEW.CssClass = "mGrid"
                                GRDCHLDVIEW.AlternatingRowStyle.CssClass = "alt"
                                AddHandler GRDCHLDVIEW.RowDataBound, AddressOf gvData_InlineEdit
                                GRDCHLDVIEW.DataSource = dtChildS
                                GRDCHLDVIEW.DataBind()

                                pnlGrid1.Controls.Add(GRDCHLDVIEW)
                                pnlGrid1.Controls.Add(New LiteralControl("</div>"))
                            End If
                        End If
                    End If
                Next
            End If

            pnlGrid1.Controls.Add(New LiteralControl("</div>"))

        End If
    End Sub
    Public Sub Checkboxvalidate(chk As CheckBoxList, val As Integer)
        If (val = 14) Then
            For Each li As ListItem In chk.Items
                If (li.Value = "2") Then
                    li.Selected = True
                ElseIf (li.Value = "4") Then
                    li.Selected = True
                ElseIf (li.Value = "8") Then
                    li.Selected = True
                End If
            Next
        ElseIf (val = 12) Then
            For Each li As ListItem In chk.Items
                If (li.Value = "2") Then
                    li.Selected = False
                ElseIf (li.Value = "4") Then
                    li.Selected = True
                ElseIf (li.Value = "8") Then
                    li.Selected = True
                End If
            Next
        ElseIf (val = 10) Then
            For Each li As ListItem In chk.Items
                If (li.Value = "2") Then
                    li.Selected = True
                ElseIf (li.Value = "4") Then
                    li.Selected = False
                ElseIf (li.Value = "8") Then
                    li.Selected = True
                End If
            Next
        ElseIf (val = 8) Then
            For Each li As ListItem In chk.Items
                If (li.Value = "2") Then
                    li.Selected = False
                ElseIf (li.Value = "4") Then
                    li.Selected = False
                ElseIf (li.Value = "8") Then
                    li.Selected = True
                End If
            Next
        ElseIf (val = 6) Then
            For Each li As ListItem In chk.Items
                If (li.Value = "2") Then
                    li.Selected = True
                ElseIf (li.Value = "4") Then
                    li.Selected = True
                ElseIf (li.Value = "8") Then
                    li.Selected = False
                End If
            Next
        ElseIf (val = 4) Then
            For Each li As ListItem In chk.Items
                If (li.Value = "2") Then
                    li.Selected = False
                ElseIf (li.Value = "4") Then
                    li.Selected = True
                ElseIf (li.Value = "8") Then
                    li.Selected = False
                End If
            Next
        ElseIf (val = 2) Then
            For Each li As ListItem In chk.Items
                If (li.Value = "2") Then
                    li.Selected = True
                ElseIf (li.Value = "4") Then
                    li.Selected = False
                ElseIf (li.Value = "8") Then
                    li.Selected = False
                End If
            Next
        End If
    End Sub
    Public Sub BinddataGrid()
        'fill Product  
        Try
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)
            Dim da As New SqlDataAdapter("SELECT FormID,FormName,FormCaption,EID,FormType,FormSource,LayOutType,EventName [DocumentType],docnature, case isActive when 0 then 'InActive' else 'Active' end [isActive] FROM MMM_MST_FORMS WHERE EID = " & Session("EID").ToString() & " order by Formname ", con)
            da.SelectCommand.CommandType = CommandType.Text
            Dim ds As New DataSet()
            da.Fill(ds, "data")
            gvData.DataSource = ds.Tables("data")
            gvData.DataBind()
            updPnlGrid.Update()
            da.Dispose()
        Catch ex As Exception
        Finally
            con.Close()
        End Try
    End Sub
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        test.Visible = True

        If Not IsPostBack Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)
            Dim da As New SqlDataAdapter("select DISTINCT FORMNAME,FORMID FROM MMM_MST_FORMS WHERE FORMSOURCE='MENU DRIVEN' AND ( EID=" & Session("EID") & " OR EID=0)", con)
            BinddataGrid()

            Dim oda As SqlDataAdapter = Nothing
            Try
                Dim ds As New DataSet
                da.Fill(ds, "data")
                For i As Integer = 0 To ds.Tables("data").Rows.Count - 1
                    ddlEvent.Items.Add(ds.Tables("data").Rows(i).Item(0))
                    ddlEvent.Items(i).Value = ds.Tables("data").Rows(i).Item(1)
                Next
                ddlEvent.Items.Insert(0, "SELECT EVENT")

                oda = New SqlDataAdapter("select disname,colname FROM MMM_MST_SEARCH where tableName='FORMS'", con)   'Shalini
                Dim ods As New DataSet
                oda.Fill(ods, "FORMS")
                For i As Integer = 0 To ods.Tables("FORMS").Rows.Count - 1
                    ddlField.Items.Add(ods.Tables("FORMS").Rows(i).Item(0))
                    'ddlEvent.Items(i).Value = ds.Tables("type").Rows(i).Item(1)
                Next
                enableicon()




                'below code is used to Advance Formula relation
                Dim dt As New DataTable()
                Dim dss As New DataSet()
                Dim dc As New DataColumn("Source Type")
                Dim dc1 As New DataColumn("Source Name")
                Dim dc4 As New DataColumn("Target Name")
                Dim dc2 As New DataColumn("Target Type")
                Dim dc3 As New DataColumn("Source Field")

                Dim dc5 As New DataColumn("Target Field")
                Dim dc6 As New DataColumn("Sorting Field")

                dt.Columns.Add(dc)
                dt.Columns.Add(dc1)
                dt.Columns.Add(dc2)
                dt.Columns.Add(dc4)
                dt.Columns.Add(dc3)

                dt.Columns.Add(dc5)
                dt.Columns.Add(dc6)
                dss.Tables.Add(dt)
                Session("datat") = dt
                ViewState("datat") = dt


                tvadvform.Attributes.Add("onclick", "return insertAtCursorTree(" & txtcontionadvform.ClientID & ");")

                tvsource.Attributes.Add("onclick", "return insertAtCursorTreeSource(" & txtcontionadvform.ClientID & ");")
                'Add Tally Synch by mayank 
                If (ddlFormType.SelectedIndex = 0) Then
                    TallyRegistration.Visible = True
                End If
                'Add Tally Synch by mayank 
            Catch ex As Exception
            Finally
                If Not oda Is Nothing Then
                    oda.Dispose()
                End If
                da.Dispose()
                con.Close()
            End Try


        End If
    End Sub

    'code written by chandni starts from here 
    Public Sub BindDropdown(eid As Int32, Documenttype As String)
        Dim DtTable As DataTable
        Dim objDC As New DataClass()
        DtTable = objDC.ExecuteQryDT("select displayName,FieldType,displayOrder,FieldMapping  from MMM_MST_FIELDS where eid=" & eid & " and documenttype='" & Documenttype & "' and FieldType='Text Box' and datatype='Text';")
        If DtTable.Rows.Count > 0 Then
            Dim Chkvalues As String = DtTable.Rows(0)("inputfieldValue").ToString()
            For Each tech As String In Chkvalues.Split(","c)
                Dim items As New ListItem()
                items.Text = tech
                items.Value = tech
                chklActionVal_TargetFieldVal.Items.Add(items)
            Next
            Dim newListItem As ListItem
            newListItem = New ListItem("Select", "0")
            chklActionVal_TargetFieldVal.Items.Add(newListItem)
            newListItem.Selected = True
        End If
    End Sub

    'imgInputAction_Click
    Protected Sub imgInputAction_Click(sender As Object, e As ImageClickEventArgs)
        Dim btnInputActionDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnInputActionDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("ActionInput_FormId") = Formid
        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString
        Dim DtTable As New DataSet
        Using con As New SqlConnection(constr)
            Using cmd As New SqlCommand("sp_GetinputActionDetails_Fields")
                cmd.Connection = con
                cmd.CommandType = CommandType.StoredProcedure
                cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                cmd.Parameters.Add(New SqlParameter("@formid", Formid))
                Using sda As New SqlDataAdapter(cmd)
                    sda.Fill(DtTable)
                End Using
            End Using
        End Using
        If DtTable.Tables(0).Rows.Count > 0 Then
            Dim dt As DataTable = DtTable.Tables(0)
            chklActionVal_TargetFieldVal.DataSource = dt
            chklActionVal_TargetFieldVal.DataTextField = "displayName"
            chklActionVal_TargetFieldVal.DataValueField = "FieldMapping"
            chklActionVal_TargetFieldVal.DataBind()

        End If
        chklActionVal_TargetFieldVal.Items.Insert("0", New ListItem("SELECT"))
        If DtTable.Tables(1).Rows.Count > 0 Then

            Dim dt As DataTable = DtTable.Tables(1)
            chkl_Workflow.DataSource = dt
            chkl_Workflow.DataTextField = "StatusName"
            chkl_Workflow.DataValueField = "tid"
            chkl_Workflow.DataBind()


        End If
        upd_InputAction.Update()

        modalpopup_InputAction.Show()
    End Sub
    Protected Sub InputActionClose()
        lbl_inputAction.Text = ""
        Me.modalpopup_InputAction.Hide()
    End Sub
    Protected Sub EditRecord_ActionVal()
        Try
            If txtActionVal_Caption.Text.Length < 1 Then
                lbl_inputAction.Text = "Please Enter Valid Caption"
                Exit Sub
            End If
            If Left(txtActionVal_Caption.Text, 1) = "" Then
                lbl_inputAction.Text = "Please Enter Valid Caption"
                Exit Sub
            End If
            If txtActionVal_InputFieldVal.Text.Length < 1 Then
                lbl_inputAction.Text = "Please Enter Valid Input Field Value"
                Exit Sub
            End If
            If Left(txtActionVal_InputFieldVal.Text, 1) = "" Then
                lbl_inputAction.Text = "Please Enter Valid Input Field Value"
                Exit Sub
            End If
            Dim TargetFieldVal As String = ""
            If chklActionVal_TargetFieldVal.SelectedItem.Text = "SELECT" Then
                lbl_inputAction.Text = "Please Select Valid Target Field Value"
                Exit Sub
            Else
                TargetFieldVal = chklActionVal_TargetFieldVal.SelectedItem.Value
            End If
            'ddlActionVal_IsActive
            If ddlActionVal_IsActive.SelectedItem.Text = "" Then
                lbl_inputAction.Text = "Please Select Valid IsActive Status"
                Exit Sub
            End If
            Dim Workflow As String = ""
            If chkl_Workflow.SelectedItem.Text = "" Then
                lbl_inputAction.Text = "Please Select Valid Target Field Value"
                Exit Sub
            Else

                Dim cblItems As String()
                Dim cblSelections As New ArrayList()
                For Each item As ListItem In chkl_Workflow.Items
                    If item.Selected = True Then
                        cblSelections.Add(item.Value)
                    End If
                Next
                cblItems = DirectCast(cblSelections.ToArray(GetType(String)), String())
                Workflow = String.Join("','", cblItems)

            End If

            Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString

            Dim Formid As Integer = ViewState("ActionInput_FormId")
            If Formid <> 0 Then
                Using con As New SqlConnection(constr)
                    Using cmd As New SqlCommand("sp_UpdateinputActionDetails_Fields")
                        cmd.Connection = con
                        cmd.CommandType = CommandType.StoredProcedure
                        cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                        cmd.Parameters.Add(New SqlParameter("@formid", Formid))
                        cmd.Parameters.Add(New SqlParameter("@isInputthroughMail", Convert.ToInt16(ddlActionVal_IsActive.SelectedItem.Value)))
                        cmd.Parameters.Add(New SqlParameter("@inputfieldCaption", Convert.ToString(txtActionVal_Caption.Text)))
                        cmd.Parameters.Add(New SqlParameter("@inputfieldValue", Convert.ToString(txtActionVal_InputFieldVal.Text)))
                        cmd.Parameters.Add(New SqlParameter("@TargetMIField", TargetFieldVal))
                        cmd.Parameters.Add(New SqlParameter("@ENABLEMAILINPUT", Workflow))
                        Using sda As New SqlDataAdapter(cmd)
                            If con.State <> ConnectionState.Open Then
                                con.Open()
                            End If
                            sda.SelectCommand.ExecuteNonQuery()
                        End Using
                    End Using
                End Using
            End If
            modalpopup_InputAction.Hide()


        Catch ex As Exception
            Throw
        End Try
    End Sub
    'img_LMSetting_Click
    Protected Sub img_LMSetting_Click(sender As Object, e As ImageClickEventArgs)
        Dim btnInputActionDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnInputActionDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        Session("LMssetting_FormId") = Formid
        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString
        Dim DtTable As New DataSet
        Dim ds As New DataSet
        Try
            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand("sp_GetLeaseMasterSettingDetails_FormId")
                    cmd.Connection = con
                    cmd.CommandType = CommandType.StoredProcedure
                    cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                    cmd.Parameters.Add(New SqlParameter("@formid", Formid))
                    Using sda As New SqlDataAdapter(cmd)
                        sda.Fill(ds)
                    End Using
                End Using
            End Using
            If ds.Tables(5).Rows.Count > 0 Then
                If ds.Tables(5).Rows(0).Item("FormSource").ToString() <> "MENU DRIVEN" Then

                    ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "CropImage", "alert('This option is available only for Menu Driven forms.');", True)
                    Exit Sub
                Else
                    If ds.Tables(0).Rows.Count > 0 Then
                        lbl_BaseDoc.Text = ds.Tables(5).Rows(0).Item("FormName").ToString()

                        If ds.Tables(1).Rows.Count > 0 Then
                            Dim dtgv As DataTable = ds.Tables(1)
                            gv_FieldMapping.DataSource = dtgv
                            gv_FieldMapping.DataBind()
                            ViewState("CurrentTable") = dtgv
                        End If
                        If ds.Tables(2).Rows.Count > 0 Then
                            Dim dtwf As DataTable = ds.Tables(2)
                            ddl_wfstatus.DataSource = dtwf
                            ddl_wfstatus.DataTextField = "StatusName"
                            ddl_wfstatus.DataValueField = "tid"
                            ddl_wfstatus.DataBind()
                        End If

                        If ddl_wfstatus.Items.Contains(ddl_wfstatus.Items.FindByText(ds.Tables(0).Rows(0).Item("wfstatus").ToString())) Then
                            ddl_wfstatus.SelectedValue = ddl_wfstatus.Items.FindByText(ds.Tables(0).Rows(0).Item("wfstatus").ToString()).Value

                        End If
                        ddl_wfstatus.Items.Insert("0", New ListItem("SELECT"))
                        If ds.Tables(0).Rows(0).Item("IsActiveStatus").ToString() = "0" Then
                            ddl_Isactive.SelectedItem.Text = "No"

                        ElseIf ds.Tables(0).Rows(0).Item("IsActiveStatus").ToString() = "1" Then
                            ddl_Isactive.SelectedItem.Text = "Yes"
                        End If

                        'If ds.Tables(3).Rows.Count > 0 Then
                        '    ddl_FielMapping.DataSource = ds.Tables(3)
                        '    ddl_FielMapping.DataTextField = "displayName"
                        '    ddl_FielMapping.DataValueField = "FieldMapping"
                        '    ddl_FielMapping.DataBind()
                        '    ddl_FielMapping.Items.Insert("0", New ListItem("SELECT"))
                        'End If
                        lbl_fields.Visible = True

                        If ds.Tables(4).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(4)
                            ddl_TargetDocType.DataSource = dtt
                            ddl_TargetDocType.DataTextField = "FormName"
                            ddl_TargetDocType.DataValueField = "FormId"
                            ddl_TargetDocType.DataBind()
                            DDL_AddNewSDoc.DataSource = dtt
                            DDL_AddNewSDoc.DataTextField = "FormName"
                            DDL_AddNewSDoc.DataValueField = "FormId"
                            DDL_AddNewSDoc.DataBind()
                            DDL_AddNewSDoc.Items.Insert(0, New ListItem("SELECT"))

                        End If
                        If ddl_TargetDocType.Items.Contains(ddl_TargetDocType.Items.FindByText(ds.Tables(0).Rows(0).Item("TDocType").ToString())) Then
                            ddl_TargetDocType.SelectedValue = ddl_TargetDocType.Items.FindByText(ds.Tables(0).Rows(0).Item("TDocType").ToString()).Value
                            Session("TargetDocType") = ds.Tables(0).Rows(0).Item("TDocType").ToString()
                        End If

                        ddl_TargetDocType.Enabled = False
                        ddl_TargetDocType.Items.Insert(0, New ListItem("SELECT"))
                        Dim Targetdoctype As String = String.Empty
                        Targetdoctype = ddl_TargetDocType.SelectedItem.Text

                        Dim DtTargetdoctype As New DataTable
                        Using con As New SqlConnection(constr)
                            Using cmd As New SqlCommand("sp_GetTargetDocumentDetails")
                                cmd.Connection = con
                                cmd.CommandType = CommandType.StoredProcedure
                                cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                                cmd.Parameters.Add(New SqlParameter("@Documenttype", Targetdoctype))
                                Using sda As New SqlDataAdapter(cmd)
                                    sda.Fill(DtTargetdoctype)
                                End Using
                            End Using
                        End Using
                        If DtTargetdoctype.Rows.Count > 0 Then
                            ddl_TargetDocFieldMapping.DataSource = DtTargetdoctype
                            ddl_TargetDocFieldMapping.DataTextField = "displayName"
                            ddl_TargetDocFieldMapping.DataValueField = "FieldMapping"
                            ddl_TargetDocFieldMapping.DataBind()
                        End If
                        ddl_TargetDocFieldMapping.Items.Insert("0", New ListItem("SELECT"))
                        ViewState("basedocname") = ds.Tables(3).Rows(0).Item("Documenttype").ToString()
                        Session("LMSettingTID") = ds.Tables(0).Rows(0).Item("RowNumber").ToString()
                        ViewState("SChildDocType") = ds.Tables(0).Rows(0).Item("ChildDocType").ToString()
                        btn_Save.Text = "Update"
                    Else
                        Using con As New SqlConnection(constr)
                            Using cmd As New SqlCommand("sp_GetLeaseMasterSettingDetails")
                                cmd.Connection = con
                                cmd.CommandType = CommandType.StoredProcedure
                                cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                                cmd.Parameters.Add(New SqlParameter("@formid", Formid))
                                Using sda As New SqlDataAdapter(cmd)
                                    sda.Fill(DtTable)
                                End Using
                            End Using
                        End Using
                        If DtTable.Tables(2).Rows.Count > 0 Then
                            ddl_TargetDocType.Enabled = True
                            If DtTable.Tables(0).Rows.Count > 0 Then
                                Dim dt As DataTable = DtTable.Tables(0)
                                ddl_TargetDocType.DataSource = dt
                                ddl_TargetDocType.DataTextField = "FormName"
                                ddl_TargetDocType.DataValueField = "FormId"
                                ddl_TargetDocType.DataBind()
                                ddl_TargetDocType.Items.Insert("0", New ListItem("SELECT"))
                                DDL_AddNewSDoc.DataSource = dt
                                DDL_AddNewSDoc.DataTextField = "FormName"
                                DDL_AddNewSDoc.DataValueField = "FormId"
                                DDL_AddNewSDoc.DataBind()
                                DDL_AddNewSDoc.Items.Insert(0, New ListItem("SELECT"))
                            End If

                            If DtTable.Tables(1).Rows.Count > 0 Then
                                Dim dt As DataTable = DtTable.Tables(1)
                                ddl_wfstatus.DataSource = dt
                                ddl_wfstatus.DataTextField = "StatusName"
                                ddl_wfstatus.DataValueField = "tid"
                                ddl_wfstatus.DataBind()

                            End If
                            ddl_wfstatus.Items.Insert("0", New ListItem("SELECT"))
                            ViewState("basedocname") = DtTable.Tables(2).Rows(0).Item("FormName").ToString()
                            lbl_BaseDoc.Text = DtTable.Tables(2).Rows(0).Item("FormName").ToString()
                            ViewState("SChildDocType") = DtTable.Tables(2).Rows(0).Item("DropDown").ToString()
                        Else
                            ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "CropImage", "alert('This option is available only for Documents having child forms.');", True)
                            Exit Sub
                        End If

                        btn_Save.Text = "Save"
                    End If

                    up_pnl_LMSetting.Update()
                    mod_LMSetting.Show()
                End If
            Else
                ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "CropImage", "alert('This option is available only for Documents having Childs and Menu Driven forms.');", True)
                Exit Sub
            End If
        Catch ex As Exception
            Throw
        End Try
    End Sub
    Protected Sub ddl_TargetDocType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddl_TargetDocType.SelectedIndexChanged

        Dim dt As New DataTable()
        dt = TryCast(ViewState("CurrentTable"), DataTable)
        If Convert.ToString(Session("TargetDocType")) = "" Then

            ddl_TargetDocType.Enabled = True
        ElseIf IsNothing(dt) = True Then
            ddl_TargetDocType.Enabled = True


        ElseIf Not IsDBNull(dt) AndAlso dt.Rows.Count > 0 Then

            If ddl_TargetDocType.Items.Contains(ddl_TargetDocType.Items.FindByText(Session("TargetDocType").ToString())) Then
                ddl_TargetDocType.SelectedValue = ddl_TargetDocType.Items.FindByText(Session("TargetDocType").ToString()).Value
            End If
            ddl_TargetDocType.Enabled = True

            Exit Sub
        End If
        Dim Targetdoctype As String = String.Empty
        ddl_TargetDocType.Enabled = True
        Targetdoctype = ddl_TargetDocType.SelectedItem.Text
        Session("TargetDocType") = Targetdoctype
        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString
        Dim DtTable As New DataTable
        Using con As New SqlConnection(constr)
            Using cmd As New SqlCommand("sp_GetTargetDocumentDetails")
                cmd.Connection = con
                cmd.CommandType = CommandType.StoredProcedure
                cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                cmd.Parameters.Add(New SqlParameter("@Documenttype", Targetdoctype))
                Using sda As New SqlDataAdapter(cmd)
                    sda.Fill(DtTable)
                End Using
            End Using
        End Using
        If DtTable.Rows.Count > 0 Then
            ddl_TargetDocFieldMapping.DataSource = DtTable
            ddl_TargetDocFieldMapping.DataTextField = "displayName"
            ddl_TargetDocFieldMapping.DataValueField = "FieldMapping"
            ddl_TargetDocFieldMapping.DataBind()
            ddl_TargetDocFieldMapping.Items.Insert("0", New ListItem("SELECT"))
        End If

        up_pnl_LMSetting.Update()
    End Sub
    Protected Sub LMSettingClose()
        ViewState.Clear()
        lbl_Msg.Text = ""
        ddl_TargetDocFieldMapping.ClearSelection()
        ddl_FielMapping.ClearSelection()
        ddl_DocType.SelectedItem.Selected = False
        If ddl_ChildDocType.Visible = True Then
            ddl_ChildDocType.Visible = False
            ddl_ChildDocType.ClearSelection()
        End If

        ddl_wfstatus.SelectedIndex = 0
        Dim dt As New DataTable()
        gv_FieldMapping.DataSource = dt
        gv_FieldMapping.DataBind()
        mod_LMSetting.Hide()
    End Sub
    Protected Sub ddl_DocType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddl_DocType.SelectedIndexChanged
        Dim doctype As String = String.Empty
        doctype = ddl_DocType.SelectedItem.Value
        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString
        Dim DtTable As New DataTable
        Dim SearchValue As String = String.Empty

        'Base Document
        If doctype = "1" Then
            SearchValue = "Main"
            ddl_ChildDocType.Visible = False
            lbl_fields.Visible = True

            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand("sp_GetSourceDocTypeDetails")
                    cmd.Connection = con
                    cmd.CommandType = CommandType.StoredProcedure
                    cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                    cmd.Parameters.Add(New SqlParameter("@SearchValue", SearchValue))
                    cmd.Parameters.Add(New SqlParameter("@FormId", DDL_AddNewSDoc.SelectedValue))
                    Using sda As New SqlDataAdapter(cmd)
                        sda.Fill(DtTable)
                    End Using
                End Using
            End Using
            If DtTable.Rows.Count > 0 Then
                ddl_FielMapping.DataSource = DtTable
                ddl_FielMapping.DataTextField = "displayName"
                ddl_FielMapping.DataValueField = "FieldMapping"
                ddl_FielMapping.DataBind()
                ddl_FielMapping.Items.Insert("0", New ListItem("SELECT"))
                ViewState("basedocname") = DtTable.Rows(0).Item("Documenttype").ToString()
            End If


        ElseIf doctype = "2" Then
            SearchValue = "Child"
            ddl_ChildDocType.Visible = True
            lbl_fields.Visible = False
            ddl_ChildDocType.Items.Clear()
            ddl_FielMapping.Items.Clear()
            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand("sp_GetSourceDocTypeDetails")
                    cmd.Connection = con
                    cmd.CommandType = CommandType.StoredProcedure
                    cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                    cmd.Parameters.Add(New SqlParameter("@FormId", DDL_AddNewSDoc.SelectedValue))
                    cmd.Parameters.Add(New SqlParameter("@SearchValue", SearchValue))
                    Using sda As New SqlDataAdapter(cmd)
                        sda.Fill(DtTable)
                    End Using
                End Using
            End Using
            If DtTable.Rows.Count > 0 Then
                ddl_ChildDocType.DataSource = DtTable
                ddl_ChildDocType.DataTextField = "displayName"
                ddl_ChildDocType.DataValueField = "FieldMapping"
                ddl_ChildDocType.DataBind()
                ddl_ChildDocType.Items.Insert("0", New ListItem("SELECT"))
            End If


        End If

        up_pnl_LMSetting.Update()
    End Sub
    Protected Sub DDL_AddNewSDoc_SelectedIndexChanged(sender As Object, e As EventArgs) Handles DDL_AddNewSDoc.SelectedIndexChanged

        Try

            ddl_FielMapping.ClearSelection()
            ddl_DocType.SelectedItem.Selected = False
            If ddl_ChildDocType.Visible = True Then
                ddl_ChildDocType.Visible = False
                ddl_ChildDocType.ClearSelection()
            End If
        Catch ex As Exception

        End Try

    End Sub
    Protected Sub ddl_ChildDocType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddl_ChildDocType.SelectedIndexChanged
        Dim Childdoctype As String = String.Empty
        Childdoctype = ddl_ChildDocType.SelectedItem.Value
        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString
        Dim DtTable As New DataTable
        Using con As New SqlConnection(constr)
            Using cmd As New SqlCommand("sp_GetChildDocDetails")
                cmd.Connection = con
                cmd.CommandType = CommandType.StoredProcedure
                cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                cmd.Parameters.Add(New SqlParameter("@Documenttype", Childdoctype))
                Using sda As New SqlDataAdapter(cmd)
                    sda.Fill(DtTable)
                End Using
            End Using
        End Using
        If DtTable.Rows.Count > 0 Then
            ddl_FielMapping.DataSource = DtTable
            ddl_FielMapping.DataTextField = "displayName"
            ddl_FielMapping.DataValueField = "FieldMapping"
            ddl_FielMapping.DataBind()
            ddl_FielMapping.Items.Insert("0", New ListItem("SELECT"))
        End If

        up_pnl_LMSetting.Update()
    End Sub
    Protected Sub btn_Add_Click(sender As Object, e As EventArgs) Handles btn_Add.Click

        If ddl_TargetDocType.SelectedItem.Selected = False Then
            lbl_Msg.Text = "Select Target Document Type. "
            Exit Sub
        End If
        If ddl_TargetDocType.SelectedItem.Text = "SELECT" Then
            lbl_Msg.Text = "Select Target Document Type. "
            Exit Sub
        End If
        If ddl_TargetDocFieldMapping.SelectedItem.Selected = False Then
            lbl_Msg.Text = "Select Target document Field Mapping."
            Exit Sub
        End If
        If ddl_TargetDocFieldMapping.SelectedItem.Text = "SELECT" Then
            lbl_Msg.Text = "Select Target document Field Mapping."

            Exit Sub
        End If
        If ddl_DocType.SelectedItem.Selected = False Then
            lbl_Msg.Text = "Select Document Type."
            Exit Sub
        End If
        If ddl_DocType.SelectedItem.Text = "SELECT" Then
            Exit Sub
        End If
        If ddl_ChildDocType.Visible = True Then
            If ddl_ChildDocType.SelectedItem.Selected = False Then
                lbl_Msg.Text = "Select Document Type."
                Exit Sub
            End If
            If ddl_ChildDocType.SelectedItem.Text = "SELECT" Then
                lbl_Msg.Text = "Select Document Type."
                Exit Sub
            End If
        End If
        If ddl_FielMapping.SelectedItem.Selected = False Then
            lbl_Msg.Text = "Select Source Document Field Mapping."
            Exit Sub
        End If
        If ddl_FielMapping.SelectedItem.Text = "SELECT" Then
            lbl_Msg.Text = "Select Source Document Field Mapping."
            Exit Sub
        End If


        Dim dt As DataTable = New DataTable()
        dt.Columns.Add("RowNumber")
        dt.Columns("RowNumber").AutoIncrement = True
        dt.Columns("RowNumber").AutoIncrementSeed = 1
        dt.Columns.Add("TFld")
        dt.Columns.Add("TFldName")
        dt.Columns.Add("SFld")
        dt.Columns.Add("SFldName")
        dt.Columns.Add("Ordering")
        dt.Columns("Ordering").AutoIncrementSeed = 1
        dt.Columns("Ordering").AutoIncrement = True
        dt.Columns.Add("DType")
        dt.Columns.Add("childdoctype")
        dt.Columns.Add("SourceDocType")

        For Each gvRow2 As GridViewRow In gv_FieldMapping.Rows

            dt.Rows.Add()
            'Aotuincrement column
            ' dt.Rows(dt.Rows.Count - 1)("RowNumber") = gvRow2.Cells(0).Text
            dt.Rows(dt.Rows.Count - 1)("TFld") = gvRow2.Cells(1).Text
            dt.Rows(dt.Rows.Count - 1)("TFldName") = gvRow2.Cells(2).Text
            dt.Rows(dt.Rows.Count - 1)("SFld") = gvRow2.Cells(3).Text
            dt.Rows(dt.Rows.Count - 1)("SFldName") = gvRow2.Cells(4).Text
            'Aotuincrement column
            'dt.Rows(dt.Rows.Count - 1)("Ordering") = gvRow2.Cells(3).Text
            dt.Rows(dt.Rows.Count - 1)("DType") = gvRow2.Cells(6).Text
            dt.Rows(dt.Rows.Count - 1)("childdoctype") = gvRow2.Cells(7).Text
            dt.Rows(dt.Rows.Count - 1)("SourceDocType") = gvRow2.Cells(8).Text

        Next
        Dim Previousdt As New DataTable("Previousdt")

        Dim ColInd As Integer = 0
        Dim ValOffset As Integer

        Try

            For Each col As DataControlField In gv_FieldMapping.Columns
                Previousdt.Columns.Add(col.HeaderText)
            Next

            If (gv_FieldMapping.AutoGenerateDeleteButton Or gv_FieldMapping.AutoGenerateEditButton Or gv_FieldMapping.AutoGenerateSelectButton) Then
                ValOffset = 1
            Else
                ValOffset = 0
            End If


            For Each row As GridViewRow In gv_FieldMapping.Rows
                Dim NewDataRow As DataRow = Previousdt.NewRow

                ColInd = 0
                For Each col As DataControlField In gv_FieldMapping.Columns
                    NewDataRow(ColInd) = row.Cells(ColInd + ValOffset).Text.Replace("&nbsp;", "")
                    ColInd += 1
                Next

                Previousdt.Rows.Add(NewDataRow)
            Next
            Previousdt.Columns.Remove("Column1")


        Catch ex As Exception

        End Try

        Dim dsNewRow As DataRow = dt.NewRow()
        Dim lastrowcount As Int16 = 0
        lastrowcount = Previousdt.Rows.Count
        dsNewRow.Item("TFld") = ddl_TargetDocFieldMapping.SelectedItem.Value
        dsNewRow.Item("TFldName") = ddl_TargetDocFieldMapping.SelectedItem.Text
        dsNewRow.Item("SFld") = ddl_FielMapping.SelectedItem.Value
        dsNewRow.Item("SFldName") = ddl_FielMapping.SelectedItem.Text

        If ddl_DocType.SelectedItem.Value = "1" Then
            dsNewRow.Item("DType") = "Header"
            dsNewRow.Item("childdoctype") = DDL_AddNewSDoc.SelectedItem.Text.ToString()
        ElseIf ddl_DocType.SelectedItem.Value = "2" Then
            dsNewRow.Item("DType") = "Line"
            dsNewRow.Item("childdoctype") = ddl_ChildDocType.SelectedItem.Value
        End If
        dsNewRow.Item("SourceDocType") = DDL_AddNewSDoc.SelectedItem.Text
        Dim dr As DataRow() = Previousdt.[Select]("TargetFld = '" & dsNewRow.Item("TFld") & "' and SourceDocType='" & dsNewRow.Item("SourceDocType") & "' and BaseDocType='" & dsNewRow.Item("childdoctype") & "'")

        If dr.Length > 0 Then
            ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "CropImage", "alert('You can not insert duplicate record.');", True)
        Else
            dt.Rows.Add(New Object() {lastrowcount + 1, dsNewRow.Item("TFld"), dsNewRow.Item("TFldName"), dsNewRow.Item("SFld"), dsNewRow.Item("SFldName"), lastrowcount + 1, dsNewRow.Item("DType"), dsNewRow.Item("childdoctype"), dsNewRow.Item("SourceDocType")})
        End If


        If dt.Rows.Count > 0 Then
            ddl_TargetDocType.Enabled = False
        End If

        ViewState("CurrentTable") = dt
        gv_FieldMapping.DataSource = dt
        gv_FieldMapping.DataBind()
        up_pnl_LMSetting.Update()


    End Sub
    Protected Sub btn_Save_Click(sender As Object, e As EventArgs) Handles btn_Save.Click


        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString

        Dim Formid As Integer = Session("LMssetting_FormId")
        If Formid <> 0 And btn_Save.Text = "Save" Then

            If ddl_TargetDocFieldMapping.SelectedItem.Selected = False Then
                lbl_Msg.Text = "Select Target document Field Mapping."
                Exit Sub
            End If
            If ddl_TargetDocFieldMapping.SelectedItem.Text = "SELECT" Then
                lbl_Msg.Text = "Select Target document Field Mapping."

                Exit Sub
            End If
            If ddl_DocType.SelectedItem.Selected = False Then
                lbl_Msg.Text = "Select Document Type."
                Exit Sub
            End If
            If ddl_DocType.SelectedItem.Text = "SELECT" Then
                Exit Sub
            End If
            If ddl_ChildDocType.Visible = True Then
                If ddl_ChildDocType.SelectedItem.Selected = False Then
                    lbl_Msg.Text = "Select Document Type."
                    Exit Sub
                End If
                If ddl_ChildDocType.SelectedItem.Text = "SELECT" Then
                    lbl_Msg.Text = "Select Document Type."
                    Exit Sub
                End If
            End If
            If ddl_FielMapping.SelectedItem.Selected = False Then
                lbl_Msg.Text = "Select Source Document Field Mapping."
                Exit Sub
            End If
            If ddl_FielMapping.SelectedItem.Text = "SELECT" Then
                lbl_Msg.Text = "Select Source Document Field Mapping."
                Exit Sub
            End If
            If ddl_wfstatus.SelectedItem.Selected = False Then
                lbl_Msg.Text = "Select WorkFlow Status."
                Exit Sub
            End If
            'If ddl_wfstatus.SelectedItem.Text = "SELECT" Then
            '    lbl_Msg.Text = "Select WorkFlow Status."
            '    Exit Sub
            'End If
            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand("sp_AddLMSetting")
                    cmd.Connection = con
                    cmd.CommandType = CommandType.StoredProcedure
                    cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                    cmd.Parameters.Add(New SqlParameter("@TDocType", Convert.ToString(ddl_TargetDocType.SelectedItem.Text)))
                    cmd.Parameters.Add(New SqlParameter("@SDocType", Convert.ToString(lbl_BaseDoc.Text)))
                    cmd.Parameters.Add(New SqlParameter("@IsActiveStatus", Convert.ToString(ddl_Isactive.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@wfstatus", ddl_wfstatus.SelectedItem.Text))
                    cmd.Parameters.Add(New SqlParameter("@ChildDocType", ViewState("SChildDocType").ToString()))
                    cmd.Parameters.Add(New SqlParameter("@LMFieldSetting", TryCast(ViewState("CurrentTable"), DataTable)))
                    Using sda As New SqlDataAdapter(cmd)
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        sda.SelectCommand.ExecuteNonQuery()
                    End Using
                End Using
            End Using
        ElseIf Formid <> 0 And btn_Save.Text = "Update" Then
            Dim dt As DataTable = TryCast(ViewState("CurrentTable"), DataTable)
            If IsNothing(dt) = False Then
                Using con As New SqlConnection(constr)
                    Using cmd As New SqlCommand("sp_UpdateLMSetting")
                        cmd.Connection = con
                        cmd.CommandType = CommandType.StoredProcedure
                        cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                        cmd.Parameters.Add(New SqlParameter("@Tid", Session("LMSettingTID")))
                        'cmd.Parameters.Add(New SqlParameter("@TDocType", Convert.ToString(ddl_TargetDocType.SelectedItem.Text)))
                        'cmd.Parameters.Add(New SqlParameter("@SDocType", Convert.ToString(lbl_BaseDoc.Text)))
                        'cmd.Parameters.Add(New SqlParameter("@IsActiveStatus", Convert.ToString(ddl_Isactive.SelectedItem.Value)))
                        'cmd.Parameters.Add(New SqlParameter("@wfstatus", ddl_wfstatus.SelectedItem.Text))
                        'cmd.Parameters.Add(New SqlParameter("@ChildDocType", ViewState("SChildDocType").ToString()))
                        cmd.Parameters.Add(New SqlParameter("@LMFieldSetting", TryCast(ViewState("CurrentTable"), DataTable)))
                        Using sda As New SqlDataAdapter(cmd)
                            If con.State <> ConnectionState.Open Then
                                con.Open()
                            End If
                            sda.SelectCommand.ExecuteNonQuery()
                        End Using
                    End Using
                End Using
            End If

        End If
        LMSettingClose()

    End Sub

    Protected Sub OnRowDataBound(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            Dim item As String = e.Row.Cells(0).Text
            For Each button As Button In e.Row.Cells(2).Controls.OfType(Of Button)()
                If button.CommandName = "Delete" Then
                    button.Attributes("onclick") = "if(!confirm('Do you want to delete " + item + "?')){ return false; };"
                End If
            Next
        End If
    End Sub
    Protected Sub OnRowDeleting(sender As Object, e As GridViewDeleteEventArgs)


        Dim index As Integer = Convert.ToInt32(e.RowIndex)
        Dim dt As DataTable = TryCast(ViewState("CurrentTable"), DataTable)
        dt.Rows(index).Delete()
        dt.AcceptChanges()
        If dt.Rows.Count = 0 Then
            ddl_TargetDocType.Enabled = True
            btn_Save.Text = "Save"
        End If
        ViewState("CurrentTable") = dt
        gv_FieldMapping.DataSource = TryCast(ViewState("CurrentTable"), DataTable)
        gv_FieldMapping.DataBind()
        up_pnl_LMSetting.Update()
    End Sub


    Protected Sub OnPageIndexChanging(sender As Object, e As GridViewPageEventArgs)
        gv_FieldMapping.PageIndex = e.NewPageIndex
        gv_FieldMapping.DataSource = TryCast(ViewState("CurrentTable"), DataTable)
        gv_FieldMapping.DataBind()
        up_pnl_LMSetting.Update()
        mod_LMSetting.Show()
    End Sub

    'Auto invoce setting  
    Protected Sub img_AutoInvSetting_Click(sender As Object, e As ImageClickEventArgs)
        Dim btnInputActionDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnInputActionDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        Session("AutoInvSetting_FormId") = Formid
        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString
        Dim DtTable As New DataSet
        Dim ds As New DataSet
        Try
            lbl_AutoInvMsg.Text = ""
            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand("sp_GetAutoInvSettingDetails_FormIdTest1")
                    cmd.Connection = con
                    cmd.CommandType = CommandType.StoredProcedure
                    cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                    cmd.Parameters.Add(New SqlParameter("@formid", Formid))
                    Using sda As New SqlDataAdapter(cmd)
                        sda.Fill(ds)
                    End Using
                End Using
            End Using
            If ds.Tables(4).Rows.Count > 0 Then
                If ds.Tables(4).Rows(0).Item("FormSource").ToString() <> "MENU DRIVEN" Then
                    ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "CropImage", "alert('This option is available only for Menu Driven forms.');", True)
                    Exit Sub
                Else
                    If ds.Tables(0).Rows.Count > 0 Then
                        lbl_AutoBaseDoc.Text = ds.Tables(4).Rows(0).Item("FormName").ToString()

                        If ds.Tables(1).Rows.Count > 0 Then
                            Dim dtgv As DataTable = ds.Tables(1)
                            gv_AutoInv.DataSource = dtgv
                            gv_AutoInv.DataBind()
                            ViewState("AutoInvCurrentTable") = dtgv
                        End If

                        If ds.Tables(7).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(7)
                            ddl_AutoInvLType.DataSource = dtt
                            ddl_AutoInvLType.DataTextField = "displayName"
                            ddl_AutoInvLType.DataValueField = "FieldMapping"
                            ddl_AutoInvLType.DataBind()
                            If ddl_AutoInvLType.Items.Contains(ddl_AutoInvLType.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("Leasetype")))) Then
                                ddl_AutoInvLType.SelectedValue = ddl_AutoInvLType.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("Leasetype"))).Value
                            End If
                            ddl_AutoInvLType.Items.Insert(0, New ListItem("SELECT"))

                            DDl_rentEsc.DataSource = dtt
                            DDl_rentEsc.DataTextField = "displayName"
                            DDl_rentEsc.DataValueField = "FieldMapping"
                            DDl_rentEsc.DataBind()
                            If DDl_rentEsc.Items.Contains(DDl_rentEsc.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("RentEsc")))) Then
                                DDl_rentEsc.SelectedValue = DDl_rentEsc.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("RentEsc"))).Value
                            End If
                            DDl_rentEsc.Items.Insert(0, New ListItem("SELECT"))

                            DDl_CamEsc.DataSource = dtt
                            DDl_CamEsc.DataTextField = "displayName"
                            DDl_CamEsc.DataValueField = "FieldMapping"
                            DDl_CamEsc.DataBind()
                            If DDl_CamEsc.Items.Contains(DDl_CamEsc.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("CamEsc")))) Then
                                DDl_CamEsc.SelectedValue = DDl_CamEsc.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("CamEsc"))).Value
                            End If
                            DDl_CamEsc.Items.Insert(0, New ListItem("SELECT"))
                        End If
                        If ds.Tables(7).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(7)
                            ddl_FrequencyFld.DataSource = dtt
                            ddl_FrequencyFld.DataTextField = "displayName"
                            ddl_FrequencyFld.DataValueField = "FieldMapping"
                            ddl_FrequencyFld.DataBind()
                            If ddl_FrequencyFld.Items.Contains(ddl_FrequencyFld.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("Frequencyfld")))) Then
                                ddl_FrequencyFld.SelectedValue = ddl_FrequencyFld.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("Frequencyfld"))).Value
                            End If
                            ddl_FrequencyFld.Items.Insert(0, New ListItem("SELECT"))
                        End If
                        If ds.Tables(2).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(2)

                        End If

                        If ds.Tables(2).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(2)
                            ddl_AISrcSDt.DataSource = dtt
                            ddl_AISrcSDt.DataTextField = "displayName"
                            ddl_AISrcSDt.DataValueField = "FieldMapping"
                            ddl_AISrcSDt.DataBind()
                            If ddl_AISrcSDt.Items.Contains(ddl_AISrcSDt.Items.FindByValue(ds.Tables(0).Rows(0).Item("startdatefld").ToString())) Then
                                ddl_AISrcSDt.SelectedValue = ddl_AISrcSDt.Items.FindByValue(ds.Tables(0).Rows(0).Item("startdatefld").ToString()).Value
                            End If
                            ddl_AISrcSDt.Items.Insert(0, New ListItem("SELECT"))
                        End If

                        If ds.Tables(2).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(2)
                            ddl_AISrcEDt.DataSource = dtt
                            ddl_AISrcEDt.DataTextField = "displayName"
                            ddl_AISrcEDt.DataValueField = "FieldMapping"
                            ddl_AISrcEDt.DataBind()
                            If ddl_AISrcEDt.Items.Contains(ddl_AISrcEDt.Items.FindByValue(ds.Tables(0).Rows(0).Item("Enddatefld").ToString())) Then
                                ddl_AISrcEDt.SelectedValue = ddl_AISrcEDt.Items.FindByValue(ds.Tables(0).Rows(0).Item("Enddatefld").ToString()).Value
                            End If
                            ddl_AISrcEDt.Items.Insert(0, New ListItem("SELECT"))
                        End If
                        If ds.Tables(5).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(5)
                            ddl_AISrcRentalFld.DataSource = dtt
                            ddl_AISrcRentalFld.DataTextField = "displayName"
                            ddl_AISrcRentalFld.DataValueField = "FieldMapping"
                            ddl_AISrcRentalFld.DataBind()
                            If ddl_AISrcRentalFld.Items.Contains(ddl_AISrcRentalFld.Items.FindByValue(ds.Tables(0).Rows(0).Item("RentalFld").ToString())) Then
                                ddl_AISrcRentalFld.SelectedValue = ddl_AISrcRentalFld.Items.FindByValue(ds.Tables(0).Rows(0).Item("RentalFld").ToString()).Value
                            End If
                            ddl_AISrcRentalFld.Items.Insert(0, New ListItem("SELECT"))

                            ddl_AutoInv_SDCDate.DataSource = dtt
                            ddl_AutoInv_SDCDate.DataTextField = "displayName"
                            ddl_AutoInv_SDCDate.DataValueField = "FieldMapping"
                            ddl_AutoInv_SDCDate.DataBind()
                            If ddl_AutoInv_SDCDate.Items.Contains(ddl_AutoInv_SDCDate.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("SDFld")))) Then
                                ddl_AutoInv_SDCDate.SelectedValue = ddl_AutoInv_SDCDate.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("SDFld"))).Value
                            End If
                            ddl_AutoInv_SDCDate.Items.Insert(0, New ListItem("SELECT"))

                            DDL_CAMAmnt.DataSource = dtt
                            DDL_CAMAmnt.DataTextField = "displayName"
                            DDL_CAMAmnt.DataValueField = "FieldMapping"
                            DDL_CAMAmnt.DataBind()
                            If DDL_CAMAmnt.Items.Contains(DDL_CAMAmnt.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("CAMFld")))) Then
                                DDL_CAMAmnt.SelectedValue = DDL_CAMAmnt.Items.FindByValue(Convert.ToString(ds.Tables(0).Rows(0).Item("CAMFld"))).Value
                            End If
                            DDL_CAMAmnt.Items.Insert(0, New ListItem("SELECT"))

                            ddl_RentPeriodFld.DataSource = dtt
                            ddl_RentPeriodFld.DataTextField = "displayName"
                            ddl_RentPeriodFld.DataValueField = "FieldMapping"
                            ddl_RentPeriodFld.DataBind()
                            If ddl_RentPeriodFld.Items.Contains(ddl_RentPeriodFld.Items.FindByValue(ds.Tables(0).Rows(0).Item("RentFreePeriodFld").ToString())) Then
                                ddl_RentPeriodFld.SelectedValue = ddl_RentPeriodFld.Items.FindByValue(ds.Tables(0).Rows(0).Item("RentFreePeriodFld").ToString()).Value
                            End If
                            ddl_RentPeriodFld.Items.Insert(0, New ListItem("SELECT"))

                            DDl_SDMonths.DataSource = dtt
                            DDl_SDMonths.DataTextField = "displayName"
                            DDl_SDMonths.DataValueField = "FieldMapping"
                            DDl_SDMonths.DataBind()
                            If DDl_SDMonths.Items.Contains(DDl_SDMonths.Items.FindByValue(ds.Tables(0).Rows(0).Item("SdMonths").ToString())) Then
                                DDl_SDMonths.SelectedValue = DDl_SDMonths.Items.FindByValue(ds.Tables(0).Rows(0).Item("SdMonths").ToString()).Value
                            End If
                            DDl_SDMonths.Items.Insert(0, New ListItem("SELECT"))

                            DDL_RentEscPtage.DataSource = dtt
                            DDL_RentEscPtage.DataTextField = "displayName"
                            DDL_RentEscPtage.DataValueField = "FieldMapping"
                            DDL_RentEscPtage.DataBind()
                            If DDL_RentEscPtage.Items.Contains(DDL_RentEscPtage.Items.FindByValue(ds.Tables(0).Rows(0).Item("RentEscptage").ToString())) Then
                                DDL_RentEscPtage.SelectedValue = DDL_RentEscPtage.Items.FindByValue(ds.Tables(0).Rows(0).Item("RentEscptage").ToString()).Value
                            End If
                            DDL_RentEscPtage.Items.Insert(0, New ListItem("SELECT"))

                            DDL_CAMEscPtage.DataSource = dtt
                            DDL_CAMEscPtage.DataTextField = "displayName"
                            DDL_CAMEscPtage.DataValueField = "FieldMapping"
                            DDL_CAMEscPtage.DataBind()
                            If DDL_CAMEscPtage.Items.Contains(DDL_CAMEscPtage.Items.FindByValue(ds.Tables(0).Rows(0).Item("CAMEscptage").ToString())) Then
                                DDL_CAMEscPtage.SelectedValue = DDL_CAMEscPtage.Items.FindByValue(ds.Tables(0).Rows(0).Item("CAMEscptage").ToString()).Value
                            End If
                            DDL_CAMEscPtage.Items.Insert(0, New ListItem("SELECT"))
                        End If

                        'ddl_AutoInv_SDCDate


                        If ds.Tables(6).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(6)
                            ddl_AutoInvSrcDoc_flds.DataSource = dtt
                            ddl_AutoInvSrcDoc_flds.DataTextField = "displayName"
                            ddl_AutoInvSrcDoc_flds.DataValueField = "FieldMapping"
                            ddl_AutoInvSrcDoc_flds.DataBind()
                            ddl_AutoInvSrcDoc_flds.Items.Insert(0, New ListItem("SELECT"))
                        End If
                        If ds.Tables(3).Rows.Count > 0 Then
                            Dim dtt As DataTable = ds.Tables(3)
                            ddl_AutoInvTgtDoc.DataSource = dtt
                            ddl_AutoInvTgtDoc.DataTextField = "FormName"
                            ddl_AutoInvTgtDoc.DataValueField = "FormId"
                            ddl_AutoInvTgtDoc.DataBind()
                        End If
                        If ddl_AutoInvTgtDoc.Items.Contains(ddl_AutoInvTgtDoc.Items.FindByText(ds.Tables(0).Rows(0).Item("TDocType").ToString())) Then
                            ddl_AutoInvTgtDoc.SelectedValue = ddl_AutoInvTgtDoc.Items.FindByText(ds.Tables(0).Rows(0).Item("TDocType").ToString()).Value
                            Session("AutoInvTgtDocType") = ds.Tables(0).Rows(0).Item("TDocType").ToString()
                        End If
                        'ddl_RentPeriodFld.SelectedItem.Value = ds.Tables(0).Rows(0).Item("PeriodFld").ToString()
                        ddl_AutoInvTgtDoc.Items.Insert(0, New ListItem("SELECT"))

                        If ds.Tables(0).Rows(0).Item("IsActiveStatus").ToString() = True Then
                            ddl_ActiveStatus.SelectedValue = 1
                        Else
                            ddl_ActiveStatus.SelectedValue = 0
                        End If


                        Dim Targetdoctype As String = String.Empty
                        Targetdoctype = ddl_AutoInvTgtDoc.SelectedItem.Text

                        Dim DtTargetdoctype As New DataTable
                        Using con As New SqlConnection(constr)
                            Using cmd As New SqlCommand("sp_GetTargetDocumentDetails")
                                cmd.Connection = con
                                cmd.CommandType = CommandType.StoredProcedure
                                cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                                cmd.Parameters.Add(New SqlParameter("@Documenttype", Targetdoctype))
                                Using sda As New SqlDataAdapter(cmd)
                                    sda.Fill(DtTargetdoctype)
                                End Using
                            End Using
                        End Using
                        If DtTargetdoctype.Rows.Count > 0 Then
                            ddl_AutoInvTgtDoc_flds.DataSource = DtTargetdoctype
                            ddl_AutoInvTgtDoc_flds.DataTextField = "displayName"
                            ddl_AutoInvTgtDoc_flds.DataValueField = "FieldMapping"
                            ddl_AutoInvTgtDoc_flds.DataBind()
                        End If
                        ddl_AutoInvTgtDoc_flds.Items.Insert("0", New ListItem("SELECT"))
                        ViewState("SrcDocName") = lbl_AutoBaseDoc.Text.ToString()
                        Session("AutoInvSettingTID") = ds.Tables(0).Rows(0).Item("RowNumber").ToString()
                        'ddl_AutoInvTgtDoc.Enabled = False
                        btn_AutoInvSave.Text = "Update"
                    Else
                        ddl_AutoInvTgtDoc.Enabled = True
                        Using con As New SqlConnection(constr)
                            Using cmd As New SqlCommand("sp_GetAutoInvSettingDetails")
                                cmd.Connection = con
                                cmd.CommandType = CommandType.StoredProcedure
                                cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                                cmd.Parameters.Add(New SqlParameter("@formid", Formid))
                                Using sda As New SqlDataAdapter(cmd)
                                    sda.Fill(DtTable)
                                End Using
                            End Using
                        End Using
                        If DtTable.Tables(2).Rows.Count > 0 Then
                            ddl_AutoInvTgtDoc.Enabled = True
                            If DtTable.Tables(0).Rows.Count > 0 Then
                                Dim dt As DataTable = DtTable.Tables(0)
                                ddl_AutoInvTgtDoc.DataSource = dt
                                ddl_AutoInvTgtDoc.DataTextField = "FormName"
                                ddl_AutoInvTgtDoc.DataValueField = "FormId"
                                ddl_AutoInvTgtDoc.DataBind()
                                ddl_AutoInvTgtDoc.Items.Insert("0", New ListItem("SELECT"))
                            End If

                            If DtTable.Tables(1).Rows.Count > 0 Then
                                Dim dtt As DataTable = DtTable.Tables(1)
                                ddl_AISrcSDt.DataSource = dtt
                                ddl_AISrcSDt.DataTextField = "displayName"
                                ddl_AISrcSDt.DataValueField = "FieldMapping"
                                ddl_AISrcSDt.DataBind()
                                ddl_AISrcSDt.Items.Insert(0, New ListItem("SELECT"))
                                'End If
                                'If DtTable.Tables(1).Rows.Count > 0 Then
                                '    Dim dtt As DataTable = DtTable.Tables(1)
                                ddl_AISrcEDt.DataSource = dtt
                                ddl_AISrcEDt.DataTextField = "displayName"
                                ddl_AISrcEDt.DataValueField = "FieldMapping"
                                ddl_AISrcEDt.DataBind()
                                ddl_AISrcEDt.Items.Insert(0, New ListItem("SELECT"))

                                DDl_rentEsc.DataSource = dtt
                                DDl_rentEsc.DataTextField = "displayName"
                                DDl_rentEsc.DataValueField = "FieldMapping"
                                DDl_rentEsc.DataBind()

                                DDl_CamEsc.Items.Insert(0, New ListItem("SELECT"))
                                DDl_CamEsc.DataSource = dtt
                                DDl_CamEsc.DataTextField = "displayName"
                                DDl_CamEsc.DataValueField = "FieldMapping"
                                DDl_CamEsc.DataBind()
                                DDl_CamEsc.Items.Insert(0, New ListItem("SELECT"))
                            End If

                            If DtTable.Tables(3).Rows.Count > 0 Then
                                Dim dtt As DataTable = DtTable.Tables(3)
                                ddl_AISrcRentalFld.DataSource = dtt
                                ddl_AISrcRentalFld.DataTextField = "displayName"
                                ddl_AISrcRentalFld.DataValueField = "FieldMapping"
                                ddl_AISrcRentalFld.DataBind()
                                ddl_AISrcRentalFld.Items.Insert(0, New ListItem("SELECT"))

                                DDL_RentEscPtage.DataSource = dtt
                                DDL_RentEscPtage.DataTextField = "displayName"
                                DDL_RentEscPtage.DataValueField = "FieldMapping"
                                DDL_RentEscPtage.DataBind()
                                DDL_RentEscPtage.Items.Insert(0, New ListItem("SELECT"))

                                DDL_CAMEscPtage.DataSource = dtt
                                DDL_CAMEscPtage.DataTextField = "displayName"
                                DDL_CAMEscPtage.DataValueField = "FieldMapping"
                                DDL_CAMEscPtage.DataBind()
                                DDL_CAMEscPtage.Items.Insert(0, New ListItem("SELECT"))

                                ddl_AutoInv_SDCDate.DataSource = dtt
                                ddl_AutoInv_SDCDate.DataTextField = "displayName"
                                ddl_AutoInv_SDCDate.DataValueField = "FieldMapping"
                                ddl_AutoInv_SDCDate.DataBind()
                                ddl_AutoInv_SDCDate.Items.Insert(0, New ListItem("SELECT"))

                                DDL_CAMAmnt.DataSource = dtt
                                DDL_CAMAmnt.DataTextField = "displayName"
                                DDL_CAMAmnt.DataValueField = "FieldMapping"
                                DDL_CAMAmnt.DataBind()
                                DDL_CAMAmnt.Items.Insert(0, New ListItem("SELECT"))
                            End If
                            If DtTable.Tables(3).Rows.Count > 0 Then
                                Dim dtt As DataTable = DtTable.Tables(3)
                                ddl_RentPeriodFld.DataSource = dtt
                                ddl_RentPeriodFld.DataTextField = "displayName"
                                ddl_RentPeriodFld.DataValueField = "FieldMapping"
                                ddl_RentPeriodFld.DataBind()
                                ddl_RentPeriodFld.Items.Insert(0, New ListItem("SELECT"))
                            End If
                            If DtTable.Tables(4).Rows.Count > 0 Then
                                Dim dtt As DataTable = DtTable.Tables(4)
                                ddl_AutoInvSrcDoc_flds.DataSource = dtt
                                ddl_AutoInvSrcDoc_flds.DataTextField = "displayName"
                                ddl_AutoInvSrcDoc_flds.DataValueField = "FieldMapping"
                                ddl_AutoInvSrcDoc_flds.DataBind()
                                ddl_AutoInvSrcDoc_flds.Items.Insert(0, New ListItem("SELECT"))
                            End If
                            If DtTable.Tables(1).Rows.Count > 0 Then
                                Dim dtt As DataTable = DtTable.Tables(1)

                            End If
                            ViewState("SrcDocName") = DtTable.Tables(2).Rows(0).Item("FormName").ToString()
                            lbl_AutoBaseDoc.Text = DtTable.Tables(2).Rows(0).Item("FormName").ToString()
                            btn_AutoInvSave.Text = "Save"
                        Else
                            ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "CropImage", "alert('This option is available only for MASTERs.');", True)
                            Exit Sub
                        End If


                    End If

                    updpnl_Btn_AutoInv.Update()
                    Mod_AutoInvSettings.Show()
                End If
            Else
                ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "CropImage", "alert('This option is available only for MASTERs and Menu Driven forms.');", True)
                Exit Sub
            End If
        Catch ex As Exception
            Throw
        End Try
    End Sub
    Protected Sub AutoInvSettingClose()
        ViewState.Clear()
        btn_AutoInvSave.Text = "Save"
        ddl_AutoInv_SDCDate.ClearSelection()
        ddl_AutoInvLType.ClearSelection()
        lbl_AutoInvMsg.Text = ""
        lbl_AutoBaseDoc.Text = ""
        ddl_RentPeriodFld.ClearSelection()
        ddl_ActiveStatus.ClearSelection()
        ddl_AISrcRentalFld.ClearSelection()
        ddl_AISrcEDt.ClearSelection()
        ddl_AISrcSDt.ClearSelection()
        ddl_FrequencyFld.ClearSelection()
        ddl_AutoInvTgtDoc.ClearSelection()
        ddl_AutoInvTgtDoc_flds.ClearSelection()
        ddl_AutoInvSrcDoc_flds.ClearSelection()
        Dim dt As New DataTable()
        gv_AutoInv.DataSource = dt
        gv_AutoInv.DataBind()
        Mod_AutoInvSettings.Hide()
    End Sub
    Protected Sub btn_AutoInvAdd_Click(sender As Object, e As EventArgs) Handles btn_AutoInvAdd.Click
        lbl_AutoInvMsg.Text = ""
        If ddl_AutoInvTgtDoc.SelectedItem.Selected = False Then
            lbl_AutoInvMsg.Text = "Select Target Document."
            Exit Sub
        End If
        If ddl_AutoInvTgtDoc.SelectedItem.Text = "SELECT" Then
            lbl_AutoInvMsg.Text = "Select Target Document."
            Exit Sub
        End If
        If ddl_AutoInvTgtDoc_flds.SelectedItem.Selected = False Then
            lbl_AutoInvMsg.Text = "Select Target Document Fields."
            Exit Sub
        End If
        If ddl_AutoInvTgtDoc_flds.SelectedItem.Text = "SELECT" Then
            lbl_AutoInvMsg.Text = "Select Target Document Fields."
            Exit Sub
        End If

        If ddl_AutoInvSrcDoc_flds.SelectedItem.Selected = False Then
            lbl_AutoInvMsg.Text = "Select Source Document Fields."
            Exit Sub
        End If
        If ddl_AutoInvSrcDoc_flds.SelectedItem.Text = "SELECT" Then
            lbl_AutoInvMsg.Text = "Select Source Document Fields."
            Exit Sub
        End If

        lbl_AutoInvMsg.Text = ""
        Dim dt As DataTable = New DataTable()
        dt.Columns.Add("RowNumber")
        dt.Columns("RowNumber").AutoIncrement = True
        dt.Columns("RowNumber").AutoIncrementSeed = 1
        dt.Columns.Add("TFld")
        dt.Columns.Add("TFldName")
        dt.Columns.Add("SFld")
        dt.Columns.Add("SFldName")
        dt.Columns.Add("SDocType")
        dt.Columns.Add("TDocType")
        dt.Columns.Add("LeaseType")
        'dt.Columns.Add("RentEsc")
        'dt.Columns.Add("CAMEsc")
        'dt.Columns.Add("SdMonths")

        For Each gvRow2 As GridViewRow In gv_AutoInv.Rows

            dt.Rows.Add()
            'Aotuincrement column
            dt.Rows(dt.Rows.Count - 1)("RowNumber") = gvRow2.Cells(0).Text
            dt.Rows(dt.Rows.Count - 1)("TFld") = gvRow2.Cells(1).Text
            dt.Rows(dt.Rows.Count - 1)("TFldName") = gvRow2.Cells(2).Text
            dt.Rows(dt.Rows.Count - 1)("SFld") = gvRow2.Cells(3).Text
            dt.Rows(dt.Rows.Count - 1)("SFldName") = gvRow2.Cells(4).Text
            dt.Rows(dt.Rows.Count - 1)("SDocType") = gvRow2.Cells(5).Text
            dt.Rows(dt.Rows.Count - 1)("TDocType") = gvRow2.Cells(6).Text
            dt.Rows(dt.Rows.Count - 1)("LeaseType") = ddl_AutoInvLType.SelectedItem.Text
            'dt.Rows(dt.Rows.Count - 1)("RentEsc") = DDl_rentEsc.SelectedItem.Text
            'dt.Rows(dt.Rows.Count - 1)("CAMEsc") = DDl_CamEsc.SelectedItem.Text
            'dt.Rows(dt.Rows.Count - 1)("SdMonths") = DDl_CamEsc.SelectedItem.Text

        Next
        Dim Previousdt As New DataTable("Previousdt")

        Dim ColInd As Integer = 0
        Dim ValOffset As Integer

        Try

            For Each col As DataControlField In gv_AutoInv.Columns
                Previousdt.Columns.Add(col.HeaderText)
            Next


            If (gv_AutoInv.AutoGenerateDeleteButton Or gv_AutoInv.AutoGenerateEditButton Or gv_AutoInv.AutoGenerateSelectButton) Then
                ValOffset = 1
            Else
                ValOffset = 0
            End If


            For Each row As GridViewRow In gv_AutoInv.Rows
                Dim NewDataRow As DataRow = Previousdt.NewRow

                ColInd = 0
                For Each col As DataControlField In gv_AutoInv.Columns
                    NewDataRow(ColInd) = row.Cells(ColInd + ValOffset).Text.Replace("&nbsp;", "")
                    ColInd += 1
                Next

                Previousdt.Rows.Add(NewDataRow)
            Next
            Previousdt.Columns.Remove("Column1")


        Catch ex As Exception

        End Try

        'Previousdt = ViewState("AutoInvCurrentTable")
        Dim dsNewRow As DataRow = dt.NewRow()
        Dim lastrowcount As Int16 = 0
        lastrowcount = Previousdt.Rows.Count
        dsNewRow.Item("TFld") = ddl_AutoInvTgtDoc_flds.SelectedItem.Value
        dsNewRow.Item("TFldName") = ddl_AutoInvTgtDoc_flds.SelectedItem.Text
        dsNewRow.Item("SFld") = ddl_AutoInvSrcDoc_flds.SelectedItem.Value
        dsNewRow.Item("SFldName") = ddl_AutoInvSrcDoc_flds.SelectedItem.Text
        dsNewRow.Item("Sdoctype") = lbl_AutoBaseDoc.Text
        dsNewRow.Item("Tdoctype") = ddl_AutoInvTgtDoc.SelectedItem.Text
        dsNewRow.Item("Leasetype") = ddl_AutoInvLType.SelectedItem.Value
        'dsNewRow.Item("RentEsc") = DDl_rentEsc.SelectedItem.Value
        'dsNewRow.Item("CAMEsc") = DDl_CamEsc.SelectedItem.Value
        'dsNewRow.Item("SdMonths") = DDl_CamEsc.SelectedItem.Value


        Dim dr As DataRow() = Previousdt.[Select]("TargetFld='" & dsNewRow.Item("TFld") & "' and TargetDocType='" & dsNewRow.Item("Tdoctype") & "'")

        If dr.Length > 0 Then
            ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "CropImage", "alert('you can not insert duplicate record.');", True)
        Else
            dt.Rows.Add(New Object() {lastrowcount + 1, dsNewRow.Item("TFld"), dsNewRow.Item("TFldName"), dsNewRow.Item("SFld"), dsNewRow.Item("SFldName"), dsNewRow.Item("Sdoctype"), dsNewRow.Item("Tdoctype"), dsNewRow.Item("Leasetype")}) ', dsNewRow.Item("RentEsc"), dsNewRow.Item("CamEsc"), dsNewRow.Item("SdMonths")
        End If
        'If dt.Rows.Count > 0 Then
        '    ddl_AutoInvTgtDoc.Enabled = False
        'Else
        '    ddl_AutoInvTgtDoc.Enabled = True
        'End If
        ViewState("AutoInvCurrentTable") = dt
        gv_AutoInv.DataSource = dt
        gv_AutoInv.DataBind()
        updpnl_Btn_AutoInv.Update()

    End Sub
    Protected Sub btn_AutoInvSave_Click(sender As Object, e As EventArgs) Handles btn_AutoInvSave.Click

        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString

        Dim Formid As Integer = Session("AutoInvSetting_FormId")
        If Formid <> 0 And btn_AutoInvSave.Text = "Save" Then
            lbl_AutoInvMsg.Text = ""
            If ddl_AutoInvTgtDoc.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Target Document."
                Exit Sub
            End If
            If ddl_AutoInvTgtDoc.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Target Document."
                Exit Sub
            End If
            If ddl_AutoInvTgtDoc_flds.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Target Document Fields."
                Exit Sub
            End If
            If ddl_AutoInvTgtDoc_flds.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Target Document Fields."
                Exit Sub
            End If
            If ddl_AISrcRentalFld.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Rental Field."
                Exit Sub
            End If
            If ddl_AISrcRentalFld.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Rental Field."
                Exit Sub
            End If
            If ddl_AISrcSDt.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Star Date Field."
                Exit Sub
            End If
            If ddl_AISrcSDt.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Star Date Field."
                Exit Sub
            End If
            If ddl_AISrcEDt.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select End Date Field."
                Exit Sub
            End If
            If ddl_AISrcEDt.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select End Date Field."
                Exit Sub
            End If
            If ddl_FrequencyFld.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Frequency Field."
                Exit Sub
            End If
            If ddl_FrequencyFld.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Frequency Field."
                Exit Sub
            End If
            If ddl_RentPeriodFld.SelectedItem.Value = "" Then
                lbl_AutoInvMsg.Text = "Select Period Field."
                Exit Sub
            End If
            If ddl_AutoInvSrcDoc_flds.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Source Document Fields."
                Exit Sub
            End If
            If ddl_AutoInvSrcDoc_flds.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Source Document Fields."
                Exit Sub
            End If
            If ddl_ActiveStatus.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Status Field."
                Exit Sub
            End If
            If ddl_ActiveStatus.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Status Field."
                Exit Sub
            End If

            If DDl_rentEsc.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Rent Esclation Field."
                Exit Sub
            End If
            If DDl_rentEsc.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Rent Esclation Field."
                Exit Sub
            End If
            If DDl_CamEsc.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select CAM Esclation Field."
                Exit Sub
            End If
            If DDl_CamEsc.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select CAM Esclation Field."
                Exit Sub
            End If
            If DDl_SDMonths.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Security Period (Month) Field."
                Exit Sub
            End If
            If DDl_SDMonths.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Security Period (Month) Field."
                Exit Sub
            End If
            If DDL_CAMEscPtage.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Cam Esclation(%) Field."
                Exit Sub
            End If
            If DDL_CAMEscPtage.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Cam Esclation(%) Field."
                Exit Sub
            End If
            If DDL_RentEscPtage.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Rent Esclation(%) Field."
                Exit Sub
            End If
            If DDL_RentEscPtage.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Rent Esclation(%) Field."
                Exit Sub
            End If
            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand("sp_AddAutoInvFieldSetting")
                    cmd.Connection = con
                    cmd.CommandType = CommandType.StoredProcedure
                    cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                    cmd.Parameters.Add(New SqlParameter("@Tid", Session("AutoInvSettingTID")))
                    cmd.Parameters.Add(New SqlParameter("@TDocType", Convert.ToString(ddl_AutoInvTgtDoc.SelectedItem.Text)))
                    cmd.Parameters.Add(New SqlParameter("@SDocType", Convert.ToString(lbl_AutoBaseDoc.Text)))
                    cmd.Parameters.Add(New SqlParameter("@IsActiveStatus", Convert.ToString(ddl_ActiveStatus.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@StartDateFld", Convert.ToString(ddl_AISrcSDt.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@EndDateFld", Convert.ToString(ddl_AISrcEDt.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@FrequencyFld", Convert.ToString(ddl_FrequencyFld.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@RentalFld", Convert.ToString(ddl_AISrcRentalFld.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@PeriodFld", Convert.ToString(ddl_RentPeriodFld.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@SDFld", Convert.ToString(ddl_AutoInv_SDCDate.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@SDFld", Convert.ToString(ddl_AutoInv_SDCDate.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@CAMFld", Convert.ToString(DDL_CAMAmnt.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@RentEsc", Convert.ToString(DDl_rentEsc.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@RentEscPTage", Convert.ToString(DDL_RentEscPtage.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@CAMEsc", Convert.ToString(DDl_CamEsc.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@CAMEscPTage", Convert.ToString(DDL_CAMEscPtage.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@SdMonths", Convert.ToString(DDl_SDMonths.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@UpdatedBy", Session("UID").ToString()))

                    cmd.Parameters.Add(New SqlParameter("@AutoInvFieldSetting", TryCast(ViewState("AutoInvCurrentTable"), DataTable)))
                    Using sda As New SqlDataAdapter(cmd)
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        sda.SelectCommand.ExecuteNonQuery()
                    End Using
                End Using
            End Using
        ElseIf Formid <> 0 And btn_AutoInvSave.Text = "Update" Then

            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand("sp_UpdateAutoInvSetting")
                    cmd.Connection = con
                    cmd.CommandType = CommandType.StoredProcedure
                    cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                    cmd.Parameters.Add(New SqlParameter("@Tid", Session("AutoInvSettingTID")))
                    cmd.Parameters.Add(New SqlParameter("@AutoInvFieldSetting", TryCast(ViewState("AutoInvCurrentTable"), DataTable)))
                    Using sda As New SqlDataAdapter(cmd)
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        sda.SelectCommand.ExecuteNonQuery()
                    End Using
                End Using
            End Using
        End If
        AutoInvSettingClose()
    End Sub
    Protected Sub btn_headerUpdate_Click(sender As Object, e As EventArgs) Handles btn_headerUpdate.Click
        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString

        Dim Formid As Integer = Session("AutoInvSetting_FormId")
        If Formid <> 0 And btn_headerUpdate.Text = "Header Configuration Update" Then
            lbl_AutoInvMsg.Text = ""

            If ddl_AISrcRentalFld.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Rental Field."
                Exit Sub
            End If
            If ddl_AISrcRentalFld.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Rental Field."
                Exit Sub
            End If
            If ddl_AISrcSDt.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Start Date Field."
                Exit Sub
            End If
            If ddl_AISrcSDt.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Start Date Field."
                Exit Sub
            End If
            If ddl_AISrcEDt.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select End Date Field."
                Exit Sub
            End If
            If ddl_AISrcEDt.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select End Date Field."
                Exit Sub
            End If
            If ddl_FrequencyFld.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Frequency Field."
                Exit Sub
            End If
            If ddl_FrequencyFld.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Frequency Field."
                Exit Sub
            End If
            If ddl_RentPeriodFld.SelectedItem.Value = "" Then
                lbl_AutoInvMsg.Text = "Select Period Field."
                Exit Sub
            End If

            If ddl_ActiveStatus.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Status Field."
                Exit Sub
            End If
            If ddl_ActiveStatus.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Status Field."
                Exit Sub
            End If

            If DDl_rentEsc.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Rent Esclation Field."
                Exit Sub
            End If
            If DDl_rentEsc.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Rent Esclation Field."
                Exit Sub
            End If
            If DDl_CamEsc.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select CAM Esclation Field."
                Exit Sub
            End If
            If DDl_CamEsc.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select CAM Esclation Field."
                Exit Sub
            End If
            If DDl_SDMonths.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Security Period (Month) Field."
                Exit Sub
            End If
            If DDl_SDMonths.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Security Period (Month) Field."
                Exit Sub
            End If
            If DDL_CAMEscPtage.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Cam Esclation(%) Field."
                Exit Sub
            End If
            If DDL_CAMEscPtage.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Cam Esclation(%) Field."
                Exit Sub
            End If
            If DDL_RentEscPtage.SelectedItem.Selected = False Then
                lbl_AutoInvMsg.Text = "Select Rent Esclation(%) Field."
                Exit Sub
            End If
            If DDL_RentEscPtage.SelectedItem.Text = "SELECT" Then
                lbl_AutoInvMsg.Text = "Select Rent Esclation(%) Field."
                Exit Sub
            End If
            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand("sp_UpdateAutoInvHeaderSetting")
                    cmd.Connection = con
                    cmd.CommandType = CommandType.StoredProcedure
                    cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                    cmd.Parameters.Add(New SqlParameter("@Tid", Session("AutoInvSettingTID")))
                    cmd.Parameters.Add(New SqlParameter("@TDocType", Convert.ToString(ddl_AutoInvTgtDoc.SelectedItem.Text)))
                    cmd.Parameters.Add(New SqlParameter("@SDocType", Convert.ToString(lbl_AutoBaseDoc.Text)))
                    cmd.Parameters.Add(New SqlParameter("@IsActiveStatus", Convert.ToString(ddl_ActiveStatus.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@StartDateFld", Convert.ToString(ddl_AISrcSDt.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@EndDateFld", Convert.ToString(ddl_AISrcEDt.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@FrequencyFld", Convert.ToString(ddl_FrequencyFld.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@RentalFld", Convert.ToString(ddl_AISrcRentalFld.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@PeriodFld", Convert.ToString(ddl_RentPeriodFld.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@LeaseType", Convert.ToString(ddl_AutoInvLType.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@RentEsc", Convert.ToString(DDl_rentEsc.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@RentEscPTage", Convert.ToString(DDL_RentEscPtage.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@CAMEsc", Convert.ToString(DDl_CamEsc.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@CAMEscPTage", Convert.ToString(DDL_CAMEscPtage.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@SdMonths", Convert.ToString(DDl_SDMonths.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@UpdatedBy", Session("UID").ToString()))
                    cmd.Parameters.Add(New SqlParameter("@SDFld", Convert.ToString(ddl_AutoInv_SDCDate.SelectedItem.Value)))
                    cmd.Parameters.Add(New SqlParameter("@CAMFld", Convert.ToString(DDL_CAMAmnt.SelectedItem.Value)))
                    'cmd.Parameters.Add(New SqlParameter("@AutoInvFieldSetting", TryCast(ViewState("AutoInvCurrentTable"), DataTable)))
                    Using sda As New SqlDataAdapter(cmd)
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        sda.SelectCommand.ExecuteNonQuery()
                    End Using
                End Using
            End Using
            AutoInvSettingClose()
        End If
    End Sub
    Protected Sub ddl_AutoInvTgtDoc_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddl_AutoInvTgtDoc.SelectedIndexChanged

        Dim Targetdoctype As String = String.Empty

        Targetdoctype = ddl_AutoInvTgtDoc.SelectedItem.Text
        Session("AutoInvTgtDocType") = Targetdoctype
        Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString
        Dim DtTable As New DataTable
        Using con As New SqlConnection(constr)
            Using cmd As New SqlCommand("sp_GetTargetDocumentDetails")
                cmd.Connection = con
                cmd.CommandType = CommandType.StoredProcedure
                cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
                cmd.Parameters.Add(New SqlParameter("@Documenttype", Targetdoctype))
                Using sda As New SqlDataAdapter(cmd)
                    sda.Fill(DtTable)
                End Using
            End Using
        End Using
        If DtTable.Rows.Count > 0 Then
            ddl_AutoInvTgtDoc_flds.DataSource = DtTable
            ddl_AutoInvTgtDoc_flds.DataTextField = "displayName"
            ddl_AutoInvTgtDoc_flds.DataValueField = "FieldMapping"
            ddl_AutoInvTgtDoc_flds.DataBind()

        End If
        ddl_AutoInvTgtDoc_flds.Items.Insert("0", New ListItem("SELECT"))
        updpnl_Btn_AutoInv.Update()
    End Sub

    'Protected Sub ddl_AutoInvLType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddl_AutoInvLType.SelectedIndexChanged
    '    Dim AutoInvLType As String = String.Empty
    '    AutoInvLType = ddl_AutoInvLType.SelectedItem.Value()

    '    Dim Formid As Int16 = Convert.ToInt16(Session("AutoInvSetting_FormId"))
    '    Dim constr As String = ConfigurationManager.ConnectionStrings("constr").ConnectionString
    '    Dim DtTable As New DataSet
    '    Dim ds As New DataSet
    '    Using con As New SqlConnection(constr)
    '        Using cmd As New SqlCommand("sp_GetAutoInvSettingDetails_FormId")
    '            cmd.Connection = con
    '            cmd.CommandType = CommandType.StoredProcedure
    '            cmd.Parameters.Add(New SqlParameter("@eid", Session("EID")))
    '            cmd.Parameters.Add(New SqlParameter("@formid", Formid))
    '            Using sda As New SqlDataAdapter(cmd)
    '                sda.Fill(ds)
    '            End Using
    '        End Using
    '    End Using
    '    If ds.Tables(0).Rows.Count > 0 Then
    '        If ds.Tables(0).Rows(0).Item("LeaseType").ToString() <> "" Then
    '            If ds.Tables(0).Rows(0).Item("LeaseType").ToString() = AutoInvLType Then
    '                If ddl_AutoInvLType.Items.Contains(ddl_AutoInvLType.Items.FindByValue(ds.Tables(0).Rows(0).Item("LeaseType").ToString())) Then
    '                    ddl_AutoInvLType.SelectedValue = ddl_AutoInvLType.Items.FindByValue(ds.Tables(0).Rows(0).Item("LeaseType").ToString()).Value
    '                    'ddl_AutoInvTgtDoc.Enabled = False
    '                End If
    '            Else
    '                ' ddl_AutoInvTgtDoc.Enabled = True
    '                btn_AutoInvSave.Text = "Update"
    '            End If

    '        End If
    '    End If


    '    updpnl_Btn_AutoInv.Update()
    'End Sub

    Protected Sub OnRowDeletingAutoInv(sender As Object, e As GridViewDeleteEventArgs)

        Dim index As Integer = Convert.ToInt32(e.RowIndex)
        Dim dt As DataTable = TryCast(ViewState("AutoInvCurrentTable"), DataTable)
        dt.Rows(index).Delete()
        dt.AcceptChanges()
        If dt.Rows.Count = 0 Then
            btn_AutoInvSave.Text = "Update"
        End If
        ViewState("AutoInvCurrentTable") = dt
        'If dt.Rows.Count = 0 Then
        '    ddl_AutoInvTgtDoc.Enabled = True
        'Else
        '    ddl_AutoInvTgtDoc.Enabled = False
        'End If

        gv_AutoInv.DataSource = TryCast(ViewState("AutoInvCurrentTable"), DataTable)
        gv_AutoInv.DataBind()
        updpnl_Btn_AutoInv.Update()
    End Sub

    'code written by chandni ends here
    Protected Sub btnlogin_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnlogin.Click
        If txtFormName.Text.Length < 2 Then
            lblForm.Text = "Please Enter Valid Form Name"
            Exit Sub
        End If
        If Left(txtFormName.Text, 1) = " " Then
            lblForm.Text = "Please Enter Valid Form Name"
            Exit Sub
        End If

        If txtFormCaption.Text.Length < 2 Then
            lblForm.Text = "Please Enter Valid Form Caption"
            Exit Sub
        End If

        If txtFormDesc.Text.Length < 2 Then
            lblForm.Text = "Please Enter Valid Form Discription"
            Exit Sub
        End If
        If ddlFormSource.SelectedIndex = 0 Then
            lblForm.Text = "Please Select Form Source"
            Exit Sub
        End If

        Dim EventName As String = ""
        If ddlEvent.Visible = True Then
            If ddlEvent.SelectedItem.Text = "SELECT DOCUMENT TYPE" Then
                lblForm.Text = "Please Select Valid Form For This Form"
                Exit Sub
            Else
                EventName = ddlEvent.SelectedItem.Text
            End If
        End If


        Dim SBEventName As String = ""
        If ddlSBE.Visible = True Then
            If ddlSBE.SelectedItem.Text = "SELECT EVENT" Then
                lblForm.Text = "Please Select Valid Event For This Form"
                Exit Sub
            Else
                SBEventName = ddlSBE.SelectedItem.Value
            End If
        End If
        Dim curstatus As String = ""
        If ddlStatus.Visible = True Then
            If UCase(ddlStatus.SelectedItem.Text) = "SELECT ONE" Then
                curstatus = ""
            Else
                curstatus = ddlStatus.SelectedItem.Text
            End If
        End If

        Dim curDocNature As String = ""
        If ddlDocNature.Visible = True Then
            If UCase(ddlDocNature.SelectedItem.Text) = "SELECT ONE" Then
                curDocNature = "CREATE"
            Else
                curDocNature = ddlDocNature.SelectedItem.Text
            End If
        End If
        If chkshowCUploder.Checked = True Then
            If chkCSV.Checked = True Or chkXML.Checked = True Then
            Else
                lblForm.Text = "Please Select any one from XML or CSV"
                Exit Sub
            End If
            Dim i As Integer = 0
            For Each li As ListItem In chkfldsep.Items
                If li.Selected = True Then
                    i = i + 1
                End If
            Next
            If i = 2 Or i = 0 Then
                lblForm.Text = "Please Select only one seperator in among of them"
                Exit Sub
            End If
        End If

        Dim ob As New DynamicForm
        Dim chkcal As Integer
        Dim chkWorkflow As Integer
        Dim chkHis As Integer
        Dim chkr As Integer
        Dim max As Integer
        Dim fld As String = ""
        Dim chkpbE As Integer
        Dim chkpbV As Integer
        Dim isinline As Integer = 0
        Dim allowmultiuse As Integer = 0
        Dim stringOrder As Integer = 0
        Dim checkEnableSync As Integer = 0
        Dim isCSV As Integer = 0
        Dim isXML As Integer = 0
        'Add Tally Synch by Mayank 
        Dim isTallyRegistration As Integer = 0
        'Add Tally Synch by Mayank 
        Dim ChildItemOnAction As New ArrayList()

        Dim FieldSeperator As String = ""
        For Each li As ListItem In chkfldsep.Items
            If li.Selected = True Then
                FieldSeperator = li.Text
            End If
        Next

        'Dim ChildItemOnAction As String = ""
        If chkCalendar.Checked = True Then
            chkcal = 1
        Else
            chkcal = 0
        End If
        If chkWF.Checked = True Then
            chkWorkflow = 1
        Else
            chkWorkflow = 0
        End If
        If chkHistory.Checked = True Then
            chkHis = 1
        Else
            chkHis = 0
        End If

        'check for Role CheckBox
        If chkrole.Checked = True Then
            chkr = 1
        Else
            chkr = 0
        End If
        'check for Public or Private page
        If ChKPE.Checked = True Then
            chkpbE = 1
        Else
            chkpbE = 0
        End If

        If ChKPV.Checked = True Then
            chkpbV = 1
        Else
            chkpbV = 0
        End If
        If txtAutosaveinterval.Text.ToString = "" Then
            txtAutosaveinterval.Text = "0"
        End If
        If Chkmultiuse.Checked = True Then
            allowmultiuse = 1
        Else
            allowmultiuse = 0
        End If
        If chkCSV.Checked = True Then
            isCSV = 1
        Else
            isCSV = 0
        End If
        If chkXML.Checked = True Then
            isXML = 1
        Else
            isXML = 0
        End If
        For Each li As ListItem In chkChild.Items
            If (li.Selected = True) Then
                ChildItemOnAction.Add(txtFormName.Text & "." & li.Value)
            End If
        Next
        'Add Tally Synch By mayanak 
        If (ddlType.SelectedIndex = 0) Then
            If (chkEnableTallyRegistration.Checked) Then
                isTallyRegistration = 1
            Else
                isTallyRegistration = 0
            End If
        Else
            isTallyRegistration = 0
        End If
        'Add Tally Synch By mayanak 

        If (ddlFormSource.SelectedIndex = 1) Then
            If (txtSyncTally.Text <> String.Empty) Then
                stringOrder = Convert.ToInt32(txtSyncTally.Text)
            Else
                stringOrder = 0
            End If

            If CheckBox2.Checked = True Then
                checkEnableSync = 1
            Else
                checkEnableSync = 0
            End If
        End If
        If ShowExisting.Visible = False Then
            txtESEV.Text = ""
        End If
        Dim defval As Integer = 0
        If btnlogin.Text = "Save" Then
            'check Max field

            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim odtxt As New SqlDataAdapter("select Sync_Tally_Ordering from  MMM_MST_FORMS where EID='" + Session("EID").ToString() + "' and Sync_Tally_Ordering='" + txtSyncTally.Text + "'", con)
            Dim dstxt As New DataSet

            odtxt.Fill(dstxt, "txtfield")
            If (dstxt.Tables(0).Rows.Count > 0 And txtSyncTally.Text <> "") Then
                lblForm.Text = "Sync Tally Order Can Not Repeated"
            Else
                If (txtSyncTally.Text = "") Then
                    stringOrder = 0
                Else
                    stringOrder = txtSyncTally.Text
                End If


                If CheckBox2.Checked = True Then
                    checkEnableSync = 1
                Else
                    checkEnableSync = 0


                End If

                If chkrole.Checked = True Then
                    Dim da As SqlDataAdapter = New SqlDataAdapter("select isnull(max(substring(docmapping,4,5)),0) from MMM_MST_FORMS where EID=" & Session("EID") & "", con)
                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If
                    max = da.SelectCommand.ExecuteScalar()
                    fld = "fld" & max + 1
                End If
                'old but add two parameter
                If chkIsDef.Checked = True Then
                    defval = 1
                End If

                If chkdefblnk.Checked = True Then
                    defval = 0
                End If

                Dim childUploder As Integer = 0
                If chkshowCUploder.Checked Then
                    childUploder = 1
                End If

                Dim creation As Integer = 0
                If chkcreation.Checked Then
                    creation = 1
                End If

                ' for web services
                Dim WS As Integer = 0
                If chkEnblWS.Checked = True Then
                    WS = 1
                End If

                'check for is inline editing checkbox
                If Chkisinline.Checked = True Then
                    isinline = 1
                Else
                    isinline = 0
                End If

                If txtdefblnk.Text.ToString = "" Then
                    txtdefblnk.Text = "0"
                End If
                If chkdefblnk.Checked = True Then
                    If txtdefblnk.Text.ToString = "" Then
                        lblForm.Text = "Please Enter Value in Textbox"
                    End If
                End If

                If txtAllowedUploadSize.Text.ToString = "" Then
                    txtAllowedUploadSize.Text = "0"
                End If

                'If EnabledAddRow.Visible = False Then
                '    chkEnableAddrow.Checked = True
                'Else
                '    chkEnableAddrow.Checked = False
                'End If
                'Check whether exising configuration is same or not
                If ddlFormSource.SelectedIndex = 2 Then
                    Dim da As SqlDataAdapter = New SqlDataAdapter("select count(*) from mmm_mst_forms where  formsource='ACTION DRIVEN' and  eventname='" & ddlEvent.SelectedItem.Text.Trim() & "' and subevent='" & ddlSBE.SelectedValue.Trim() & "' and curstatus='" & ddlStatus.SelectedValue.Trim() & "' and DocNature='" & ddlDocNature.SelectedValue.Trim() & "'   and eid=" & Session("EID"), con)
                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If
                    If (Convert.ToInt64(da.SelectCommand.ExecuteScalar()) <> 0) Then
                        lblForm.Text = "Please select another configuration for Action screen this configuration already exist for another action screen"
                        Exit Sub
                    End If

                End If

                Dim ist As Integer = InsertDynamicForm(txtFormName.Text, txtFormCaption.Text, txtFormDesc.Text, Session("EID").ToString(), ddlFormType.SelectedItem.Text, ddlFormSource.SelectedItem.Text, ddlLayout.SelectedItem.Text, EventName, SBEventName, curstatus, chkcal, chkWorkflow, chkHis, chkr, fld, chkpbE, chkpbV, curDocNature, defval, Val(txtAllowedUploadSize.Text), childUploder, creation, WS, txtEnblDft.Text, txtEnblCRM.Text, isinline, txtdefblnk.Text, txtAutosaveinterval.Text, allowmultiuse, stringOrder, checkEnableSync, isCSV, isXML, String.Join(",", ChildItemOnAction.ToArray()), isTallyRegistration, txtESEV.Text, IIf(chkEnableAddrow.Checked, 1, 0), FieldSeperator)
                If ist = -1 Then
                    lblForm.Text = "This Form Already Exist For This Entity"
                Else
                    lblMsg.Text = "New Form Is created. Please Design its Fields"
                    btnForm_ModalPopupExtender.Hide()
                    BinddataGrid()
                    'UpdatePanel1.Update()
                    Response.Redirect("Formmaster.aspx")
                End If
            End If

        ElseIf UCase(btnlogin.Text) = "UPDATE" Then


            If chkrole.Checked = True Then
                Dim da As SqlDataAdapter = New SqlDataAdapter("select isnull(max(substring(docmapping,4,5)),0) from MMM_MST_FORMS where EID=" & Session("EID") & " and formid=" & ViewState("FORMID") & "", con)
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                max = da.SelectCommand.ExecuteScalar()
                If max = 0 Then
                    da.SelectCommand.CommandText = "select isnull(max(substring(docmapping,4,5)),0) from MMM_MST_FORMS where EID=" & Session("EID") & ""
                    max = da.SelectCommand.ExecuteScalar()
                    fld = "fld" & max + 1
                Else
                    fld = "fld" & max
                End If
            End If
            If chkIsDef.Checked = True Then
                defval = 1
                'txtdefblnk.Visible = True
                'txtdefblnk.Enabled = False     'Shalini
                'txtdefblnk.Text = "0"
            End If

            If chkdefblnk.Checked = True Then
                defval = 0
                'txtdefblnk.Visible = True
                'txtdefblnk.Enabled = True     'Shalini 
            End If

            'check for is inline editing checkbox
            If Chkisinline.Checked = True Then
                isinline = 1
            Else
                isinline = 0
            End If
            Dim childUploder As Integer = 0
            If chkshowCUploder.Checked Then
                childUploder = 1
            End If

            Dim creation As Integer = 0
            If chkcreation.Checked Then
                creation = 1
            End If

            If txtdefblnk.Text.ToString = "" Then
                txtdefblnk.Text = "0"
            End If
            If chkdefblnk.Checked = True Then
                If txtdefblnk.Text.ToString = "" Then
                    lblForm.Text = "Please Enter Value in Textbox"
                End If
            End If

            Dim WS As Integer = 0
            If chkEnblWS.Checked = True Then
                WS = 1
            End If
            If ddlFormSource.SelectedIndex = 2 Then
                Dim da As SqlDataAdapter = New SqlDataAdapter("select case formname when '" & txtFormName.Text.Trim() & "' then 0 else count(FormName) end from mmm_mst_forms where  formsource='ACTION DRIVEN' and  eventname='" & ddlEvent.SelectedItem.Text.Trim() & "' and subevent='" & ddlSBE.SelectedValue.Trim() & "' and curstatus='" & ddlStatus.SelectedValue.Trim() & "' and DocNature='" & ddlDocNature.SelectedValue.Trim() & "'   and eid=" & Session("EID") & " group by formname", con)
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                If (Convert.ToInt64(da.SelectCommand.ExecuteScalar()) <> 0) Then
                    lblForm.Text = "Please select another configuration for Action screen this configuration already exist for another action screen"
                    Exit Sub
                End If

            End If
            Dim ist As Integer = UpdateDynamicForm(ViewState("FORMID"), txtFormName.Text, txtFormCaption.Text, txtFormDesc.Text, Session("EID").ToString(), ddlFormType.SelectedItem.Text, ddlFormSource.SelectedItem.Text, ddlLayout.SelectedItem.Text, EventName, SBEventName, curstatus, chkcal, chkWorkflow, chkHis, chkr, fld, chkpbE, chkpbV, curDocNature, defval, Val(txtAllowedUploadSize.Text), childUploder, creation, WS, txtEnblDft.Text, txtEnblCRM.Text, isinline, txtdefblnk.Text, txtAutosaveinterval.Text, allowmultiuse, stringOrder, checkEnableSync, isCSV, isXML, String.Join(",", ChildItemOnAction.ToArray()), isTallyRegistration, txtESEV.Text, IIf(chkEnableAddrow.Checked, 1, 0), FieldSeperator)
            If ist = -1 Then
                lblForm.Text = "This Form Already Exist For This Entity"
            Else
                lblMsg.Text = "Form Updated Successfully."
                btnForm_ModalPopupExtender.Hide()
                BinddataGrid()
                'UpdatePanel1.Update()
                Response.Redirect("Formmaster.aspx")
            End If
        End If
        con.Dispose()
        chkCalendar.Checked = False
        chkWF.Checked = False
        chkHistory.Checked = False






    End Sub

    'Add Tally Synch by mayank
    Protected Sub EditHit(ByVal sender As Object, ByVal e As System.EventArgs)
        fnames()


        txtEnblCRM.Enabled = False
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("FORMID") = Formid
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet   'Shalini
        da.SelectCommand.CommandText = "SELECT FormID,FormName,FormCaption,EID,FormType,FormSource,autosaveinterval,IsDefaultRows,FormDesc,LayOutType,Sync_Tally_Ordering,EnableSync_Tally,EVENTNAME,SUBEVENT,CURSTATUS,DocNature,iscalendar,isworkflow,history,hasDefaultValue,isRoleDef,PUBLICENTRY,PUBLICVIEW,case isActive when 0 then 'InActive' else 'Active' end [isActive],AttahcedFileSize,ShowUploader,fieldseperator,isUserCreation,enableWS ,enabledraft,enableCRM,isinlineediting,Allowmultiuse,iscsv,isxml,ChidFormforActionScreen,EanbleRegistration_Tally,Show_Existing,EnableAddRow FROM MMM_MST_FORMS WHERE  FORMID = " & Formid & " AND EID = " & Session("EID").ToString() & ""
        da.Fill(ds, "DETAIL")
        txtESEV.Text = ds.Tables("DETAIL").Rows(0).Item("Show_Existing").ToString()
        If ds.Tables("DETAIL").Rows(0).Item("FormSource").ToString = "MENU DRIVEN" And Val(ds.Tables("DETAIL").Rows(0).Item("hasDefaultValue").ToString) = 1 Then
            Dim arra As String() = Split(ds.Tables("DETAIL").Rows(0).Item("Formname").ToString(), "_")
            If arra(1) = "MASTER" Then
                lblblockform.Text = "This form can't be EDIT because it is dependent on other form "
                btnblocksave.Visible = False
                updBlockform.Update()
                MPblockForm.Show()
                ShowExisting.Visible = True
                Exit Sub
            End If
        End If
        If ds.Tables("DETAIL").Rows(0).Item("FormSource").ToString = "MENU DRIVEN" And ds.Tables("DETAIL").Rows(0).Item("FormType").ToString = "MASTER" Then


            txtSyncTally.Text = ds.Tables("DETAIL").Rows(0).Item("Sync_Tally_Ordering").ToString()
            If Val(ds.Tables("DETAIL").Rows(0).Item("EnableSync_Tally").ToString()) = 1 Then
                CheckBox2.Checked = True
            Else
                CheckBox2.Checked = False
            End If
            test.Visible = True
            ShowExisting.Visible = True
            If Val(ds.Tables("DETAIL").Rows(0).Item("isRoleDef").ToString()) = 1 Then
                chkrole.Checked = True
            Else
                chkrole.Checked = False
            End If
            chkrole.Visible = True
        Else
            test.Visible = False
        End If

        txtFormName.Text = row.Cells(1).Text
        txtFormCaption.Text = row.Cells(2).Text
        txtFormDesc.Text = row.Cells(3).Text
        'txtEnblDft.Text = ds.Tables("DETAIL").Rows(0).Item("enabledraft").ToString()
        If ds.Tables("DETAIL").Rows(0).Item("FormSource").ToString = "MENU DRIVEN" And ds.Tables("DETAIL").Rows(0).Item("formtype").ToString = "DOCUMENT" Then
            txtEnblDft.Enabled = True
            txtEnblDft.Text = ds.Tables("DETAIL").Rows(0).Item("enabledraft").ToString()
            ShowExisting.Visible = True
            If Val(ds.Tables("DETAIL").Rows(0).Item("isRoleDef").ToString()) = 1 Then
                chkrole.Checked = True
            Else
                chkrole.Checked = False
            End If
            chkrole.Visible = True
        Else
            txtEnblDft.Enabled = False
        End If
        txtAllowedUploadSize.Text = ds.Tables("DETAIL").Rows(0).Item("AttahcedFileSize").ToString()
        txtAutosaveinterval.Text = ds.Tables("DETAIL").Rows(0).Item("autosaveinterval").ToString()

        If Val(ds.Tables("DETAIL").Rows(0).Item("showUploader").ToString()) = 1 Then
            chkshowCUploder.Checked = True
            uploader.Visible = True
            If Val(ds.Tables("DETAIL").Rows(0).Item("iscsv").ToString()) = 1 Then
                chkCSV.Checked = True
                If ds.Tables("DETAIL").Rows(0).Item("fieldseperator").ToString() = "COMMA" Then
                    chkfldsep.SelectedIndex = 0
                ElseIf ds.Tables("DETAIL").Rows(0).Item("fieldseperator").ToString() = "PIPE" Then
                    chkfldsep.SelectedIndex = 1
                End If
            Else
                chkCSV.Checked = False
                chkfldsep.SelectedIndex = 0
            End If
            If Val(ds.Tables("DETAIL").Rows(0).Item("isXML").ToString()) = 1 Then
                chkXML.Checked = True
            Else
                chkXML.Checked = False
            End If
        End If

        If Val(ds.Tables("DETAIL").Rows(0).Item("isUserCreation").ToString()) = 1 Then
            chkcreation.Checked = True
        End If

        If Val(ds.Tables("DETAIL").Rows(0).Item("enableWS").ToString()) = 1 Then
            chkEnblWS.Checked = True
        Else
            chkEnblWS.Checked = False
        End If
        If Val(ds.Tables("DETAIL").Rows(0).Item("iscalendar").ToString()) = 1 Then
            chkCalendar.Checked = True
        Else
            chkCalendar.Checked = False
        End If
        If Val(ds.Tables("DETAIL").Rows(0).Item("isworkflow").ToString()) = 1 Then
            chkWF.Checked = True
        Else
            chkWF.Checked = False
        End If
        If Val(ds.Tables("DETAIL").Rows(0).Item("History").ToString()) = 1 Then
            chkHistory.Checked = True
        Else
            chkHistory.Checked = False
        End If

        If Val(ds.Tables("DETAIL").Rows(0).Item("PUBLICENTRY").ToString()) = 1 Then
            ChKPE.Checked = True
        Else
            ChKPE.Checked = False
        End If

        If Val(ds.Tables("DETAIL").Rows(0).Item("PUBLICVIEW").ToString()) = 1 Then
            ChKPV.Checked = True
        Else
            ChKPV.Checked = False
        End If
        If Val(ds.Tables("DETAIL").Rows(0).Item("Allowmultiuse").ToString()) = 1 Then
            Chkmultiuse.Checked = True
        Else
            Chkmultiuse.Checked = False
        End If
        txtFormName.Text = ds.Tables("DETAIL").Rows(0).Item("FORMNAME").ToString()
        txtFormCaption.Text = ds.Tables("DETAIL").Rows(0).Item("FORMCAPTION").ToString()
        txtFormDesc.Text = ds.Tables("DETAIL").Rows(0).Item("FORMDESC").ToString()

        ddlFormType.SelectedIndex = ddlFormType.Items.IndexOf(ddlFormType.Items.FindByText(ds.Tables("DETAIL").Rows(0).Item("FORMTYPE").ToString()))
        If (ddlFormType.SelectedIndex = 0) Then
            If (ds.Tables("DETAIL").Rows(0).Item("EanbleRegistration_Tally").ToString() = "1") Then
                chkEnableTallyRegistration.Checked = True
            Else
                chkEnableTallyRegistration.Checked = False
            End If
        Else
            chkEnableTallyRegistration.Checked = False
        End If
        ddlFormSource.SelectedIndex = ddlFormSource.Items.IndexOf(ddlFormSource.Items.FindByText(ds.Tables("DETAIL").Rows(0).Item("FORMSOURCE").ToString()))
        If ddlFormSource.SelectedItem.Text = "DETAIL FORM " Then
            chkrole.Checked = False
            chkrole.Visible = False
            ShowExisting.Visible = False
            chkIsDef.Visible = True
            EnabledAddRow.Visible = True
            If Val(ds.Tables("DETAIL").Rows(0).Item("hasDefaultValue").ToString) = 1 Then
                chkIsDef.Checked = True
                txtdefblnk.Visible = True
                txtdefblnk.Enabled = False
                txtdefblnk.Text = ds.Tables("DETAIL").Rows(0).Item("IsDefaultRows").ToString()
            Else
                chkIsDef.Checked = False
            End If
            chkdefblnk.Visible = True
            If Val(ds.Tables("DETAIL").Rows(0).Item("hasDefaultValue").ToString) = 0 Then
                chkdefblnk.Checked = True
                txtdefblnk.Visible = True
                txtdefblnk.Enabled = True
                txtdefblnk.Text = ds.Tables("DETAIL").Rows(0).Item("IsDefaultRows").ToString()
                If txtdefblnk.Text = "0" Then
                    chkdefblnk.Checked = False
                End If
            Else
                chkdefblnk.Checked = False
            End If

            If Val(ds.Tables("DETAIL").Rows(0).Item("isinlineediting").ToString()) = 1 Then
                Chkisinline.Visible = False
                Chkisinline.Checked = True
                chkdefblnk.Checked = False
                txtdefblnk.Visible = False
            Else
                Chkisinline.Visible = False
                Chkisinline.Checked = False
            End If
            'Add row configured value for gridview Mayank
            If Val(ds.Tables("DETAIL").Rows(0).Item("EnableAddRow").ToString) = 1 Then
                chkEnableAddrow.Checked = True
            ElseIf Val(ds.Tables("DETAIL").Rows(0).Item("EnableAddRow").ToString) = 0 Then
                chkEnableAddrow.Checked = False
            End If
            'Add row configured value for gridview Mayank
        Else
            chkIsDef.Checked = False
            chkIsDef.Visible = False
            Chkisinline.Visible = False
            EnabledAddRow.Visible = False
            chkEditable.Checked = False
        End If
        ddlLayout.SelectedIndex = ddlLayout.Items.IndexOf(ddlLayout.Items.FindByText(ds.Tables("DETAIL").Rows(0).Item("LayOutType").ToString()))

        If UCase(ds.Tables("DETAIL").Rows(0).Item("FORMSOURCE").ToString()) = "ACTION DRIVEN" Then
            chkrole.Checked = False
            chkrole.Visible = False
            ShowExisting.Visible = True
            ad.Visible = True
            ddlEvent.Visible = True
            txtEnblCRM.Enabled = True     'Shalini
            ddlSBE.Visible = True
            ddlStatus.Visible = True
            ddlDocNature.Visible = True
            txtEnblCRM.Text = ds.Tables("DETAIL").Rows(0).Item("enableCRM").ToString()
            BindEvent(ds.Tables("DETAIL").Rows(0).Item("FORMTYPE").ToString())
            ddlEvent.SelectedIndex = ddlEvent.Items.IndexOf(ddlEvent.Items.FindByText(ds.Tables("DETAIL").Rows(0).Item("EVENTNAME").ToString()))
            BindSubEvent(ds.Tables("DETAIL").Rows(0).Item("EVENTNAME").ToString())
            ddlSBE.SelectedIndex = ddlSBE.Items.IndexOf(ddlSBE.Items.FindByValue(ds.Tables("DETAIL").Rows(0).Item("SUBEVENT").ToString()))
            BindStatus(ds.Tables("DETAIL").Rows(0).Item("EVENTNAME").ToString())
            ddlStatus.SelectedIndex = ddlStatus.Items.IndexOf(ddlStatus.Items.FindByText(ds.Tables("DETAIL").Rows(0).Item("CURSTATUS").ToString()))
            ddlDocNature.SelectedIndex = ddlDocNature.Items.IndexOf(ddlDocNature.Items.FindByText(ds.Tables("DETAIL").Rows(0).Item("DOCNATURE").ToString()))
            Dim conStrs As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim cons As New SqlConnection(conStrs)
            Dim das As SqlDataAdapter = New SqlDataAdapter("", cons)
            Dim dt As New DataTable
            das.SelectCommand.CommandText = "select displayname,dropdown from mmm_mst_fields where DocumentType='" & ds.Tables("DETAIL").Rows(0).Item("EventName").ToString().Trim() & "' and  FieldType='Child Item' and eid=" & Session("EID")
            das.Fill(dt)
            If (dt.Rows.Count > 0) Then
                pnlchild.Visible = True
                chkChild.DataSource = dt
                chkChild.DataTextField = "displayname"
                chkChild.DataValueField = "dropdown"
                chkChild.DataBind()
            Else
                pnlchild.Visible = False
                chkChild.Items.Clear()
                chkChild.DataBind()
            End If
            If (IsDBNull(ds.Tables("DETAIL").Rows(0).Item("ChidFormforActionScreen").ToString()) Or ds.Tables("DETAIL").Rows(0).Item("ChidFormforActionScreen").ToString() <> String.Empty) Then
                Dim str As Array = ds.Tables("DETAIL").Rows(0).Item("ChidFormforActionScreen").ToString().Split(",")
                For z As Integer = 0 To str.Length - 1

                    For Each Li As ListItem In chkChild.Items
                        If (txtFormName.Text.ToUpper() & "." & Li.Value.ToUpper() = str(z).ToString().ToUpper()) Then
                            Li.Selected = True
                            Exit For
                        End If
                    Next
                Next
            End If

        ElseIf UCase(ds.Tables("DETAIL").Rows(0).Item("FORMSOURCE").ToString()) = "DETAIL FORM" Then
            ddlType.Items.Clear()
            ddlType.Items.Add("Please Select")
            ddlType.Items.Add("Drop Down")
            ddlType.Items.Add("Lookup")
            ddlType.Items.Add("LookupDDL")
            ddlType.Items.Add("Calculative Field")
            ddlType.Items.Add("Text Box")
            ddlType.Items.Add("Signature")   'Shalini
            ddlType.Items.Add("Geo Point")    'Shalini
            ddlType.Items.Add("Geo Fence")    'Shalini 
            ddlType.Items.Add("Catchment")    'Shalini 
        Else
            ddlType.Items.Clear()
            ddlType.Items.Add("Please Select")
            ddlType.Items.Add("Drop Down")
            ddlType.Items.Add("Lookup")
            ddlType.Items.Add("LookupDDL")
            ddlType.Items.Add("Calculative Field")
            ddlType.Items.Add("Text Box")
            ddlType.Items.Add("Text Area")
            ddlType.Items.Add("List Box")
            ddlType.Items.Add("CheckBox List")
            ddlType.Items.Add("Line Item")
            ddlType.Items.Add("File Uploader")
            ddlType.Items.Add("Signature")   'Shalini
            ddlType.Items.Add("Geo Point")    'Shalini
            ddlType.Items.Add("Geo Fence")    'Shalini
            ddlType.Items.Add("Catchment")    'Shalini 
        End If
        btnlogin.Text = "UPDATE"
        con.Dispose()
        txtFormName.Enabled = False
        UpdatePanel1.Update()
        btnForm_ModalPopupExtender.Show()
        'Response.Redirect("NewForm.aspx?FormID=" & Formid)
    End Sub


    Protected Sub Add(ByVal sender As Object, ByVal e As System.EventArgs)
        Clear()
        btnForm_ModalPopupExtender.Show()
    End Sub

    Protected Sub PreviewHit(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim pid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim od As New SqlDataAdapter("SELECT formcaption,displayName,FieldType,DropDownType,dropdown,FieldMapping,FF.isactive,LayoutType  FROM MMM_MST_FIELDS FF left outer JOIN MMM_MST_FORMS F on F.FormName = FF.DocumentType and F.EID = FF.EID where F.EID=" & Session("EID").ToString() & " and FormID = " & pid & " order by displayOrder ", con)
        Dim ds As New DataSet

        od.Fill(ds, "fields")
        If ds.Tables("fields").Rows.Count > 0 Then
            Dim layout As String = ds.Tables("fields").Rows(0).Item("LayoutType").ToString()
            pnlFields.Controls.Add(New LiteralControl("<h2>" & ds.Tables("fields").Rows(0).Item("formCaption").ToString() & "</h2>"))
            pnlFields.Controls.Add(New LiteralControl("<div class=""form""><table width=""100%"" cellspacing=""5px"" border=""0px"" cellpadding=""0px"">"))
            pnlFields.Controls.Add(New LiteralControl("<table width=""100%"" cellspacing=""5px"" border=""0px"" cellpadding=""0px"">"))
            For i As Integer = 0 To ds.Tables("fields").Rows.Count - 1
                If ds.Tables("fields").Rows(i).Item("isactive").ToString() = 1 Then
                    Dim dispName As String = ds.Tables("fields").Rows(i).Item("displayname").ToString()
                    Dim lbl As New Label
                    lbl.ID = "lbl" & i.ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True

                    If layout = "DOUBLE COLUMN" Then
                        If i Mod 2 = 0 Then
                            pnlFields.Controls.Add(New LiteralControl("<tr>"))
                        End If
                    Else
                        pnlFields.Controls.Add(New LiteralControl("<tr>"))
                    End If

                    pnlFields.Controls.Add(New LiteralControl("<td style=""width:80px;text-align:right"">"))

                    pnlFields.Controls.Add(lbl)
                    pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:200px;text-align:left"">"))


                    Select Case ds.Tables("fields").Rows(i).Item("FieldType").ToString().ToUpper()
                        Case "TEXT BOX"
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & i.ToString()
                            txtBox.Width = 190
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)

                        Case "DROP DOWN"
                            Dim ddl As New DropDownList
                            ddl.ID = "fld" & i.ToString()
                            ddl.Width = 198
                            ddl.CssClass = "txtBox"
                            Dim ddlText As String = ds.Tables("fields").Rows(i).Item("dropdown").ToString()
                            Dim arr() As String
                            arr = ddlText.Split(",")
                            ddl.Items.Add("")
                            For ii As Integer = 0 To arr.Count - 1
                                ddl.Items.Add(arr(ii).ToUpper())
                            Next
                            pnlFields.Controls.Add(ddl)

                        Case "TEXT AREA"
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & i.ToString()
                            txtBox.Width = 190
                            txtBox.CssClass = "txtBox"
                            txtBox.TextMode = TextBoxMode.MultiLine
                            pnlFields.Controls.Add(txtBox)
                    End Select

                    pnlFields.Controls.Add(New LiteralControl("</td>"))

                    If layout = "DOUBLE COLUMN" Then
                        If i Mod 2 = 1 Then
                            pnlFields.Controls.Add(New LiteralControl("</tr>"))
                        End If
                    Else
                        pnlFields.Controls.Add(New LiteralControl("</tr>"))
                    End If
                End If
            Next
            pnlFields.Controls.Add(New LiteralControl("</table></div>"))
        End If
        con.Dispose()
        Me.updatePanelPreview.Update()
        Me.btnPreview_ModalPopupExtender.Show()
    End Sub

    Protected Sub ScreenDesg(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("FORMID") = Formid
        If row.Cells(5).Text.ToUpper() = "CUSTOM" Then
            btnScrn_ModalPopupExtender.Show()
        Else
            lblMsg.Text = "You can Design Screen in 'Custom Layout' only."
        End If

    End Sub

    'delete code is changed as  to  Lock and unlock form 
    'Protected Sub DeleteHit(ByVal sender As Object, ByVal e As System.EventArgs)
    '    'Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
    '    'Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
    '    'Dim pid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)

    '    'ViewState("pid") = pid
    '    'ViewState("row") = row.Cells(1).Text
    '    'lblMsgDelete.Text = "Are you Sure Want to delete this Form from your Account/Entity? " & row.Cells(2).Text
    '    'Me.updatePanelDelete.Update()
    '    'Me.btnDelete_ModalPopupExtender.Show()
    'End Sub

    'Protected Sub DeleteRecord(ByVal sender As Object, ByVal e As System.EventArgs)

    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("uspDeleteFormMaster", con)
    '    oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '    oda.SelectCommand.Parameters.AddWithValue("Formid", ViewState("pid").ToString())
    '    oda.SelectCommand.Parameters.AddWithValue("eid", Session("EID").ToString())
    '    oda.SelectCommand.Parameters.AddWithValue("Dropdown", ViewState("row").ToString())
    '    If con.State <> ConnectionState.Open Then
    '        con.Open()
    '    End If
    '    Dim iSt As Integer = oda.SelectCommand.ExecuteScalar()
    '    oda.Dispose()
    '    If iSt = 0 Then
    '        BinddataGrid()
    '        btnDelete_ModalPopupExtender.Hide()
    '        lblMsg.Text = "Form deleted successfully"
    '        Response.Redirect("FormMaster.aspx")
    '    Else
    '        lblmessagedelete.Text = "Selected form cant be deleted "
    '    End If
    '    updPnlGrid.Update()
    'End Sub

    Protected Sub Lockhit()

    End Sub

    Protected Sub ddlFormSource_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlFormSource.SelectedIndexChanged
        Dim pgNm As String = ""
        txtEnblDft.Enabled = False
        chkEnableAddrow.Checked = False
        EnabledAddRow.Visible = False
        If ddlFormSource.SelectedItem.Text = "ACTION DRIVEN" Then
            txtEnblCRM.Enabled = True
            ddlEvent.Visible = True
            ddlSBE.Visible = True
            ddlStatus.Visible = True
            ddlDocNature.Visible = True
            chkIsDef.Visible = False
            chkdefblnk.Visible = False 'Shalini
            Chkisinline.Visible = False
            ad.Visible = True
            ShowExisting.Visible = True
            chkrole.Checked = False
            chkrole.Visible = False
        ElseIf ddlFormSource.SelectedItem.Text.ToUpper = "MENU DRIVEN" Or ddlFormSource.SelectedItem.Text.ToUpper = "PUBLICVIEW DRIVEN" Then
            ddlEvent.Visible = False
            txtEnblCRM.Enabled = False
            ddlSBE.Visible = False
            ddlStatus.Visible = False
            ddlDocNature.Visible = False
            If ddlFormType.SelectedItem.Text.ToUpper = "DOCUMENT" Then
                txtEnblDft.Enabled = True
                pgNm = "documents.aspx"
            Else
                pgNm = "master.aspx"
            End If
            lblnk.Text = "http://" & Session("code") & ".myndsaas.com/" & pgNm & "?SC=" & txtFormName.Text & ""
            chkIsDef.Visible = False
            chkdefblnk.Visible = False
            txtdefblnk.Text = ""
            txtdefblnk.Visible = False
            ad.Visible = False
            pnlchild.Visible = False
            ShowExisting.Visible = True
            chkrole.Checked = False
            chkrole.Visible = True
        ElseIf ddlFormSource.SelectedItem.Text.ToUpper = "DETAIL FORM " Then
            chkIsDef.Visible = True
            chkdefblnk.Visible = True 'Shalini
            chkdefblnk.Checked = False
            txtdefblnk.Visible = False
            ddlEvent.Visible = False
            ddlSBE.Visible = False
            ddlStatus.Visible = False
            txtEnblCRM.Enabled = False
            ddlDocNature.Visible = False
            Chkisinline.Visible = False
            ad.Visible = False
            pnlchild.Visible = False
            ShowExisting.Visible = False
            chkEnableAddrow.Checked = False
            EnabledAddRow.Visible = True
            chkrole.Checked = False
            chkrole.Visible = False
        End If
    End Sub

    Protected Sub BindSubEvent(ByVal En As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim DS As New DataSet
        If con.State = ConnectionState.Closed Then
            con.Open()
        End If
        ddlSBE.Items.Clear()
        ddlSBE.Items.Insert(0, "SELECT EVENT")
        da.SelectCommand.CommandText = "Select SubEvent,EVENTID from MMM_NOTIFICATION_EVENT WHERE EVENTNAME='" & En & "'"
        da.Fill(DS, "SUB")
        If DS.Tables("SUB").Rows.Count > 0 Then
            For J As Integer = 0 To DS.Tables("SUB").Rows.Count - 1
                ddlSBE.Items.Add(DS.Tables("SUB").Rows(J).Item(0))
                ddlSBE.Items(J).Value = DS.Tables("SUB").Rows(J).Item(1)
            Next
        Else
            ddlSBE.Items.Insert(1, New ListItem("APPROVAL", "APPROVAL"))
            ddlSBE.Items.Insert(2, New ListItem("RECONSIDER", "REJECTION"))
            ddlSBE.Items.Insert(3, New ListItem("REJECTION", "P_REJECTION"))
            ddlSBE.Items.Insert(4, New ListItem("CANCEL", "CANCEL"))
        End If
        con.Dispose()
    End Sub

    Protected Sub ddlEvent_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlEvent.SelectedIndexChanged
        'fill Product  
        ddlSBE.Items.Clear()
        'Bind Child Item for Action Driven form Added By Mayank 28-Mar-2015
        Try


            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)
            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim dt As New DataTable
            da.SelectCommand.CommandText = "select displayname,dropdown from mmm_mst_fields where DocumentType='" & ddlEvent.SelectedItem.Text.Trim() & "' and  FieldType='Child Item' and eid=" & Session("EID")
            da.Fill(dt)
            If (dt.Rows.Count > 0) Then
                pnlchild.Visible = True
                chkChild.DataSource = dt
                chkChild.DataTextField = "displayname"
                chkChild.DataValueField = "dropdown"
                chkChild.DataBind()
            Else
                pnlchild.Visible = False
                chkChild.Items.Clear()
                chkChild.DataBind()
            End If
        Catch ex As Exception

        End Try
        ''BIND SUB EVENT
        BindSubEvent(ddlEvent.SelectedValue)
        ''Bind Work Flow Status According to Selected Documenttype
        BindStatus(ddlEvent.SelectedItem.Text)
    End Sub

    Protected Sub BindStatus(ByVal documenttype As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        da.SelectCommand.CommandText = "select StatusName ,StatusName from MMM_MST_WORKFLOW_STATUS where EID=" & Session("EID") & "  and documenttype='" & documenttype & "' order by dord "
        da.Fill(ds, "STATUS")
        ddlStatus.Items.Clear()
        For I As Integer = 0 To ds.Tables("STATUS").Rows.Count - 1
            ddlStatus.Items.Add(ds.Tables("STATUS").Rows(I).Item(0))
            ddlStatus.Items(I).Value = ds.Tables("STATUS").Rows(I).Item(1)
        Next
        ddlStatus.Items.Insert(0, "SELECT ONE")
        ddlStatus.Items.Insert(1, "UPLOADED")
        ddlStatus.Items.Insert(ddlStatus.Items.Count, "ARCHIVE")
        da.Dispose()
        con.Dispose()
    End Sub
    Protected Sub BindEvent(ByVal En As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim DS As New DataSet
        If con.State = ConnectionState.Closed Then
            con.Open()
        End If
        ddlEvent.Items.Clear()
        da.SelectCommand.CommandText = "select DISTINCT FORMNAME,FORMID FROM MMM_MST_FORMS WHERE formtype='" & En & "' and FORMSOURCE='MENU DRIVEN'  and (EID=" & Session("EID") & " OR EID=0)"
        da.Fill(DS, "EVENT")
        If DS.Tables("EVENT").Rows.Count > 0 Then
            For J As Integer = 0 To DS.Tables("EVENT").Rows.Count - 1
                ddlEvent.Items.Add(DS.Tables("EVENT").Rows(J).Item(0))
                ddlEvent.Items(J).Value = DS.Tables("EVENT").Rows(J).Item(1)
            Next
        End If
        ddlEvent.Items.Insert(0, "SELECT DOCUMENT TYPE")
        con.Dispose()
    End Sub
    Protected Sub ddlFormType_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlFormType.SelectedIndexChanged
        BindEvent(ddlFormType.SelectedItem.Text)
        If (ddlFormType.SelectedItem.Text = "MASTER") Then

            test.Visible = True
            'Add Tally Sycnh by mayank 
            TallyRegistration.Visible = True
        Else
            TallyRegistration.Visible = False
            'Add Tally Sycnh by mayank 
            test.Visible = False
        End If
    End Sub
    Protected Sub Clear()
        txtFormCaption.Text = ""
        txtFormName.Text = ""
        txtFormDesc.Text = ""
        ddlFormType.SelectedIndex = 0
        ddlFormSource.SelectedIndex = 0
        ddlEvent.Items.Clear()
        ddlSBE.Items.Clear()
        ddlEvent.Visible = False
        ddlSBE.Visible = False
        ddlStatus.Visible = False
        ddlDocNature.Visible = False
        btnlogin.Text = "Save"
        txtFormName.Enabled = True
        txtAllowedUploadSize.Text = ""
        txtEnblDft.Enabled = False
        txtEnblCRM.Enabled = False                 'Shalini
        txtEnblCRM.Text = ""
        CheckBox2.Checked = False
        txtSyncTally.Text = ""
        UpdatePanel1.Update()

    End Sub

    Protected Sub ClearFields()
        ddlType.SelectedIndex = 0
        ModlPopupTxtBox.Hide()
        ModalPopUpTxtArea.Hide()
        ModalPopUpDropDown.Hide()
        ModalPopupListBox.Hide()
        ModalPopupChkListBoxSelect.Hide()
        ModalPopupFileUoloader.Hide()
        ModalPop_autoNumber.Hide()
        ModalPopupLookUp.Hide()
        ModalPopupDDlLookup.Hide()
        DFModalPopup.Hide()
        ModalPopupCHT.Hide()
        SRF_ModalPopup.Hide()
        PR_ModalPopup.Hide()
        CFModalPopup.Hide()
        MP_FormulaText.Hide()
        mdlpopup_signature.Hide()  'Shalini
        mdl_geo.Hide()  'Shalini
        mdl_geofence.Hide()  'Shalini
        mdl_childmax.Hide()
        ModalPop_newautoNumber.Hide()
        mdl_catchment.Hide()  'Shalini
        modalpopupMultiLookUP.Hide() ' added on 29th january
        mdl_chkbox.Hide() 'Mayank'Add for Check Box
        mod_CHLDST.Hide() 'Mayank'Add for Check Item Specific Text
        mod_Vairance.Hide() 'Mayank'Add for Variance
        modalpopup_ParentVal.Hide()
        Mod_mlddl.Hide() 'Mayank Added for MultiLookupDDL
        ModlPopupLTLOOKUP.Hide()
        ModlPopupSeperator.Hide()
    End Sub

    Protected Sub ddlLstMasterSelect_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlLstMasterSelect.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        If ddlListBoxValued.SelectedItem.Text = "MASTER VALUED" Then
            Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim ds As New DataSet
            DA.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ddlLstMasterSelect.SelectedItem.Text & "'"
            DA.Fill(ds, "FieldName")
            ddlLstBxField.Visible = True
            ddlLstBxField.Controls.Clear()
            If ds.Tables("FieldName").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                    ddlLstBxField.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                    ddlLstBxField.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                Next
                ddlLstBxField.Items.Insert(0, "SELECT FIELD")
            End If
            con.Close()
            DA.Dispose()

        ElseIf ddlListBoxValued.SelectedItem.Text = "SESSION VALUED" Then
            ddlLstBxField.Items.Clear()
            If ddlLstMasterSelect.SelectedItem.Text = "USER" Then
                ddlLstBxField.Items.Add("CURRENT USER")
                ddlLstBxField.Items(0).Value = "UID"

            ElseIf ddlLstMasterSelect.SelectedItem.Text = "LOCATION" Then
                ddlLstBxField.Items.Add("LOCATION")
                ddlLstBxField.Items(0).Value = "LID"
            End If
            ddlLstBxField.Items.Insert(0, "SELECT FIELD")
        End If
        updLstBox.Update()

    End Sub

    Protected Sub ddlListBoxValued_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlListBoxValued.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        If ddlListBoxValued.SelectedItem.Text = "FIX VALUED" Then
            ddlLstMasterSelect.Visible = False
            ddlLstBxField.Visible = False
            lblListBoxSelect.Visible = True
            txtListBoxValue.Visible = True
            lblListSelectMaster.Visible = False
        ElseIf ddlListBoxValued.SelectedItem.Text = "MASTER VALUED" Then
            ddlLstMasterSelect.Visible = True
            ddlLstBxField.Visible = True
            lblListBoxSelect.Visible = False
            txtListBoxValue.Visible = False
            lblListSelectMaster.Visible = True
            ddlLstMasterSelect.Items.Clear()
            ddlLstBxField.Items.Clear()
            Dim da As New SqlDataAdapter("select FormName,FormType   from MMM_MST_FORMS where EID=" & Session("EID") & " and FormSource ='MENU DRIVEN'", con)
            Dim ds As New DataSet
            da.Fill(ds, "Master")
            If ds.Tables("Master").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
                    ddlLstMasterSelect.Items.Add(ds.Tables("Master").Rows(i).Item("FormName").ToString())
                    ddlLstMasterSelect.Items(i).Value = ds.Tables("Master").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("Master").Rows(i).Item("Formname").ToString()
                Next
                ddlLstMasterSelect.Items.Insert(0, "Select Master")
            End If
            da.Dispose()
            ds.Dispose()

        ElseIf ddlListBoxValued.SelectedItem.Text = "SESSION VALUED" Then
            ddlLstMasterSelect.Visible = True
            ddlLstBxField.Visible = True
            txtListBoxValue.Visible = False
            lblListBoxSelect.Visible = False
            lblListSelectMaster.Visible = True
            ddlLstMasterSelect.Items.Clear()
            ddlLstBxField.Items.Clear()
            ddlLstMasterSelect.Items.Add("USER")
            ddlLstMasterSelect.Items(0).Value = "MMM_MST_USER"
            ddlLstMasterSelect.Items.Add("LOCATION")
            ddlLstMasterSelect.Items(1).Value = "MMM_MST_LOCATION"
            ddlLstMasterSelect.Items.Insert(0, "Select Master")
        End If
        updLstBox.Update()
    End Sub

    'Protected Sub ddlDropDownMasteValSelect_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlDropDownMasteValSelect.SelectedIndexChanged
    '    If ddlDropdownList.SelectedItem.Text = "MASTER VALUED" Then
    '        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
    '        Dim ds As New DataSet
    '        DA.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where (EID=" & Session("EID") & " OR EID=0) and documenttype='" & ddlDropDownMasteValSelect.SelectedItem.Text & "'"
    '        DA.Fill(ds, "FieldName")
    '        ddlDropDownFieldSelect.Visible = True
    '        ddlDropDownFieldSelect.Items.Clear()
    '        If ds.Tables("FieldName").Rows.Count > 0 Then
    '            For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
    '                ddlDropDownFieldSelect.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
    '                ddlDropDownFieldSelect.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
    '            Next
    '            ddlDropDownFieldSelect.Items.Insert(0, "SELECT FIELD")
    '        End If
    '    ElseIf ddlDropdownList.SelectedItem.Text = "SESSION VALUED" Then
    '        ddlDropDownFieldSelect.Items.Clear()
    '        If ddlDropDownMasteValSelect.SelectedItem.Text = "USER" Then
    '            ddlDropDownFieldSelect.Items.Add("CURRENT USER")
    '            ddlDropDownFieldSelect.Items(0).Value = "UID"
    '        ElseIf ddlDropDownMasteValSelect.SelectedItem.Text = "LOCATION" Then
    '            ddlDropDownFieldSelect.Items.Add("LOCATION")
    '            ddlDropDownFieldSelect.Items(0).Value = "LID"
    '        End If
    '        ddlDropDownFieldSelect.Items.Insert(0, "SELECT FIELD")
    '    Else
    '        ddlFLT.Items.Clear()
    '        ddlFLT.Visible = False
    '        lblfilteron.Visible = False
    '    End If

    '    updDropdownSelected.Update()
    'End Sub

    'Protected Sub ddlDropdownList_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlDropdownList.SelectedIndexChanged
    '    If ddlDropdownList.SelectedItem.Text = "FIX VALUED" Then
    '        ddlDropDownMasteValSelect.Visible = False
    '        ddlDropDownFieldSelect.Visible = False
    '        lblDdlvalue.Visible = True
    '        txtdropDownValued.Visible = True
    '        lblDdlSelectMaster.Visible = False

    '    End If
    '    If ddlDropdownList.SelectedItem.Text = "MASTER VALUED" Then
    '        ddlDropDownMasteValSelect.Visible = True
    '        ddlDropDownFieldSelect.Visible = True
    '        txtdropDownValued.Visible = False
    '        lblDdlvalue.Visible = False
    '        lblDdlSelectMaster.Visible = True
    '        ddlDropDownMasteValSelect.Items.Clear()
    '        ddlDropDownFieldSelect.Items.Clear()
    '        Dim da As New SqlDataAdapter("select FormName,case FormSource  when 'DETAIL FORM' THEN 'CHILD' ELSE FormType END [FORMTYPE] from MMM_MST_FORMS where EID=" & Session("EID") & " and (FormSource ='MENU DRIVEN' OR FormSource ='DETAIL FORM')", con)
    '        Dim ds As New DataSet
    '        da.Fill(ds, "Master")
    '        'ddlDropDownMasteValSelect.Items.Add("Select Master")
    '        If ds.Tables("Master").Rows.Count > 0 Then
    '            For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
    '                ddlDropDownMasteValSelect.Items.Add(ds.Tables("Master").Rows(i).Item("FormName").ToString())
    '                ddlDropDownMasteValSelect.Items(i).Value = ds.Tables("Master").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("Master").Rows(i).Item("Formname").ToString()
    '            Next
    '            'ddlDropDownMasteValSelect.Items.Add("Location")
    '            'ddlDropDownMasteValSelect.Items(ddlDropDownMasteValSelect.Items.Count - 1).Value = "STATIC-LOCATION"
    '            ddlDropDownMasteValSelect.Items.Insert(0, "Select Master")
    '        End If
    '        da.Dispose()
    '        ds.Dispose()
    '    ElseIf ddlDropdownList.SelectedItem.Text = "SESSION VALUED" Then
    '        ddlDropDownMasteValSelect.Visible = True
    '        ddlDropDownFieldSelect.Visible = True
    '        txtdropDownValued.Visible = False
    '        lblDdlvalue.Visible = False
    '        lblDdlSelectMaster.Visible = True
    '        ddlDropDownMasteValSelect.Items.Clear()
    '        ddlDropDownFieldSelect.Items.Clear()
    '        ddlDropDownMasteValSelect.Items.Add("USER")
    '        ddlDropDownMasteValSelect.Items(0).Value = "MMM_MST_USER"
    '        'ddlDropDownMasteValSelect.Items.Add("LOCATION")
    '        'ddlDropDownMasteValSelect.Items(1).Value = "MMM_MST_LOCATION"
    '        ddlDropDownMasteValSelect.Items.Insert(0, "Select Master")

    '    ElseIf ddlDropdownList.SelectedItem.Text = "CHILD" Then
    '        ddlDropDownMasteValSelect.Visible = True
    '        ddlDropDownFieldSelect.Visible = True
    '        txtdropDownValued.Visible = False
    '        lblDdlvalue.Visible = False
    '        lblDdlSelectMaster.Visible = True
    '        ddlDropDownMasteValSelect.Items.Clear()
    '        ddlDropDownFieldSelect.Items.Clear()
    '        Dim da As New SqlDataAdapter("select * from ", con)
    '        Dim ds As New DataSet
    '        da.Fill(ds, "CHILD")
    '        'ddlDropDownMasteValSelect.Items.Add("Select Master")
    '        If ds.Tables("Master").Rows.Count > 0 Then
    '            For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
    '                ddlDropDownMasteValSelect.Items.Add(ds.Tables("Master").Rows(i).Item("FormName").ToString())
    '                ddlDropDownMasteValSelect.Items(i).Value = ds.Tables("Master").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("Master").Rows(i).Item("Formname").ToString()
    '            Next
    '            ddlDropDownMasteValSelect.Items.Insert(0, "Select Master")
    '        End If
    '        da.Dispose()
    '        ds.Dispose()

    '    End If
    '    updDropdownSelected.Update()
    'End Sub

    Protected Sub ddlDropDownMasteValSelect_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlDropDownMasteValSelect.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        If ddlDropdownList.SelectedItem.Text = "MASTER VALUED" Then
            Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim ds As New DataSet
            DA.SelectCommand.CommandText = "select  displayName,FieldMapping,fieldid from MMM_MST_FIELDS where (EID=" & Session("EID") & " OR EID=0) and documenttype='" & ddlDropDownMasteValSelect.SelectedItem.Text & "'"
            DA.Fill(ds, "FieldName")
            ddlDropDownFieldSelect.Visible = True
            ddlDropDownFieldSelect.Items.Clear()
            ddlFltrMapping.Items.Clear()
            If ds.Tables("FieldName").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                    ddlDropDownFieldSelect.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                    ddlDropDownFieldSelect.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                    ddlFltrMapping.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                    ddlFltrMapping.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                Next
                ddlDropDownFieldSelect.Items.Insert(0, "SELECT FIELD")
                'For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                '    ddlFltrMapping.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                '    ddlFltrMapping.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                'Next
                ddlFltrMapping.Items.Insert(0, "SELECT FIELD")
            End If


            lblDdlSelectMaster.Visible = True
            ddlDropDownMasteValSelect.Visible = True
            ddlDropDownFieldSelect.Visible = True
            lblSelectField.Visible = True
            ddlFLT.Visible = True


        ElseIf ddlDropdownList.SelectedItem.Text = "SESSION VALUED" Then
            ddlDropDownFieldSelect.Items.Clear()
            If ddlDropDownMasteValSelect.SelectedItem.Text = "USER" Then
                ddlDropDownFieldSelect.Items.Add("CURRENT USER")
                ddlDropDownFieldSelect.Items(0).Value = "UID"
            ElseIf ddlDropDownMasteValSelect.SelectedItem.Text = "LOCATION" Then
                ddlDropDownFieldSelect.Items.Add("LOCATION")
                ddlDropDownFieldSelect.Items(0).Value = "LID"
            End If
            ddlDropDownFieldSelect.Items.Insert(0, "SELECT FIELD")

        ElseIf ddlDropdownList.SelectedItem.Text = "CHILD VALUED" Then
            'check here
            Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim ds As New DataSet
            Dim childName As String() = Split(ddlDropDownMasteValSelect.SelectedItem.Text, ":")
            If childName(0) = "Select Child" Then
                'ddlDropDownFieldSelect.Items.Insert(0, "SELECT FIELD")
            Else
                Dim arr As String() = Split(ddlDropDownMasteValSelect.SelectedItem.Value, ":")
                Dim arr1 As String() = Split(arr(0), "-")
                Dim arr2 As String() = Split(arr(1), "-")
                DA.SelectCommand.CommandText = "select  * from MMM_MST_FIELDS where (EID=" & Session("EID") & " OR EID=0) and fieldid='" & arr1(1) & "'"
                DA.SelectCommand.CommandType = CommandType.Text
                DA.Fill(ds, "childvalue")
                If ds.Tables("childvalue").Rows.Count > 0 Then
                    Dim arrChildStr As String() = Split(ds.Tables("childvalue").Rows(0).Item("dropdown").ToString(), "-")
                    ViewState("childItemfld") = arrChildStr(1)
                End If
                DA.SelectCommand.CommandText = "select * from MMM_MST_FIelds where eid=" & Session("EID") & " and documenttype='" & ViewState("childItemfld") & "' and fieldType='child item' and displayname='" & arr2(0) & "'"
                DA.SelectCommand.CommandType = CommandType.Text
                DA.Fill(ds, "childFormName")
                If ds.Tables("childFormName").Rows.Count > 0 Then
                    'original function
                    DA.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where (EID=" & Session("EID") & " OR EID=0) and documenttype='" & ds.Tables("childFormName").Rows(0).Item("dropdown").ToString() & "'"
                    DA.Fill(ds, "FieldName")
                    ddlDropDownFieldSelect.Visible = True
                    ddlDropDownFieldSelect.Items.Clear()
                    If ds.Tables("FieldName").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                            ddlDropDownFieldSelect.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                            ddlDropDownFieldSelect.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                        Next
                    End If
                    'end original function
                End If
                'DA.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where (EID=" & Session("EID") & " OR EID=0) and documenttype='" & childName(1) & "'"
                'DA.Fill(ds, "FieldName")
                'ddlDropDownFieldSelect.Visible = True
                'ddlDropDownFieldSelect.Items.Clear()
                'If ds.Tables("FieldName").Rows.Count > 0 Then
                '    For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                '        ddlDropDownFieldSelect.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                '        ddlDropDownFieldSelect.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                '    Next
                'End If


            End If
            ddlDropDownFieldSelect.Items.Insert(0, "SELECT FIELD")
        Else
            ddlFLT.Items.Clear()
            ddlFLT.Visible = False
            lblfilteron.Visible = False
        End If
        con.Dispose()
        updDropdownSelected.Update()
    End Sub

    Protected Sub ddlDropdownList_Load(sender As Object, e As EventArgs) Handles ddlDropdownList.Load

    End Sub




    Protected Sub ddlDropdownList_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlDropdownList.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        If ddlDropdownList.SelectedItem.Text <> "MASTER VALUED" Then
            ddlFltrMapping.Visible = False
            ddlFltrSource.Visible = False
            ddlFLT.Visible = False
            lblFldsource.Visible = False
            lblFltrDestination.Visible = False
            ddlFLT.Visible = False
            lblSelectField.Visible = False
            chkAutoCom.Visible = False
            lbldftvalfix.Visible = False      'shalini
            txtdftvalfix.Visible = False
            lbldfaultvalfld.Visible = False
            ddldfultvalfld.Visible = False
        End If
        If ddlDropdownList.SelectedItem.Text = "FIX VALUED" Then
            ddlDropDownMasteValSelect.Visible = False
            ddlDropDownFieldSelect.Visible = False
            lblDdlvalue.Visible = True
            txtdropDownValued.Visible = True
            lblDdlSelectMaster.Visible = False
            chkAutoCom.Visible = False
            lbldftvalfix.Visible = True      'shalini
            txtdftvalfix.Visible = True
            lbldfaultvalfld.Visible = False
            ddldfultvalfld.Visible = False
        ElseIf ddlDropdownList.SelectedItem.Text = "MASTER VALUED" Then
            lbldftvalfix.Visible = False      'shalini
            txtdftvalfix.Visible = False
            ddlFltrMapping.Visible = True
            ddlFltrSource.Visible = True
            chkAutoCom.Visible = True
            ddlDropDownMasteValSelect.Visible = True
            ddlDropDownFieldSelect.Visible = True
            txtdropDownValued.Visible = False
            lblDdlvalue.Visible = False
            lblDdlSelectMaster.Visible = True
            lbldfaultvalfld.Visible = True 'shalini
            ddldfultvalfld.Visible = True
            ddlDropDownMasteValSelect.Items.Clear()
            ddlDropDownFieldSelect.Items.Clear()
            '' sh
            lblSelectField.Visible = True
            lblFldsource.Visible = True
            lblFltrDestination.Visible = True
            '' sh
            Dim da As New SqlDataAdapter("select FormName,case FormSource  when 'DETAIL FORM' THEN 'CHILD' ELSE FormType END [FORMTYPE] from MMM_MST_FORMS where EID=" & Session("EID") & "  and (FormSource ='MENU DRIVEN')", con)
            Dim ds As New DataSet
            da.Fill(ds, "Master")
            'ddlDropDownMasteValSelect.Items.Add("Select Master")
            If ds.Tables("Master").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
                    ddlDropDownMasteValSelect.Items.Add(ds.Tables("Master").Rows(i).Item("FormName").ToString())
                    ddlDropDownMasteValSelect.Items(i).Value = ds.Tables("Master").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("Master").Rows(i).Item("Formname").ToString()
                Next
                'ddlDropDownMasteValSelect.Items.Add("Location")
                'ddlDropDownMasteValSelect.Items(ddlDropDownMasteValSelect.Items.Count - 1).Value = "STATIC-LOCATION"
                ddlDropDownMasteValSelect.Items.Insert(0, "Select Master")
            End If
            ' 
            da.SelectCommand.CommandText = "select  displayName,FieldMapping,fieldid from MMM_MST_FIELDS where (EID=" & Session("EID") & " OR EID=0) and documenttype='" & ViewState("FORMNAME") & "' and fieldtype='Text Box' "
            da.SelectCommand.CommandType = CommandType.Text
            da.Fill(ds, "FieldName")
            ddlDropDownFieldSelect.Visible = True
            ddlDropDownFieldSelect.Items.Clear()
            If ds.Tables("FieldName").Rows.Count > 0 Then
                ' adding on 17 feb balli
                For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                    ddlFltrSource.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                    ddlFltrSource.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(2)
                Next
            End If
            ddlFltrSource.Items.Insert(0, "SELECT FIELD")
            da.Dispose()
            ds.Dispose()
            con.Dispose()
        ElseIf ddlDropdownList.SelectedItem.Text = "SESSION VALUED" Then
            ddlDropDownMasteValSelect.Visible = True
            ddlDropDownFieldSelect.Visible = True
            txtdropDownValued.Visible = False
            lblDdlvalue.Visible = False
            chkAutoCom.Visible = False
            lblDdlSelectMaster.Visible = True
            ddlDropDownMasteValSelect.Items.Clear()
            ddlDropDownFieldSelect.Items.Clear()
            ddlDropDownMasteValSelect.Items.Add("USER")
            ddlDropDownMasteValSelect.Items(0).Value = "MMM_MST_USER"
            ddlDropDownMasteValSelect.Items.Insert(0, "Select Master")
        ElseIf ddlDropdownList.SelectedItem.Text = "CHILD VALUED" Then
            ddlDropDownMasteValSelect.Visible = True
            ddlDropDownFieldSelect.Visible = True
            txtdropDownValued.Visible = False
            lblDdlvalue.Visible = False
            chkAutoCom.Visible = False
            lblDdlSelectMaster.Visible = True
            ddlDropDownMasteValSelect.Items.Clear()
            ddlDropDownFieldSelect.Items.Clear()
            Dim da As New SqlDataAdapter("", con)
            '' check here
            da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where EID=" & Session("EID") & " and DocumentType=(select distinct documenttype from MMM_MST_Fields where dropdown='" & ViewState("FORMNAME") & "' and EID=" & Session("EID") & ") and FieldType='drop down'  and DROPDOWN LIKE 'DOCUMENT%'"
            da.SelectCommand.CommandType = CommandType.Text
            Dim ds As New DataSet
            da.Fill(ds, "Fname")
            Dim count As Integer = 0
            For k As Integer = 0 To ds.Tables("Fname").Rows.Count - 1
                Dim ddl As String() = Split(ds.Tables("Fname").Rows(k).Item("dropdown").ToString(), "-")
                da.SelectCommand.CommandText = "select fieldid,displayname,dropdown from MMM_MST_Fields where documenttype='" & ddl(1) & "' and fieldtype='Child Item' and eid='" & Session("EID") & "'"
                Dim dss As New DataSet
                da.Fill(dss, "childname")
                If dss.Tables("childname").Rows.Count > 0 Then
                    For j As Integer = 0 To dss.Tables("childname").Rows.Count - 1
                        ddlDropDownMasteValSelect.Items.Add(ds.Tables("Fname").Rows(k).Item("displayname").ToString() & ":" & dss.Tables("childname").Rows(j).Item("dropdown").ToString())
                        ddlDropDownMasteValSelect.Items(count).Value = "CHILD-" & ds.Tables("Fname").Rows(k).Item("fieldID").ToString() & ":" & dss.Tables("childname").Rows(j).Item("dropdown").ToString()
                        count = count + 1
                    Next
                End If
                dss.Dispose()
            Next
            ddlDropDownMasteValSelect.Items.Insert(0, "Select Child")
            da.Dispose()
            ds.Dispose()
        End If
        con.Dispose()
        updDropdownSelected.Update()
    End Sub

    Protected Sub EditRecord()
        'validation for null entry    'Shalini 
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim displayname As String = ""
        If ddlType.SelectedItem.Text = "Text Box" Then
            displayname = txtDisplayName.Text
        ElseIf ddlType.SelectedItem.Text = "Signature" Then
            displayname = txtdisplysign.Text
        ElseIf ddlType.SelectedItem.Text = "Geo Point" Then
            displayname = txtgeodisplay.Text
        ElseIf ddlType.SelectedItem.Text = "Geo Fence" Then    'Shalini
            displayname = txtdisplaynamefence.Text
        ElseIf ddlType.SelectedItem.Text = "Auto Number" Then
            displayname = txtAutoNumbrDisplay.Text
        ElseIf ddlType.SelectedItem.Text = "Formula Field" Then
            displayname = txtFormulaName.Text
        ElseIf ddlType.SelectedItem.Text = "Text Area" Then
            displayname = txtDispalyNameArea.Text
        ElseIf ddlType.SelectedItem.Text = "Drop Down" Then
            displayname = ddlDispalyName.Text
        ElseIf ddlType.SelectedItem.Text = "List Box" Then
            displayname = txtListBoxDisplayName.Text
        ElseIf ddlType.SelectedItem.Text = "CheckBox List" Then
            displayname = txtChkBoxList.Text
        ElseIf ddlType.SelectedItem.Text = "File Uploader" Then
            displayname = txtFUDiaplayName.Text
        ElseIf ddlType.SelectedItem.Text = "Lookup" Then
            displayname = txtLookUP.Text
        ElseIf ddlType.SelectedItem.Text = "LookupDDL" Then
            displayname = txtDDlLookUP.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "CHILD ITEM TOTAL" Then
            displayname = TXTCHT.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "CALCULATIVE FIELD" Then
            displayname = CF_txtdisplayname.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "CHILD ITEM" Then
            displayname = TextBox1.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "CHILD ITEM MAX" Then '''''Shalini
            displayname = TXTChilddisplay.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "SELF REFERENCE" Then
            displayname = SRF_txtdisplay.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "PARENT FIELD" Then
            displayname = prTxtName.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "NEW AUTO NUMBER" Then
            displayname = txtdisplynewauto.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "CATCHMENT" Then
            displayname = txtcatchmentdisplay.Text
        ElseIf UCase(ddlType.SelectedItem.Text) = "ADVANCE FORMULA" Then
            displayname = Trim(txtdisplaynameadvform.Text)
        ElseIf UCase(ddlType.SelectedItem.Text) = "MULTI LOOKUP" Then  'added on 29th Jan -Vinay
            displayname = Trim(txtdpML.Text)
        ElseIf UCase(ddlType.SelectedItem.Text) = "CHECK BOX" Then 'Add Check Box By Mayank
            displayname = Trim(txtchkboxDN.Text)
        ElseIf UCase(ddlType.SelectedItem.Text) = "CHILD ITEM SPECIFIC TEXT" Then 'Add Check Box By Mayank
            displayname = Trim(txtCHLDSTD.Text)
        ElseIf UCase(ddlType.SelectedItem.Text) = "VARIANCE" Then 'Add Variance By mayank 19-Feb-2015
            displayname = Trim(txtVariance_DisplayName.Text)
        ElseIf UCase(ddlType.SelectedItem.Text) = "Parent Value" Then 'Added for Parent Value Field0 By Pallavi 16-April-2015
            displayname = Trim(txtParentVal_DisplayNm.Text)
        ElseIf UCase(ddlType.SelectedItem.Text) = "MULTI LOOKUPDDL" Then
            displayname = Trim(txtmlddldn.Text)
        ElseIf UCase(ddlType.SelectedItem.Text) = "LT LOOKUP" Then
            displayname = Trim(txtLTLOOKUPDN.Text)
        ElseIf UCase(ddlType.SelectedItem.Text) = "SEPARATOR" Then
            displayname = Trim(txtSepDP.Text)
        End If

        Dim ChildAction As Integer = 0
        If (Not IsNothing(ViewState("CHILDACTION"))) Then
            If ViewState("CHILDACTION") <> String.Empty Then
                ChildAction = 1
            End If
        End If
        Dim daaa As New SqlDataAdapter("", con)
        If (ChildAction = 1) Then
            daaa.SelectCommand.CommandText = "Select displayname from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "' and displayName='" & displayname & "' "
        Else
            daaa.SelectCommand.CommandText = "Select displayname from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and displayName='" & displayname & "' "
        End If


        Dim dt1 As New DataTable
        daaa.Fill(dt1)
        If dt1.Rows.Count > 0 Then
            lblMsgEdit.Text = "Please Enter Unique Display Name"
            BindFielddataGrid()
            updatePanelEdit.Update()
            daaa.Dispose()
            dt1.Dispose()
            Exit Sub
        End If
        Dim dup As SqlDataAdapter = New SqlDataAdapter("select Distinct NAME FROM SYS.Columns where object_id in(1166627199,1253579504,37575172,126623494)", con)
        Dim dupt1 As New DataTable
        dup.Fill(dupt1)
        Dim RW() As DataRow = dupt1.Select("Name  ='" & displayname & "'")
        If RW.Count > 0 Then
            lblMsgEdit.Text = "This Display Name is Reserve For System"
            BindFielddataGrid()
            updatePanelEdit.Update()
            dup.Dispose()
            dupt1.Dispose()
            Exit Sub
        End If

        Dim lookupvaluetext As String = ""
        'Added By Mayank Chek Box for button text save
        If btnTxtBoxSave.Text = "SAVE" Or btnsignsave.Text = "SAVE" Or btncatchmentsave.Text = "SAVE" Or btngeosave.Text = "SAVE" Or
            btngeofencesave.Text = "SAVE" Or btnTxtArea.Text = "SAVE" Or btnddlSelect.Text = "SAVE" Or btnChkLstBoxSave.Text = "SAVE" Or
            btnchkBoxLstSave.Text = "SAVE" Or btnFUSave.Text = "SAVE" Or btnlookUpSave.Text = "SAVE" Or btnDDllookUpSave.Text = "SAVE" Or
            CF_Save.Text = "SAVE" Or btnDF1.Text = "SAVE" Or btnAutonumber.Text = "SAVE" Or BtnSRFSave.Text = "SAVE" Or BtnPR_Save.Text = "SAVE" Or
            btnFormulaSave.Text = "SAVE" Or btnsaveadvformula.Text = "SAVE" Or BtnSaveML.Text = "SAVE" Or btn_chkbox.Text = "SAVE" Or btnCHLDSTSAVE.Text = "SAVE" Or
  btnParentVal_Save.Text = "SAVE" Or btn_mlddlSU.Text = "SAVE" Or btnSaveLL.Text = "SAVE" Or btnSeparator.Text = "SAVE" Then

            Dim dropdowntype As String = ""
            Dim dropdown As String = ""
            Dim defaulval As String = ""
            Dim tblname As String = ""
            Dim datatype As String = "Text"
            Dim MinLen As Integer = 0
            Dim MaxLen As Integer = 0
            Dim lookupvalue As String = ""
            Dim lookupfield As String = ""
            Dim CF_Values As String = ""
            Dim cal_fields As String = ""

            Dim chkM As Integer = 0
            Dim chkA As Integer = 0
            Dim chkE As Integer = 0
            Dim chkW As Integer = 0
            Dim chkD As Integer = 0                 'Added By Komal on 04Jan2014
            Dim chkAC As Integer = 0
            Dim txtBoxDesc As String = String.Empty                'Added By Komal on 04Jan2014
            Dim chUnique As Integer = 0
            Dim fldid As String = ""
            Dim autofilter As String = ""
            Dim filteringtype As String = ""
            Dim REL As String = ""
            Dim defMasDisName As String = ""
            Dim CF_defMasDisName As String = ""
            Dim cf_text As String = ""
            Dim defval As String = ""
            Dim initialFilter As String = ""
            Dim advanceformula As String = ""
            Dim multilookUPfield As String = "" ' added on 29th Jan -Vinay
            Dim multilookUPValue As String = "" ' added on 29th Jan -Vinay
            Dim multilookUPCompositeForm As String = "" ' added on 29th Jan -Vinay
            Dim kc_value As String = "" 'Added By mayank for geo point 26-Feb-2015
            Dim ddlMultilookupval As String = ""
            Dim IflookupMVShowtext As Boolean = False  'Added by Pallavi on 1 May 15 for show text on lookup fields 
            Dim LTLOOKUPVAL As String = ""
            Dim SessionFieldVal As String = ""
            'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            'Dim con As SqlConnection = New SqlConnection(conStr)
            Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim ds As New DataSet
            Dim ans As String = ""

            Dim catchmentfield As String = ""
            Dim ReportName As String = ""

            If ddlType.SelectedItem.Text = "Text Box" Then
                If txtDisplayName.Text.Length < 2 Or ddltextBoxItem.SelectedItem.Text = "SELECT ONE" Then
                    lbltxtbox.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtDisplayName.Text
                    MinLen = Val(txtMinlength.Text)
                    MaxLen = Val(txtMaxL.Text)
                    txtBoxDesc = txtDescription.Text
                    defval = txtDefVal.Text
                    'Added By Komal on 04Jan2014
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If chkFldMandotry.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkActv.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkEditable.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkTextBoxWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If Chkunique.Checked = True Then
                        chUnique = 1
                    Else
                        chUnique = 0
                    End If
                    If ChkDesc.Checked = True Then                          'Added By Komal on 04Jan2013
                        chkD = 1
                    Else
                        chkD = 0
                    End If
                    If ddltextBoxItem.SelectedItem.Text = "Numeric" Then
                        datatype = "Numeric"
                    ElseIf ddltextBoxItem.SelectedItem.Text = "Text" Then
                        datatype = "Text"
                    ElseIf ddltextBoxItem.SelectedItem.Text = "Datetime" Then
                        datatype = "Datetime"
                    ElseIf ddltextBoxItem.SelectedItem.Text = "New Datetime" Then   'Shalini
                        datatype = "New Datetime"
                    ElseIf ddltextBoxItem.SelectedItem.Text = "Time" Then   'Shalini
                        datatype = "Time"
                    ElseIf ddltextBoxItem.SelectedItem.Text = "FY Start" Then   'Shalini
                        datatype = "FY Start"
                    ElseIf ddltextBoxItem.SelectedItem.Text = "FY End" Then   'Shalini
                        datatype = "FY End"
                    ElseIf ddltextBoxItem.SelectedItem.Text = "Scheduler" Then   'Shalini
                        datatype = "Scheduler"
                    End If

                End If

                '  ----------------------Shalini---------Signature-----
                'Added Separator field
            ElseIf ddlType.SelectedItem.Text = "Separator" Then
                If txtSepDP.Text.Length < 2 Or ddlBorderType.SelectedIndex = 0 Or txtColorPicker.Text.Length < 2 Then
                    lblSeparator.Text = "Please Enter Valid Field Name or Border Type Select or Select Color Picker"
                    Exit Sub
                Else
                    displayname = txtSepDP.Text
                    MinLen = 0
                    MaxLen = 0
                    txtBoxDesc = ""
                    defval = ""
                    'Added By Komal on 04Jan2014
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    dropdown = ddlBorderType.SelectedValue & ":" & ddlSEPVT.SelectedValue & "," & txtColorPicker.Text
                    chkM = 0
                    chkA = 0
                    chkE = 0
                    chkW = 0
                    chUnique = 0
                    chkD = 0

                End If
                '----------------------Mayank-------------Variance----19-Feb-2015-----Start here'
            ElseIf ddlType.SelectedItem.Text = "Variance" Then
                If txtVariance_DisplayName.Text.Length < 2 Or ddlSelectFileds.SelectedItem.Text = "SELECT" Then
                    lblMsgVariance.Text = "Please Enter Valid Field Name or Select Fields"
                    Exit Sub
                Else
                    displayname = txtVariance_DisplayName.Text
                    txtBoxDesc = txtVariance_Description.Text
                    dropdown = ddlSelectFileds.SelectedValue
                    'Added By Komal on 04Jan2014
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If ChkVarMan.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If ChkVarAct.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If ChkVarEdit.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If ChkVarWf.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If ChkVarUQ.Checked = True Then
                        chUnique = 1
                    Else
                        chUnique = 0
                    End If

                End If
                '----------------------Mayank-------------Variance----19-Feb-2015-----End here'
            ElseIf ddlType.SelectedItem.Text = "Parent Value" Then ' For Parent Value Pallavi
                If txtParentVal_DisplayNm.Text.Length = 0 Then
                    lbl_ParentVal.Text = "Please Enter Valid Field Name or Select Fields"
                    Exit Sub
                ElseIf (ddlParentVal_Parentdoc.SelectedIndex = 0) Then
                    lbl_ParentVal.Text = "Please select a Parent Document"
                    Exit Sub
                ElseIf (ddlParentVal_ParentFields.SelectedIndex = 0) Then
                    lbl_ParentVal.Text = "Please select a Parent Field"
                    Exit Sub
                Else
                    displayname = txtParentVal_DisplayNm.Text
                    dropdown = ddlParentVal_ParentFields.SelectedValue
                    tblname = "MMM_MST_DOC"

                    If chkPV_Man.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkPV_Active.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkPV_Editable.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkPV_WrkFlow.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If chkPV_Unique.Checked = True Then
                        chUnique = 1
                    Else
                        chUnique = 0
                    End If
                    If chkPV_Desc.Checked = True Then
                        chkD = 1
                    Else
                        chkD = 0
                    End If

                    datatype = "Text"

                End If





            ElseIf ddlType.SelectedItem.Text = "Signature" Then
                If txtdisplysign.Text.Length < 2 Or ddldatatypesign.SelectedItem.Text = "SELECT ONE" Then
                    lblsign.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtdisplysign.Text
                    MinLen = Val(txtfieldsignmin.Text)
                    MaxLen = Val(txtfieldsignmax.Text)
                    txtBoxDesc = txtdescsign.Text
                    defval = txtDefValsign.Text
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If chkfieldsignman.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkfieldsignact.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkfieldsignedit.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkfieldsignwf.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If chkfieldsignuniq.Checked = True Then
                        chUnique = 1
                    Else
                        chUnique = 0
                    End If
                    If ChkDesc.Checked = True Then
                        chkD = 1
                    Else
                        chkD = 0
                    End If
                    If ddldatatypesign.SelectedItem.Text = "Numeric" Then
                        datatype = "Text"
                    ElseIf ddldatatypesign.SelectedItem.Text = "Datetime" Then
                        datatype = "Text"

                    End If

                End If

                '---------------------------- Signature-------------------------------------------

                '  ----------------------Shalini---------Geo Point-----

            ElseIf ddlType.SelectedItem.Text = "Geo Point" Then
                If txtgeodisplay.Text.Length < 2 Or ddltypegeo.SelectedItem.Text = "SELECT ONE" Or ddlgeo.SelectedItem.Text = "SELECT ONE" Then
                    lblgeo.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else

                    displayname = txtgeodisplay.Text
                    MinLen = Val(txtfgeomin.Text)
                    MaxLen = Val(txtfgeomax.Text)
                    txtBoxDesc = txtgeodes.Text
                    defval = txtdefgeo.Text

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If chkgeoman.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkgeoact.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkgeoedit.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkgeoWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If chkgeouni.Checked = True Then
                        chUnique = 1
                    Else
                        chUnique = 0
                    End If
                    If chkgeodes.Checked = True Then
                        chkD = 1
                    Else
                        chkD = 0
                    End If
                    If ddltypegeo.SelectedItem.Text = "Numeric" Then
                        datatype = "Text"
                    ElseIf ddltypegeo.SelectedItem.Text = "Datetime" Then
                        datatype = "Text"
                    End If


                    For i As Integer = 0 To ChkMapList.Items.Count - 1
                        If ChkMapList.Items(i).Selected = True Then
                            kc_value = kc_value & ChkMapList.Items(i).Value + ","
                        End If
                    Next
                    If (kc_value.ToString() <> "") Then
                        kc_value = kc_value.Substring(0, kc_value.Length - 1)
                    End If


                    If ddlgeo.SelectedItem.Text = "Auto" Then
                        If chkautolist.Visible = True Then
                            For i As Integer = 0 To chkautolist.Items.Count - 1
                                If chkautolist.Items(i).Selected = True Then
                                    ans = ans & chkautolist.Items(i).Value + ","
                                End If
                            Next
                            If (ans.ToString() <> "") Then
                                ans = ans.Substring(0, ans.Length - 1)
                            End If
                        End If
                        If (ans.Length = 0) Then
                            lblgeo.Text = "Please select at least one field from Geo Point Source"
                            Exit Sub
                        End If
                    End If
                End If

                '---------------------------- Geo Point-------------------------------------------



                '  ----------------------Shalini---------Catchment-----

            ElseIf ddlType.SelectedItem.Text = "Catchment" Then
                If txtcatchmentdisplay.Text.Length < 2 Or ddltypecatchment.SelectedItem.Text = "SELECT ONE" Then
                    lblcatchment.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtcatchmentdisplay.Text
                    MinLen = Val(txtfcatchmentmin.Text)
                    MaxLen = Val(txtfcatchmentmax.Text)
                    txtBoxDesc = txtcatchmentdes.Text
                    defval = txtdefcatchment.Text
                    If (ddlcatchmentgeopointfield.SelectedValue = "SELECT") Then
                        lblcatchment.Text = "Geo Point field not found in current Form!"
                        Exit Sub
                    End If
                    If (ddlcatchmentgeofencefield.SelectedValue = "SELECT") Then
                        lblcatchment.Text = "Geo Fence field not found in selected Form!"
                        Exit Sub
                    End If
                    catchmentfield = ddlcatchmentgeopointfield.SelectedValue & ":" & ddlcatchmentdisplayfield.SelectedItem.Text & ":" & ddlcatchmentgeofencefield.SelectedValue

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If chkcatchmentman.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkcatchmentact.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkcatchmentedit.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkcatchmentWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If chkcatchmentuni.Checked = True Then
                        chUnique = 1
                    Else
                        chUnique = 0
                    End If
                    If chkcatchmentdes.Checked = True Then
                        chkD = 1
                    Else
                        chkD = 0
                    End If
                    If ddltypegeo.SelectedItem.Text = "Numeric" Then
                        datatype = "Text"
                    ElseIf ddltypegeo.SelectedItem.Text = "Datetime" Then
                        datatype = "Text"
                    End If
                End If
                '---------------------------- Catchment-------------------------------------------

                '  ----------------------Shalini---------Geo Fence-----

            ElseIf ddlType.SelectedItem.Text = "Geo Fence" Then
                If ddlgeotype.SelectedIndex = 0 Then
                    lblfencegeo.Text = "Please select Valid GeoFence Type"
                    Exit Sub
                End If

                If txtdisplaynamefence.Text.Length < 2 Or ddldatatypegeofence.SelectedItem.Text = "SELECT ONE" Then
                    lblfencegeo.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtdisplaynamefence.Text
                    MinLen = Val(txtminfence.Text)
                    MaxLen = Val(txtmaxfence.Text)
                    txtBoxDesc = txtdesnamefence.Text
                    defval = txtdefaultfence.Text

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If chkmanfence.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkactfence.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkeditfence.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkflowfence.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If chkunifence.Checked = True Then
                        chUnique = 1
                    Else
                        chUnique = 0
                    End If
                    If chkdescfence.Checked = True Then
                        chkD = 1
                    Else
                        chkD = 0
                    End If
                End If

                '---------------------------- Geo Fence-------------------------------------------

            ElseIf ddlType.SelectedItem.Text = "Auto Number" Then
                If txtAutoNumbrDisplay.Text.Length < 2 Then
                    lblautonumber.Text = "Please Enter Valid Field "
                    Exit Sub
                Else
                    If IsNumeric(txtSeriesNumber.Text) Then
                        displayname = txtAutoNumbrDisplay.Text
                        dropdown = txtPrefix.Text
                        MaxLen = Val(txtSeriesNumber.Text)
                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If

                        If autoChkMan.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If autoChkActive.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                    Else
                        lblautonumber.Text = "Please Enter Integer Field in Series number "
                        Exit Sub
                    End If
                End If
                'Change Funcitonality By Mayank
            ElseIf ddlType.SelectedItem.Text = "New Auto Number" Then
                If txtdisplynewauto.Text.Length < 2 Or ddlAutoFieldName.SelectedItem.Text.ToUpper() = "SELECT" Or ddlfieldss.SelectedItem.Text.ToUpper() = "SELECT" Then
                    lblnewautonumber.Text = "Please Enter Valid Field or Select Fields "
                    Exit Sub
                Else
                    If IsNumeric(txtnewSeriesNumber.Text) Then
                        displayname = txtdisplynewauto.Text
                        dropdown = ddlfieldss.SelectedValue

                        REL = ddlAutoFieldName.SelectedValue
                        MaxLen = Val(txtnewSeriesNumber.Text)
                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If
                        If chkmannewauto.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkactnewauto.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                    Else
                        lblnewautonumber.Text = "Please Enter Integer Field in Series number "
                        Exit Sub
                    End If
                End If

                'code below is form advance formula
            ElseIf ddlType.SelectedItem.Text = "Advance Formula" Then
                If txtdisplaynameadvform.Text.Length < 2 Or Trim(txtdisplaynameadvform.Text) = "" Then
                    lblmsgadvanceformula.Text = "Please Enter Valid Field "
                    Exit Sub
                End If
                If chkadvformactive.Checked = True Then
                    chkA = 1
                Else
                    chkA = 0
                End If
                displayname = Trim(txtdisplaynameadvform.Text.ToString())
                txtBoxDesc = txtdescadvform.Text.Trim()
                advanceformula = txtcontionadvform.Text.Trim()

                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                Else
                    tblname = "MMM_MST_DOC"
                End If

                'end of code


            ElseIf ddlType.SelectedItem.Text = "Formula Field" Then
                If txtFormulaName.Text.Length < 2 Then
                    lblFromula.Text = "Please Enter Valid Field formula name "
                    Exit Sub
                Else
                    displayname = txtFormulaName.Text
                    REL = txtFormulaText.Text
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If

                    If chkformulaActive.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkformulaRunable.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If

                    If ddldatatypeformula.SelectedItem.Text = "Numeric" Then
                        datatype = "Numeric"
                    ElseIf ddldatatypeformula.SelectedItem.Text = "Datetime" Then
                        datatype = "Datetime"
                    ElseIf ddldatatypeformula.SelectedItem.Text = "Text" Then   'Shalini
                        datatype = "Text"
                    End If

                End If
                'Checking for Mobile App
                Dim chkvalue As String() = {"ROUND", "IF", "MAX", "MIN", "CONCATENATE"}
                If Not txtFormulaTextMob.Text.ToUpper().Contains(chkvalue.ToString()) Then
                    'Dim operators1 As String() = {"+", "-", "*", "/", "%"}  ' for cheking mathmetical operator 
                    Dim formula As String = txtFormulaTextMob.Text.ToUpper()
                    formula = formula.ToString().Replace("{", "").Replace("}", "")
                    Dim test As String = ""
                    'If (formula.ToString().Contains("(") And formula.ToString().Contains(")")) Then
                    '    Dim obsplit As String()
                    '    If (formula.ToString().StartsWith("(")) Then
                    '        obsplit = formula.Split("(")
                    '        For u As Integer = 0 To obsplit.Length - 1
                    '            If (obsplit(u).ToString().Contains(")")) Then
                    '                Dim rightsplit As String() = obsplit(u).ToString().Split(")")
                    '                For k As Integer = 0 To rightsplit.Length - 1
                    '                    If rightsplit(k).ToString() <> String.Empty Then
                    '                        test = "(" & test.ToString().Replace("+", "}+{").Replace("-", "}-{").Replace("*", "}*{").Replace("/", "}/{").Replace("%", "}%{") & ")"
                    '                    End If
                    '                Next
                    '                formula = "(" & obsplit(u).ToString().Replace("+", "}+{").Replace("-", "}-{").Replace("*", "}*{").Replace("/", "}/{").Replace("%", "}%{")
                    '            End If
                    '        Next
                    '    Else

                    '    End If


                    'Else
                    '    formula = formula.ToString().Replace("(", "").Replace(")", "")
                    '    formula = formula.ToString().Replace("+", "}+{").Replace("-", "}-{").Replace("*", "}*{").Replace("/", "}/{").Replace("%", "}%{")
                    'End If

                    formula = formula.ToString().Replace("+", "}+{").Replace("-", "}-{").Replace("*", "}*{").Replace("/", "}/{").Replace("%", "}%{")
                    formula = Form.ToString().Replace("(((", "((({")
                    kc_value = "{" & displayname & "}=" & txtFormulaTextMob.Text
                    'Dim sb As New StringBuilder
                    'For i As Integer = 0 To operators1.Length - 1
                    '    If (formula.ToString().Contains("(") And formula.ToString().Contains(")")) Then
                    '        If (formula.ToString().StartsWith("(")) Then
                    '            sb.Append("(")
                    '            Dim obsplit As String() = formula.Split("(")
                    '            For u As Integer = 0 To obsplit.Length - 1

                    '            Next
                    '        End If

                    '    Else

                    '    End If

                    '    txtFormulaText.Text = Replace(txtFormulaText.Text, operators1(i), "")
                    'Next
                End If
                Dim operators As String() = {"+", "-", "*", "/", "%"}  ' for cheking mathmetical operator 
                For i As Integer = 0 To operators.Length - 1
                    txtFormulaText.Text = Replace(txtFormulaText.Text, operators(i), "")
                Next
                Dim str1 As String() = Split(txtFormulaText.Text, "}")
                For i As Integer = 0 To str1.Length - 2
                    str1(i) = Replace(str1(i), "{", "")
                Next
                oda.SelectCommand.CommandText = "select fieldID,displayname from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & ViewState("FORMNAME") & "' "
                oda.SelectCommand.CommandType = CommandType.Text
                oda.Fill(ds, "searchField")
                Dim flag As Integer = 0
                If ds.Tables("searchField").Rows.Count > 0 Then  ' for checking formula variables is correct or not 
                    For i As Integer = 0 To str1.Length - 2
                        For k As Integer = 0 To ds.Tables("searchField").Rows.Count - 1
                            If str1(i) = ds.Tables("searchField").Rows(k).Item("displayname").ToString() Then
                                cal_fields = cal_fields & ds.Tables("searchField").Rows(k).Item("fieldID") & ","
                                flag = flag + 1
                            End If
                        Next
                    Next
                End If
            ElseIf ddlType.SelectedItem.Text = "Text Area" Then
                If txtDispalyNameArea.Text.Length < 2 Or ddlDataTypesArea.SelectedItem.Text = "SELECT ONE" Then
                    lbltxtArea.Text = "Please Enter Valid Field "
                    Exit Sub
                Else
                    displayname = txtDispalyNameArea.Text
                    MinLen = Val(txtareaMinLength.Text)
                    MaxLen = Val(txtareaMaxLength.Text)
                    defval = txtAreaDefVal.Text
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If

                    If chktxtAreaMandatory.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If chktxtAreaActive.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chktxtAreaEditable.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkTxtAreaWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If ddlDataTypesArea.SelectedItem.Text = "Numeric" Then
                        datatype = "Numeric"
                    ElseIf ddlDataTypesArea.SelectedItem.Text = "Datetime" Then
                        datatype = "Datetime"
                    End If
                End If

            ElseIf ddlType.SelectedItem.Text = "Drop Down" Then
                If ddlDispalyName.Text.Length < 2 Or ddlDropdownList.SelectedItem.Text = "SELECT ONE" Then
                    lbldropdown.Text = "Please Enter Valid Field Name or Select dependent master"
                    Exit Sub
                Else
                    displayname = ddlDispalyName.Text
                    dropdowntype = ddlDropdownList.SelectedItem.Text
                    If ddldependent.SelectedIndex <> 0 And ddlSessionFieldVal.SelectedIndex <> 0 Then
                        SessionFieldVal = IIf(ddlSessionFieldVal.SelectedIndex = 0, "", ddlSessionFieldVal.SelectedValue) & "-" & ddlDropDownMasteValSelect.SelectedItem.Text.Trim() & "-" & IIf(ddldependent.SelectedIndex = 0, "", ddldependent.SelectedValue)
                    ElseIf ddlSessionFieldVal.SelectedIndex <> 0 Then
                        SessionFieldVal = ddlSessionFieldVal.SelectedValue
                    Else
                        SessionFieldVal = ""
                    End If

                    If UCase(dropdowntype) = "FIX VALUED" Then
                        If txtdropDownValued.Text = "" Then
                        Else
                            dropdown = txtdropDownValued.Text
                            tblname = "MMM_MST_DOC"
                        End If
                        If txtdropDownValued.Text.ToString().ToUpper().Trim().Contains(txtdftvalfix.Text.ToString().ToUpper().Trim()) = True Then
                            defaulval = txtdftvalfix.Text.ToString().Trim()
                        End If
                    ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                        tblname = "MMM_MST_MASTER"
                        If ddlDropDownFieldSelect.SelectedIndex = 0 Or ddlDropDownFieldSelect.SelectedIndex = -1 Then
                            lbldropdown.Text = "Please Select master valued field"
                            Exit Sub
                        End If
                        dropdown = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
                        Dim dev As String = ddldfultvalfld.SelectedItem.Text.ToString()
                        If ddldfultvalfld.SelectedItem.Text <> "SELECT" Then
                            defaulval = ddldfultvalfld.SelectedValue
                        Else
                            defaulval = ""
                        End If
                        If ddlDropDownMasteValSelect.SelectedItem.Text.ToUpper = "USER" Then
                            tblname = "MMM_MST_USER"
                            dropdown = "STATIC-USER" & "-" & ddlDropDownFieldSelect.SelectedValue
                        Else
                            tblname = "MMM_MST_MASTER"
                            dropdown = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
                        End If
                        ' for initial filter
                        If ddlFltrSource.SelectedItem.Text.ToUpper <> "SELECT FIELD" And ddlFltrMapping.SelectedItem.Text.ToUpper <> "SELECT FIELD" Then
                            If IsNothing(ddlFltrSource.SelectedItem.Text) = False Then
                                initialFilter = ddlFltrSource.SelectedItem.Value & ":" & ddlFltrMapping.SelectedItem.Value
                            End If

                        End If

                        'fldid = getAutolookup(ViewState("FORMNAME"), ddlDropDownMasteValSelect.SelectedItem.Text)
                        'Dim fld() As String = fldid.Split(",")
                        'If fld.Length > 1 Then
                        '    fldid = fld(0).ToString()
                        '    autofilter = fld(1).ToString()
                        'End If
                        If ddlFLT.SelectedItem.Text.ToUpper <> "SELECT ONE" Then
                            Dim FLD() As String = ddlFLT.SelectedValue.ToString.Split("-")
                            If FLD.Length > 1 Then
                                fldid = FLD(0)
                                autofilter = FLD(1)
                                filteringtype = FLD(2).ToString()
                            End If
                        End If
                    ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                        tblname = ddlDropDownMasteValSelect.SelectedValue
                        dropdown = "SESSION-" & ddlDropDownMasteValSelect.SelectedItem.Text & "-" & ddlDropDownFieldSelect.SelectedValue
                    ElseIf UCase(dropdowntype) = "CHILD VALUED" Then
                        tblname = "MMM_MST_DOC"
                        dropdown = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
                    End If

                    If chkDdlMan.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkDlActive.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkDdlEditable.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkDdlWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If chkAutoCom.Checked = True Then
                        chkAC = 1
                    Else
                        chkAC = 0
                    End If

                End If
                'Added By Mayank Chek Box
            ElseIf UCase(ddlType.SelectedItem.Text) = "CHECK BOX" Then
                displayname = txtchkboxDN.Text
                dropdown = txtchkboxDT.Text
                txtBoxDesc = txtchkboxDS.Text
                If txtchkboxDN.Text.Length < 2 Or txtchkboxDT.Text.Length < 2 Then
                    lblChkboxmsg.Text = "Please enter the display name Corrrectly "
                    Upchkbox.Update()
                    Exit Sub
                End If
                If ChkboxMan.Checked Then
                    chkM = 1
                Else
                    chkM = 0
                End If
                If ChkboxAct.Checked Then
                    chkA = 1
                Else
                    chkA = 0
                End If
                If ChkboxEdit.Checked Then
                    chkE = 1
                Else
                    chkE = 0
                End If
                If chkboxwf.Checked Then
                    chkW = 1
                Else
                    chkW = 0
                End If
                'Added By Mayank Chek Box

            ElseIf ddlType.SelectedItem.Text = "List Box" Then
                If txtListBoxDisplayName.Text.Length < 2 Or ddlListBoxValued.SelectedItem.Text = "SELECT ONE" Then
                    lblListBox.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtListBoxDisplayName.Text
                    dropdowntype = ddlListBoxValued.SelectedItem.Text
                    If UCase(dropdowntype) = "FIX VALUED" Then
                        If txtListBoxValue.Text = "" Then
                        Else
                            dropdown = txtListBoxValue.Text
                            tblname = "MMM_MST_DOC"
                        End If
                    ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                        tblname = "MMM_MST_MASTER"
                        dropdown = ddlLstMasterSelect.SelectedValue & "-" & ddlLstBxField.SelectedValue

                    ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                        tblname = ddlLstMasterSelect.SelectedValue
                        dropdown = "SESSION-" & ddlLstMasterSelect.SelectedItem.Text & "-" & ddlLstBxField.SelectedValue
                    End If
                    If chklstBoxMan.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkLstBoxActive.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkLstBoxEditable.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkLstBoxWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                End If

            ElseIf ddlType.SelectedItem.Text = "CheckBox List" Then
                If txtChkBoxList.Text.Length < 2 Or ddlChkListBox.SelectedItem.Text = "SELECT ONE" Then
                    lblChkBoxlst.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtChkBoxList.Text
                    dropdowntype = ddlChkListBox.SelectedItem.Text
                    If UCase(dropdowntype) = "FIX VALUED" Then
                        If txtChkListBox.Text = "" Then
                        Else
                            dropdown = txtChkListBox.Text
                            tblname = "MMM_MST_DOC"
                        End If
                    ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                        tblname = "MMM_MST_MASTER"
                        dropdown = ddlChkMasterSelect.SelectedValue & "-" & ddlChkfieldVal.SelectedValue
                    End If
                    If chklstMandatory.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If ChklistBoxActive.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chklistBoxEditable.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkListBoxWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                End If

            ElseIf ddlType.SelectedItem.Text = "File Uploader" Then
                If txtFUDiaplayName.Text.Length < 2 Or ddlFUDataTypes.SelectedItem.Text = "SELECT ONE" Then
                    lblfileuploader.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtFUDiaplayName.Text
                    MinLen = Val(txtFUMinL.Text)
                    MaxLen = Val(txtFUMaxL.Text)
                    If ddlFUDataTypes.SelectedIndex = 1 Then
                        If (txtDPFU.Text.Length > 1) Then
                            dropdown = txtDPFU.Text
                        Else
                            lblfileuploader.Text = "Please Select at least one field from list"
                            Exit Sub
                        End If

                    Else
                        dropdown = ""
                    End If
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If

                    If chkFUMandaotry.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If chkFUActive.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkFUEditable.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkFUWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If ddlFUDataTypes.SelectedItem.Text = "Image" Then
                        datatype = "Image"
                    ElseIf ddlFUDataTypes.SelectedItem.Text = "File" Then
                        datatype = "File"
                    End If
                End If

                'code below is for MulitLOOKUP
            ElseIf ddlType.SelectedItem.Text = "Multi LookUP" Then
                If txtdpML.Text.Length < 2 Or Trim(txtdpML.Text) = "" Then
                    lbldispmsgML.Text = "Please Enter Valid Field "
                    Exit Sub
                End If

                displayname = Trim(txtdpML.Text.ToString())
                txtBoxDesc = txtdescML.Text.Trim()
                datatype = ddlftypeML.SelectedItem.Text

                multilookUPfield = ddlfieldsMLC.SelectedValue.ToString()
                Dim contli As Integer = 0
                For Each li As ListItem In chklistMultiLookup.Items
                    If li.Selected Then
                        multilookUPValue = multilookUPValue & li.Value & ","
                        contli = contli + 1
                    End If
                Next

                If contli < 2 Then
                    lbldispmsgML.Text = "Please Select more than one field to apply Multi Look UP "
                    Exit Sub
                End If
                If ddlmlddlcf.SelectedIndex = 0 Or ddlmlddlf.SelectedIndex = 0 Or ddlfieldsMLC.SelectedIndex = 0 Then
                    lbldispmsgML.Text = "Please Select Mandatory Fields."
                    Exit Sub
                End If
                If multilookUPValue.Length > 1 Then
                    multilookUPValue = multilookUPValue.Remove(multilookUPValue.Length - 1)
                End If
                dropdown = multilookUPValue.ToString()
                MinLen = 0
                MaxLen = 100
                multilookUPCompositeForm = Trim(ddlcompositeForm.SelectedItem.Text).ToString()

                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                Else
                    tblname = "MMM_MST_DOC"
                End If



                If chkFieldMandML.Checked = True Then ' is mandatory checkbox
                    chkM = 1
                Else
                    chkM = 0
                End If
                If chkFieldActdML.Checked = True Then ' is active checkbox
                    chkA = 1
                Else
                    chkA = 0
                End If
                If chkFieldEditdML.Checked = True Then ' is edit checkbox
                    chkE = 1
                Else
                    chkE = 0
                End If
                If chkFieldWFdML.Checked = True Then  ''workflow checkbox
                    chkW = 1
                Else
                    chkW = 0
                End If

                'end of code

                'Chnages for LT Lookup 

            ElseIf ddlType.SelectedItem.Text = "LT Lookup" Then

                If txtLTLOOKUPDN.Text.Length < 2 Or ddlLLSF.SelectedIndex = 0 Then
                    Label21.Text = "Please Enter Valid Field Name or Select Fields"
                    Exit Sub
                ElseIf ddlLLTS.SelectedIndex = 0 Then
                    Label21.Text = "Please Select Target Doc"
                    Exit Sub
                Else
                    If ddlLLTFS.SelectedIndex = 0 Then
                        If ddlLLTFLDS.SelectedIndex = 0 Then
                            Label21.Text = "Please Select Target fields"
                            Exit Sub
                        ElseIf ddlLLMF.SelectedIndex = 0 Then
                            Label21.Text = "Please Select Mapping Fields"
                            Exit Sub
                        End If
                    Else
                        If ddlLLCTD.SelectedIndex = 0 Then
                            Label21.Text = "Please Select Target Child Doc"
                            Exit Sub
                        ElseIf ddlLLTCRF.SelectedIndex = 0 Then
                            Label21.Text = "Please Select  Target Child Fields"
                            Exit Sub
                        ElseIf ddlLLMF.SelectedIndex = 0 Then
                            Label21.Text = "Please Select Mapping Fields"
                            Exit Sub

                        End If
                    End If

                    displayname = txtLTLOOKUPDN.Text
                    txtBoxDesc = txtLTLOOKUPDS.Text
                    If ddlLLTFS.SelectedIndex = 0 Then
                        LTLOOKUPVAL = ddlLLSC.SelectedValue.Trim() & "-" & ddlLLTFS.SelectedValue.Trim() & ":" & ddlLLSF.SelectedValue.Trim() & "-" & ddlLLTS.SelectedItem.Text.Trim() & "-" & ddlLLTFLDS.SelectedValue.Trim() & "-" & ddlLLMF.SelectedValue.Trim()
                    Else
                        LTLOOKUPVAL = ddlLLSC.SelectedValue.Trim() & "-" & ddlLLTFS.SelectedValue.Trim() & ":" & ddlLLSF.SelectedValue.Trim() & "-" & ddlLLTS.SelectedItem.Text.Trim() & "|" & ddlLLCTD.SelectedItem.Text.Trim() & "-" & ddlLLTCRF.SelectedValue.Trim() & "-" & ddlLLMF.SelectedValue.Trim()
                    End If
                    Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                    If con.State = ConnectionState.Closed Then
                        con.Open()
                    End If
                    da.SelectCommand.CommandText = "select fieldid from mmm_mst_fields where documenttype='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & " and fieldMapping in('" & ddlLLSF.SelectedValue & "')"
                    dropdown = Convert.ToString(da.SelectCommand.ExecuteScalar())

                    'Added By Komal on 04Jan2014
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If ChkLLM.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If ChkLLA.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If ChkLLE.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If ChkLLW.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    If ChkLLW.Checked = True Then
                        chUnique = 1
                    Else
                        chUnique = 0
                    End If
                End If
            ElseIf ddlType.SelectedItem.Text = "Lookup" Then
                If txtLookUP.Text.Length < 2 Then
                    lblLookUP.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtLookUP.Text
                    datatype = ddlLUdatatypes.SelectedItem.Text
                    lookupfield = ddlLookUpMasterField.SelectedItem.Text
                    dropdown = ddlLookUpMasterField.SelectedValue
                    lookupvalue = ddlLookUpField.SelectedValue
                    MinLen = Val(txtlukupmin.Text)
                    MaxLen = Val(txtlukupmax.Text)
                    txtBoxDesc = txtlukupdesc.Text
                    IflookupMVShowtext = chkShowText.Checked 'Added on 1 may 15 by pallavi for showtext option

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If

                    If ddlLUdatatypes.SelectedIndex = 0 Or ddlLookUpMasterField.SelectedIndex = 0 Or ddlLookUpField.SelectedIndex = 0 Then
                        lblLookUP.Text = "Please Select Mandetory Fields "
                        Exit Sub
                    End If

                    If chkLUMan.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    chkA = 1 'always bydefault look up field is active  

                    If chkLUEdi.Checked = True Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkLUWF.Checked = True Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If

                End If

            ElseIf ddlType.SelectedItem.Text = "Multi LookupDDL" Then
                If txtmlddldn.Text.Length < 2 Then
                    msg_mlddl.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtmlddldn.Text
                    datatype = Ddlmlddldt.SelectedItem.Text
                    multilookUPfield = ddlmlddlf.SelectedValue
                    Dim contli As Integer = 0
                    For Each li As ListItem In chkmlddl.Items
                        If li.Selected Then
                            ddlMultilookupval = ddlMultilookupval & li.Value & ","
                            contli = contli + 1
                        End If
                    Next
                    If contli < 2 Then
                        msg_mlddl.Text = "Please Select more than one field to apply Multi Look UP "
                        Exit Sub
                    End If
                    If ddlMultilookupval.Length > 1 Then
                        ddlMultilookupval = ddlMultilookupval.Remove(ddlMultilookupval.Length - 1)
                    End If
                    If ddlmlddlft.SelectedIndex = 0 Or ddlmlddlcf.SelectedIndex = 0 Or ddlmlddlf.SelectedIndex = 0 Then
                        msg_mlddl.Text = "Please Select Mandetory Fields."
                        Exit Sub
                    End If
                    dropdown = ddlMultilookupval.ToString()
                    MinLen = 0
                    MaxLen = 100
                    multilookUPCompositeForm = Trim(ddlmlddlcf.SelectedItem.Text).ToString()

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If chkmlddlMF.Checked = True Then ' is mandatory checkbox
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkmlddlACT.Checked = True Then ' is active checkbox
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkmlddlE.Checked = True Then ' is edit checkbox
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkmlddlWF.Checked = True Then  ''workflow checkbox
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                End If

            ElseIf ddlType.SelectedItem.Text = "LookupDDL" Then
                If txtDDlLookUP.Text.Length < 2 Then
                    lblDDlLookUP.Text = "Please Enter Valid Field Name"
                    Exit Sub
                Else
                    displayname = txtDDlLookUP.Text
                    datatype = ddlDDlLUdatatypes.SelectedItem.Text
                    lookupfield = ddlDDlLookUpMasterField.SelectedItem.Text
                    dropdown = ddlDDlLookUpMasterField.SelectedValue
                    lookupvalue = ddlDDlLookUpField.SelectedValue
                    '   lookupvaluetext = ddlDDlLookUpField.SelectedItem.Text
                    If Not lookupvalue.Contains("fld") Then
                        lookupvaluetext = "USER"
                    Else
                        oda.SelectCommand.CommandText = "select dropdown from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & ViewState("FORMNAME") & "' and fieldid='" & dropdown & "'"
                        oda.SelectCommand.CommandType = CommandType.Text
                        oda.Fill(ds, "drpdwn")
                        If ds.Tables("drpdwn").Rows(0).Item("dropdown").ToString().Contains("-") Then
                            Dim s As String() = Split(ds.Tables("drpdwn").Rows(0).Item("dropdown").ToString(), "-")
                            Dim g As String = s(1)
                            oda.SelectCommand.CommandText = "select dropdown,fieldmapping from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & g & "' and fieldmapping='" & lookupvalue & "'"
                            oda.SelectCommand.CommandType = CommandType.Text
                            oda.Fill(ds, "p")
                            If ds.Tables("p").Rows(0).Item("dropdown").ToString().Contains("-") Then
                                Dim s1 As String() = Split(ds.Tables("p").Rows(0).Item("dropdown").ToString(), "-")
                                lookupvaluetext = s1(1)
                            End If
                        End If
                    End If


                    MinLen = Val(txtDDllukupmin.Text)
                    MaxLen = Val(txtDDllukupmax.Text)
                    txtBoxDesc = txtDDllukupdesc.Text

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If


                    If UCase(ddlDDlLookUpMasterField.SelectedItem.Text) <> "SELECT ONE" Then

                        If chkDDlLUMan.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        chkA = 1 'always bydefault look up field is active  

                        If chkDDlLUEdi.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkDDlLUWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                    End If
                End If

            ElseIf UCase(ddlType.SelectedItem.Text) = "CHILD ITEM TOTAL" Then
                'Change By Mayank for blank values can hanle
                If (TXTCHT.Text.Length < 2 Or DDLCHF.SelectedItem.Text = "Select Field" Or DDLCHFF.SelectedItem.Text.Trim() = "Select Field") Then
                    Label3.Text = "Please fill required Filed"
                    Label3.ForeColor = Drawing.Color.Red
                    Exit Sub
                End If
                displayname = TXTCHT.Text
                datatype = "NUMERIC"
                dropdown = DDLCHFF.SelectedValue

                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                Else
                    tblname = "MMM_MST_DOC"
                End If

                If CHT_ChKM.Checked Then
                    chkM = 1
                Else
                    chkM = 0
                End If

                If CHT_ChKA.Checked Then
                    chkA = 1
                Else
                    chkA = 0
                End If

                If CHT_ChKE.Checked Then
                    chkE = 1
                Else
                    chkE = 0
                End If
                If CHT_ChKWF.Checked Then
                    chkW = 1
                Else
                    chkW = 0
                End If
            ElseIf UCase(ddlType.SelectedItem.Text) = "CHILD ITEM SPECIFIC TEXT" Then
                'Change By Mayank for Added New Child Item Specific Text
                If (txtCHLDSTD.Text.Length < 2 Or ddlCHLDSTC.SelectedItem.Text = "Select Field" Or ddlCHLDSTCommanChld.SelectedItem.Text.Trim() = "Select Field" Or ddlCHLDCommanVal.SelectedItem.Text = "Select Field") Then
                    lblmsgCHLDST.Text = "Please fill required Filed"
                    lblmsgCHLDST.ForeColor = Drawing.Color.Red
                    Exit Sub
                End If
                displayname = txtCHLDSTD.Text
                datatype = "NUMERIC"
                Dim a As String() = ddlCHLDSTCommanChld.SelectedValue.Trim().Split(",")
                dropdown = a(1).ToString()
                REL = ddlCHLDCommanVal.SelectedValue
                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                Else
                    tblname = "MMM_MST_DOC"
                End If

                If chkCHLDSTFM.Checked Then
                    chkM = 1
                Else
                    chkM = 0
                End If

                If chkCHLDSTA.Checked Then
                    chkA = 1
                Else
                    chkA = 0
                End If

                If chkCHLDSTE.Checked Then
                    chkE = 1
                Else
                    chkE = 0
                End If
                If chkCHLDWF.Checked Then
                    chkW = 1
                Else
                    chkW = 0
                End If
            ElseIf UCase(ddlType.SelectedItem.Text) = "CHILD ITEM MAX" Then
                displayname = TXTChilddisplay.Text
                datatype = "NUMERIC"
                dropdown = ddlchildHFF.SelectedValue

                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                Else
                    tblname = "MMM_MST_DOC"
                End If

                If Childmax_ChKM.Checked Then
                    chkM = 1
                Else
                    chkM = 0
                End If

                If Childmax_ChKA.Checked Then
                    chkA = 1
                Else
                    chkA = 0
                End If

                If Childmax_ChKE.Checked Then
                    chkE = 1
                Else
                    chkE = 0
                End If
                If Childmax_ChKWF.Checked Then
                    chkW = 1
                Else
                    chkW = 0
                End If

            ElseIf UCase(ddlType.SelectedItem.Text) = "CALCULATIVE FIELD" Then
                datatype = "Numeric"

                If CF_txtdisplayname.Text.Length < 2 Then
                    CFlbl.Text = "Please enter the display name correctly "
                    upd_CF.Update()
                    Exit Sub
                End If
                displayname = CF_txtdisplayname.Text
                CF_Values = CF_txtFE.Text
                cf_text = CF_txtFE.Text
                defval = txtCalDefVal.Text
                'Changes By Mayank
                'Dim Cf_array As String() = CF_Values.Split("+", "-", "*", "/", "%") ' putting calculative field in cal_text with in curly braces
                'Dim Cf_array1 As String() = CF_Values.Split("+", "-", "*", "/", "%") ' initializing array of eqqual length

                'For i As Integer = 0 To Cf_array.Length - 1
                '    If CF_txtFE.Text.Contains(Cf_array(i)) Then
                '        Cf_array1(i) = "{" & Cf_array(i) & "}"
                '        cf_text = Replace(cf_text, Cf_array(i), Cf_array1(i))
                '    End If
                'Next
                'cf_text = "{" & displayname & "}=" & cf_text
                cf_text = "{" & displayname & "}={" & cf_text.Replace("+", "}+{").Replace("-", "}-{").Replace("*", "}*{").Replace("/", "}/{").Replace("%", "}%{") & "}"

                cf_text = cf_text.Replace("{ ", "{").Replace("{  ", "{").Replace(" }", "}").Replace(" }", "}")
                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                Else
                    tblname = "MMM_MST_DOC"
                End If
                If CF_chkM.Checked Then
                    chkM = 1
                Else
                    chkM = 0
                End If
                If CF_chkActive.Checked Then
                    chkA = 1
                Else
                    chkA = 0
                End If
                If CF_chkEdit.Checked Then
                    chkE = 1
                Else
                    chkE = 0
                End If
                If CF_chkWF.Checked Then
                    chkW = 1
                Else
                    chkW = 0
                End If
                Dim dt As DataTable = CType(ViewState("FieldName"), DataTable)
                CF_Values = "{" & CF_Values.Replace("+", "}+{").Replace("-", "}-{").Replace("/", "}/{").Replace("*", "}*{").Replace("%", "}%{") & "}"
                CF_Values = CF_Values.Replace("{ ", "{").Replace("{  ", "{").Replace(" }", "}").Replace("  }", "}")
                For Each dr As DataRow In dt.Rows
                    Dim str1 As String = dr.Item("Displayname").ToString()
                    If CF_Values.Contains("{" & str1.ToString().Trim() & "}") Then
                        CF_Values = CF_Values.Replace("{" & str1.ToString().Trim() & "}", "parseFloat($('#ContentPlaceHolder1_fld" & dr.Item("Fieldid") & "').val())")
                        'CF_Values = CF_Values.Replace(str1, "'parseInt($('#ContentPlaceHolder1_fld" & dr.Item("Fieldid") & "').val())'")
                        'cal_fields &= ("'" & dr.Item("Displayname").ToString() & "'").Trim() & ","
                        cal_fields &= dr.Item("Fieldid").ToString().Trim() & ","
                    End If
                Next
                CF_Values = CF_Values.Replace("{", "").Replace("}", "").Trim()
                If cal_fields.Length > 0 Then
                    cal_fields = cal_fields.Substring(0, cal_fields.Length - 1)
                End If
                'balmiki code for calculative
            ElseIf UCase(ddlType.SelectedItem.Text) = "CHILD ITEM" Then
                displayname = TextBox1.Text
                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                    dropdown = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
                Else
                    tblname = "MMM_MST_DOC"
                End If
                If ChkRef.Checked Then
                    If ddlref.SelectedItem.Text.ToUpper() = "SELECT ONE" Then
                        Exit Sub
                    Else
                        dropdown = ddlDF.SelectedItem.Text & "-" & ddlref.SelectedValue
                    End If
                Else
                    dropdown = ddlDF.SelectedItem.Text
                End If

                If ddlMFF.Items.Count > 0 And ddlCFF.Items.Count > 0 Then
                    If ddlMFF.SelectedItem.Text.ToUpper <> "SELECT ONE" And ddlCFF.SelectedItem.Text.ToUpper <> "SELECT ONE" Then
                        REL = ddlMFF.SelectedItem.Value & "-" & ddlCFF.SelectedItem.Value
                    End If
                End If

                If DFChkM.Checked Then
                    chkM = 1
                Else
                    chkM = 0
                End If

                If DFchkA.Checked Then
                    chkA = 1
                Else
                    chkA = 0
                End If

                If DFchkE.Checked Then
                    chkE = 1
                Else
                    chkE = 0
                End If

                If DFchkw.Checked Then
                    chkW = 1
                Else
                    chkW = 0
                End If

            ElseIf UCase(ddlType.SelectedItem.Text) = "SELF REFERENCE" Then
                displayname = SRF_txtdisplay.Text
                dropdown = ddlSF.SelectedValue & "-" & ddlRF.SelectedValue

                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                Else
                    tblname = "MMM_MST_DOC"
                End If

                If SRF_ChkM.Checked Then
                    chkM = 1
                Else
                    chkM = 0
                End If

                If SRF_ChkA.Checked Then
                    chkA = 1
                Else
                    chkA = 0
                End If

                If SRF_ChkE.Checked Then
                    chkE = 1
                Else
                    chkE = 0
                End If

                If SRF_ChkWF.Checked Then
                    chkW = 1
                Else
                    chkW = 0
                End If

            ElseIf UCase(ddlType.SelectedItem.Text) = "PARENT FIELD" Then
                displayname = prTxtName.Text
                dropdown = ddlPR.SelectedValue

                If ViewState("FORMTYPE") = "MASTER" Then
                    tblname = "MMM_MST_MASTER"
                Else
                    tblname = "MMM_MST_DOC"
                End If

                If PR_ChkM.Checked Then
                    chkM = 1
                Else
                    chkM = 0
                End If

                If PR_ChkA.Checked Then
                    chkA = 1
                Else
                    chkA = 0
                End If

                If PR_ChkE.Checked Then
                    chkE = 1
                Else
                    chkE = 0
                End If

                If PR_ChkWF.Checked Then
                    chkW = 1
                Else
                    chkW = 0
                End If
            End If


            ' checking for defaultvalued master data and their updation added 
            oda.SelectCommand.CommandText = "select * from MMM_MST_Forms where  hasDefaultValue=1 and  formname='" & ViewState("FORMNAME") & "_MASTER" & "' "
            oda.SelectCommand.CommandType = CommandType.Text
            oda.Fill(ds, "MasterDefVal")
            Dim fldid_master As String = ""
            If ds.Tables("MasterDefVal").Rows.Count = 1 Then
                oda.SelectCommand.CommandText = "select * from MMM_MST_fields where  documenttype='" & ds.Tables("MasterDefVal").Rows(0).Item("formname") & "'  and (displayname=(select Displayname from MMM_MST_Fields where fieldid='" & fldid & "') or displayname='" & lookupfield & "')"
                oda.SelectCommand.CommandType = CommandType.Text
                oda.Fill(ds, "masterFldId")
                If ds.Tables("masterFldId").Rows().Count = 1 Then
                    fldid_master = ds.Tables("masterFldId").Rows(0).Item("fieldID") ' this fldid_master is for updation in defaultvalued in dropdwon field and lookkupup field
                End If
                'this is for finding calculative field ID in default valued master 
                If ddlType.SelectedItem.Text = "Calculative Field" Then
                    oda.SelectCommand.CommandText = "select fieldid,displayname from MMM_MST_Fields where fieldid in (" & cal_fields.Trim() & ")"
                    oda.SelectCommand.CommandType = CommandType.Text
                    oda.Fill(ds, "calMaster")
                    If ds.Tables("calMaster").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("calMaster").Rows.Count - 1
                            defMasDisName &= "'" & ds.Tables("calMaster").Rows(i).Item("displayname").ToString() & "'" & ","
                        Next
                        If defMasDisName.Length > 0 Then
                            defMasDisName = defMasDisName.Substring(0, defMasDisName.Length - 1)
                        End If
                        'select fieldid,displayname from MMM_MST_FIelds where documenttype='aba_master' and eid=32 and displayname in ('n1','n2' ) 
                        oda.SelectCommand.CommandText = "select fieldid,displayname from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "_MASTER" & "' and displayname in (" & defMasDisName & ")  "
                        oda.SelectCommand.CommandType = CommandType.Text
                        oda.Fill(ds, "calMasFldid")
                        If ds.Tables("calMasFldid").Rows.Count > 0 Then
                            defMasDisName = ""
                            CF_defMasDisName = CF_txtFE.Text
                            For i As Integer = 0 To ds.Tables("calMasFldid").Rows.Count - 1
                                CF_defMasDisName = CF_defMasDisName.Replace(ds.Tables("calMasFldid").Rows(i).Item("displayname").ToString(), "parseFloat($('#ContentPlaceHolder1_fld" & ds.Tables("calMasFldid").Rows(i).Item("Fieldid") & "').val())")
                                defMasDisName &= ds.Tables("calMasFldid").Rows(i).Item("fieldid").ToString() & ","
                            Next
                            'CF_defMasDisName
                            If defMasDisName.Length > 0 Then
                                defMasDisName = defMasDisName.Substring(0, defMasDisName.Length - 1)
                            End If
                        End If
                    End If
                End If
            End If
            Dim ob As New DynamicForm()
            displayname = ob.getSafeString_Names(displayname) ' display name not allowed some of special characters like (,';%&)
            ReportName = displayname
            'oda = New SqlDataAdapter("NEWuspInsertFieldNew2", con) ' old value
            oda = New SqlDataAdapter("uspInsertFieldNew2", con)
            oda.SelectCommand.CommandType = CommandType.StoredProcedure
            oda.SelectCommand.Parameters.AddWithValue("EID", Val(Session("EID").ToString()))
            oda.SelectCommand.Parameters.AddWithValue("displayname", displayname)
            oda.SelectCommand.Parameters.AddWithValue("fieldtype", ddlType.SelectedItem.Text)
            oda.SelectCommand.Parameters.AddWithValue("isRequired", chkM)
            oda.SelectCommand.Parameters.AddWithValue("isActive", chkA)
            oda.SelectCommand.Parameters.AddWithValue("isEditable", chkE)
            oda.SelectCommand.Parameters.AddWithValue("isWorkFlow", chkW)
            oda.SelectCommand.Parameters.AddWithValue("isunique", chUnique)
            oda.SelectCommand.Parameters.AddWithValue("isDescription", chkD)                              'Added By Komal on 04Jan2014
            oda.SelectCommand.Parameters.AddWithValue("isAutoComplt", chkAC)
            oda.SelectCommand.Parameters.AddWithValue("Description", txtBoxDesc)                              'Added By Komal on 04Jan2014
            oda.SelectCommand.Parameters.AddWithValue("dropdowntype", dropdowntype)
            oda.SelectCommand.Parameters.AddWithValue("dropdown", dropdown)
            oda.SelectCommand.Parameters.AddWithValue("SessionFieldVal", SessionFieldVal)
            oda.SelectCommand.Parameters.AddWithValue("documenttype", ViewState("FORMNAME"))
            oda.SelectCommand.Parameters.AddWithValue("DBTBLNAME", tblname)
            oda.SelectCommand.Parameters.AddWithValue("datatype", datatype)
            oda.SelectCommand.Parameters.AddWithValue("minlen", MinLen)
            oda.SelectCommand.Parameters.AddWithValue("ReportName", ReportName.Trim())
            oda.SelectCommand.Parameters.AddWithValue("maxlen", MaxLen)
            oda.SelectCommand.Parameters.AddWithValue("lookupfield", lookupfield.Trim())
            If ddlType.SelectedItem.Text.Trim() = "Lookup" Then
                oda.SelectCommand.Parameters.AddWithValue("lookupvalue", lookupvalue.Trim())
            ElseIf ddlType.SelectedItem.Text.Trim() = "LookupDDL" Then
                oda.SelectCommand.Parameters.AddWithValue("DDllookupvalue", lookupvalue.Trim())
                oda.SelectCommand.Parameters.AddWithValue("DDLlookupValueSource", lookupvaluetext.Trim())
            Else
                oda.SelectCommand.Parameters.AddWithValue("lookupvalue", lookupvalue.Trim())
            End If
            oda.SelectCommand.Parameters.AddWithValue("CF_Values", CF_Values.Trim())
            oda.SelectCommand.Parameters.AddWithValue("Cal_Fields", cal_fields.Trim())
            oda.SelectCommand.Parameters.AddWithValue("fldid", fldid)
            oda.SelectCommand.Parameters.AddWithValue("filteringtype", filteringtype)
            oda.SelectCommand.Parameters.AddWithValue("autofilter", autofilter)
            oda.SelectCommand.Parameters.AddWithValue("REL", REL)
            oda.SelectCommand.Parameters.AddWithValue("fldid_master", fldid_master)
            oda.SelectCommand.Parameters.AddWithValue("defMasDisflid", defMasDisName.Trim())
            oda.SelectCommand.Parameters.AddWithValue("CF_defMasDisName", CF_defMasDisName.Trim())
            oda.SelectCommand.Parameters.AddWithValue("cal_text", cf_text)
            If ddlType.SelectedItem.Text = "Geo Point" Then
                oda.SelectCommand.Parameters.AddWithValue("geopointsource", ddlgeo.SelectedItem.Text)                                         'Shalini
                If ddlgeo.SelectedItem.Text = "Auto" Then
                    oda.SelectCommand.Parameters.AddWithValue("geopointsfields", ans)                            'Shalini
                Else
                    oda.SelectCommand.Parameters.AddWithValue("geopointsfields", "")                            'Shalini
                End If
            Else
                oda.SelectCommand.Parameters.AddWithValue("geopointsource", "")
            End If
            If ddlType.SelectedItem.Text = "Catchment" Then
                oda.SelectCommand.Parameters.AddWithValue("iscatchment", catchmentfield)
            Else
                oda.SelectCommand.Parameters.AddWithValue("iscatchment", "")
            End If

            If txtFupload.Text.Length > 1 Then
                oda.SelectCommand.Parameters.AddWithValue("FuploadType", Trim(txtFupload.Text))
            End If
            oda.SelectCommand.Parameters.AddWithValue("DefaultFldVal", defval)
            oda.SelectCommand.Parameters.AddWithValue("initialFilter", initialFilter)
            oda.SelectCommand.Parameters.AddWithValue("ddlval", defaulval)
            oda.SelectCommand.Parameters.AddWithValue("Geofencetype", Trim(ddlgeotype.SelectedItem.Text.ToString()))
            oda.SelectCommand.Parameters.AddWithValue("advanceformula", Trim(advanceformula.ToString()))
            oda.SelectCommand.Parameters.AddWithValue("multilookUPfield", Trim(multilookUPfield.ToString()))
            oda.SelectCommand.Parameters.AddWithValue("multilookUPCompositeForm", Trim(multilookUPCompositeForm.ToString()))
            oda.SelectCommand.Parameters.AddWithValue("KC_VALUE", Trim(kc_value.ToString()))
            oda.SelectCommand.Parameters.AddWithValue("ddlMultilookupval", Trim(ddlMultilookupval.ToString()))
            oda.SelectCommand.Parameters.AddWithValue("IfLookupMVShowValue", IflookupMVShowtext) 'Added on 1 may 15 by pallavi for showtext option
            oda.SelectCommand.Parameters.AddWithValue("LTLookupval", LTLOOKUPVAL) 'Added on 1 may 15 by pallavi for showtext option
            ' @IfLookupMVShowValue
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim ist As Integer = 0
            Dim rr As String = ""
            If Not ddlType.SelectedItem.Text = "Advance Formula" Then
                ist = oda.SelectCommand.ExecuteScalar()
            Else
                rr = oda.SelectCommand.ExecuteScalar()
            End If

            If rr.Contains("CREATED SUCCESSFULLY") Then
                Dim a As String() = rr.ToString.Split("_")
                Dim da As New SqlDataAdapter("", con)
                Dim DT As New DataTable()
                DT = CType(Session("dsszz"), DataTable)
                If Not DT Is Nothing Then
                    For i As Integer = 0 To DT.Rows.Count - 1
                        da.SelectCommand.Parameters.Clear()
                        da.SelectCommand.CommandText = "USP_insertAdvFormulaRelation"
                        da.SelectCommand.CommandType = CommandType.StoredProcedure
                        da.SelectCommand.Parameters.AddWithValue("@eid", Session("EID"))
                        da.SelectCommand.Parameters.AddWithValue("@formulaid", a(0).ToString())
                        da.SelectCommand.Parameters.AddWithValue("@sourcetype", DT.Rows(i).Item("Source Type").ToString())
                        da.SelectCommand.Parameters.AddWithValue("@sourcename", DT.Rows(i).Item("Source Name").ToString())
                        da.SelectCommand.Parameters.AddWithValue("@s_relationidentifierfiled", DT.Rows(i).Item("Source Field").ToString())
                        da.SelectCommand.Parameters.AddWithValue("@targettype", DT.Rows(i).Item("Target Type").ToString())
                        da.SelectCommand.Parameters.AddWithValue("@targetname", DT.Rows(i).Item("Target Name").ToString())
                        da.SelectCommand.Parameters.AddWithValue("@t_relationidentifierfield", DT.Rows(i).Item("Target Field").ToString())
                        da.SelectCommand.Parameters.AddWithValue("@sortingfield", DT.Rows(i).Item("sorting field").ToString())
                        da.SelectCommand.Parameters.AddWithValue("@uid", Session("UID"))
                        da.SelectCommand.Parameters.AddWithValue("@Type", "Advance Formula")
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        da.SelectCommand.ExecuteNonQuery()
                    Next
                    modalpopupadvformula.Hide()
                End If

                If UCase(ddlType.SelectedItem.Text) = "LT LOOKUP" Then
                    da.SelectCommand.Parameters.Clear()
                    da.SelectCommand.CommandText = ""

                End If

            End If

            If ist = 0 Then
                lblMsgEdit.Text = "Field Created"
                BindFielddataGrid()
                updatePanelEdit.Update()
                modalpopupadvformula.Hide()
            Else
                lblMsgEdit.Text = "Maximum Allowed columns reached"
                updatePanelEdit.Update()
            End If
            con.Dispose()

            '       ////////////////////////////  UPDATE PART ////////////////////////////////////


        Else   ' else part of first if btn clicked is update
            ' for edit(update) field ...modification neccessary      
            Dim dropdowntype As String = ""
            Dim dropdown As String = ""
            Dim defaulval As String = ""
            Dim tblname As String = ""
            Dim datatype As String = "Text"
            Dim MinLen As Integer = 0
            Dim MaxLen As Integer = 0
            Dim lookupvalue As String = ""
            Dim lookupfield As String = ""
            Dim CF_Values As String = ""
            Dim cal_fields As String = ""
            Dim chkIsEinvattch As Integer = 0
            Dim chkM As Integer = 0
            Dim chkA As Integer = 0
            Dim chkE As Integer = 0
            Dim chkW As Integer = 0
            Dim chkD As Integer = 0
            Dim chUnique As Integer = 0
            'Added By Komal on 06Jan2014
            Dim autoAC As Integer = 0
            Dim txtBoxDesc As String = String.Empty               'Added By Komal on 06Jan2014
            Dim chkuni As Integer = 0
            Dim lastfldID As Integer = 0
            Dim presentfldID As Integer = 0
            Dim str As String = ""
            Dim REL As String = ""
            Dim fldid As String = ""
            Dim autofilter As String = ""
            Dim filteringtype As String = ""
            Dim lkupval As String = ""
            Dim fltfldid As String = ""
            Dim defVal As String = ""
            Dim initialfilter As String = ""
            Dim cftext As String = ""
            Dim catchmentfield As String = ""
            Dim advanceformula As String = ""
            Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
            'Dim dss As New DataSet()
            Dim multilookUPfield As String = "" ' added on 29th Jan -Vinay
            Dim multilookUPValue As String = "" ' added on 29th Jan -Vinay
            Dim multilookUPCompositeForm As String = "" ' added on 29th Jan -Vinay
            Dim kc_value As String = "" 'Added By mayank for Geo Point 26-Feb-2015
            Dim ddlMultilookupval As String = ""
            Dim IflookupMVShowtext As Boolean = False  'Added by Pallavi on 1 May 15 for show text on lookup fields 
            Dim LTLOOKUPVAL As String = ""
            Dim SessionFieldVal As String = ""
            Select Case ViewState("Rowfields")
                Case Is = "Text Box"
                    If txtDisplayName.Text.Length < 2 Or ddltextBoxItem.SelectedItem.Text = "SELECT ONE" Then
                        lbltxtbox.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        'oda.SelectCommand.CommandText = "select * from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric'"
                        'oda.Fill(dss, "Numb")
                        displayname = txtDisplayName.Text
                        MinLen = Val(txtMinlength.Text)
                        MaxLen = Val(txtMaxL.Text)
                        tblname = ViewState("tabledata")
                        txtBoxDesc = txtDescription.Text
                        defVal = txtDefVal.Text
                        'Added By Komal on 06Jan2014
                        If chkFldMandotry.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chkActv.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkEditable.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkTextBoxWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If Chkunique.Checked = True Then
                            chkuni = 1
                        Else
                            chkuni = 0
                        End If
                        If ChkDesc.Checked = True Then                          'Added By Komal on 06Jan2014
                            chkD = 1
                        Else
                            chkD = 0
                        End If

                        If ddltextBoxItem.SelectedItem.Text = "Numeric" Then
                            datatype = "Numeric"
                        ElseIf ddltextBoxItem.SelectedItem.Text = "Text" Then
                            datatype = "Text"
                        ElseIf ddltextBoxItem.SelectedItem.Text = "Datetime" Then
                            datatype = "Datetime"
                        ElseIf ddltextBoxItem.SelectedItem.Text = "New Datetime" Then         'Shalini
                            datatype = "New Datetime"
                        ElseIf ddltextBoxItem.SelectedItem.Text = "Time" Then         'Shalini
                            datatype = "Time"
                        ElseIf ddltextBoxItem.SelectedItem.Text = "FY Start" Then         'Shalini
                            datatype = "FY Start"
                        ElseIf ddltextBoxItem.SelectedItem.Text = "FY End" Then         'Shalini
                            datatype = "FY End"
                        ElseIf ddltextBoxItem.SelectedItem.Text = "Scheduler" Then         'Shalini
                            datatype = "Scheduler"
                        End If

                    End If

                    '''''''''''''''''''''Shalini''''''''''''''''''''''''''
                    'Added Separator by Mayank
                Case Is = "Separator"
                    If txtSepDP.Text.Length < 2 Or ddlBorderType.SelectedIndex = 0 Or txtColorPicker.Text.Length < 2 Then
                        lblSeparator.Text = "Please Enter Valid Field Name or Border Type Select or select color Picker"
                        Exit Sub
                    Else
                        displayname = txtSepDP.Text
                        MinLen = 0
                        MaxLen = 0
                        txtBoxDesc = ""
                        defVal = ""
                        'Added By Komal on 04Jan2014
                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If
                        dropdown = ddlBorderType.SelectedValue & ":" & ddlSEPVT.SelectedValue & "," & txtColorPicker.Text
                        chkM = 0
                        chkA = 0
                        chkE = 0
                        chkW = 0
                        chUnique = 0
                        chkD = 0
                    End If

                    'Added Variance by mayank 19-Feb-2015
                Case Is = "Variance"
                    If txtVariance_DisplayName.Text.Length < 2 Or ddlSelectFileds.SelectedItem.Text = "SELECT" Then
                        lblMsgVariance.Text = "Please Enter Valid Field Name or Select Fields"
                        Exit Sub
                    Else
                        displayname = txtVariance_DisplayName.Text
                        txtBoxDesc = txtVariance_Description.Text
                        dropdown = ddlSelectFileds.SelectedValue
                        'Added By Komal on 04Jan2014
                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If
                        If ChkVarMan.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If ChkVarAct.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If ChkVarEdit.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If ChkVarWf.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If ChkVarUQ.Checked = True Then
                            chkuni = 1
                        Else
                            chkuni = 0
                        End If
                    End If

                Case Is = "Signature"
                    If txtdisplysign.Text.Length < 2 Or ddldatatypesign.SelectedItem.Text = "SELECT ONE" Then
                        lblsign.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtdisplysign.Text
                        MinLen = Val(txtfieldsignmin.Text)
                        MaxLen = Val(txtfieldsignmax.Text)
                        tblname = ViewState("tabledata")
                        txtBoxDesc = txtdescsign.Text
                        defVal = txtDefValsign.Text

                        If chkfieldsignman.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chkfieldsignact.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkfieldsignedit.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkfieldsignwf.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If chkfieldsignuniq.Checked = True Then
                            chkuni = 1
                        Else
                            chkuni = 0
                        End If
                        If chkfieldsigndes.Checked = True Then
                            chkD = 1
                        Else
                            chkD = 0
                        End If

                        If ddldatatypesign.SelectedItem.Text = "Numeric" Then
                            datatype = "Text"
                        ElseIf ddldatatypesign.SelectedItem.Text = "Datetime" Then
                            datatype = "Text"

                        End If
                    End If

                    ''''''''Signature''''''''''''''''''''''''''''''' 

                    '''''''''''''''''''''Shalini''''''''''''''''''''''''''
                Case Is = "Geo Point"
                    If txtgeodisplay.Text.Length < 2 Or ddltypegeo.SelectedItem.Text = "SELECT ONE" Or ddlgeo.SelectedItem.Text = "SELECT ONE" Then
                        lblgeo.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtgeodisplay.Text
                        MinLen = Val(txtfgeomin.Text)
                        MaxLen = Val(txtfgeomax.Text)
                        tblname = ViewState("tabledata")
                        txtBoxDesc = txtgeodes.Text
                        defVal = txtdefgeo.Text

                        If chkgeoman.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chkgeoact.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkgeoedit.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkgeoWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If chkgeouni.Checked = True Then
                            chkuni = 1
                        Else
                            chkuni = 0
                        End If
                        If chkgeodes.Checked = True Then
                            chkD = 1
                        Else
                            chkD = 0
                        End If

                        If ddltypegeo.SelectedItem.Text = "Numeric" Then
                            datatype = "Text"
                        ElseIf ddltypegeo.SelectedItem.Text = "Datetime" Then
                            datatype = "Text"

                        End If
                        Dim int As Integer = 0
                        If (ddlgeo.SelectedItem.Text.ToUpper() = "AUTO") Then
                            For i As Integer = 0 To chkautolist.Items.Count - 1
                                If (chkautolist.Items(i).Selected = True) Then
                                    int = 1
                                End If
                            Next
                            If (int = 0) Then
                                lblgeo.Text = "Please select any one fields from Geo Point Source"
                                Exit Sub
                            End If
                        End If



                    End If

                    ''''''''Geo Point''''''''''''''''''''''''''''''' 

                    '''''''''''''''''''''Shalini''''''''''''''''''''''''''
                Case Is = "Catchment"
                    If txtcatchmentdisplay.Text.Length < 2 Or ddltypecatchment.SelectedItem.Text = "SELECT ONE" Then
                        lblcatchment.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtcatchmentdisplay.Text
                        MinLen = Val(txtfcatchmentmin.Text)
                        MaxLen = Val(txtfcatchmentmax.Text)
                        tblname = ViewState("tabledata")
                        txtBoxDesc = txtcatchmentdes.Text
                        defVal = txtdefcatchment.Text
                        catchmentfield = ddlcatchmentgeopointfield.SelectedValue & ":" & ddlcatchmentdisplayfield.SelectedItem.Text & ":" & ddlcatchmentgeofencefield.SelectedValue

                        If chkcatchmentman.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chkcatchmentact.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkcatchmentedit.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkcatchmentWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If chkcatchmentuni.Checked = True Then
                            chkuni = 1
                        Else
                            chkuni = 0
                        End If
                        If chkcatchmentdes.Checked = True Then
                            chkD = 1
                        Else
                            chkD = 0
                        End If

                        If ddltypecatchment.SelectedItem.Text = "Numeric" Then
                            datatype = "Text"
                        ElseIf ddltypecatchment.SelectedItem.Text = "Datetime" Then
                            datatype = "Text"

                        End If
                    End If

                    ''''''''Catchment''''''''''''''''''''''''''''''' 

                    '  ----------------------Shalini---------Geo Fence-----

                Case Is = "Geo Fence"
                    If ddlgeotype.SelectedIndex = 0 Then
                        lblfencegeo.Text = "Please select Valid GeoFence Type"
                        Exit Sub
                    End If
                    If txtdisplaynamefence.Text.Length < 2 Or ddldatatypegeofence.SelectedItem.Text = "SELECT ONE" Then
                        lblfencegeo.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtdisplaynamefence.Text
                        MinLen = Val(txtminfence.Text)
                        MaxLen = Val(txtmaxfence.Text)
                        txtBoxDesc = txtdesnamefence.Text
                        defVal = txtdefaultfence.Text

                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If
                        If chkmanfence.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chkactfence.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkeditfence.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkflowfence.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If chkunifence.Checked = True Then
                            chkuni = 1
                        Else
                            chkuni = 0
                        End If
                        If chkdescfence.Checked = True Then
                            chkD = 1
                        Else
                            chkD = 0
                        End If
                    End If

                    '---------------------------- Geo Fence-------------------------------------------

                Case Is = "Auto Number"
                    If txtAutoNumbrDisplay.Text.Length < 2 Then
                        lblautonumber.Text = "Please Enter Valid Field "
                        Exit Sub
                    Else
                        displayname = txtAutoNumbrDisplay.Text
                        dropdown = txtPrefix.Text
                        MaxLen = Val(txtSeriesNumber.Text)
                        tblname = ViewState("tabledata")
                        If autoChkMan.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If autoChkActive.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                    End If

                Case Is = "New Auto Number"
                    'Added By Mayank for New Auto Number 18-Feb-2015 Start Here
                    If txtdisplynewauto.Text.Length < 2 Or ddlfieldss.SelectedItem.Text.ToUpper() = "SELECT" Or ddlAutoFieldName.SelectedItem.Text.ToUpper() = "SELECT" Then
                        lblnewautonumber.Text = "Please Enter Valid Field or select Field "
                        Exit Sub
                    Else
                        displayname = txtdisplynewauto.Text
                        dropdown = ddlfieldss.SelectedValue
                        REL = ddlAutoFieldName.SelectedValue
                        MaxLen = Val(txtnewSeriesNumber.Text)
                        tblname = ViewState("tabledata")
                    End If
                    If chkmannewauto.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkactnewauto.Checked = True Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    'Added By Mayank for New Auto Number 18-Feb-2015 End Here

                Case Is = "Advance Formula"
                    If txtdisplaynameadvform.Text.Length < 2 Or Trim(txtdisplaynameadvform.Text) = "" Then
                        lblmsgadvanceformula.Text = "Please Enter Valid Field "
                        Exit Sub
                    End If
                    If chkadvformactive.Checked = True Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    txtBoxDesc = txtdescadvform.Text.Trim()
                    advanceformula = txtcontionadvform.Text.Trim()
                    displayname = Trim(txtdisplaynameadvform.Text)
                    '   advanceformula = txtcontionadvform.Text.Trim()

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If

                    'end of code

                    'end of code

                Case Is = "Text Area"
                    If txtDispalyNameArea.Text.Length < 2 Or ddlDataTypesArea.SelectedItem.Text = "SELECT ONE" Then
                        lbltxtArea.Text = "Please Enter Valid Field "
                        Exit Sub
                    Else
                        displayname = txtDispalyNameArea.Text
                        MinLen = Val(txtareaMinLength.Text)
                        MaxLen = Val(txtareaMaxLength.Text)
                        defVal = txtAreaDefVal.Text    ' 5 feb 2014
                        tblname = ViewState("tabledata")
                        If chktxtAreaMandatory.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chktxtAreaActive.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chktxtAreaEditable.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkTxtAreaWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If ddlDataTypesArea.SelectedItem.Text = "Numeric" Then
                            datatype = "Numeric"
                        ElseIf ddlDataTypesArea.SelectedItem.Text = "Datetime" Then
                            datatype = "Datetime"
                        End If
                    End If
                Case Is = "Drop Down", "AutoComplete"
                    If ddlDispalyName.Text.Length < 2 Or ddlDropdownList.SelectedItem.Text = "SELECT ONE" Then
                        lbldropdown.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        'If ddlDropdownList.SelectedIndex = 2 And ddlSessionFieldVal.SelectedIndex <> 0 And ddldependent.SelectedIndex = 0 Then
                        '    lbldropdown.Text = "Please select dependent master"
                        '    Exit Sub
                        'End If
                        displayname = ddlDispalyName.Text
                        dropdowntype = ddlDropdownList.SelectedItem.Text
                        If ddlDropdownList.SelectedIndex = 2 Then
                            If ddldependent.SelectedIndex = 0 Or ddldependent.SelectedIndex = -1 Then
                                If ddlSessionFieldVal.SelectedIndex <> 0 Then
                                    SessionFieldVal = ddlSessionFieldVal.SelectedValue
                                End If
                            Else
                                SessionFieldVal = IIf(ddlSessionFieldVal.SelectedIndex = 0, "", ddlSessionFieldVal.SelectedValue) & "-" & ddlDropDownMasteValSelect.SelectedItem.Text.Trim() & "-" & IIf(ddldependent.SelectedIndex = 0, "", ddldependent.SelectedValue)
                            End If

                        End If

                        If UCase(dropdowntype) = "FIX VALUED" Then
                            If txtdropDownValued.Text = "" Then
                            Else
                                dropdown = txtdropDownValued.Text
                                tblname = "MMM_MST_DOC"
                            End If
                            If txtdropDownValued.Text.ToString().ToUpper().Trim().Contains(txtdftvalfix.Text.ToString().ToUpper().Trim()) = True Then
                                defaulval = txtdftvalfix.Text.ToString().Trim()
                            End If
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            If chkAutoCom.Checked = True Then
                                autoAC = 1
                            End If
                            tblname = "MMM_MST_MASTER"
                            dropdown = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
                            If ddldfultvalfld.SelectedItem.Text <> "SELECT" Then
                                defaulval = ddldfultvalfld.SelectedValue
                            Else
                                defaulval = ""
                            End If
                            If ddlFLT.SelectedItem.Text.ToUpper <> "SELECT ONE" Then
                                Dim FLD() As String = ddlFLT.SelectedValue.ToString.Split("-")
                                If FLD.Length > 1 Then
                                    fldid = FLD(0)
                                    autofilter = FLD(1)
                                    filteringtype = FLD(2).ToString()
                                    If ddlFLT.SelectedItem.Text.ToUpper <> ViewState("SELFIELDS").ToString.ToUpper() Then
                                        lkupval = changelookupval(ViewState("LKUPVALUE"))
                                        fltfldid = ViewState("FLTFLDID")
                                    Else
                                        fldid = ""
                                    End If
                                End If

                            End If
                            If ddlDropDownMasteValSelect.SelectedItem.Text.ToUpper = "USER" Then
                                tblname = "MMM_MST_USER"
                                dropdown = "STATIC-USER" & "-" & ddlDropDownFieldSelect.SelectedValue
                            Else
                                tblname = "MMM_MST_MASTER"
                                dropdown = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
                            End If
                            ' for initial filter
                            If IsNothing(ddlFltrSource.SelectedItem.Text) = False Then
                                If ddlFltrSource.SelectedItem.Text.ToUpper <> "SELECT FIELD" And ddlFltrMapping.SelectedItem.Text.ToUpper <> "SELECT FIELD" Then
                                    initialfilter = ddlFltrSource.SelectedItem.Value & ":" & ddlFltrMapping.SelectedItem.Value
                                End If
                            End If

                            'If ddlFltrSource.SelectedItem.Text.ToUpper <> "PLEASE SELECT" And ddlFltrMapping.SelectedItem.Text.ToUpper <> "PLEASE SELECT" Then
                            '    initialfilter = ddlFltrSource.SelectedItem.Value & "-" & ddlFltrMapping.SelectedItem.Value
                            'End If

                        ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                            tblname = ddlDropDownMasteValSelect.SelectedValue
                            dropdown = "SESSION-" & ddlDropDownMasteValSelect.SelectedItem.Text & "-" & ddlDropDownFieldSelect.SelectedValue
                        ElseIf UCase(dropdowntype) = "CHILD VALUED" Then
                            tblname = "MMM_MST_DOC"
                            dropdown = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
                        End If

                        If chkDdlMan.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chkDlActive.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkDdlEditable.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkDdlWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                    End If


                Case Is = "List Box"
                    If txtListBoxDisplayName.Text.Length < 2 Or ddlListBoxValued.SelectedItem.Text = "SELECT ONE" Then
                        lblListBox.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtListBoxDisplayName.Text
                        dropdowntype = ddlListBoxValued.SelectedItem.Text
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            If txtdropDownValued.Text = "" Then
                            Else
                                dropdown = txtListBoxValue.Text
                                tblname = "MMM_MST_DOC"
                            End If
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            tblname = "MMM_MST_MASTER"
                            dropdown = ddlLstMasterSelect.SelectedValue & "-" & ddlLstBxField.SelectedValue

                        ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                            tblname = ddlLstMasterSelect.SelectedValue
                            dropdown = "SESSION-" & ddlLstMasterSelect.SelectedItem.Text & "-" & ddlLstBxField.SelectedValue
                        End If

                        If chklstBoxMan.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If

                        If chkLstBoxActive.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkLstBoxEditable.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkLstBoxWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                    End If
                Case Is = "CheckBox List"
                    If txtChkBoxList.Text.Length < 2 Or ddlChkListBox.SelectedItem.Text = "SELECT ONE" Then
                        lblChkBoxlst.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtChkBoxList.Text
                        dropdowntype = ddlChkListBox.SelectedItem.Text
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            If txtChkListBox.Text = "" Then
                            Else
                                dropdown = txtChkListBox.Text
                                tblname = "MMM_MST_DOC"
                            End If
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            tblname = "MMM_MST_MASTER"
                            dropdown = ddlChkMasterSelect.SelectedValue & "-" & ddlChkfieldVal.SelectedValue
                        End If
                        If chklstMandatory.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If ChklistBoxActive.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chklistBoxEditable.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkListBoxWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                    End If
                Case Is = "File Uploader"
                    If txtFUDiaplayName.Text.Length < 2 Or ddlFUDataTypes.SelectedItem.Text = "SELECT ONE" Then
                        lblfileuploader.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtFUDiaplayName.Text
                        MinLen = Val(txtFUMinL.Text)
                        MaxLen = Val(txtFUMaxL.Text)
                        tblname = ViewState("tabledata")
                        If ddlFUDataTypes.SelectedIndex = 1 Then
                            If (txtDPFU.Text.Length > 1) Then
                                dropdown = txtDPFU.Text
                            Else
                                lblfileuploader.Text = "Please Select at least one field from list."
                                Exit Sub
                            End If
                        Else
                            dropdown = ""
                        End If
                        If chkIsEinvoiceAttachment.Checked = True Then
                            chkIsEinvattch = 1
                        Else
                            chkIsEinvattch = 0
                        End If
                        If chkFUMandaotry.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If

                        If chkFUActive.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkFUEditable.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkFUWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If ddlFUDataTypes.SelectedItem.Text = "Image" Then
                            datatype = "Image"
                        ElseIf ddlFUDataTypes.SelectedItem.Text = "File" Then
                            datatype = "File"
                        End If
                    End If
                Case Is = "LT Lookup"

                    If txtLTLOOKUPDN.Text.Length < 2 Or ddlLLSF.SelectedIndex = 0 Then
                        Label21.Text = "Please Enter Valid Field Name or Select Fields"
                        Exit Sub
                    ElseIf ddlLLTS.SelectedIndex = 0 Then
                        Label21.Text = "Please Select Target Doc"
                        Exit Sub
                    Else
                        If ddlLLTFS.SelectedIndex = 0 Then
                            If ddlLLTFLDS.SelectedIndex = 0 Then
                                Label21.Text = "Please Select Target fields"
                                Exit Sub
                            ElseIf ddlLLMF.SelectedIndex = 0 Then
                                Label21.Text = "Please Select Mapping Fields"
                                Exit Sub
                            End If
                        Else
                            If ddlLLCTD.SelectedIndex = 0 Then
                                Label21.Text = "Please Select Target Child Doc"
                                Exit Sub
                            ElseIf ddlLLTCRF.SelectedIndex = 0 Then
                                Label21.Text = "Please Select  Target Child Fields"
                                Exit Sub
                            ElseIf ddlLLMF.SelectedIndex = 0 Then
                                Label21.Text = "Please Select Mapping Fields"
                                Exit Sub

                            End If
                        End If
                        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                        da.SelectCommand.CommandText = "select fieldid from mmm_mst_fields where documenttype='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & " and fieldmapping in('" & ddlLLSF.SelectedValue & "')"
                        If con.State = ConnectionState.Closed Then
                            con.Open()
                        End If
                        dropdown = Convert.ToString(da.SelectCommand.ExecuteScalar())
                        displayname = txtLTLOOKUPDN.Text
                        txtBoxDesc = txtLTLOOKUPDS.Text

                        If ddlLLTFS.SelectedIndex = 0 Then
                            LTLOOKUPVAL = ddlLLSC.SelectedValue.Trim() & "-" & ddlLLTFS.SelectedValue.Trim() & ":" & ddlLLSF.SelectedValue.Trim() & "-" & ddlLLTS.SelectedItem.Text.Trim() & "-" & ddlLLTFLDS.SelectedValue.Trim() & "-" & ddlLLMF.SelectedValue.Trim() & "$" & ViewState("PID") & ","
                        Else
                            LTLOOKUPVAL = ddlLLSC.SelectedValue.Trim() & "-" & ddlLLTFS.SelectedValue.Trim() & ":" & ddlLLSF.SelectedValue.Trim() & "-" & ddlLLTS.SelectedItem.Text.Trim() & "|" & ddlLLCTD.SelectedItem.Text.Trim() & "-" & ddlLLTCRF.SelectedValue.Trim() & "-" & ddlLLMF.SelectedValue.Trim() & "$" & ViewState("PID") & ","
                        End If

                        'Added By Komal on 04Jan2014
                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If
                        If ChkLLM.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If ChkLLA.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If ChkLLE.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If ChkLLW.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If ChkLLW.Checked = True Then
                            chUnique = 1
                        Else
                            chUnique = 0
                        End If
                    End If




                Case Is = "Multi LookUP"
                    'code below is for MulitLOOKUP
                    If txtdpML.Text.Length < 2 Or Trim(txtdpML.Text) = "" Then
                        lbldispmsgML.Text = "Please Enter Valid Field "
                        Exit Sub
                    End If

                    displayname = Trim(txtdpML.Text.ToString())
                    txtBoxDesc = txtdescML.Text.Trim()
                    datatype = ddlftypeML.SelectedItem.Text

                    multilookUPfield = ddlfieldsMLC.SelectedValue.ToString()
                    Dim cntli As Integer = 0
                    For Each li As ListItem In chklistMultiLookup.Items
                        If li.Selected Then
                            multilookUPValue = multilookUPValue & li.Value & ","
                            cntli = cntli + 1
                        End If
                    Next
                    If cntli < 2 Then
                        lbldispmsgML.Text = "Please select more than 1 field to apply Multi LookUp "
                        Exit Sub
                    End If
                    If ddlmlddlcf.SelectedIndex = 0 Or ddlmlddlf.SelectedIndex = 0 Or ddlfieldsMLC.SelectedIndex = 0 Then
                        lbldispmsgML.Text = "Please Select Mandatory Fields."
                        Exit Sub
                    End If
                    If multilookUPValue.Length > 1 Then
                        multilookUPValue = multilookUPValue.Remove(multilookUPValue.Length - 1)
                    End If
                    dropdown = multilookUPValue.ToString()
                    MinLen = 0
                    MaxLen = 100
                    multilookUPCompositeForm = Trim(ddlcompositeForm.SelectedItem.Text).ToString()

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If



                    If chkFieldMandML.Checked = True Then ' is mandatory checkbox
                        chkM = 1
                    Else
                        chkM = 0
                    End If
                    If chkFieldActdML.Checked = True Then ' is active checkbox
                        chkA = 1
                    Else
                        chkA = 0
                    End If
                    If chkFieldEditdML.Checked = True Then ' is edit checkbox
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkFieldWFdML.Checked = True Then  ''workflow checkbox
                        chkW = 1
                    Else
                        chkW = 0
                    End If

                    'end of code

                    'end of code
                    'Added By Mayank for Multi Lookup DDL
                Case Is = "Multi LookupDDL"
                    If txtmlddldn.Text.Length < 2 Or Trim(txtmlddldn.Text) = "" Then
                        msg_mlddl.Text = "Please Enter Valid Field "
                        Exit Sub
                    Else
                        displayname = Trim(txtmlddldn.Text.ToString())
                        txtBoxDesc = txtmlddlDs.Text.Trim()
                        datatype = Ddlmlddldt.SelectedItem.Text
                        multilookUPfield = ddlmlddlf.SelectedValue
                        Dim contli As Integer = 0
                        For Each li As ListItem In chkmlddl.Items
                            If li.Selected Then
                                ddlMultilookupval = ddlMultilookupval & li.Value & ","
                                contli = contli + 1
                            End If
                        Next
                        If contli < 2 Then
                            msg_mlddl.Text = "Please Select more than one field to apply Multi Look UP "
                            Exit Sub
                        End If
                        If ddlMultilookupval.Length > 1 Then
                            ddlMultilookupval = ddlMultilookupval.Remove(ddlMultilookupval.Length - 1)
                        End If
                        If ddlmlddlft.SelectedIndex = 0 Or ddlmlddlcf.SelectedIndex = 0 Or ddlmlddlf.SelectedIndex = 0 Then
                            msg_mlddl.Text = "Please Select Mandetory Fields."
                            Exit Sub
                        End If
                        dropdown = ddlMultilookupval.ToString()
                        MinLen = 0
                        MaxLen = 100
                        multilookUPCompositeForm = Trim(ddlmlddlcf.SelectedItem.Text).ToString()

                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If
                        If chkmlddlMF.Checked = True Then ' is mandatory checkbox
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chkmlddlACT.Checked = True Then ' is active checkbox
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkmlddlE.Checked = True Then ' is edit checkbox
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkmlddlWF.Checked = True Then  ''workflow checkbox
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                    End If
                Case Is = "Lookup"
                    If txtLookUP.Text.Length < 2 Then
                        lblLookUP.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtLookUP.Text
                        datatype = ddlLUdatatypes.SelectedItem.Text
                        MinLen = Val(txtlukupmin.Text)
                        MaxLen = Val(txtlukupmax.Text)
                        txtBoxDesc = txtlukupdesc.Text
                        tblname = ViewState("tabledata")
                        IflookupMVShowtext = chkShowText.Checked ' Added on 1 may 15 by pallavi for showtext option
                        lookupfield = ddlLookUpMasterField.SelectedItem.Text
                        dropdown = ddlLookUpMasterField.SelectedValue
                        lookupvalue = ddlLookUpField.SelectedValue

                        'for lookup update
                        If ViewState("fldID") = ViewState("fldIDChange") Then
                            str = ViewState("RepLookValue").ToString().TrimStart() & "," & ViewState("PID").ToString() & "-" & lookupvalue.Trim() & ","
                            str = Replace(Trim(str), ",,", ",")
                            str = Replace(Trim(str), ", ,", ",")
                        Else
                            Dim od As New SqlDataAdapter("", con)
                            od.SelectCommand.CommandText = " select  lookupvalue  from MMM_MST_FIELDS where EID= " & Session("EID") & " and FieldID = " & ViewState("fldIDChange").ToString() & ""
                            Dim ds As New DataSet()
                            od.Fill(ds, "fldChange")
                            str = ds.Tables("fldChange").Rows(0).Item("lookupvalue").ToString() & "," & ViewState("PID").ToString() & "-" & ddlLookUpField.SelectedValue & ","
                            str = Replace(Trim(str), ",,", ",")
                            str = Replace(Trim(str), ", ,", ",")
                        End If
                        If Left(str, 1) = "," Then
                            str = Right(str, str.Length - 1)
                        End If
                        If ddlLUdatatypes.SelectedIndex = 0 Or ddlLookUpMasterField.SelectedIndex = 0 Or ddlLookUpField.SelectedIndex = 0 Then
                            lblLookUP.Text = "Please Select Mandetory Fileds."
                            Exit Sub
                        End If
                        'If UCase(ddlLookUpMasterField.SelectedItem.Text) <> "SELECT ONE" Then
                        If chkLUMan.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        chkA = 1            ' bydefault look up field should be active 
                        If chkLUEdi.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkLUWF.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        'End If
                    End If

                Case Is = "LookupDDL"
                    If txtDDlLookUP.Text.Length < 2 Then
                        lblDDlLookUP.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtDDlLookUP.Text
                        datatype = ddlDDlLUdatatypes.SelectedItem.Text
                        MinLen = Val(txtDDllukupmin.Text)
                        MaxLen = Val(txtDDllukupmax.Text)
                        txtBoxDesc = txtDDllukupdesc.Text
                        tblname = ViewState("tabledata")

                        lookupfield = ddlDDlLookUpMasterField.SelectedItem.Text
                        dropdown = ddlDDlLookUpMasterField.SelectedValue
                        lookupvalue = ddlDDlLookUpField.SelectedValue
                        If (ChildAction = 1) Then
                            oda.SelectCommand.CommandText = "select dropdown from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & ViewState("CHILDACTION") & "' and fieldid='" & dropdown & "'"
                        Else
                            oda.SelectCommand.CommandText = "select dropdown from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & ViewState("FORMNAME") & "' and fieldid='" & dropdown & "'"
                        End If

                        oda.SelectCommand.CommandType = CommandType.Text
                        Dim dtd As New DataSet
                        oda.Fill(dtd, "drpdwn")
                        If dtd.Tables("drpdwn").Rows(0).Item("dropdown").ToString().Contains("-") Then
                            Dim s As String() = Split(dtd.Tables("drpdwn").Rows(0).Item("dropdown").ToString(), "-")
                            Dim g As String = s(1)
                            oda.SelectCommand.CommandText = "select dropdown,fieldmapping from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & g & "' and fieldmapping='" & lookupvalue & "'"
                            oda.SelectCommand.CommandType = CommandType.Text
                            oda.Fill(dtd, "p")
                            If dtd.Tables("p").Rows(0).Item("dropdown").ToString().Contains("-") Then
                                Dim s1 As String() = Split(dtd.Tables("p").Rows(0).Item("dropdown").ToString(), "-")
                                lookupvaluetext = s1(1)
                            End If
                        End If


                        'for lookup update
                        If ViewState("fldID") = ViewState("fldIDChange") Then
                            str = ViewState("RepLookValue").ToString().TrimStart() & "," & ViewState("PID").ToString() & "-" & lookupvalue.Trim() & ","
                            str = Replace(Trim(str), ",,", ",")
                            str = Replace(Trim(str), ", ,", ",")
                        Else
                            Dim od As New SqlDataAdapter("", con)
                            od.SelectCommand.CommandText = " select  DDllookupvalue  from MMM_MST_FIELDS where EID= " & Session("EID") & " and FieldID = " & ViewState("fldIDChange").ToString() & ""
                            Dim ds As New DataSet()
                            od.Fill(ds, "fldChange")
                            str = ds.Tables("fldChange").Rows(0).Item("DDllookupvalue").ToString() & "," & ViewState("PID").ToString() & "-" & ddlDDlLookUpField.SelectedValue & ","
                            str = Replace(Trim(str), ",,", ",")
                            str = Replace(Trim(str), ", ,", ",")
                        End If
                        If Left(str, 1) = "," Then
                            str = Right(str, str.Length - 1)
                        End If
                        If UCase(ddlDDlLookUpMasterField.SelectedItem.Text) <> "SELECT ONE" Then
                            If chkDDlLUMan.Checked = True Then
                                chkM = 1
                            Else
                                chkM = 0
                            End If
                            chkA = 1            ' bydefault look up field should be active 
                            If chkDDlLUEdi.Checked = True Then
                                chkE = 1
                            Else
                                chkE = 0
                            End If
                            If chkDDlLUWF.Checked = True Then
                                chkW = 1
                            Else
                                chkW = 0
                            End If
                        End If
                    End If
                    'Case Is = "Calculative Field"
                    '    displayname = CF_txtdisplayname.Text
                    '    CF_Values = CF_txtFE.Text
                    '    tblname = ViewState("tabledata")
                    '    If CF_chkM.Checked Then
                    '        chkM = 1
                    '    Else
                    '        chkM = 0
                    '    End If

                    '    If CF_chkActive.Checked Then
                    '        chkA = 1
                    '    Else
                    '        chkA = 0
                    '    End If

                    '    If CF_chkEdit.Checked Then
                    '        chkE = 1
                    '    Else
                    '        chkE = 0
                    '    End If

                    '    If CF_chkWF.Checked Then
                    '        chkW = 1
                    '    Else
                    '        chkW = 0
                    '    End If

                    '    Dim stringCalFld As String = ""
                    '    Dim da As New SqlDataAdapter("select Fieldid, displayName,FieldMapping,Cal_Fields from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric'", con)
                    '    Dim dss As New DataSet()
                    '    da.Fill(dss, "calfld")
                    '    For k As Integer = 0 To dss.Tables("calfld").Rows.Count - 1
                    '        If IsDBNull(dss.Tables("calfld").Rows(k).Item("Cal_Fields")) = False Then
                    '            Dim spltFEComma As String() = Split(dss.Tables("calfld").Rows(k).Item("Cal_Fields").ToString(), ",") ' spliting cal fields with comma saperated
                    '            For i As Integer = 0 To spltFEComma.Length - 1
                    '                Dim spltCpnl As String() = Split(spltFEComma(i), "parseFloat($('#ContentPlaceHolder1_") ' spliting to find fieldid in which numeric field to be applied as cal field
                    '                If spltCpnl(0).Contains(ViewState("PID")) Then

                    '                Else
                    '                    stringCalFld = stringCalFld & spltFEComma(i) & ","
                    '                End If
                    '            Next
                    '            stringCalFld = Replace(stringCalFld, "'", "''")
                    '            If Left(stringCalFld, 1) = "," Then
                    '                stringCalFld = Right(stringCalFld, stringCalFld.Length - 1)
                    '            End If
                    '            da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields='" & stringCalFld & "' where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                    '            da.SelectCommand.CommandType = CommandType.Text
                    '            If con.State <> ConnectionState.Open Then
                    '                con.Open()
                    '            End If
                    '            da.SelectCommand.ExecuteNonQuery()
                    '            stringCalFld = ""
                    '        End If
                    '    Next
                    '    ' looping to end of the calculative field
                    '    '                End If
                    '    'Next
                    '    'for selecting Formula editor value

                    '    ' If IsDBNull(dss.Tables("calfld").Rows(k).Item("Cal_Fields")) = False Then
                    '    '    Dim spltFEComma As String() = Split(dss.Tables("calfld").Rows(k).Item("Cal_Fields").ToString(), ",") ' spliting cal fields with comma saperated
                    '    '    Dim stringCalFld As String = ""
                    '    '    For i As Integer = 0 To spltFEComma.Length - 1
                    '    '        If ViewState("ScriptID") = spltFEComma(i) Then

                    '    '        Else
                    '    '            stringCalFld = stringCalFld & spltFEComma(i) & ","
                    '    '            'stringCalFld = Replace(dss.Tables("calfld").Rows(i).Item("Cal_Fields").ToString(), spltFEComma(i), "")
                    '    '        End If
                    '    '    Next
                    '    '    stringCalFld = Replace(stringCalFld, "'", "''")
                    '    '    If Left(stringCalFld, 1) = "," Then
                    '    '        stringCalFld = Replace(Left(stringCalFld, 1), ",", "")
                    '    '    End If

                    '    '    da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields='" & stringCalFld & "' where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                    '    '    da.SelectCommand.CommandType = CommandType.Text
                    '    '    If con.State <> ConnectionState.Open Then
                    '    '        con.Open()
                    '    '    End If
                    '    '    da.SelectCommand.ExecuteNonQuery()
                    '    'End If
                    '    'Next
                    '    Dim dt As DataTable = CType(ViewState("FieldName"), DataTable)
                    '    For Each dr As DataRow In dt.Rows
                    '        Dim str1 As String = dr.Item("Displayname").ToString()
                    '        If CF_Values.Contains(str1) Then
                    '            CF_Values = CF_Values.Replace(str1, "parseFloat($('#ContentPlaceHolder1_fld" & dr.Item("Fieldid") & "').val())")
                    '            'cal_fields &= ("'" & dr.Item("Displayname").ToString() & "'").Trim() & ","
                   '            cal_fields &= dr.Item("Fieldid").ToString().Trim() & ","
                    '        End If
                    '    Next
                    '    If cal_fields.Length > 0 Then
                    '        cal_fields = cal_fields.Substring(0, cal_fields.Length - 1)
                    '    End If
                Case Is = "Child Item"
                    displayname = TextBox1.Text
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If ChkRef.Checked Then
                        If ddlref.SelectedItem.Text.ToUpper() = "SELECT ONE" Then
                            Exit Sub
                        Else
                            dropdown = ddlDF.SelectedItem.Text & "-" & ddlref.SelectedValue
                        End If
                    Else
                        dropdown = ddlDF.SelectedItem.Text
                    End If

                    If ddlMFF.Items.Count > 0 And ddlCFF.Items.Count > 0 Then
                        If ddlMFF.SelectedItem.Text.ToUpper <> "SELECT ONE" And ddlCFF.SelectedItem.Text.ToUpper <> "SELECT ONE" Then
                            REL = ddlMFF.SelectedItem.Value & "-" & ddlCFF.SelectedItem.Value
                        End If
                    End If

                    If DFChkM.Checked Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If DFchkA.Checked Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If

                    If DFchkE.Checked Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If

                    If DFchkw.Checked Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    'Case Is = "Calculative Field"
                    '    displayname = CF_txtdisplayname.Text
                    '    CF_Values = CF_txtFE.Text
                    '    tblname = ViewState("tabledata")
                    '    If CF_chkM.Checked Then
                    '        chkM = 1
                    '    Else
                    '        chkM = 0
                    '    End If

                    '    If CF_chkActive.Checked Then
                    '        chkA = 1
                    '    Else
                    '        chkA = 0
                    '    End If

                    '    If CF_chkEdit.Checked Then
                    '        chkE = 1
                    '    Else
                    '        chkE = 0
                    '    End If

                    '    If CF_chkWF.Checked Then
                    '        chkW = 1
                    '    Else
                    '        chkW = 0
                    '    End If

                    '    Dim stringCalFld As String = ""
                    '    Dim da As New SqlDataAdapter("select Fieldid, displayName,FieldMapping,Cal_Fields from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric'", con)
                    '    Dim dss As New DataSet()
                    '    da.Fill(dss, "calfld")
                    '    For k As Integer = 0 To dss.Tables("calfld").Rows.Count - 1
                    '        If IsDBNull(dss.Tables("calfld").Rows(k).Item("Cal_Fields")) = False Then
                    '            Dim spltFEComma As String() = Split(dss.Tables("calfld").Rows(k).Item("Cal_Fields").ToString(), ",") ' spliting cal fields with comma saperated
                    '            For i As Integer = 0 To spltFEComma.Length - 1
                    '                Dim spltCpnl As String() = Split(spltFEComma(i), "parseFloat($('#ContentPlaceHolder1_") ' spliting to find fieldid in which numeric field to be applied as cal field
                    '                If spltCpnl(0).Contains(ViewState("PID")) Then

                    '                Else
                    '                    stringCalFld = stringCalFld & spltFEComma(i) & ","
                    '                End If
                    '            Next
                    '            stringCalFld = Replace(stringCalFld, "'", "''")
                    '            If Left(stringCalFld, 1) = "," Then
                    '                stringCalFld = Right(stringCalFld, stringCalFld.Length - 1)
                    '            End If
                    '            If IsNothing(stringCalFld) Then
                    '                da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields=NULL where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                    '            Else
                    '                da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields='" & stringCalFld & "' where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                    '            End If

                    '            da.SelectCommand.CommandType = CommandType.Text
                    '            If con.State <> ConnectionState.Open Then
                    '                con.Open()
                    '            End If
                    '            da.SelectCommand.ExecuteNonQuery()
                    '            stringCalFld = ""
                    '        End If
                    '    Next

                    '    Dim dt As DataTable = CType(ViewState("FieldName"), DataTable)
                    '    For Each dr As DataRow In dt.Rows
                    '        Dim str1 As String = dr.Item("Displayname").ToString()
                    '        If CF_Values.Contains(str1) Then
                    '            CF_Values = CF_Values.Replace(str1, "parseFloat($('#ContentPlaceHolder1_fld" & dr.Item("Fieldid") & "').val())")
                    '            'cal_fields &= ("'" & dr.Item("Displayname").ToString() & "'").Trim() & ","
                    '            cal_fields &= dr.Item("Fieldid").ToString().Trim() & ","
                    '        End If
                    '    Next
                    '    If cal_fields.Length > 0 Then
                    '        cal_fields = cal_fields.Substring(0, cal_fields.Length - 1)
                    '    End If 

                Case Is = "Calculative Field"
                    displayname = CF_txtdisplayname.Text
                    CF_Values = CF_txtFE.Text
                    tblname = ViewState("tabledata")
                    datatype = "Numeric"
                    defVal = txtCalDefVal.Text

                    cftext = CF_txtFE.Text
                    'Changes By Mayank
                    'Dim Cf_array As String() = CF_Values.Split("+", "-", "*", "/", "%") ' putting calculative field in cal_text with in curly braces
                    'Dim Cf_array1 As String() = CF_Values.Split("+", "-", "*", "/", "%") ' initializing array of eqqual length
                    ''balli 13 jan adding caltext from previous data saved 
                    'For i As Integer = 0 To Cf_array.Length - 1
                    '    If CF_txtFE.Text.Contains(Cf_array(i)) Then
                    '        Cf_array1(i) = "{" & Cf_array(i) & "}"
                    '        cftext = Replace(cftext, Cf_array(i), Cf_array1(i))
                    '    End If
                    'Next
                    'cftext = "{" & displayname & "}=" & cftext
                    cftext = "{" & displayname & "}={" & cftext.Replace("+", "}+{").Replace("-", "}-{").Replace("*", "}*{").Replace("/", "}/{").Replace("%", "}%{") & "}"
                    cftext = cftext.Replace("{ ", "{").Replace("{  ", "{").Replace(" }", "}").Replace("  }", "}")
                    If CF_chkM.Checked Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If CF_chkActive.Checked Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If

                    If CF_chkEdit.Checked Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If

                    If CF_chkWF.Checked Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                    Dim stringCalFld As String = ""
                    Dim stringCalText As String = ""
                    Dim dependentId As String = ""
                    'Changes By Mayank for mulitple calculative

                    Dim da As New SqlDataAdapter("", con)
                    If (ChildAction = 1) Then
                        da.SelectCommand.CommandText = "select Fieldid, displayName,FieldMapping,Cal_Fields , dependenton,cal_text,FieldType from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "' and datatype='Numeric'"
                    Else
                        da.SelectCommand.CommandText = "select Fieldid, displayName,FieldMapping,Cal_Fields , dependenton,cal_text,FieldType from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric'"
                    End If

                    Dim dss As New DataSet()
                    da.Fill(dss, "calfld")
                    For k As Integer = 0 To dss.Tables("calfld").Rows.Count - 1
                        If IsDBNull(dss.Tables("calfld").Rows(k).Item("Cal_Fields")) = False Then
                            Dim spltFEComma As String() = Split(dss.Tables("calfld").Rows(k).Item("Cal_Fields").ToString(), ";") ' spliting cal fields with comma saperated
                            Dim splDependentID As String() = Split(dss.Tables("calfld").Rows(k).Item("dependenton").ToString(), ",")
                            Dim spltFCalText As String() = Split(dss.Tables("calfld").Rows(k).Item("Cal_Text").ToString(), ",")
                            'For i As Integer = 0 To spltFEComma.Length - 1
                            '    Dim spltCpnl As String() = Split(spltFEComma(i), "parseFloat($('#ContentPlaceHolder1_") ' spliting to find fieldid in which numeric field to be applied as cal field
                            '    If spltCpnl(1).Contains(ViewState("PID")) Then
                            '    Else
                            '        stringCalFld = stringCalFld & spltFEComma(i) & ";"
                            '        dependentId = dependentId & splDependentID(i) & ","
                            '        stringCalText = stringCalText & spltFCalText(i) & ","
                            '    End If
                            'Next
                            For i As Integer = 0 To spltFEComma.Length - 1
                                Dim spltCpnl As String() = Split(spltFEComma(i), "parseFloat($('#ContentPlaceHolder1_") ' spliting to find fieldid in which numeric field to be applied as cal field
                                If (spltCpnl.Length > 1) Then
                                    If spltCpnl(1).Contains(ViewState("PID")) Then
                                        'Changes for caltext if field is calculative
                                        If (dss.Tables("calfld").Rows(k).Item("FieldType").ToString().ToUpper() = "CALCULATIVE FIELD") Then
                                            'Dim o As String() = spltFCalText(i).ToString().Split("=")
                                            'If ("{" & displayname & "}" <> o(0).ToString()) Then
                                            stringCalText = stringCalText & spltFCalText(i) & ","
                                            'End If
                                        End If
                                    Else
                                        stringCalFld = stringCalFld & spltFEComma(i) & ";"
                                        dependentId = dependentId & splDependentID(i) & ","
                                        stringCalText = stringCalText & spltFCalText(i) & ","
                                    End If
                                End If
                            Next
                            stringCalFld = stringCalFld.Replace(",,", ",").Replace(",,,", ",").Replace(",,,,", ",")
                            stringCalFld = Replace(stringCalFld, "'", "''")
                            If Left(stringCalFld, 1) = ";" Then
                                stringCalFld = Right(stringCalFld, stringCalFld.Length - 1)
                            End If
                            dependentId = dependentId.Replace(",,", ",").Replace(",,,", ",").Replace(",,,,", ",")
                            If Left(dependentId, 1) = ";" Then
                                dependentId = Right(dependentId, dependentId.Length - 1)
                            End If
                            stringCalText = stringCalText.Replace(",,", ",").Replace(",,,", ",").Replace(",,,,", ",")
                            If Left(stringCalText, 1) = ";" Then
                                stringCalText = Right(stringCalText, stringCalText.Length - 1)
                            End If
                            If IsNothing(stringCalFld) Then
                                If (stringCalText.ToString() = String.Empty) Then
                                    If (ChildAction = 1) Then
                                        da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields=NULL ,dependenton=Null  ,cal_text=Null  where EID=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                    Else
                                        da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields=NULL ,dependenton=Null  ,cal_text=Null  where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                    End If
                                Else
                                    If (ChildAction = 1) Then
                                        da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields=NULL ,dependenton=Null  ,cal_text='" & stringCalText & "'  where EID=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                    Else
                                        da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields=NULL ,dependenton=Null  ,cal_text='" & stringCalText & "'  where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                    End If

                                End If
                            Else
                                If (ChildAction = 1) Then
                                    da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields='" & stringCalFld & "',  Dependenton='" & dependentId & "' , cal_Text = '" & stringCalText & "'  where EID=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                Else
                                    da.SelectCommand.CommandText = "update MMM_MST_Fields set Cal_Fields='" & stringCalFld & "',  Dependenton='" & dependentId & "' , cal_Text = '" & stringCalText & "'  where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                End If

                            End If
                            da.SelectCommand.CommandType = CommandType.Text
                            If con.State <> ConnectionState.Open Then
                                con.Open()
                            End If
                            da.SelectCommand.ExecuteNonQuery()
                            stringCalFld = ""
                            dependentId = ""
                            stringCalText = ""
                        End If
                    Next

                    'For Caluculative text 
                    For k As Integer = 0 To dss.Tables("calfld").Rows.Count - 1
                        If (ViewState("PID").ToString().Trim() = dss.Tables("calfld").Rows(k).Item("Fieldid").ToString()) Then
                            Dim Cal As String = dss.Tables("calfld").Rows(k).Item("cal_text").ToString()
                            Dim tempcal As String
                            Dim ar As String() = Cal.Split("=")
                            If (ar.Length > 1) Then
                                If (ar(0).ToString() = "{" & displayname.ToString() & "}") Then
                                    If (ar.Length > 2) Then
                                        If (Cal.ToString().Contains(",")) Then
                                            Dim cals As String() = Cal.ToString().Split(",")
                                            For j As Integer = 1 To cals.Length - 1
                                                tempcal = tempcal & cals(j).ToString() & ","
                                            Next
                                        Else
                                            'tempcal = tempcal & ar(i).ToString()
                                        End If
                                        For i As Integer = 2 To ar.Length - 1
                                        Next
                                    Else
                                        tempcal = String.Empty
                                    End If
                                    If (ChildAction = 1) Then
                                        da.SelectCommand.CommandText = "update MMM_MST_Fields set cal_Text = '" & cftext & "," & tempcal & "'  where EID=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                    Else
                                        da.SelectCommand.CommandText = "update MMM_MST_Fields set cal_Text = '" & cftext & "," & tempcal & "'  where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                    End If

                                    da.SelectCommand.CommandType = CommandType.Text
                                    If con.State <> ConnectionState.Open Then
                                        con.Open()
                                    End If
                                    da.SelectCommand.ExecuteNonQuery()
                                End If
                            Else
                                If (ChildAction = 1) Then
                                    da.SelectCommand.CommandText = "update MMM_MST_Fields set cal_Text = '" & cftext & "," & "'  where EID=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                Else
                                    da.SelectCommand.CommandText = "update MMM_MST_Fields set cal_Text = '" & cftext & "," & "'  where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric' and fieldid= " & dss.Tables("calfld").Rows(k).Item("fieldid") & ""
                                End If

                                da.SelectCommand.CommandType = CommandType.Text
                                If con.State <> ConnectionState.Open Then
                                    con.Open()
                                End If
                                da.SelectCommand.ExecuteNonQuery()
                            End If

                        End If
                    Next
                    Dim dt As DataTable = CType(ViewState("FieldName"), DataTable)
                    CF_Values = "{" & CF_Values.Trim().Replace("+", "}+{").Replace("-", "}-{").Replace("/", "}/{").Replace("*", "}*{").Replace("%", "}%{") & "}"
                    CF_Values = CF_Values.Replace("{ ", "{").Replace("{  ", "{").Replace(" }", "}").Replace("  }", "}")
                    For Each dr As DataRow In dt.Rows
                        Dim str1 As String = dr.Item("Displayname").ToString()
                        If CF_Values.Contains("{" & str1 & "}") Then
                            CF_Values = CF_Values.Replace("{" & str1 & "}", "parseFloat($('#ContentPlaceHolder1_fld" & dr.Item("Fieldid") & "').val())")
                            'cal_fields &= ("'" & dr.Item("Displayname").ToString() & "'").Trim() & ","
                            cal_fields &= dr.Item("Fieldid").ToString().Trim() & ","
                        End If
                    Next
                    CF_Values = CF_Values.Replace("{", "").Replace("}", "").Trim()
                    If cal_fields.Length > 0 Then
                        cal_fields = cal_fields.Substring(0, cal_fields.Length - 1)
                    End If
                    'Changes By Mayank for mulitple calculative final 230115
                    'Added For Child Item Specific Text
                Case Is = "Child Item Specific Text"
                    If (txtCHLDSTD.Text.Length < 2 Or ddlCHLDSTC.SelectedItem.Text = "Select Field" Or ddlCHLDSTCommanChld.SelectedItem.Text.Trim() = "Select Field" Or ddlCHLDCommanVal.SelectedItem.Text = "Select Field") Then
                        lblmsgCHLDST.Text = "Please fill required Filed"
                        lblmsgCHLDST.ForeColor = Drawing.Color.Red
                        Exit Sub
                    End If
                    displayname = txtCHLDSTD.Text
                    datatype = "NUMERIC"
                    Dim a As String() = ddlCHLDSTCommanChld.SelectedValue.ToString().Split(",")
                    dropdown = a(1).ToString()
                    REL = ddlCHLDCommanVal.SelectedValue
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If

                    If chkCHLDSTFM.Checked Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If chkCHLDSTA.Checked Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If

                    If chkCHLDSTE.Checked Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If chkCHLDWF.Checked Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If

                Case Is = "Child Item Total"
                    displayname = TXTCHT.Text
                    datatype = "NUMERIC"
                    dropdown = DDLCHFF.SelectedValue
                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If

                    If CHT_ChKM.Checked Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If CHT_ChKA.Checked Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If

                    If CHT_ChKE.Checked Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If CHT_ChKWF.Checked Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If

                Case Is = "Child Item MAX"
                    displayname = TXTChilddisplay.Text
                    datatype = "NUMERIC"
                    dropdown = ddlchildHFF.SelectedValue

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If

                    If Childmax_ChKM.Checked Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If Childmax_ChKA.Checked Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If

                    If Childmax_ChKE.Checked Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If
                    If Childmax_ChKWF.Checked Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                Case Is = "Check Box" 'Changes BY Mayank'
                    If (txtchkboxDN.Text.Length < 2 Or txtchkboxDT.Text.Length < 2) Then
                        lblChkboxmsg.Text = "Please Enter Valid Field Name"
                        Exit Sub
                    Else
                        displayname = txtchkboxDN.Text
                        dropdown = txtchkboxDT.Text
                        txtBoxDesc = txtchkboxDS.Text
                        If ChkboxMan.Checked Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If

                        If ChkboxAct.Checked Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If

                        If ChkboxEdit.Checked Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If

                        If chkboxwf.Checked Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If chkboxun.Checked Then
                            chkuni = 1
                        Else
                            chkuni = 0
                        End If
                        If chkboxdes.Checked Then
                            chkD = 1
                        Else
                            chkD = 0
                        End If
                    End If
                Case Is = "PARENT FIELD"
                    displayname = prTxtName.Text
                    dropdown = ddlPR.SelectedValue

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If PR_ChkM.Checked Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If PR_ChkA.Checked Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If

                    If PR_ChkE.Checked Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If

                    If PR_ChkWF.Checked Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If
                Case Is = "PARENT FIELD"
                    displayname = prTxtName.Text
                    dropdown = ddlPR.SelectedValue

                    If ViewState("FORMTYPE") = "MASTER" Then
                        tblname = "MMM_MST_MASTER"
                    Else
                        tblname = "MMM_MST_DOC"
                    End If
                    If PR_ChkM.Checked Then
                        chkM = 1
                    Else
                        chkM = 0
                    End If

                    If PR_ChkA.Checked Then
                        chkA = 1
                    Else
                        chkA = 0
                    End If

                    If PR_ChkE.Checked Then
                        chkE = 1
                    Else
                        chkE = 0
                    End If

                    If PR_ChkWF.Checked Then
                        chkW = 1
                    Else
                        chkW = 0
                    End If

                Case Is = "Parent Value"

                    If txtParentVal_DisplayNm.Text.Length = 0 Then
                        lbl_ParentVal.Text = "Please Enter Valid Field Name or Select Fields"
                        Exit Sub
                    ElseIf (ddlParentVal_Parentdoc.SelectedIndex = 0) Then
                        lbl_ParentVal.Text = "Please select a Parent Document"
                        Exit Sub
                    ElseIf (ddlParentVal_ParentFields.SelectedIndex = 0) Then
                        lbl_ParentVal.Text = "Please select a Parent Field"
                        Exit Sub
                    Else
                        displayname = txtParentVal_DisplayNm.Text
                        dropdown = ddlParentVal_ParentFields.SelectedValue
                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If

                        If chkPV_Man.Checked = True Then
                            chkM = 1
                        Else
                            chkM = 0
                        End If
                        If chkPV_Active.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkPV_Editable.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If chkPV_WrkFlow.Checked = True Then
                            chkW = 1
                        Else
                            chkW = 0
                        End If
                        If chkPV_Unique.Checked = True Then
                            chkuni = 1
                        Else
                            chkuni = 0
                        End If
                        If chkPV_Desc.Checked = True Then
                            chkD = 1
                        Else
                            chkD = 0
                        End If

                        datatype = "Text"

                    End If
                Case Is = "Formula Field"
                    If txtFormulaName.Text.Length < 2 Then
                        lblFromula.Text = "Please Enter Valid Field formula name "
                        Exit Sub
                    Else
                        displayname = txtFormulaName.Text
                        REL = txtFormulaText.Text
                        If ViewState("FORMTYPE") = "MASTER" Then
                            tblname = "MMM_MST_MASTER"
                        Else
                            tblname = "MMM_MST_DOC"
                        End If

                        If chkformulaActive.Checked = True Then
                            chkA = 1
                        Else
                            chkA = 0
                        End If
                        If chkformulaRunable.Checked = True Then
                            chkE = 1
                        Else
                            chkE = 0
                        End If
                        If ddldatatypeformula.SelectedItem.Text = "Numeric" Then
                            datatype = "Numeric"
                        ElseIf ddldatatypeformula.SelectedItem.Text = "Datetime" Then
                            datatype = "Datetime"
                        ElseIf ddldatatypeformula.SelectedItem.Text = "Text" Then   'Shalini
                            datatype = "Text"
                        End If
                    End If

                    Dim chkvalue As String() = {"ROUND", "IF", "MAX", "MIN", "CONCATENATE"}
                    If Not txtFormulaTextMob.Text.ToUpper().Contains(chkvalue.ToString()) Then
                        'Dim operators1 As String() = {"+", "-", "*", "/", "%"}  ' for cheking mathmetical operator 
                        Dim formula As String = txtFormulaTextMob.Text.ToUpper()
                        formula = formula.ToString().Replace("{", "").Replace("}", "")
                        Dim test As String = ""
                        formula = formula.ToString().Replace("+", "}+{").Replace("-", "}-{").Replace("*", "}*{").Replace("/", "}/{").Replace("%", "}%{")
                        formula = Form.ToString().Replace("(((", "((({")
                        kc_value = "{" & displayname & "}=" & txtFormulaTextMob.Text

                    End If
                    Dim operators As String() = {"+", "-", "*", "/", "%"}  ' for cheking mathmetical operator 
                    For i As Integer = 0 To operators.Length - 1
                        txtFormulaText.Text = Replace(txtFormulaText.Text, operators(i), "")
                    Next
                    Dim str1 As String() = Split(txtFormulaText.Text, "}")
                    For i As Integer = 0 To str1.Length - 2
                        str1(i) = Replace(str1(i), "{", "")
                    Next
                    Dim da As New SqlDataAdapter("", con)
                    If (ChildAction = 1) Then
                        da.SelectCommand.CommandText = "select fieldID,displayname from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & ViewState("CHILDACTION") & "' "
                    Else
                        da.SelectCommand.CommandText = "select fieldID,displayname from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & ViewState("FORMNAME") & "' "
                    End If

                    da.SelectCommand.CommandType = CommandType.Text
                    Dim ds As New DataSet()
                    da.Fill(ds, "searchField")
                    Dim flag As Integer = 0
                    If ds.Tables("searchField").Rows.Count > 0 Then  ' for checking formula variables is correct or not 
                        For i As Integer = 0 To str1.Length - 2
                            For k As Integer = 0 To ds.Tables("searchField").Rows.Count - 1
                                If str1(i) = ds.Tables("searchField").Rows(k).Item("displayname").ToString() Then
                                    cal_fields = cal_fields & ds.Tables("searchField").Rows(k).Item("fieldID") & ","
                                    flag = flag + 1
                                End If
                            Next
                        Next
                    End If
                    'Rajat 10 Jan 2014
                    '  If flag <> str1.Length - 1 Then
                    ' lblFromula.Text = "Formula variables is not correct "
                    'Exit Sub
                    ' End If
            End Select
            Dim luDDChangedId As String = ""
            Dim prevMasdependency As String = ""
            Dim prevLookVal As String = ""
            Dim defMasDisName As String = ""
            Dim CF_defMasDisName As String = ""
            If (ChildAction = 1) Then
                oda.SelectCommand.CommandText = "select * from MMM_MST_Forms where  hasDefaultValue=1 and  formname='" & ViewState("CHILDACTION") & "_MASTER" & "' "
            Else
                oda.SelectCommand.CommandText = "select * from MMM_MST_Forms where  hasDefaultValue=1 and  formname='" & ViewState("FORMNAME") & "_MASTER" & "' "
            End If

            oda.SelectCommand.CommandType = CommandType.Text
            Dim d As New DataSet
            oda.Fill(d, "MasterDefVal")
            Dim fldid_master As String = ""
            Dim luDDPrvId As String = ""
            Dim fldid_masterLookUp As String = ""
            If d.Tables("MasterDefVal").Rows.Count = 1 Then
                oda.SelectCommand.CommandText = "select * from MMM_MST_fields where  eid='" & Session("EID") & "' and  documenttype='" & d.Tables("MasterDefVal").Rows(0).Item("formname") & "'  and (displayname=(select Displayname from MMM_MST_Fields where fieldid='" & ViewState("PID").ToString() & "'))"
                oda.SelectCommand.CommandType = CommandType.Text
                oda.Fill(d, "masterFldId")
                fldid_master = d.Tables("masterFldId").Rows(0).Item("fieldID") ' this fldid_master is for updation in defaultvalued in dropdwon field and lookkupup field
                If d.Tables("masterFldId").Rows.Count = 1 And d.Tables("masterFldId").Rows(0).Item("fieldtype") = "lookup" Then
                    luDDPrvId = d.Tables("masterFldId").Rows(0).Item("dropdown")
                    oda.SelectCommand.CommandText = "select * from MMM_MST_Fields where eid=" & Session("EID") & " and fieldid=" & luDDPrvId & " "
                    oda.Fill(d, "luDDPrvId")
                    If d.Tables("luDDPrvId").Rows.Count > 0 Then
                        Dim arr As String() = Split(d.Tables("luDDPrvId").Rows(0).Item("lookupvalue"), ",")
                        For i As Integer = 0 To arr.Length - 1
                            If arr(i).Contains(ViewState("PID")) Then
                            Else
                                prevLookVal &= prevLookVal & ","
                            End If
                        Next
                        Dim arr1 As String() = Split(d.Tables("luDDPrvId").Rows(0).Item("dependentOn"), ",")
                        For i As Integer = 0 To arr1.Length - 1
                            If arr1(i).Contains(ViewState("PID")) Then
                            Else
                                prevMasdependency &= prevMasdependency & ","
                            End If
                        Next
                    End If
                End If
                'this is for finding lookUp field ID in defaultvaluedmaster  '' select * from MMM_MST_Fields where eid=32 and documenttype='aba_master' and displayname=(select displayname from MMM_MST_Fields where eid=32 and fieldid=3997'changed id ' )
                If d.Tables("masterFldId").Rows(0).Item("fieldtype") = "Lookup" Then
                    oda.SelectCommand.CommandText = "select fieldid,displayname,documenttype from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & d.Tables("MasterDefVal").Rows(0).Item("formname") & "' and displayname=(select displayname from MMM_MST_Fields where eid='" & Session("EID") & "' and fieldid='" & ViewState("fldIDChange").ToString() & "' )"
                    oda.SelectCommand.CommandType = CommandType.Text
                    oda.Fill(d, "luDDChangedId")
                    If d.Tables("luDDChangedId").Rows.Count > 0 Then
                        luDDChangedId = d.Tables("luDDChangedId").Rows(0).Item("fieldid")
                    End If
                    Dim strMasLook As String() = Split(str, "-")
                    fldid_masterLookUp = fldid_master & "-" & strMasLook(1)
                End If

                If d.Tables("masterFldId").Rows.Count = 1 And d.Tables("masterFldId").Rows(0).Item("fieldtype") = "LookupDDL" Then
                    luDDPrvId = d.Tables("masterFldId").Rows(0).Item("dropdown")
                    oda.SelectCommand.CommandText = "select * from MMM_MST_Fields where eid=" & Session("EID") & " and fieldid=" & luDDPrvId & " "
                    oda.Fill(d, "luDDPrvId")
                    If d.Tables("luDDPrvId").Rows.Count > 0 Then
                        Dim arr As String() = Split(d.Tables("luDDPrvId").Rows(0).Item("DDllookupvalue"), ",")
                        For i As Integer = 0 To arr.Length - 1
                            If arr(i).Contains(ViewState("PID")) Then
                            Else
                                prevLookVal &= prevLookVal & ","
                            End If
                        Next
                        Dim arr1 As String() = Split(d.Tables("luDDPrvId").Rows(0).Item("dependentOn"), ",")
                        For i As Integer = 0 To arr1.Length - 1
                            If arr1(i).Contains(ViewState("PID")) Then
                            Else
                                prevMasdependency &= prevMasdependency & ","
                            End If
                        Next
                    End If
                End If
                'this is for finding lookUp field ID in defaultvaluedmaster  '' select * from MMM_MST_Fields where eid=32 and documenttype='aba_master' and displayname=(select displayname from MMM_MST_Fields where eid=32 and fieldid=3997'changed id ' )
                If d.Tables("masterFldId").Rows(0).Item("fieldtype") = "LookupDDL" Then
                    oda.SelectCommand.CommandText = "select fieldid,displayname,documenttype from MMM_MST_Fields where eid='" & Session("EID") & "' and documenttype='" & d.Tables("MasterDefVal").Rows(0).Item("formname") & "' and displayname=(select displayname from MMM_MST_Fields where eid='" & Session("EID") & "' and fieldid='" & ViewState("fldIDChange").ToString() & "' )"
                    oda.SelectCommand.CommandType = CommandType.Text
                    oda.Fill(d, "luDDChangedId")
                    If d.Tables("luDDChangedId").Rows.Count > 0 Then
                        luDDChangedId = d.Tables("luDDChangedId").Rows(0).Item("fieldid")
                    End If
                    Dim strMasLook As String() = Split(str, "-")
                    fldid_masterLookUp = fldid_master & "-" & strMasLook(1)
                End If

                If d.Tables("masterFldId").Rows(0).Item("fieldtype") = "Calculative Field" Then  ' this is for checking master default valued and their updation
                    oda.SelectCommand.CommandText = "select fieldid,displayname from MMM_MST_Fields where fieldid in (" & cal_fields.Trim() & ")"
                    oda.SelectCommand.CommandType = CommandType.Text
                    oda.Fill(d, "calMaster")
                    If d.Tables("calMaster").Rows.Count > 0 Then
                        For i As Integer = 0 To d.Tables("calMaster").Rows.Count - 1
                            defMasDisName &= "'" & d.Tables("calMaster").Rows(i).Item("displayname").ToString() & "'" & ","
                        Next
                        If defMasDisName.Length > 0 Then
                            defMasDisName = defMasDisName.Substring(0, defMasDisName.Length - 1)
                        End If
                        'select fieldid,displayname from MMM_MST_FIelds where documenttype='aba_master' and eid=32 and displayname in ('n1','n2' ) 
                        If (ChildAction = 1) Then
                            oda.SelectCommand.CommandText = "select fieldid,displayname from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "_MASTER" & "' and displayname in (" & defMasDisName & ")  "
                        Else
                            oda.SelectCommand.CommandText = "select fieldid,displayname from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "_MASTER" & "' and displayname in (" & defMasDisName & ")  "
                        End If

                        oda.SelectCommand.CommandType = CommandType.Text
                        oda.Fill(d, "calMasFldid")
                        If d.Tables("calMasFldid").Rows.Count > 0 Then
                            defMasDisName = ""
                            CF_defMasDisName = CF_txtFE.Text
                            For i As Integer = 0 To d.Tables("calMasFldid").Rows.Count - 1
                                CF_defMasDisName = CF_defMasDisName.Replace(d.Tables("calMasFldid").Rows(i).Item("displayname").ToString(), "parseFloat($('#ContentPlaceHolder1_fld" & d.Tables("calMasFldid").Rows(i).Item("Fieldid") & "').val())")
                                defMasDisName &= d.Tables("calMasFldid").Rows(i).Item("fieldid").ToString() & ","
                            Next
                            'CF_defMasDisName
                            If defMasDisName.Length > 0 Then
                                defMasDisName = defMasDisName.Substring(0, defMasDisName.Length - 1)
                            End If
                        End If
                    End If
                End If
            End If
            Dim ob As New DynamicForm()
            displayname = ob.getSafeString_Names(displayname) ' display name not allowed some of special characters like (,';%&)

            ' Dim dw As SqlDataAdapter = New SqlDataAdapter("Select displayname from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and displayName='" & displayname & "' ", con)
            Dim dw As New SqlDataAdapter("", con)
            If (ChildAction = 1) Then
                dw.SelectCommand.CommandText = "Select displayname from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("CHILDACTION") & "' and fieldid <> " & ViewState("PID").ToString() & " and displayName='" & displayname & "' "
            Else
                dw.SelectCommand.CommandText = "Select displayname from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and fieldid <> " & ViewState("PID").ToString() & " and displayName='" & displayname & "' "
            End If

            Dim dw1 As New DataTable
            dw.Fill(dw1)
            If dw1.Rows.Count > 0 Then
                lbMsgField.Visible = True
                lbMsgField.Text = "Please Enter Unique Display Name"
                lblMsgEdit.Text = "Please Enter Unique Display Name"
                BindFielddataGrid()
                updatePanel2.Update()
                updatePanelEdit.Update()
                dw.Dispose()
                dw1.Dispose()
                Exit Sub
            End If
            Dim dq As SqlDataAdapter = New SqlDataAdapter("select Distinct NAME FROM SYS.Columns where object_id in(1166627199,1253579504,37575172,126623494)", con)
            Dim dq1 As New DataTable
            dq.Fill(dq1)
            Dim RW1() As DataRow = dq1.Select("Name  ='" & displayname & "'")
            If RW1.Count > 0 Then
                lbMsgField.Visible = True
                lbMsgField.Text = "This Display Name is Reserve For System"
                lblMsgEdit.Text = "This Display Name is Reserve For System"
                BindFielddataGrid()
                updatePanelEdit.Update()
                updatePanel2.Update()
                updatePanelEdit.Update()
                dq.Dispose()
                dq1.Dispose()
                Exit Sub
            End If
            'Updatig existing values
            If ViewState("Rowfields").ToString() = "Multi LookUP" Then

                oda.SelectCommand.CommandText = "select fieldid,MultiLookUpVal from MMM_MST_FIELDS where MultiLookUpVal like'%-" & ViewState("PID") & ",'"
                oda.SelectCommand.CommandType = CommandType.Text
                Dim multidata As New DataTable
                oda.Fill(multidata)
                If (multidata.Rows.Count > 0) Then
                    For b As Integer = 0 To multidata.Rows.Count - 1
                        Dim sb As New StringBuilder
                        Dim mulstr As String() = multidata.Rows(b)("MultiLookUpVal").ToString().Split(",")
                        For z As Integer = 0 To mulstr.Length - 1
                            If (mulstr(z).ToString().Contains("-" & ViewState("PID"))) Then
                            Else
                                If (mulstr(z).ToString() <> String.Empty) Then
                                    sb.Append(mulstr(z).ToString() & ",")
                                End If

                            End If
                        Next
                        Dim das As New SqlDataAdapter("", con)

                        das.SelectCommand.CommandText = "update MMM_MST_FIELDS set MultiLookUpVal='" & sb.ToString().Replace(",,,", ",").Replace(",,", ",") & "' where FieldID=" & multidata(b)("fieldid") & " and eid=" & Session("EID")
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        das.SelectCommand.ExecuteNonQuery()
                    Next
                End If

            End If
            'Updatig existing values

            'Updatig existing values LT Lookup
            If ViewState("Rowfields").ToString() = "LT Lookup" Then

                oda.SelectCommand.CommandText = "select fieldid,LTLookupval from MMM_MST_FIELDS where LTLookupval like'%$" & ViewState("PID") & ",'"
                oda.SelectCommand.CommandType = CommandType.Text
                Dim multidata As New DataTable
                oda.Fill(multidata)
                If (multidata.Rows.Count > 0) Then
                    For b As Integer = 0 To multidata.Rows.Count - 1
                        Dim sb As New StringBuilder
                        Dim mulstr As String() = multidata.Rows(b)("LTLookupval").ToString().Split(",")
                        For z As Integer = 0 To mulstr.Length - 1
                            If (mulstr(z).ToString().Contains("$" & ViewState("PID"))) Then
                            Else
                                If (mulstr(z).ToString() <> String.Empty) Then
                                    sb.Append(mulstr(z).ToString() & ",")
                                End If

                            End If
                        Next
                        Dim das As New SqlDataAdapter("", con)

                        das.SelectCommand.CommandText = "update MMM_MST_FIELDS set LTLookupval='" & sb.ToString().Replace(",,,", ",").Replace(",,", ",") & "' where FieldID=" & multidata(b)("fieldid") & " and eid=" & Session("EID")
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        das.SelectCommand.ExecuteNonQuery()
                    Next
                End If

            End If
            'Updatig existing values LT Lookup

            'Udating Existing MultiLookup DDL value
            If ViewState("Rowfields").ToString() = "Multi LookupDDL" Then

                oda.SelectCommand.CommandText = "select fieldid,ddlMultilookupval from MMM_MST_FIELDS where ddlMultilookupval like'%-" & ViewState("PID") & ",'"
                oda.SelectCommand.CommandType = CommandType.Text
                Dim multidata As New DataTable
                oda.Fill(multidata)
                If (multidata.Rows.Count > 0) Then
                    For b As Integer = 0 To multidata.Rows.Count - 1
                        Dim sb As New StringBuilder
                        Dim mulstr As String() = multidata.Rows(b)("ddlMultilookupval").ToString().Split(",")
                        For z As Integer = 0 To mulstr.Length - 1
                            If (mulstr(z).ToString().Contains("-" & ViewState("PID"))) Then
                            Else
                                If (mulstr(z).ToString() <> String.Empty) Then
                                    sb.Append(mulstr(z).ToString() & ",")
                                End If

                            End If
                        Next
                        Dim das As New SqlDataAdapter("", con)

                        das.SelectCommand.CommandText = "update MMM_MST_FIELDS set ddlMultilookupval='" & sb.ToString().Replace(",,,", ",").Replace(",,", ",") & "' where FieldID=" & multidata(b)("fieldid") & " and eid=" & Session("EID")
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        das.SelectCommand.ExecuteNonQuery()
                    Next
                End If

            End If
            'Udating Existing MultiLookup DDL value

            oda.SelectCommand.CommandText = "uspUpdateFieldNew4"
            'oda.SelectCommand.CommandText = "NEWuspUpdateFieldNew4"
            oda.SelectCommand.CommandType = CommandType.StoredProcedure
            oda.SelectCommand.Parameters.Clear()
            oda.SelectCommand.Parameters.AddWithValue("FieldID", ViewState("PID").ToString())
            If (ChildAction = 1) Then
                oda.SelectCommand.Parameters.AddWithValue("Formname", ViewState("CHILDACTION").ToString()) 'FormName Added By Komal on 25Oct2013  
            Else
                oda.SelectCommand.Parameters.AddWithValue("Formname", ViewState("FORMNAME").ToString()) 'FormName Added By Komal on 25Oct2013  
            End If
            oda.SelectCommand.Parameters.AddWithValue("SessionFieldVal", SessionFieldVal)
            oda.SelectCommand.Parameters.AddWithValue("EID", Val(Session("EID").ToString()))
            oda.SelectCommand.Parameters.AddWithValue("displayname", displayname)
            oda.SelectCommand.Parameters.AddWithValue("datatype", datatype)
            oda.SelectCommand.Parameters.AddWithValue("isInvoiceAttachment", chkIsEinvattch)
            oda.SelectCommand.Parameters.AddWithValue("isRequired", chkM)
            oda.SelectCommand.Parameters.AddWithValue("isActive", chkA)
            oda.SelectCommand.Parameters.AddWithValue("isEditable", chkE)
            oda.SelectCommand.Parameters.AddWithValue("isWF", chkW)
            oda.SelectCommand.Parameters.AddWithValue("isAutoComplete", autoAC)
            oda.SelectCommand.Parameters.AddWithValue("isUf", chkuni)
            oda.SelectCommand.Parameters.AddWithValue("isDescription", chkD)                              'Added By Komal on 06Jan2014
            oda.SelectCommand.Parameters.AddWithValue("Description", txtBoxDesc)                              'Added By Komal on 06Jan2014
            oda.SelectCommand.Parameters.AddWithValue("dropdown", dropdown)
            oda.SelectCommand.Parameters.AddWithValue("dropdowntype", dropdowntype)
            oda.SelectCommand.Parameters.AddWithValue("DBTBLNAME", tblname)
            oda.SelectCommand.Parameters.AddWithValue("minlen", MinLen)
            oda.SelectCommand.Parameters.AddWithValue("maxlen", MaxLen)
            oda.SelectCommand.Parameters.AddWithValue("RepLookUpVAL", ViewState("RepLookValue").ToString())
            oda.SelectCommand.Parameters.AddWithValue("lookupfield", lookupfield.Trim())
            If ViewState("Rowfields").ToString() = "Lookup" Then
                oda.SelectCommand.Parameters.AddWithValue("lookupvalue", lookupvalue.Trim())
            ElseIf ViewState("Rowfields").ToString() = "LookupDDL" Then
                oda.SelectCommand.Parameters.AddWithValue("DDllookupvalue", lookupvalue.Trim())
            Else
                oda.SelectCommand.Parameters.AddWithValue("lookupvalue", lookupvalue.Trim())
            End If
            oda.SelectCommand.Parameters.AddWithValue("fldSelectId", ViewState("fldID").ToString()) ' when click on edit take  "fieldID" 4247
            oda.SelectCommand.Parameters.AddWithValue("fldSelectIdchange", ViewState("fldIDChange").ToString()) '4277
            oda.SelectCommand.Parameters.AddWithValue("CF_Values", CF_Values.Trim())
            oda.SelectCommand.Parameters.AddWithValue("Cal_Fields", cal_fields.Trim())
            oda.SelectCommand.Parameters.AddWithValue("str", str.Trim())
            oda.SelectCommand.Parameters.AddWithValue("fldid", fldid)
            oda.SelectCommand.Parameters.AddWithValue("filteringtype", filteringtype)
            oda.SelectCommand.Parameters.AddWithValue("fldid_master", fldid_master)
            oda.SelectCommand.Parameters.AddWithValue("luDDChangedId", luDDChangedId)
            oda.SelectCommand.Parameters.AddWithValue("luDDPrvId", luDDPrvId)
            oda.SelectCommand.Parameters.AddWithValue("prevMasdependency", prevMasdependency)
            oda.SelectCommand.Parameters.AddWithValue("prevLookVal", prevLookVal)
            oda.SelectCommand.Parameters.AddWithValue("defMasDisflid", defMasDisName.Trim())
            oda.SelectCommand.Parameters.AddWithValue("CF_defMasDisName", CF_defMasDisName.Trim())
            oda.SelectCommand.Parameters.AddWithValue("fldid_masterLookUp", fldid_masterLookUp)
            oda.SelectCommand.Parameters.AddWithValue("IflookupMVShowValue", IflookupMVShowtext) 'added by pallavi for show text in lookup fields on 1 may 15

            'oda.SelectCommand.Parameters.AddWithValue("geopointsource", ddlgeo.SelectedItem.Text)  
            'If ddlgeo.SelectedItem.Text = "Auto" Then 
            '    If Not ViewState("Autoval") Is Nothing Then
            '        oda.SelectCommand.Parameters.AddWithValue("geopointsfields", ViewState("Autoval").ToString())
            '    End If
            'Else
            '    oda.SelectCommand.Parameters.AddWithValue("geopointsfields", "")                            'Shalini
            'End If
            If ViewState("Rowfields").ToString().Trim() = "Geo Point" Then
                oda.SelectCommand.Parameters.AddWithValue("geopointsource", ddlgeo.SelectedItem.Text)                                         'Shalini
                If ddlgeo.SelectedItem.Text = "Auto" Then
                    If Not ViewState("Autoval") Is Nothing Then
                        oda.SelectCommand.Parameters.AddWithValue("geopointsfields", ViewState("Autoval").ToString())
                    End If
                Else
                    oda.SelectCommand.Parameters.AddWithValue("geopointsfields", "")                            'Shalini
                End If
                For i As Integer = 0 To ChkMapList.Items.Count - 1
                    If ChkMapList.Items(i).Selected = True Then
                        kc_value = kc_value & ChkMapList.Items(i).Value + ","
                    End If
                Next
                kc_value = kc_value.Substring(0, kc_value.Length - 1)
                oda.SelectCommand.Parameters.AddWithValue("kc_value", kc_value.ToString().Trim())
            Else
                oda.SelectCommand.Parameters.AddWithValue("geopointsource", "")
                oda.SelectCommand.Parameters.AddWithValue("kc_value", kc_value.ToString())
            End If

            If autofilter <> "" Then
                oda.SelectCommand.Parameters.AddWithValue("autofilter", autofilter)
            End If
            If fltfldid <> "" Then
                oda.SelectCommand.Parameters.AddWithValue("PLKFLDID", fltfldid)
            End If
            If lkupval <> "" Then
                oda.SelectCommand.Parameters.AddWithValue("LKUPVALUE", lkupval)
            End If
            oda.SelectCommand.Parameters.AddWithValue("REL", REL)
            oda.SelectCommand.Parameters.AddWithValue("FuploadType", Trim(txtFupload.Text))
            oda.SelectCommand.Parameters.AddWithValue("DefaultFldVal", defVal)
            oda.SelectCommand.Parameters.AddWithValue("initialFilter", initialfilter)
            oda.SelectCommand.Parameters.AddWithValue("Cf_text", cftext)
            If ViewState("Rowfields").ToString() = "Catchment" Then
                oda.SelectCommand.Parameters.AddWithValue("iscatchment", catchmentfield)
            End If
            oda.SelectCommand.Parameters.AddWithValue("ddlval", defaulval)
            oda.SelectCommand.Parameters.AddWithValue("DDLlookupValueSource", lookupvaluetext)
            oda.SelectCommand.Parameters.AddWithValue("geofencetype", Trim(ddlgeotype.SelectedItem.Text.ToString))
            oda.SelectCommand.Parameters.AddWithValue("advanceformula", Trim(advanceformula.ToString()))
            oda.SelectCommand.Parameters.AddWithValue("multilookUPfield", Trim(multilookUPfield.ToString()))
            oda.SelectCommand.Parameters.AddWithValue("multilookUPCompositeForm", Trim(multilookUPCompositeForm.ToString()))

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim ist As Integer = oda.SelectCommand.ExecuteScalar()

            'Added By Mayank For Multilook up valued updated
            If ViewState("Rowfields").ToString() = "Multi LookUP" Then
                'Updatig existing values
                'oda.SelectCommand.CommandText = "select fieldid,MultiLookUpVal from MMM_MST_FIELDS where MultiLookUpVal like'%-" & ViewState("PID") & "'"
                'oda.SelectCommand.CommandType = CommandType.Text
                'Dim multidata As New DataTable
                'oda.Fill(multidata)
                'If (multidata.Rows.Count > 0) Then
                '    For b As Integer = 0 To multidata.Rows.Count - 1
                '        Dim sb As New StringBuilder
                '        Dim mulstr As String() = multidata.Rows(b)("MultiLookUpVal").ToString().Split(",")
                '        For z As Integer = 0 To mulstr.Length - 1
                '            If (mulstr(z).ToString().Contains("-" & ViewState("PID"))) Then
                '            Else
                '                sb.Append(mulstr(z).ToString() & ",")
                '            End If
                '        Next
                '        Dim das As New SqlDataAdapter("", con)

                '        das.SelectCommand.CommandText = "update MMM_MST_FIELDS set MultiLookUpVal='" & sb.ToString() & "' where FieldID=" & multidata(b)("fieldid") & " and eid=" & Session("EID")
                '        If con.State <> ConnectionState.Open Then
                '            con.Open()
                '        End If
                '        das.SelectCommand.ExecuteNonQuery()
                '    Next
                'End If
                'Updatig existing values
                'Update new values
                oda.SelectCommand.CommandText = "declare @val nvarchar(max)set @val=(select dropdown from  mmm_mst_fields where fieldid=" & ViewState("PID") & " and eid=" & Session("EID") & ") update mmm_mst_fields set multilookupval= isnull(multilookupval,'') + isnull('" & Trim(multilookUPCompositeForm.ToString()) & "','') +'-'+ isnull('" & Trim(multilookUPfield.ToString()) & "','') +'-'+ cast(" & ViewState("PID") & " as nvarchar)+',' where  eid=" & Session("EID") & " and  FieldID IN (SELECT * FROM DMS.fnSplitter(@val))"
                oda.SelectCommand.CommandType = CommandType.Text
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                oda.SelectCommand.ExecuteNonQuery()
                'Update new values
            End If
            'Added By Mayank For Multilook up valued updated

            'Added By Mayank For LT Lookup valued updated
            If ViewState("Rowfields").ToString() = "LT Lookup" Then
                oda.SelectCommand.CommandText = "declare @val nvarchar(max)set @val=(select dropdown from  mmm_mst_fields where fieldid=" & ViewState("PID") & " and eid=" & Session("EID") & ") update mmm_mst_fields set LTLookupval= isnull(LTLookupval,'') + isnull('" & Trim(Convert.ToString(LTLOOKUPVAL)) & "','') where  eid=" & Session("EID") & " and  FieldID IN (SELECT * FROM DMS.fnSplitter(@val))"
                oda.SelectCommand.CommandType = CommandType.Text
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                oda.SelectCommand.ExecuteNonQuery()
                'Update new values
            End If
            'Added By Mayank For Multilook up valued updated

            'Addeed For MulitLookup DDL value Updated Start here
            If ViewState("Rowfields").ToString() = "Multi LookupDDL" Then
                'Updatig existing values
                'oda.SelectCommand.CommandText = "select fieldid,MultiLookUpVal from MMM_MST_FIELDS where MultiLookUpVal like'%-" & ViewState("PID") & "'"
                'oda.SelectCommand.CommandType = CommandType.Text
                'Dim multidata As New DataTable
                'oda.Fill(multidata)
                'If (multidata.Rows.Count > 0) Then
                '    For b As Integer = 0 To multidata.Rows.Count - 1
                '        Dim sb As New StringBuilder
                '        Dim mulstr As String() = multidata.Rows(b)("MultiLookUpVal").ToString().Split(",")
                '        For z As Integer = 0 To mulstr.Length - 1
                '            If (mulstr(z).ToString().Contains("-" & ViewState("PID"))) Then
                '            Else
                '                sb.Append(mulstr(z).ToString() & ",")
                '            End If
                '        Next
                '        Dim das As New SqlDataAdapter("", con)

                '        das.SelectCommand.CommandText = "update MMM_MST_FIELDS set MultiLookUpVal='" & sb.ToString() & "' where FieldID=" & multidata(b)("fieldid") & " and eid=" & Session("EID")
                '        If con.State <> ConnectionState.Open Then
                '            con.Open()
                '        End If
                '        das.SelectCommand.ExecuteNonQuery()
                '    Next
                'End If
                'Updatig existing values
                'Update new values
                oda.SelectCommand.CommandText = "declare @val nvarchar(max)set @val=(select dropdown from  mmm_mst_fields where fieldid=" & ViewState("PID") & " and eid=" & Session("EID") & ") update mmm_mst_fields set ddlMultilookupval= isnull(ddlMultilookupval,'') + isnull('" & Trim(multilookUPCompositeForm.ToString()) & "','') +'-'+ isnull('" & Trim(multilookUPfield.ToString()) & "','') +'-'+ cast(" & ViewState("PID") & " as nvarchar)+',' where  eid=" & Session("EID") & " and  FieldID IN (SELECT * FROM DMS.fnSplitter(@val))"
                oda.SelectCommand.CommandType = CommandType.Text
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                oda.SelectCommand.ExecuteNonQuery()
                'Update new values
            End If
            'Addeed For MulitLookup DDL value Updated End here
            If Not ViewState("fieldTypeF") Is Nothing Then
                If UCase(ViewState("fieldTypeF")) = "ADVANCE FORMULA" Then
                    Dim da As New SqlDataAdapter("", con)
                    Dim DT As New DataTable()
                    DT = CType(ViewState("datat"), DataTable)
                    ' If Not DT Is Nothing Then

                    da.SelectCommand.CommandText = "Delete  from [MMM_MST_AdvFormulaRelation] where eid=" & Session("EID") & " and FormulaID=" & ViewState("PID").ToString() & " and Type='ADVANCE FORMULA'"
                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If

                    da.SelectCommand.ExecuteNonQuery()

                    For Each gvrow As GridViewRow In gvmap.Rows

                        da.SelectCommand.Parameters.Clear()
                        da.SelectCommand.CommandText = "USP_insertAdvFormulaRelation"
                        da.SelectCommand.CommandType = CommandType.StoredProcedure
                        da.SelectCommand.Parameters.AddWithValue("@eid", Session("EID"))
                        da.SelectCommand.Parameters.AddWithValue("@formulaid", ViewState("PID").ToString())
                        da.SelectCommand.Parameters.AddWithValue("@sourcetype", gvrow.Cells(1).Text.ToString())
                        da.SelectCommand.Parameters.AddWithValue("@sourcename", gvrow.Cells(2).Text.ToString())
                        da.SelectCommand.Parameters.AddWithValue("@s_relationidentifierfiled", gvrow.Cells(5).Text.ToString())
                        da.SelectCommand.Parameters.AddWithValue("@targettype", gvrow.Cells(3).Text.ToString())
                        da.SelectCommand.Parameters.AddWithValue("@targetname", gvrow.Cells(4).Text.ToString())
                        da.SelectCommand.Parameters.AddWithValue("@t_relationidentifierfield", gvrow.Cells(6).Text.ToString())
                        da.SelectCommand.Parameters.AddWithValue("@sortingfield", gvrow.Cells(7).Text.ToString())
                        da.SelectCommand.Parameters.AddWithValue("@uid", Session("UID"))
                        da.SelectCommand.Parameters.AddWithValue("@Type", "ADVANCE FORMULA")
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        da.SelectCommand.ExecuteNonQuery()
                    Next
                    modalpopupadvformula.Hide()
                End If

            End If
            'Check Values For Calculative updated
            If hdnDPName.Value <> "{" & displayname.Trim() & "}" Then
                oda.SelectCommand.CommandText = "update mmm_mst_fields set cal_text= replace(cal_text,'" & hdnDPName.Value & "' ,'{" & displayname & "}') where documenttype='" & ViewState("FORMNAME").ToString() & "' and cal_text like'%" & hdnDPName.Value & "%' and eid=" & Session("EID").ToString()
                oda.SelectCommand.CommandType = CommandType.Text
                Dim dtc As New DataTable
                oda.Fill(dtc)
            End If

            If ist = 0 Then                                                                          'Shalini Sharma
                lblMsgEdit.Text = "Field Updated"
                updatePanelEdit.Update()
                BindFielddataGrid()
                modalpopupadvformula.Hide()
            Else

                lblMsgEdit.Text = "Field Not Updated"
                updatePanelEdit.Update()
                BindFielddataGrid()
            End If
            oda.Dispose()
        End If
        con.Close()
        con.Dispose()
        ClearFields()
    End Sub

    Protected Sub chkautolist_SelectedIndexChanged(sender As Object, e As EventArgs) Handles chkautolist.SelectedIndexChanged
        Dim YrStrListtext As List(Of [String]) = New List(Of String)()
        Dim YrStrListVal As List(Of [String]) = New List(Of String)()

        For Each item As ListItem In chkautolist.Items
            If item.Selected Then
                YrStrListVal.Add(item.Value)
                YrStrListtext.Add(item.Text)
            Else
            End If
        Next
        Dim YrStrval As [String] = [String].Join(",", YrStrListVal.ToArray())
        Dim YrStrtext As [String] = [String].Join(",", YrStrListtext.ToArray())

        ViewState("Autoval") = YrStrval.ToString()
    End Sub

    Protected Sub LockForm(ByVal sender As Object, ByVal e As EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim tid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("Blocktid") = tid
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        da.SelectCommand.CommandText = "select isactive from MMM_MST_Forms where formid=" & ViewState("Blocktid") & " "
        da.SelectCommand.CommandType = CommandType.Text
        Dim ds As New DataSet
        da.Fill(ds, "isactive")
        If ds.Tables("isactive").Rows(0).Item("isactive") = 1 Then
            lblblockform.Text = "Are you Sure Want to Block From - " & row.Cells(1).Text
            btnblocksave.Text = "Block"

        Else
            lblblockform.Text = "Are you Sure Want to Unblock from  - " & row.Cells(1).Text
            btnblocksave.Text = "Unblock"

        End If
        da.Dispose()
        con.Dispose()
        Me.updBlockform.Update()
        Me.MPblockForm.Show()

    End Sub

    Protected Sub BlockFormRecord(ByVal sender As Object, ByVal e As EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
        If btnblocksave.Text = "Block" Then
            DA.SelectCommand.CommandText = "update MMM_MST_Forms set isactive=0 where EID=" & Session("EID") & " and formid=" & ViewState("Blocktid") & ""
        Else
            DA.SelectCommand.CommandText = "update MMM_MST_Forms set isactive=1 where EID=" & Session("EID") & " and formid=" & ViewState("Blocktid") & ""
        End If
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        DA.SelectCommand.ExecuteNonQuery()
        lblMsg.Text = "Updated successfully"
        DA.Dispose()
        con.Dispose()
        BinddataGrid()
        Me.updPnlGrid.Update()
        Me.MPblockForm.Hide()

    End Sub


    Protected Sub ddlType_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlType.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        btnTxtBoxSave.Text = "SAVE"
        btnsignsave.Text = "SAVE"   'Shalini
        btngeosave.Text = "SAVE"   'Shalini
        btnTxtArea.Text = "SAVE"
        btnddlSelect.Text = "SAVE"
        btnChkLstBoxSave.Text = "SAVE"
        btnchkBoxLstSave.Text = "SAVE"
        btnFUSave.Text = "SAVE"
        btnlookUpSave.Text = "SAVE"
        btnDDllookUpSave.Text = "SAVE"
        CF_Save.Text = "SAVE"
        btnDF1.Text = "SAVE"
        btn_chkbox.Text = "SAVE" 'Mayank
        btnCHLDSTSAVE.Text = "save" 'Mayank
        btnVarianceSave.Text = "SAVE" 'Mayank
        btn_mlddlSU.Text = "SAVE" 'Mayank
        formnameonapplyfields()

        If ddlType.SelectedItem.Text = "Text Box" Then
            txtDisplayName.Text = ""
            txtMinlength.Text = ""
            txtMaxL.Text = ""
            txtDescription.Text = ""                                                'Added by Komal on 06Jan2014
            ChkDesc.Checked = False                                                 'Added by Komal on 06Jan2014
            chkFldMandotry.Checked = True
            chkActv.Checked = True
            chkEditable.Checked = True
            chkTextBoxWF.Checked = False
            ddltextBoxItem.SelectedIndex = 0
            Me.updtxtBox.Update()
            ModlPopupTxtBox.Show()
            'Change here for LT Lookup
            'Added Seperator By Mayank
        ElseIf ddlType.SelectedItem.Text = "Separator" Then

            Me.updSeperator.Update()
            ModlPopupSeperator.Show()
        ElseIf ddlType.SelectedItem.Text.ToUpper = "LT LOOKUP" Then
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select displayName,FieldMapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and DropDownType='MASTER VALUED';select formname,formid from MMM_MST_FORMS where eid=" & Session("EID") & " and formsource='MENU DRIVEN' and formType='Document' and  isactive=1;Select case formSource when 'DETAIL FORM ' then 'C' when 'MENU DRIVEN' then 'M' end from mmm_mst_forms where eid=" & Session("EID") & " and formname='" & ViewState("FORMNAME") & "'"
            da.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataSet()
            da.Fill(dt, "VAL")
            If dt.Tables("VAL").Rows.Count > 0 Then
                ddlLLSF.DataSource = dt.Tables("VAL")
                ddlLLSF.DataTextField = "displayName"
                ddlLLSF.DataValueField = "FieldMapping"
                ddlLLSF.DataBind()
                ddlLLSF.Items.Insert("0", New ListItem("Select"))
            Else
                If ddlLLSF.Items.Count > 0 Then
                    ddlLLSF.Items.Clear()
                End If
                ddlLLSF.Items.Insert("0", New ListItem("Select"))
            End If
            If dt.Tables("VAL1").Rows.Count > 0 Then
                ddlLLTS.DataSource = dt.Tables("VAL1")
                ddlLLTS.DataTextField = "formname"
                ddlLLTS.DataValueField = "formid"
                ddlLLTS.DataBind()
                ddlLLTS.Items.Insert("0", New ListItem("Select"))
            Else
                If ddlLLTS.Items.Count > 0 Then
                    ddlLLTS.Items.Clear()
                End If
                ddlLLTS.Items.Insert("0", New ListItem("Select"))
            End If
            If dt.Tables("VAL2").Rows.Count > 0 Then
                ddlLLSC.SelectedValue = dt.Tables("VAL2").Rows(0)(0)
            End If
            Me.updLTLOOKUP.Update()
            ModlPopupLTLOOKUP.Show()

            'Added Field For Variance By mayank 19-Feb-2015 Start Here
        ElseIf ddlType.SelectedItem.Text = "Variance" Then
            txtVariance_DisplayName.Text = ""
            txtVariance_Description.Text = ""
            ChkVarMan.Checked = False
            ChkVarAct.Checked = False
            ChkVarEdit.Checked = False
            ChkVarUQ.Checked = False
            ChkVarWf.Checked = False
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select displayname,Fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and fieldType='Text Box' and datatype='Numeric' and documenttype='" & ViewState("FORMNAME") & "'"
            da.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable()
            da.Fill(dt)
            If (dt.Rows.Count > 0) Then
                ddlSelectFileds.DataSource = dt
                ddlSelectFileds.DataTextField = "displayname"
                ddlSelectFileds.DataValueField = "Fieldmapping"
                ddlSelectFileds.DataBind()
            Else
                If (ddlSelectFileds.Items.Count > 0) Then
                    ddlSelectFileds.Items.Clear()
                End If
            End If
            ddlSelectFileds.Items.Insert("0", New ListItem("SELECT"))
            Me.UpdateVariance.Update()
            mod_Vairance.Show()
            'Added Field For Variance By mayank 19-Feb-2015 End Here
        ElseIf ddlType.SelectedItem.Text = "New Auto Number" Then                     'Shalini Sharma
            txtdisplynewauto.Text = ""
            'chkmannewauto.Checked = False
            'chkactnewauto.Checked = False
            'chkeditnewauto.Checked = False
            'chkwofnewauto.Checked = False 
            'da.SelectCommand.CommandText = "SELECT FormName FROM MMM_MST_FORMS WHERE EID = " & Session("EID").ToString() & " and FormType='MASTER' order by Formname "
            'Dim dt1 As New DataTable()
            'da.Fill(dt1)
            'ddlform.Items.Clear()
            'For i As Integer = 0 To dt1.Rows.Count - 1
            '    ddlform.Items.Add(dt1.Rows(i).Item(0))
            'Next
            'ddlform.Items.Insert(0, "SELECT")

            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "Select displayName,FieldID from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ViewState("FORMNAME").ToString() & "'  and (dropdown  like '%master%' or dropdown  like '%user%')  "
            da.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable()
            da.Fill(dt)
            ddlfieldss.Items.Clear()
            ddlfieldss.DataSource = dt
            ddlfieldss.DataValueField = "FieldID"
            ddlfieldss.DataTextField = "displayname"
            ddlfieldss.DataBind()
            ddlfieldss.Items.Insert(0, "SELECT")
            da.Dispose()
            Me.updnewAutonumber.Update()
            ModalPop_newautoNumber.Show()


        ElseIf ddlType.SelectedItem.Text = "Signature" Then                     'Shalini Sharma
            txtdisplysign.Text = ""
            txtfieldsignmin.Text = ""
            txtfieldsignmax.Text = ""
            txtDescription.Text = ""
            chkfieldsigndes.Checked = False
            chkfieldsignman.Checked = True
            chkfieldsignact.Checked = True
            chkfieldsignedit.Checked = True
            chkfieldsignwf.Checked = False
            ddldatatypesign.SelectedIndex = 0
            Me.UpSignature.Update()
            mdlpopup_signature.Show()
        ElseIf ddlType.SelectedItem.Text = "Parent Value" Then                     'Pallavi
            txtParentVal_DisplayNm.Text = ""
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select Documenttype from mmm_mst_fields where eid = " & Session("EID").ToString() & "  and Fieldtype='Child Item' and Dropdown ='" & ViewState("FORMNAME").ToString() & "'"
            da.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable()
            da.Fill(dt)
            ddlParentVal_Parentdoc.DataSource = dt
            ddlParentVal_Parentdoc.DataTextField = "Documenttype"
            ddlParentVal_Parentdoc.DataValueField = "Documenttype"
            ddlParentVal_Parentdoc.DataBind()
            ddlParentVal_Parentdoc.Items.Insert(0, "Select Parent")

            Me.upd_ParentVal.Update()
            modalpopup_ParentVal.Show()

        ElseIf ddlType.SelectedItem.Text = "Geo Point" Then                     'Shalini Sharma
            txtgeodisplay.Text = ""
            txtfgeomin.Text = ""
            txtfgeomax.Text = ""
            txtgeodes.Text = ""
            chkgeodes.Checked = False
            chkgeoman.Checked = True
            chkgeoact.Checked = True
            chkgeoedit.Checked = True
            chkgeoWF.Checked = False
            ddltypegeo.SelectedIndex = 0
            txtdefgeo.Text = ""
            ddlgeo.SelectedIndex = 0
            autochk.Visible = False
            Dim eid As String = Session("EID").ToString()
            Dim FORMNAME As String = ViewState("FORMNAME").ToString()
            Dim daa As New SqlDataAdapter("Select displayname,fieldmapping from mmm_mst_fields where eid=" & eid & " and documenttype='" & FORMNAME & "' order by displayname", con)
            daa.SelectCommand.CommandType = CommandType.Text
            Dim dss As New DataSet()
            daa.Fill(dss, "data123")
            ChkMapList.DataSource = dss.Tables("data123")
            ChkMapList.DataTextField = "displayname"
            ChkMapList.DataValueField = "fieldmapping"
            ChkMapList.DataBind()
            Me.Upgeo.Update()
            mdl_geo.Show()

        ElseIf ddlType.SelectedItem.Text = "Geo Fence" Then                     'Shalini Sharma
            txtdisplaynamefence.Text = ""
            txtdesnamefence.Text = ""
            ddldatatypegeofence.SelectedIndex = 0
            txtminfence.Text = ""
            txtmaxfence.Text = ""
            chkmanfence.Checked = True
            chkactfence.Checked = True
            chkeditfence.Checked = True
            chkflowfence.Checked = False
            chkunifence.Checked = False
            chkdescfence.Checked = False

            Me.Upgeofence.Update()
            mdl_geofence.Show()

        ElseIf ddlType.SelectedItem.Text = "Check Box" Then 'Mayank add for check box
            lblChkBox.Text = ViewState("FORMNAME")
            txtchkboxDN.Text = ""
            txtchkboxDS.Text = ""
            txtchkboxDT.Text = ""
            ChkboxMan.Checked = True
            ChkboxAct.Checked = True
            ChkboxEdit.Checked = True
            chkboxwf.Checked = False
            chkboxun.Checked = False
            chkboxdes.Checked = False
            Me.Upchkbox.Update()
            mdl_chkbox.Show()

        ElseIf ddlType.SelectedItem.Text = "Auto Number" Then
            txtAutoNumbrDisplay.Text = ""
            txtPrefix.Text = ""
            txtSeriesNumber.Text = ""
            autoChkMan.Checked = True
            autoChkActive.Checked = True
            updAutonumber.Update()
            ModalPop_autoNumber.Show()


        ElseIf ddlType.SelectedItem.Text = "Advance Formula" Then
            txtdisplaynameadvform.Text = ""
            txtdescadvform.Text = ""
            updpaneladvanceformula.Update()
            modalpopupadvformula.Show()
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "Select  upper(formname)[Formname],formid,formtype from mmm_mst_forms where eid=" & Session("EID") & "  order by formname"
            da.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable
            da.Fill(dt)
            ddladvfodoctype.DataSource = dt
            ddladvfodoctype.DataTextField = "formname"
            ddladvfodoctype.DataValueField = "formid"
            ddladvfodoctype.DataBind()
            ddladvfodoctype.SelectedItem.Text = ViewState("FORMNAME")
            Dim drr() As DataRow
            drr = dt.Select("formname='" & ViewState("FORMNAME") & "'")
            ddladvfoftype.SelectedItem.Text = Convert.ToString(drr(0).Item("FormType"))
            If Not ViewState("FORMNAME") Is Nothing Then
                Call LoadWorkGroupTree(ViewState("FORMNAME"))
            End If


        ElseIf ddlType.SelectedItem.Text = "Text Area" Then
            txtDispalyNameArea.Text = ""
            txtareaMaxLength.Text = ""
            txtareaMinLength.Text = ""
            chktxtAreaMandatory.Checked = True
            chktxtAreaActive.Checked = True
            chktxtAreaEditable.Checked = True
            chkTxtAreaWF.Checked = False
            ddlDataTypesArea.SelectedIndex = 0
            updtxtArea.Update()
            ModalPopUpTxtArea.Show()

        ElseIf ddlType.SelectedItem.Text = "Drop Down" Then
            ddlDropDownMasteValSelect.Items.Clear()
            ddlDropDownFieldSelect.Items.Clear()
            lblDdlvalue.Visible = True
            txtdropDownValued.Visible = True
            txtdropDownValued.Text = ""
            ddlDropDownMasteValSelect.Visible = True
            ddlDropDownFieldSelect.Visible = True
            ddlDispalyName.Text = ""
            chkDdlMan.Checked = True
            chkDdlEditable.Checked = True
            chkDdlWF.Checked = False
            chkDlActive.Checked = True
            chkAutoCom.Visible = False     'Shalini
            lbldfaultvalfld.Visible = False 'Shalini
            ddldfultvalfld.Visible = False 'Shalini
            ddlDropdownList.SelectedIndex = 0
            ddlFltrSource.Items.Clear()
            ddlFltrMapping.Items.Clear()
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select displayname,fieldMapping from mmm_mst_fields where eid=" & Session("EID") & " and UsableSession=1"
            da.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable()
            da.Fill(dt)
            If ddlSessionFieldVal.Items.Count > 0 Then
                ddlSessionFieldVal.Items.Clear()
            End If
            If dt.Rows.Count > 0 Then
                ddlSessionFieldVal.DataSource = dt
                ddlSessionFieldVal.DataTextField = "displayname"
                ddlSessionFieldVal.DataValueField = "fieldMapping"
                ddlSessionFieldVal.DataBind()
            End If
            ddlSessionFieldVal.Items.Insert("0", New ListItem("SELECT FIELD"))

            updDropdownSelected.Update()
            ModalPopUpDropDown.Show()
        ElseIf ddlType.SelectedItem.Text = "List Box" Then

            ddlLstMasterSelect.Items.Clear()
            ddlLstBxField.Items.Clear()
            txtListBoxDisplayName.Text = ""
            chkLstBoxActive.Checked = True
            chkLstBoxEditable.Checked = True
            chklstBoxMan.Checked = True
            chkLstBoxWF.Checked = False
            ddlListBoxValued.SelectedIndex = 0
            updLstBox.Update()
            ModalPopupListBox.Show()
        ElseIf ddlType.SelectedItem.Text = "CheckBox List" Then
            ddlChkfieldVal.Items.Clear()
            ddlChkMasterSelect.Items.Clear()
            txtChkBoxList.Text = ""
            txtChkListBox.Text = ""
            chklstMandatory.Checked = True
            ChklistBoxActive.Checked = True
            chklistBoxEditable.Checked = True
            chkListBoxWF.Checked = False
            ddlChkListBox.SelectedIndex = 0
            updChk.Update()
            ModalPopupChkListBoxSelect.Show()
        ElseIf ddlType.SelectedItem.Text = "File Uploader" Then
            txtFUDiaplayName.Text = ""
            chkFUActive.Checked = True
            chkFUEditable.Checked = True
            chkFUMandaotry.Checked = True
            txtFupload.Text = ""
            chkFUWF.Checked = False
            ImgType.Visible = False
            txtDPFU.Attributes.Add("readonly", "readonly")
            ddlFUDataTypes.SelectedIndex = 0
            updFU.Update()
            ModalPopupFileUoloader.Show()

        ElseIf ddlType.SelectedItem.Text = "Formula Field" Then
            txtFormulaName.Text = ""
            txtFormulaText.Text = ""

            chkformulaActive.Checked = True
            chkformulaRunable.Checked = True
            'ddlFormulaDoc.SelectedIndex = 0
            Dim da As New SqlDataAdapter("select Fieldid, displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & "  and documenttype='" + ViewState("FORMNAME") + "' and isactive=1", con)
            da.SelectCommand.CommandType = CommandType.Text
            Dim ds As New DataSet
            da.Fill(ds, "FieldName")
            Dim strFields As String = ""
            For Each dr As DataRow In ds.Tables("FieldName").Rows
                strFields &= "{" & dr.Item("displayname").ToString() & "}"
                strFields &= Environment.NewLine
            Next
            txtformulaVar.Text = strFields.ToString()
            UP_formulatxt.Update()
            MP_FormulaText.Show()

        ElseIf ddlType.SelectedItem.Text.ToUpper() = "CHILD ITEM MAX" Then
            TXTChilddisplay.Text = ""
            ddlchildF.Items.Clear()
            ddlchildHFF.Items.Clear()

            Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM'", con)
            Dim ds As New DataSet
            da.Fill(ds, "FieldName")
            If ds.Tables("FieldName").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                    ddlchildF.Items.Add(ds.Tables("FieldName").Rows(i).Item("FormName").ToString())
                    ddlchildF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("formid").ToString()
                Next
                ddlchildF.Items.Insert(0, "Select Field")
            End If
            Upchildmax.Update()
            mdl_childmax.Show()

        ElseIf ddlType.SelectedItem.Text.ToUpper() = "CHILD ITEM TOTAL" Then
            TXTCHT.Text = ""
            DDLCHF.Items.Clear()
            DDLCHFF.Items.Clear()
            'Change By Mayank it will show only more clarified data not for all
            Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM' and formname in(select dropdown from mmm_mst_fields where documenttype='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & " and fieldtype='Child Item')", con)
            Dim ds As New DataSet
            da.Fill(ds, "FieldName")
            If ds.Tables("FieldName").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                    DDLCHF.Items.Add(ds.Tables("FieldName").Rows(i).Item("FormName").ToString())
                    DDLCHF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("formid").ToString()
                Next
                DDLCHF.Items.Insert(0, "Select Field")
            End If
            UpDCHT.Update()
            ModalPopupCHT.Show()

        ElseIf ddlType.SelectedItem.Text.ToUpper() = "CHILD ITEM SPECIFIC TEXT" Then
            lblmsgCHLDST.Text = String.Empty
            txtCHLDSTD.Text = ""
            ddlCHLDSTC.Items.Clear()
            ddlCHLDSTCommanChld.Items.Clear()
            ddlCHLDCommanVal.Items.Clear()
            Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM' and formname in(select dropdown from mmm_mst_fields where documenttype='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & " and fieldtype='Child Item')", con)
            Dim ds As New DataSet
            da.Fill(ds, "FieldName")
            If ds.Tables("FieldName").Rows.Count > 0 Then
                ddlCHLDSTC.DataSource = ds.Tables("FieldName")
                ddlCHLDSTC.DataTextField = "formname"
                ddlCHLDSTC.DataValueField = "Formid"
                ddlCHLDSTC.DataBind()
                ddlCHLDSTC.Items.Insert("0", New ListItem("Select Field"))
            End If
            upCHLDST.Update()
            mod_CHLDST.Show()
        ElseIf ddlType.SelectedItem.Text = "Lookup" Then
            txtLookUP.Text = ""
            txtlukupdesc.Text = ""
            chkShowText.Checked = True
            lukup.Visible = False
            ddlLUdatatypes.SelectedIndex = 0
            ddlLookUpField.Items.Clear()
            ddlLookUpMasterField.Items.Clear()
            updatepanelLookUp.Update()
            ' Dim da As New SqlDataAdapter("SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED') AND fieldtype='Drop Down' and  DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " ", con)
            Dim da As New SqlDataAdapter("SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED') AND fieldtype in ('Drop Down','AutoComplete') and  DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " ", con)
            Dim ds As New DataSet()
            da.Fill(ds, "Master")
            ddlLookUpMasterField.Controls.Clear()
            If ds.Tables("Master").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
                    ddlLookUpMasterField.Items.Add(ds.Tables("Master").Rows(i).Item("displayName").ToString())
                    ddlLookUpMasterField.Items(i).Value = ds.Tables("Master").Rows(i).Item("fieldid").ToString()
                Next
                ddlLookUpMasterField.Items.Insert(0, "Select Field")
            End If
            da.Dispose()
            ds.Dispose()
            updatepanelLookUp.Update()
            ModalPopupLookUp.Show()
        ElseIf ddlType.SelectedItem.Text = "LookupDDL" Then
            txtDDlLookUP.Text = ""
            txtDDllukupdesc.Text = ""
            DDllukup.Visible = False
            ddlDDlLUdatatypes.SelectedIndex = 0
            ddlDDlLookUpField.Items.Clear()
            ddlDDlLookUpMasterField.Items.Clear()
            updatepanelDDlLookUp.Update()
            ' Dim da As New SqlDataAdapter("SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED') AND fieldtype='Drop Down' and  DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " ", con)
            Dim da As New SqlDataAdapter("SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED','SESSION VALUED') AND fieldtype in ('Drop Down','AutoComplete') and  DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " ", con)   ' added session valued  
            Dim ds As New DataSet()
            da.Fill(ds, "Master")
            ddlDDlLookUpMasterField.Controls.Clear()
            If ds.Tables("Master").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
                    ddlDDlLookUpMasterField.Items.Add(ds.Tables("Master").Rows(i).Item("displayName").ToString())
                    ddlDDlLookUpMasterField.Items(i).Value = ds.Tables("Master").Rows(i).Item("fieldid").ToString()
                Next
                ddlDDlLookUpMasterField.Items.Insert(0, "Select Field")
            End If
            da.Dispose()
            ds.Dispose()
            updatepanelDDlLookUp.Update()
            ModalPopupDDlLookup.Show()

            'added on 28th jan
        ElseIf ddlType.SelectedItem.Text.ToUpper() = "MULTI LOOKUP" Then
            txtdpML.Text = ""
            txtdescML.Text = ""
            ddlftypeML.SelectedIndex = 0
            ddlfieldsMLC.Items.Clear()

            ddlcompositeForm.Items.Clear()
            lengthML.Visible = False
            If (chklistMultiLookup.Items.Count > 0) Then
                chklistMultiLookup.Items.Clear()
            End If
            ddlFtypeMultiL.SelectedIndex = 0

            UpdpanelMultiLookUp.Update()
            modalpopupMultiLookUP.Show()
        ElseIf ddlType.SelectedItem.Text.ToUpper() = "MULTI LOOKUPDDL" Then
            txtmlddldn.Text = ""
            Ddlmlddldt.SelectedIndex = 0
            txtmlddlDs.Text = ""
            ddlmlddlft.SelectedIndex = 0
            ddlmlddlcf.Items.Clear()
            ddlmlddlf.Items.Clear()
            UpMultiLookUpddl.Update()
            Me.Mod_mlddl.Show()

        ElseIf ddlType.SelectedItem.Text = "Calculative Field" Then
            CF_txtdisplayname.Text = ""
            Dim da As New SqlDataAdapter("select Fieldid, displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric'", con)
            Dim ds As New DataSet
            da.Fill(ds, "FieldName")
            ViewState("FieldName") = ds.Tables("FieldName")
            Dim strFields As String = ""
            For Each dr As DataRow In ds.Tables("FieldName").Rows
                strFields &= dr.Item("displayname").ToString()
                strFields &= Environment.NewLine
            Next
            CF_TxtFields.Text = strFields.ToString()
            da.Dispose()
            ds.Dispose()
            upd_CF.Update()
            CFModalPopup.Show()
        ElseIf ddlType.SelectedItem.Text.ToUpper() = "CHILD ITEM" Then
            TextBox1.Text = ""
            DFChkM.Checked = True
            DFchkA.Checked = True
            DFchkE.Checked = True
            ChkRef.Checked = False
            ddlref.Enabled = False
            ddlDF.Items.Clear()
            UpdPnlDF.Update()
            Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM'", con)
            Dim ds As New DataSet
            da.Fill(ds, "FieldName")
            If ds.Tables("FieldName").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                    ddlDF.Items.Add(ds.Tables("FieldName").Rows(i).Item("FormName").ToString())
                    ddlDF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("formid").ToString()
                Next
                ddlDF.Items.Insert(0, "Select Field")
            End If
            da.SelectCommand.CommandText = "Select displayname,fieldid from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' AND DROPDOWNTYPE='MASTER VALUED' "
            da.Fill(ds, "FIELDS")
            ddlMFF.Items.Clear()
            If ds.Tables("FIELDS").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("FIELDS").Rows.Count - 1
                    ddlMFF.Items.Add(ds.Tables("FIELDS").Rows(i).Item(0))
                    ddlMFF.Items(i).Value = ds.Tables("FIELDS").Rows(i).Item(1).ToString()
                Next
                ddlMFF.Items.Insert(0, "SELECT ONE")
            End If
            da.Dispose()
            con.Dispose()
            UpdPnlDF.Update()
            DFModalPopup.Show()

        ElseIf ddlType.SelectedItem.Text.ToUpper() = "SELF REFERENCE" Then
            ddlSF.Items.Clear()
            Dim da As New SqlDataAdapter("select  DocumentType,FM.FormType   from MMM_MST_FIELDS FF inner join MMM_MST_FORMS FM ON FF.DocumentType =FM.FormName  where FieldType ='parent Field' AND FF.EID=" & Session("EID") & "", con)
            Dim ds As New DataSet
            da.Fill(ds, "FieldName")
            If ds.Tables("FieldName").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                    ddlSF.Items.Add(ds.Tables("FieldName").Rows(i).Item("Documenttype").ToString())
                    ddlSF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("FieldName").Rows(i).Item("Documenttype").ToString()
                Next
                ddlSF.Items.Insert(0, "Select Field")
                UpdPnlSF.Update()
                SRF_ModalPopup.Show()
            End If
        ElseIf ddlType.SelectedItem.Text.ToUpper() = "PARENT FIELD" Then
            ddlPR.Items.Clear()
            Dim da As New SqlDataAdapter("select displayname, fieldmapping,documenttype from MMM_MST_Fields where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "'", con)
            Dim ds As New DataSet
            da.Fill(ds, "FieldName")
            If ds.Tables("FieldName").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                    ddlPR.Items.Add(ds.Tables("FieldName").Rows(i).Item("displayname").ToString())
                    ddlPR.Items(i).Value = ViewState("FORMTYPE").ToString() & "-" & ds.Tables("FieldName").Rows(i).Item("documenttype").ToString() & "-" & ds.Tables("FieldName").Rows(i).Item("fieldmapping").ToString()
                Next
                ddlPR.Items.Insert(0, "Select Field")
                UpdPNLPR.Update()
                PR_ModalPopup.Show()
            End If




        End If



        con.Dispose()
    End Sub


    Protected Sub ddlDataTypesArea_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs)

        If (ddlType.SelectedItem.Text = "Text Area") And (ddlDataTypesArea.SelectedItem.Text = "Datetime") Then
            txtareaMinLength.ReadOnly = True
            txtareaMaxLength.ReadOnly = True
        End If
    End Sub
    Protected Sub BindChildItemForActionScreen(ByVal str As String)

    End Sub
    Protected Sub AddFields(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("Formid") = Formid
        Dim FrmSrc As String = ""
        Dim Eventname As String = ""
        Dim FN As String = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        da.SelectCommand.CommandText = "select FormName ,FormSource ,EventName,FORMTYPE,hasDefaultValue,ChidFormforActionScreen,ChidFormforActionScreen_Rights  from MMM_MST_FORMS where FormID=" & Formid & ""
        da.Fill(ds, "FormDetail")
        If ds.Tables("FormDetail").Rows(0).Item("FormSource") = "MENU DRIVEN" And Val(ds.Tables("FormDetail").Rows(0).Item("hasDefaultValue").ToString) = 1 Then
            Dim arra As String() = Split(ds.Tables("FormDetail").Rows(0).Item("Formname").ToString(), "_")
            If arra(1) = "MASTER" Then
                lblblockform.Text = "This form can't be ADD fields because it is dependent on other form "
                btnblocksave.Visible = False
                updBlockform.Update()
                MPblockForm.Show()
                Exit Sub
            End If

        End If
        ViewState("FS") = ds.Tables("FormDetail").Rows(0).Item("FormSource").ToString()
        FrmSrc = ds.Tables("FormDetail").Rows(0).Item("FormSource").ToString()

        If Not (FrmSrc.Trim().ToUpper() = "DETAIL FORM") Then
            ddlType.Items.Remove("Parent Value")
        End If

        Eventname = ds.Tables("FormDetail").Rows(0).Item("EventName").ToString()
        FN = ds.Tables("FormDetail").Rows(0).Item("FormName").ToString()
        ViewState("FORMNAME") = FN
        fnames()
        updatefname.Update()
        ViewState("EN") = Eventname
        ViewState("FORMTYPE") = ds.Tables("FormDetail").Rows(0).Item("FORMTYPE").ToString()
        If UCase(FrmSrc) = "ACTION DRIVEN" Then

            txtEnblCRM.Enabled = True
            'Dim conStrs As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            'Dim cons As New SqlConnection(conStrs)
            'Dim das As SqlDataAdapter = New SqlDataAdapter("", cons)
            'Dim dtChild As New DataTable
            'das.SelectCommand.CommandText = "select displayname,dropdown from mmm_mst_fields where DocumentType='" & ds.Tables("FormDetail").Rows(0).Item("EventName").ToString().Trim() & "' and  FieldType='Child Item' and eid=" & Session("EID")
            'das.Fill(dtChild)
            Session("FORMNAME") = FN
            Session("EVENTNAME") = Eventname
            Session("CHILDACTIONSCREEN") = ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen").ToString()
            Dim strs As String()
            If (ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen").ToString() <> String.Empty) Then
                strs = ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen").ToString().Split(",")
                If (strs.Length > 0) Then
                Else
                    strs(0) = ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen").ToString()
                End If
            End If

            'pnlGrid1.Controls.Add(New LiteralControl("<tr>"))
            'pnlGrid1.Controls.Add(New LiteralControl("<td colspan='4'>"))
            'pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabs"" ><ul>"))
            'pnlGrid1.Controls.Add(New LiteralControl("<li><a href=""#tabPending0"">" & FN.ToString() & "<asp:Label ID=""lblpending0"" runat=""server""></asp:Label></a></li>"))
            'For j As Integer = 1 To strs.Length
            '    pnlGrid1.Controls.Add(New LiteralControl("<li><a href=""#tabPending" & j.ToString() & """>" & Right(strs(j - 1).ToString(), strs(j - 1).Length - 4) & "<asp:Label ID=""lblpending" & j & " "" runat=""server""></asp:Label></a></li>"))
            'Next
            'pnlGrid1.Controls.Add(New LiteralControl("</ul>"))

            BindFielddataGrid1(Eventname, FN, Convert.ToString(ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen_Rights")))
            'Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            'Dim con1 As New SqlConnection(conStr1)
            'Dim oda1 As New SqlDataAdapter("", con1)
            'Dim ds1 As New DataSet


            'oda1.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & FN & "' and EID=" & Session("eid") & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='" & FN & "' and EID=" & Session("eid") & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & Eventname & "' and  F.EID = " & Session("EID") & "   Order By Displayorder"
            'oda1.Fill(ds1, "data")
            'pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabPending0"" style=""min-height:50px;max-height:200px;overflow-x:scroll;overflow-y:scroll;width:700px;"">"))
            'Dim GRDCHLDVIEWMAIN As New GridView
            'GRDCHLDVIEWMAIN.AutoGenerateColumns = "TRUE"
            'GRDCHLDVIEWMAIN.ID = "GRD_" & FN.ToString().Replace(" ", "_")
            'GRDCHLDVIEWMAIN.Width = "600"
            'GRDCHLDVIEWMAIN.CssClass = "mGrid"
            'GRDCHLDVIEWMAIN.AlternatingRowStyle.CssClass = "alt"
            'AddHandler GRDCHLDVIEWMAIN.RowDataBound, AddressOf gvData_InlineEdit
            'GRDCHLDVIEWMAIN.DataSource = ds1.Tables("data")
            'GRDCHLDVIEWMAIN.DataBind()
            'pnlGrid1.Controls.Add(GRDCHLDVIEWMAIN)

            'pnlGrid1.Controls.Add(New LiteralControl("</div>"))
            'For i As Integer = 1 To strs.Length
            '    Dim conStrsS As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            '    Dim consS As New SqlConnection(conStrsS)
            '    Dim dasS As SqlDataAdapter = New SqlDataAdapter("", consS)
            '    Dim dtChildS As New DataTable
            '    dasS.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & Right(strs(i - 1).ToString(), strs(i - 1).Length - 4) & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='CAS." & Right(strs(i - 1).ToString(), strs(i - 1).Length - 4) & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & Right(strs(i - 1).ToString(), strs(i - 1).Length - 4) & "' and  F.EID = " & Session("EID").ToString() & "   Order By Displayorder"
            '    dasS.Fill(dtChildS)
            '    If (dtChildS.Rows.Count > 0) Then
            '        pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabPending" & i.ToString() & """style=""min-height:50px;overflow-x:scroll;overflow-y:scroll;width:700px;"">"))
            '        Dim GRDCHLDVIEW As New GridView
            '        GRDCHLDVIEW.AutoGenerateColumns = "TRUE"
            '        GRDCHLDVIEW.ID = "GRD_" & Right(strs(i - 1).ToString(), strs(i - 1).Length - 4).ToString().Replace(" ", "_")
            '        GRDCHLDVIEW.Width = "600"
            '        GRDCHLDVIEW.CssClass = "mGrid"
            '        GRDCHLDVIEW.AlternatingRowStyle.CssClass = "alt"
            '        AddHandler GRDCHLDVIEW.RowDataBound, AddressOf gvData_InlineEdit
            '        GRDCHLDVIEW.DataSource = dtChildS
            '        GRDCHLDVIEW.DataBind()
            '        pnlGrid1.Controls.Add(GRDCHLDVIEW)
            '        pnlGrid1.Controls.Add(New LiteralControl("</div>"))
            '    End If

            'Next
            'pnlGrid1.Controls.Add(New LiteralControl("</div>"))

            lbMsgField.Text = ""
            btnF_ModalPopupExtender.Show()
            updatePanel2.Update()
        Else
            BindFielddataGrid()
            ClearFields()
            updatePanelEdit.Update()
            btnEdit_ModalPopupExtender.Show()
        End If
        con.Dispose()
        Clear()

    End Sub
    Protected Sub gvData_InlineEdit(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs)
        Try

            If (e.Row.RowType = DataControlRowType.Header) Then
                e.Row.Cells(0).Text = ""
            End If
            If (e.Row.RowType = DataControlRowType.DataRow) Then
                Dim cb As New CheckBox
                cb.ID = "chkbox_" & e.Row.Cells(0).Text
                If (e.Row.Cells(8).Text = 1) Then
                    cb.Checked = True
                Else
                    cb.Checked = False
                End If
                e.Row.Cells(0).Controls.Add(cb)

                Dim cbs As New CheckBox
                cbs.ID = "ChkEdit"
                If (e.Row.Cells(7).Text = 1) Then
                    cbs.Checked = True
                Else
                    cbs.Checked = False
                End If
                e.Row.Cells(7).Controls.Add(cbs)
            End If
            'e.Row.Cells(0).Visible = False
            e.Row.Cells(3).Visible = False
            e.Row.Cells(4).Visible = False
            e.Row.Cells(5).Visible = False
            e.Row.Cells(8).Visible = False
        Catch ex As Exception

        End Try
    End Sub
    Protected Sub PositionUpAction(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If row.RowIndex = 0 Then
            Exit Sub
        End If

        Dim tid As Integer = Convert.ToString(Me.GrdAction.DataKeys(row.RowIndex).Value)
        Dim ntid As Integer = Convert.ToString(Me.GrdAction.DataKeys(row.RowIndex - 1).Value)

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspFieldPositionUpdate", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("tid", tid)
        oda.SelectCommand.Parameters.AddWithValue("ntid", ntid)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        BindFielddataGrid1(Session("EVENTNAME"), Session("FORMNAME"), Nothing)
        con.Close()
        oda.Dispose()
        con.Dispose()
        updatePanelEdit.Update()
    End Sub

    Protected Sub SearchingPositionUp(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If row.RowIndex = 0 Then
            Exit Sub
        End If

        Dim tid As Integer = Convert.ToString(Me.GridViewSorting.DataKeys(row.RowIndex).Value)
        Dim ntid As Integer = Convert.ToString(Me.GridViewSorting.DataKeys(row.RowIndex - 1).Value)

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspDocDtlFieldPositionUpdate", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("tid", tid)
        oda.SelectCommand.Parameters.AddWithValue("ntid", ntid)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        BindDocDetailSortingDataGrid()
        con.Close()
        oda.Dispose()
        con.Dispose()
        UpdatepanelSorting.Update()
    End Sub
    Protected Sub PositionUp(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If row.RowIndex = 0 Then
            Exit Sub
        End If

        Dim tid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex).Value)
        Dim ntid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex - 1).Value)

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspFieldPositionUpdate", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("tid", tid)
        oda.SelectCommand.Parameters.AddWithValue("ntid", ntid)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        BindFielddataGrid()
        con.Close()
        oda.Dispose()
        con.Dispose()
        updatePanelEdit.Update()
    End Sub
    Protected Sub PositionDownAction(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If row.RowIndex >= gvUsers.Rows.Count - 1 Then
            Exit Sub
        End If

        Dim tid As Integer = Convert.ToString(Me.GrdAction.DataKeys(row.RowIndex).Value)
        Dim ntid As Integer = Convert.ToString(Me.GrdAction.DataKeys(row.RowIndex + 1).Value)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspFieldPositionUpdate", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("tid", tid)
        oda.SelectCommand.Parameters.AddWithValue("ntid", ntid)

        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        BindFielddataGrid1(Session("EVENTNAME"), Session("FORMNAME"), Nothing)
        con.Close()
        oda.Dispose()
        con.Dispose()
        updatePanelEdit.Update()
    End Sub
    Protected Sub SearchingPositionDown(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If row.RowIndex >= GridViewSorting.Rows.Count - 1 Then
            Exit Sub
        End If

        Dim tid As Integer = Convert.ToString(Me.GridViewSorting.DataKeys(row.RowIndex).Value)
        Dim ntid As Integer = Convert.ToString(Me.GridViewSorting.DataKeys(row.RowIndex + 1).Value)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspDocDtlFieldPositionUpdate", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("tid", tid)
        oda.SelectCommand.Parameters.AddWithValue("ntid", ntid)

        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        BindDocDetailSortingDataGrid()
        con.Close()
        oda.Dispose()
        con.Dispose()
        UpdatepanelSorting.Update()
    End Sub
    Protected Sub PositionDown(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If row.RowIndex >= gvUsers.Rows.Count - 1 Then
            Exit Sub
        End If

        Dim tid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex).Value)
        Dim ntid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex + 1).Value)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspFieldPositionUpdate", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("tid", tid)
        oda.SelectCommand.Parameters.AddWithValue("ntid", ntid)

        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        BindFielddataGrid()
        con.Close()
        oda.Dispose()
        con.Dispose()
        updatePanelEdit.Update()
    End Sub

    Protected Sub DeleteHitUser(ByVal sender As Object, ByVal e As System.EventArgs)
        Try
            Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
            Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
            Dim tid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex).Value)
            ViewState("Deltid") = tid
            ViewState("delDependancy") = ""
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select fieldID , dependenton from MMM_MST_FIELDS where EID=" & Session("EID") & " and fieldID=" & ViewState("Deltid") & " and dependenton is not null and dependenton<>'' "
            Dim ds As New DataSet()
            da.Fill(ds, "deltid")
            If ds.Tables("deltid").Rows.Count > 0 Then
                Dim fldID As String = ds.Tables("deltid").Rows(0).Item("dependentOn").ToString()
                If Right(fldID, 1) = "," Then
                    fldID = Left(fldID, fldID.Length - 1)
                End If
                'searching dependent field is present or not 
                da.SelectCommand.CommandText = "select * from MMM_MST_Fields where EID=" & Session("EID") & " and fieldid in (" & fldID & ")"
                da.SelectCommand.CommandType = CommandType.Text
                da.Fill(ds, "MessFld")
                Dim str As String = ""
                For i As Integer = 0 To ds.Tables("MessFld").Rows.Count - 1
                    str &= ds.Tables("MessFld").Rows(i).Item("displayname").ToString() & ","
                Next
                If Right(str, 1) = "," Then
                    str = Left(str, str.Length - 1)
                End If
                lblmessagedelete.Text = "This is Dependent Field if you want to delete than delete first : " & str & " "
                btnDeleteField.Visible = False
                Me.updDeleteField.Update()
                Me.ModalPoUPDeleteField.Show()
                Exit Sub
            End If
            ' searching dependent field in table
            da.SelectCommand.CommandText = "select fieldID , dependenton ,fieldtype from MMM_MST_FIELDS where EID=" & Session("EID") & " and dependenton is not null and dependenton<>'' "
            da.SelectCommand.CommandType = CommandType.Text
            da.Fill(ds, "dependOn")
            If ds.Tables("dependOn").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("dependOn").Rows.Count - 1
                    Dim fldID As String() = Split(ds.Tables("dependOn").Rows(i).Item("dependentOn"), ",")
                    For j As Integer = 0 To fldID.Length - 1
                        If ViewState("Deltid") = Val(fldID(j)) Then
                            If ds.Tables("dependOn").Rows(i).Item("fieldtype").ToString() = "Calculative Field" Then ' checking in case of calculative and showing message
                                lblmessagedelete.Text = "This is Calculative Field, First remove the formula from edit option Calculative field than delete "
                                btnDeleteField.Visible = False
                                Me.updDeleteField.Update()
                                Me.ModalPoUPDeleteField.Show()
                                Exit Sub
                            End If
                            ' INITIALIZING ARRAY FOR UPDATION OF DEPENDENT FIELD TO NULL 
                            delDependancy &= ds.Tables("dependOn").Rows(i).Item("fieldID").ToString() & ","
                        End If
                    Next
                Next
                If Right(delDependancy, 1) = "," Then
                    ViewState("delDependancy") = Left(delDependancy, delDependancy.Length - 1)
                End If
            End If
            'da.SelectCommand.Parameters.AddWithValue("eid", Session("EID"))
            'da.SelectCommand.Parameters.AddWithValue("fieldId", ViewState("Deltid"))
            'ViewState("DelFieldType") = row.Cells(2).Text
            'lblmessagedelete.Text = "Are you Sure Want to delete - " & row.Cells(1).Text
            'btnDeleteField.Visible = True


            lblmessagedelete.Text = "Are you Sure Want to delete - " & row.Cells(1).Text
            con.Close()
            btnDeleteField.Visible = True
            Me.updDeleteField.Update()
            Me.ModalPoUPDeleteField.Show()

        Catch ex As Exception
        Finally
            con.Close()
        End Try
    End Sub

    Protected Sub DeleteFieldRecord(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim sda As New SqlDataAdapter(" ", con)
        Try
            sda.SelectCommand.CommandText = "select * from MMM_MST_Fields where Eid=" & Session("EID").ToString() & " and fieldid=" & ViewState("Deltid").ToString() & " "
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim DS As New DataSet
            sda.Fill(DS, "LOOKUP")
            Dim doctype As String = DS.Tables("LOOKUP").Rows(0).Item("documenttype")
            Dim fldtype As String = DS.Tables("LOOKUP").Rows(0).Item("FIELDTYPE").ToString().ToUpper()
            Select Case fldtype
                Case Is = "DROP DOWN"
                    Dim lookup As String = DS.Tables("LOOKUP").Rows(0).Item("LOOKUPVALUE").ToString()
                    If lookup.Length > 2 Then
                        lblmessagedelete.Text = "This Field can not be Delete , contain Reference in other Field  "
                        updDeleteField.Update()
                        Exit Sub
                    ElseIf DS.Tables("LOOKUP").Rows(0).Item("AUTOFILTER").ToString().Length > 1 Then
                        lblmessagedelete.Text = "This Field can not be Delete , contain Reference in other Field  "
                        updDeleteField.Update()
                        Exit Sub
                    ElseIf DS.Tables("LOOKUP").Rows(0).Item("DependentOn").ToString().Length > 1 Then
                        lblmessagedelete.Text = "This Field can not be Delete , contain Reference in other Field  "
                        updDeleteField.Update()
                        Exit Sub
                    End If

                    'Code for Multi Lookup and DDL Mulit Lookup
                    sda.SelectCommand.CommandText = "select fieldid,dropdown from mmm_mst_fields where dropdown like'%" & ViewState("Deltid").ToString() & "%' and eid=" & Session("EID") & " and (fieldtype='Multi LookUP' or fieldtype='Multi LookUPDDL')"
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "A")
                    If DS.Tables("A").Rows.Count > 0 Then
                        For i As Integer = 0 To DS.Tables("A").Rows.Count - 1
                            Dim ddlvalues As String() = DS.Tables("A").Rows(i).Item("dropdown").ToString().Split(",")
                            Dim ar As New ArrayList
                            For j As Integer = 0 To ddlvalues.Length - 1
                                If (ddlvalues(j) <> String.Empty) Then
                                    If (ddlvalues(j).Trim() <> ViewState("Deltid").ToString().Trim()) Then
                                        ar.Add(ddlvalues(j))
                                    End If
                                End If
                            Next
                            sda.SelectCommand.CommandText = "update mmm_mst_fields set dropdown ='" & String.Join(",", ar.ToArray()) & "' where FieldID =" & DS.Tables("A").Rows(i)("fieldid") & " and eid=" & Session("EID")
                            sda.SelectCommand.CommandType = CommandType.Text
                            sda.Fill(DS, "B")
                        Next
                    End If
                    'Code for Multi Lookup and DDL Mulit Lookup

                Case Is = "LOOKUP"
                    sda.SelectCommand.CommandText = "select fieldid,displayname,dropdown,documenttype  from MMM_MST_FIELDS where eid=" & Session("EID").ToString() & " and fieldid='" & ViewState("Deltid").ToString() & "' "
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "FIELDID")
                    'Dim FIELDID As String = sda.SelectCommand.ExecuteScalar()
                    sda.SelectCommand.CommandText = "SELECT LOOKUPVALUE , DependentOn FROM MMM_MST_FIELDS WHERE FIELDID=" & DS.Tables("FIELDID").Rows(0).Item("dropdown") & ""
                    sda.Fill(DS, "dependency")
                    Dim LOOKUP() As String = DS.Tables("dependency").Rows(0).Item("lookupvalue").ToString.Split(",")
                    Dim dpendency() As String = DS.Tables("dependency").Rows(0).Item("dependenton").ToString.Split(",")
                    Dim lookupvalue As String = ""
                    Dim dependentOn As String = ""
                    If LOOKUP.Length > 0 Then
                        For i As Integer = 0 To LOOKUP.Length - 2
                            Dim fldpair() As String = LOOKUP(i).ToString.Split("-")
                            If fldpair(0).ToString = ViewState("Deltid").ToString Then
                            Else
                                lookupvalue &= fldpair(0).ToString & "-" & fldpair(1).ToString() & ","
                            End If
                        Next
                        If ViewState("delDependancy").Length > 0 Then
                            For i As Integer = 0 To dpendency.Length - 2
                                'Dim dpendentpair() As String = dpendency(i).ToString.Split("-")
                                If dpendency(i).ToString = ViewState("Deltid").ToString Then
                                Else
                                    dependentOn &= dpendency(i).ToString & ","
                                End If
                            Next
                        End If
                    End If
                    sda.SelectCommand.CommandText = "update MMM_MST_FIELDS SET LOOKUPVALUE='" & lookupvalue & "' , dependenton='" & dependentOn & "' WHERE FIELDID=" & DS.Tables("FIELDID").Rows(0).Item("dropdown") & ""
                    sda.SelectCommand.ExecuteScalar()
                    'For checking default valued master in 
                    'sda.SelectCommand.CommandText = "select * from MMM_MST_Fields where displayname=(select displayname from MMM_MST_fields where fieldid='" & ViewState("Deltid").ToString() & "' ) and documenttype='"& docum& "' and eid=32"
                    sda.SelectCommand.CommandText = "select * from MMM_MST_Fields where displayname='" & DS.Tables("FIELDID").Rows(0).Item("displayname").ToString() & "' and documenttype='" & DS.Tables("FIELDID").Rows(0).Item("documenttype") & "_MASTER" & "'  and eid=" & Session("EID") & ""
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "dropdownMaster")
                    If DS.Tables("dropdownMaster").Rows.Count = 1 Then
                        sda.SelectCommand.CommandText = "select * from MMM_MST_Fields where eid=" & Session("EID") & " and fieldid='" & DS.Tables("dropdownMaster").Rows(0).Item("dropdown") & "' "
                        sda.Fill(DS, "dependencyMaster")
                        Dim LOOKUPmaster() As String = DS.Tables("dependencyMaster").Rows(0).Item("lookupvalue").ToString.Split(",")
                        Dim dpendencymaster() As String = DS.Tables("dependencyMaster").Rows(0).Item("dependenton").ToString.Split(",")
                        Dim lookupvaluemaster As String = ""
                        Dim dependentOnmaster As String = ""
                        If LOOKUPmaster.Length > 0 Then
                            For i As Integer = 0 To LOOKUPmaster.Length - 2
                                Dim fldpair() As String = LOOKUPmaster(i).ToString.Split("-")
                                If fldpair(0).ToString = DS.Tables("dropdownMaster").Rows(0).Item("fieldid") Then
                                Else
                                    lookupvaluemaster &= fldpair(0).ToString & "-" & fldpair(1).ToString() & ","
                                End If
                            Next
                            For i As Integer = 0 To dpendencymaster.Length - 2
                                'Dim dpendentpair() As String = dpendency(i).ToString.Split("-")
                                If dpendencymaster(i).ToString = DS.Tables("dropdownMaster").Rows(0).Item("fieldid") Then
                                Else
                                    dependentOnmaster &= dpendencymaster(i).ToString & ","
                                End If
                            Next
                        End If
                        sda.SelectCommand.CommandText = "update MMM_MST_FIELDS SET LOOKUPVALUE='" & lookupvaluemaster & "' , dependenton='" & dependentOnmaster & "' WHERE FIELDID=" & DS.Tables("dropdownMaster").Rows(0).Item("dropdown") & ""
                        sda.SelectCommand.ExecuteScalar()
                    End If

                Case Is = "LOOKUPDDL"
                    sda.SelectCommand.CommandText = "select fieldid,displayname,dropdown,documenttype  from MMM_MST_FIELDS where eid=" & Session("EID").ToString() & " and fieldid='" & ViewState("Deltid").ToString() & "' "
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "FIELDID")
                    'Dim FIELDID As String = sda.SelectCommand.ExecuteScalar()
                    sda.SelectCommand.CommandText = "SELECT LOOKUPVALUE ,DDllookupvalue, DependentOn FROM MMM_MST_FIELDS WHERE FIELDID=" & DS.Tables("FIELDID").Rows(0).Item("dropdown") & ""
                    sda.Fill(DS, "dependency")
                    Dim LOOKUP() As String = DS.Tables("dependency").Rows(0).Item("DDllookupvalue").ToString.Split(",")
                    Dim dpendency() As String = DS.Tables("dependency").Rows(0).Item("dependenton").ToString.Split(",")
                    Dim lookupvalue As String = ""
                    Dim dependentOn As String = ""
                    If LOOKUP.Length > 0 Then
                        For i As Integer = 0 To LOOKUP.Length - 2
                            Dim fldpair() As String = LOOKUP(i).ToString.Split("-")
                            If fldpair(0).ToString = ViewState("Deltid").ToString Then
                            Else
                                lookupvalue &= fldpair(0).ToString & "-" & fldpair(1).ToString() & ","
                            End If
                        Next
                        If ViewState("delDependancy").Length > 0 Then
                            For i As Integer = 0 To dpendency.Length - 2
                                'Dim dpendentpair() As String = dpendency(i).ToString.Split("-")
                                If dpendency(i).ToString = ViewState("Deltid").ToString Then
                                Else
                                    dependentOn &= dpendency(i).ToString & ","
                                End If
                            Next
                        End If
                    End If
                    sda.SelectCommand.CommandText = "update MMM_MST_FIELDS SET DDllookupvalue='" & lookupvalue & "' , dependenton='" & dependentOn & "' WHERE FIELDID=" & DS.Tables("FIELDID").Rows(0).Item("dropdown") & ""
                    sda.SelectCommand.ExecuteScalar()
                    'For checking default valued master in 
                    'sda.SelectCommand.CommandText = "select * from MMM_MST_Fields where displayname=(select displayname from MMM_MST_fields where fieldid='" & ViewState("Deltid").ToString() & "' ) and documenttype='"& docum& "' and eid=32"
                    sda.SelectCommand.CommandText = "select * from MMM_MST_Fields where displayname='" & DS.Tables("FIELDID").Rows(0).Item("displayname").ToString() & "' and documenttype='" & DS.Tables("FIELDID").Rows(0).Item("documenttype") & "_MASTER" & "'  and eid=" & Session("EID") & ""
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "dropdownMaster")
                    If DS.Tables("dropdownMaster").Rows.Count = 1 Then
                        sda.SelectCommand.CommandText = "select * from MMM_MST_Fields where eid=" & Session("EID") & " and fieldid='" & DS.Tables("dropdownMaster").Rows(0).Item("dropdown") & "' "
                        sda.Fill(DS, "dependencyMaster")
                        Dim LOOKUPmaster() As String = DS.Tables("dependencyMaster").Rows(0).Item("DDllookupvalue").ToString.Split(",")
                        Dim dpendencymaster() As String = DS.Tables("dependencyMaster").Rows(0).Item("dependenton").ToString.Split(",")
                        Dim lookupvaluemaster As String = ""
                        Dim dependentOnmaster As String = ""
                        If LOOKUPmaster.Length > 0 Then
                            For i As Integer = 0 To LOOKUPmaster.Length - 2
                                Dim fldpair() As String = LOOKUPmaster(i).ToString.Split("-")
                                If fldpair(0).ToString = DS.Tables("dropdownMaster").Rows(0).Item("fieldid") Then
                                Else
                                    lookupvaluemaster &= fldpair(0).ToString & "-" & fldpair(1).ToString() & ","
                                End If
                            Next
                            For i As Integer = 0 To dpendencymaster.Length - 2
                                'Dim dpendentpair() As String = dpendency(i).ToString.Split("-")
                                If dpendencymaster(i).ToString = DS.Tables("dropdownMaster").Rows(0).Item("fieldid") Then
                                Else
                                    dependentOnmaster &= dpendencymaster(i).ToString & ","
                                End If
                            Next
                        End If
                        sda.SelectCommand.CommandText = "update MMM_MST_FIELDS SET DDllookupvalue='" & lookupvaluemaster & "' , dependenton='" & dependentOnmaster & "' WHERE FIELDID=" & DS.Tables("dropdownMaster").Rows(0).Item("dropdown") & ""
                        sda.SelectCommand.ExecuteScalar()
                    End If
                    'Code for Multi Lookup and DDL Mulit Lookup
                    sda.SelectCommand.CommandText = "select fieldid,dropdown from mmm_mst_fields where dropdown like'%" & ViewState("Deltid").ToString() & "%' and eid=" & Session("EID") & " and (fieldtype='Multi LookUP' or fieldtype='Multi LookUPDDL')"
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "C")
                    If DS.Tables("C").Rows.Count > 0 Then
                        For i As Integer = 0 To DS.Tables("C").Rows.Count - 1
                            Dim ddlvalues As String() = DS.Tables("C").Rows(i).Item("dropdown").ToString().Split(",")
                            Dim ar As New ArrayList
                            For j As Integer = 0 To ddlvalues.Length - 1
                                If (ddlvalues(j) <> String.Empty) Then
                                    If (ddlvalues(j).Trim() <> ViewState("Deltid").ToString().Trim()) Then
                                        ar.Add(ddlvalues(j))
                                    End If
                                End If
                            Next
                            sda.SelectCommand.CommandText = "update mmm_mst_fields set dropdown ='" & String.Join(",", ar.ToArray()) & "' where FieldID =" & DS.Tables("A").Rows(i)("fieldid") & " and eid=" & Session("EID")
                            sda.SelectCommand.CommandType = CommandType.Text
                            sda.Fill(DS, "D")
                        Next
                    End If
                    'Code for Multi Lookup and DDL Mulit Lookup
                Case Is = "CALCULATIVE FIELD"
                    sda.SelectCommand.CommandText = "select fieldid , cal_fields , dependentOn from MMM_MST_Fields where eid='" & Session("EID") & "' and fieldid in (" & ViewState("delDependancy") & ")  "
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "Cal_field")
                    If DS.Tables("Cal_field").Rows.Count > 0 Then
                        For i As Integer = 0 To DS.Tables("cal_field").Rows.Count - 1
                            Dim calvariable As String() = Split(DS.Tables("cal_field").Rows(i).Item("cal_fields").ToString(), ";")
                            Dim updCalFormula As String = ""
                            For j As Integer = 0 To calvariable.Length - 1
                                Dim calId As Integer = Val(Mid(calvariable(0), 39, calvariable(0).Length - 2)) ' finding ID of calculative field from cal_fields
                                If calId = ViewState("Deltid") Then
                                Else
                                    updCalFormula &= calvariable(i) & ";"
                                End If
                            Next
                            If Left(updCalFormula, 1) = ";" Then
                                updCalFormula = Right(updCalFormula, updCalFormula.Length - 1)
                            End If
                            updCalFormula = Replace(updCalFormula, "'", "''") ' making formula for cal_fields 
                            Array.Clear(calvariable, 0, calvariable.Length - 1)
                            calvariable = Split(DS.Tables("cal_field").Rows(i).Item("dependentOn").ToString(), ",")
                            Dim updDepdentOn As String = ""
                            For k As Integer = 0 To calvariable.Length - 1
                                If Val(calvariable(k)) = ViewState("Deltid") Then
                                Else
                                    updDepdentOn &= calvariable(k) & ","
                                End If
                            Next
                            If Right(updDepdentOn, 2) = "," Then ' for checking comma value 
                                updDepdentOn = Left(updDepdentOn, updDepdentOn.Length - 1)
                            End If
                            sda.SelectCommand.CommandText = "update MMM_MST_Fields set cal_fields='" & updCalFormula & "' , dependentOn='" & updDepdentOn & "'  where eid=" & Session("EID") & " and fieldId ='" & DS.Tables("cal_field").Rows(i).Item("fieldId").ToString() & "' "
                            sda.SelectCommand.CommandType = CommandType.Text
                            sda.SelectCommand.ExecuteScalar()
                        Next
                    End If
                    '' checking  dependency of defaultvalued  
                    sda.SelectCommand.CommandText = "select * from MMM_MST_fields where DocumentType=(select documenttype from MMM_MST_Fields where fieldid ='" & ViewState("Deltid") & "')+'_MASTER'  and displayname=(select displayname from MMM_MST_Fields where fieldid ='" & ViewState("Deltid") & "')"
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "masterfldId")
                    If DS.Tables("masterfldId").Rows.Count = 1 Then
                        sda.SelectCommand.CommandText = "select fieldID , dependenton ,fieldtype from MMM_MST_FIELDS where EID=" & Session("EID") & " and dependenton is not null and dependenton<>'' "
                        sda.SelectCommand.CommandType = CommandType.Text
                        sda.Fill(DS, "MasterdependOn")
                        If DS.Tables("MasterdependOn").Rows.Count > 0 Then
                            For i As Integer = 0 To DS.Tables("MasterdependOn").Rows.Count - 1
                                Dim fldID As String() = Split(DS.Tables("MasterdependOn").Rows(i).Item("dependentOn"), ",")
                                For j As Integer = 0 To fldID.Length - 1
                                    If DS.Tables("masterfldId").Rows(0).Item("fieldid") = Val(fldID(j)) Then
                                        MasterdelDependancy &= DS.Tables("MasterdependOn").Rows(i).Item("fieldID").ToString() & ","
                                    End If
                                Next
                            Next
                            If Right(MasterdelDependancy, 1) = "," Then
                                ViewState("MasterdelDependancy") = Left(MasterdelDependancy, MasterdelDependancy.Length - 1)
                            End If
                        End If
                    End If
                    '' deletion code for calculative and its dependency of defaultmastervalue 
                    sda.SelectCommand.CommandText = "select fieldid , cal_fields , dependentOn from MMM_MST_Fields where eid='" & Session("EID") & "' and fieldid in (" & ViewState("MasterdelDependancy") & ")"
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "MasterCal_field")
                    If DS.Tables("MasterCal_field").Rows.Count > 0 Then
                        For i As Integer = 0 To DS.Tables("MasterCal_field").Rows.Count - 1
                            Dim calvariable As String() = Split(DS.Tables("MasterCal_field").Rows(i).Item("cal_fields").ToString(), ";")
                            Dim updCalFormula As String = ""
                            For j As Integer = 0 To calvariable.Length - 1
                                Dim calId As Integer = Val(Mid(calvariable(0), 39, calvariable(0).Length - 2)) ' finding ID of calculative field from cal_fields
                                If calId = DS.Tables("masterfldId").Rows(0).Item("fieldid") Then
                                Else
                                    updCalFormula &= calvariable(i) & ";"
                                End If
                            Next
                            If Left(updCalFormula, 1) = ";" Then
                                updCalFormula = Right(updCalFormula, updCalFormula.Length - 1)
                            End If
                            updCalFormula = Replace(updCalFormula, "'", "''") ' making formula for cal_fields 
                            Array.Clear(calvariable, 0, calvariable.Length - 1)
                            calvariable = Split(DS.Tables("MasterCal_field").Rows(i).Item("dependentOn").ToString(), ",")
                            Dim updDepdentOn As String = ""
                            For k As Integer = 0 To calvariable.Length - 1
                                If Val(calvariable(k)) = DS.Tables("masterfldId").Rows(0).Item("fieldid") Then
                                Else
                                    updDepdentOn &= calvariable(k) & ","
                                End If
                            Next
                            If Right(updDepdentOn, 2) = "," Then ' for checking comma value 
                                updDepdentOn = Left(updDepdentOn, updDepdentOn.Length - 1)
                            End If
                            sda.SelectCommand.CommandText = "update MMM_MST_Fields set cal_fields='" & updCalFormula & "' , dependentOn='" & updDepdentOn & "'  where eid=" & Session("EID") & " and fieldId ='" & DS.Tables("MasterCal_field").Rows(i).Item("fieldId").ToString() & "' "
                            sda.SelectCommand.CommandType = CommandType.Text
                            sda.SelectCommand.ExecuteScalar()
                        Next
                    End If
                Case Is = "MULTI LOOKUP"
                    sda.SelectCommand.CommandText = "declare @var nvarchar(max) select @var=dropdown from mmm_mst_fields where fieldid=" & ViewState("Deltid").ToString() & " and eid=" & Session("EID") & " select Fieldid,multilookupval from MMM_MST_FIELDS where FieldID in (select * from DMS.fnSplitter(@var))"
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "MLF")

                    If DS.Tables("MLF").Rows.Count > 0 Then
                        For i As Integer = 0 To DS.Tables("MLF").Rows.Count - 1
                            Dim sb As New StringBuilder
                            If (Convert.ToString(DS.Tables("MLF").Rows(i).Item("multilookupval"))) <> String.Empty Then
                                Dim mlv As String() = Convert.ToString(DS.Tables("MLF").Rows(i).Item("multilookupval")).Split(",")
                                If (mlv.Length > 0) Then
                                    For j As Integer = 0 To mlv.Length - 1

                                        If (mlv(j).ToString() <> String.Empty) Then
                                            If mlv(j).ToString().Contains("-" & ViewState("Deltid").ToString()) Then
                                            Else
                                                sb.Append(mlv(j).ToString() & ",")
                                            End If
                                        End If
                                    Next
                                    sda.SelectCommand.CommandText = "update mmm_mst_fields set MultiLookUpVal ='" & sb.ToString() & "' where  eid=" & Session("EID") & " and fieldid=" & DS.Tables("MLF").Rows(i).Item("fieldid")
                                    sda.SelectCommand.CommandType = CommandType.Text
                                    sda.Fill(DS, "MLFS")
                                End If
                            End If
                        Next
                    End If
                Case Is = "MULTI LOOKUPDDL"
                    sda.SelectCommand.CommandText = "declare @var nvarchar(max) select @var=dropdown from mmm_mst_fields where fieldid=" & ViewState("Deltid").ToString() & " and eid=" & Session("EID") & " select Fieldid,ddlmultilookupval from MMM_MST_FIELDS where FieldID in (select * from DMS.fnSplitter(@var))"
                    sda.SelectCommand.CommandType = CommandType.Text
                    sda.Fill(DS, "MLFD")

                    If DS.Tables("MLFD").Rows.Count > 0 Then
                        For i As Integer = 0 To DS.Tables("MLFD").Rows.Count - 1
                            Dim sb As New StringBuilder
                            If (Convert.ToString(DS.Tables("MLFD").Rows(i).Item("ddlmultilookupval"))) <> String.Empty Then
                                Dim mlv As String() = Convert.ToString(DS.Tables("MLFD").Rows(i).Item("ddlmultilookupval")).Split(",")
                                If (mlv.Length > 0) Then
                                    For j As Integer = 0 To mlv.Length - 1

                                        If (mlv(j).ToString() <> String.Empty) Then
                                            If mlv(j).ToString().Contains("-" & ViewState("Deltid").ToString()) Then
                                            Else
                                                sb.Append(mlv(j).ToString() & ",")
                                            End If
                                        End If
                                    Next
                                    sda.SelectCommand.CommandText = "update mmm_mst_fields set ddlMultiLookUpVal ='" & sb.ToString() & "' where eid=" & Session("EID") & " and fieldid=" & DS.Tables("MLFD").Rows(i).Item("fieldid")
                                    sda.SelectCommand.CommandType = CommandType.Text
                                    sda.Fill(DS, "MLFSD")
                                End If
                            End If
                        Next
                    End If
            End Select
            'sda.SelectCommand.CommandText = "delete from MMM_MST_FIELDS WHERE FIELDID=" & ViewState("Deltid") & " "  '  deleted the hiting TID  of all fieldtype 
            sda.SelectCommand.CommandText = "delete from MMM_MST_FIELDS where eid='" & Session("EID") & "' and  documenttype in ('" & doctype & "' ,'" & doctype & "_MASTER" & "'  ) and displayname=(select displayname from MMM_MST_Fields where fieldid=" & ViewState("Deltid") & ")"
            sda.SelectCommand.ExecuteScalar()
            sda.SelectCommand.CommandText = "insert into MMM_FieldDelete_Log (eid,FieldID) values ('" & Session("EID") & "'," & ViewState("Deltid") & ")"
            sda.SelectCommand.CommandType = CommandType.Text
            sda.SelectCommand.ExecuteNonQuery.ToString()
            If ViewState("delDependancy").Length > 1 Then
                sda.SelectCommand.CommandText = "select * from MMM_MST_Fields where eid=" & Session("EID") & " and fieldid in (" & ViewState("delDependancy") & ")"
                sda.SelectCommand.CommandType = CommandType.Text
                sda.Fill(DS, "updFld")
                If DS.Tables("updFld").Rows.Count > 0 Then
                    For i As Integer = 0 To DS.Tables("updFld").Rows.Count - 1
                        Dim str As String() = Split(DS.Tables("updFld").Rows(i).Item("dependentOn"), ",")
                        Dim updStr As String = ""
                        For j As Integer = 0 To str.Length - 2
                            If ViewState("Deltid") = str(j) Then
                            Else
                                updStr &= str(j) & ","
                            End If
                        Next
                        'If Right(updStr, 1) = "," Then
                        '    updStr = Left(updStr, updStr.Length - 1)
                        'End If
                        sda.SelectCommand.CommandText = "update MMM_MST_Fields set dependentON='" & updStr & "'  where fieldID =" & DS.Tables("updFld").Rows(i).Item("FieldID") & " and eid=" & Session("EID") & " "
                        sda.SelectCommand.CommandType = CommandType.Text
                        sda.SelectCommand.ExecuteScalar()
                    Next
                End If
            End If
            '  Added By Komal on 24Oct2013 For View Updation on Field Deletion
            sda = New SqlDataAdapter("uspRefreshView", con)
            sda.SelectCommand.CommandType = CommandType.StoredProcedure
            sda.SelectCommand.Parameters.Clear()
            sda.SelectCommand.Parameters.AddWithValue("Eid", Session("EID").ToString)
            sda.SelectCommand.Parameters.AddWithValue("Formname", DS.Tables("LOOKUP").Rows(0).Item("DOCUMENTTYPE").ToString)
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            sda.SelectCommand.ExecuteScalar()
            '   End 
            updDeleteField.Update()
            BindFielddataGrid()
            ModalPoUPDeleteField.Hide()
            lblMsgEdit.Text = "Field is deleted"
            updDeleteField.Update()
            sda.Dispose()
            con.Close()
        Catch ex As Exception
        Finally
            con.Close()
            sda.Dispose()
            con.Dispose()
        End Try
    End Sub
    Public Sub BindDocDetailSortingDataGrid()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        'fill Product  
        Dim da As New SqlDataAdapter("SELECT FieldID,displayName,FieldType,DocDtlDisplayOrder,dropdown,case isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case isActive when 0 then 'InActive' else 'Active' end [isActive],datatype,minlen,maxlen FROM MMM_MST_FIELDS WHERE documenttype='" & ViewState("FORMNAME") & "' and  EID = " & Session("EID").ToString() & " Order By DocDtlDisplayOrder", con)
        Dim ds As New DataSet
        da.Fill(ds, "data")
        GridViewSorting.DataSource = ds.Tables("data")
        GridViewSorting.DataBind()
        UpdatepanelSorting.Update()
        con.Dispose()
        da.Dispose()
    End Sub
    Public Sub BindFielddataGrid()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        'fill Product  
        Dim da As New SqlDataAdapter("SELECT FieldID,displayName,FieldType,displayOrder,dropdown,case isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case isActive when 0 then 'InActive' else 'Active' end [isActive],datatype,minlen,maxlen FROM MMM_MST_FIELDS WHERE documenttype='" & ViewState("FORMNAME") & "' and  EID = " & Session("EID").ToString() & " Order By Displayorder", con)
        Dim ds As New DataSet
        da.Fill(ds, "data")
        gvUsers.DataSource = ds.Tables("data")
        gvUsers.DataBind()
        updatePanelEdit.Update()
        con.Dispose()
        da.Dispose()
    End Sub

    Public Sub BindFielddataGrid1(ByVal En As String, ByVal fn As String, Optional ByVal val As String = Nothing)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim oda As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Dim formnames As New ArrayList
        formnames.Add("'" & fn & "'")

        ''bind the fields of current Action Screen
        If (Not IsNothing(Session("CHILDACTIONSCREEN"))) Then
            If (Session("CHILDACTIONSCREEN").ToString() <> String.Empty) Then
                Dim childvalue As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")
                If (childvalue.Length > 0) Then
                    For z As Integer = 0 To childvalue.Length - 1
                        'Dim finalchildvalued As String() = childvalue(z).ToString().Split(".")
                        formnames.Add("'" & childvalue(z).ToString() & "'")
                    Next

                Else
                    formnames.Add("'" & Session("CHILDACTIONSCREEN").ToString() & "'")
                End If
                oda.SelectCommand.CommandText = "SELECT FieldID,displayName,FieldType,displayOrder,dropdown,case isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case isActive when 0 then 'InActive' else 'Active' end [isActive],datatype,minlen,maxlen FROM MMM_MST_FIELDS WHERE documenttype in(" & String.Join(",", formnames.ToArray) & ") and  EID = " & Session("EID").ToString() & " Order By Displayorder"
            Else
                oda.SelectCommand.CommandText = "SELECT FieldID,displayName,FieldType,displayOrder,dropdown,case isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case isActive when 0 then 'InActive' else 'Active' end [isActive],datatype,minlen,maxlen FROM MMM_MST_FIELDS WHERE documenttype='" & fn & "' and  EID = " & Session("EID").ToString() & " Order By Displayorder"
            End If
        Else
            oda.SelectCommand.CommandText = "SELECT FieldID,displayName,FieldType,displayOrder,dropdown,case isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case isActive when 0 then 'InActive' else 'Active' end [isActive],datatype,minlen,maxlen FROM MMM_MST_FIELDS WHERE documenttype='" & fn & "' and  EID = " & Session("EID").ToString() & " Order By Displayorder"
        End If

        oda.Fill(ds, "Action")
        If ds.Tables("Action").Rows.Count > 0 Then
            GrdAction.DataSource = ds.Tables("Action")
            GrdAction.DataBind()
        Else
            GrdAction.DataSource = Nothing
            GrdAction.DataBind()
        End If
        Dim strs As String()
        If (Not IsNothing(Session("CHILDACTIONSCREEN"))) Then
            If (Session("CHILDACTIONSCREEN").ToString() <> String.Empty) Then
                strs = Session("CHILDACTIONSCREEN").ToString().Split(",")
                If (strs.Length > 0) Then
                Else
                    strs(0) = Session("CHILDACTIONSCREEN").ToString()
                End If
            End If
        End If
        If (Not IsNothing(Session("FORMNAME"))) Then
            pnlGrid1.Controls.Clear()
            pnlGrid1.Controls.Add(New LiteralControl("<tr>"))
            pnlGrid1.Controls.Add(New LiteralControl("<td colspan='4'>"))
            pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabs"" ><ul>"))
            pnlGrid1.Controls.Add(New LiteralControl("<li><a href=""#tabPending0"">" & Session("FORMNAME").ToString() & "<asp:Label ID=""lblpending0"" runat=""server""></asp:Label></a></li>"))
            If (Not IsNothing(strs)) Then
                For j As Integer = 1 To strs.Length
                    If (strs.Length > 0) Then
                        Dim childvalue As String() = strs(j - 1).ToString().Split(".")
                        pnlGrid1.Controls.Add(New LiteralControl("<li><a href=""#tabPending" & j.ToString() & """>" & childvalue(1).ToString() & "<asp:Label ID=""lblpending" & j & " "" runat=""server""></asp:Label></a></li>"))
                    End If
                Next
            End If

            pnlGrid1.Controls.Add(New LiteralControl("</ul>"))
            'pnlGrid1.Controls.Add(tabPending00)


            'tabPending00.Attributes.Add("Style", "display:block;")
            Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con1 As New SqlConnection(conStr1)
            Dim oda1 As New SqlDataAdapter("", con1)
            Dim ds1 As New DataSet


            oda1.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & Session("FORMNAME").ToString() & "' and EID=" & Session("eid") & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='" & Session("FORMNAME").ToString() & "' and EID=" & Session("eid") & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & Session("EVENTNAME").ToString() & "' and  F.EID = " & Session("EID") & "   Order By Displayorder"
            oda1.Fill(ds1, "data")
            pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabPending0"" style=""min-height:50px;max-height:200px;overflow-x:scroll;overflow-y:scroll;width:650px;"">"))
            Dim GRDCHLDVIEWMAIN As New GridView
            GRDCHLDVIEWMAIN.AutoGenerateColumns = "TRUE"
            Dim formname As String = Session("FORMNAME").ToString()
            GRDCHLDVIEWMAIN.ID = "GRD_" & formname.ToString().Replace(" ", "_")
            GRDCHLDVIEWMAIN.Width = "600"
            GRDCHLDVIEWMAIN.CssClass = "mGrid"
            GRDCHLDVIEWMAIN.AlternatingRowStyle.CssClass = "alt"
            AddHandler GRDCHLDVIEWMAIN.RowDataBound, AddressOf gvData_InlineEdit
            GRDCHLDVIEWMAIN.DataSource = ds1.Tables("data")
            GRDCHLDVIEWMAIN.DataBind()
            pnlGrid1.Controls.Add(GRDCHLDVIEWMAIN)

            pnlGrid1.Controls.Add(New LiteralControl("</div>"))
            If (Not IsNothing(strs)) Then
                If (strs.Length > 0) Then
                    For i As Integer = 1 To strs.Length
                        If (strs.Length > 0) Then


                            Dim childvalue As String() = strs(i - 1).ToString().Split(".")
                            Dim conStrsS As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                            Dim consS As New SqlConnection(conStrsS)
                            Dim dasS As SqlDataAdapter = New SqlDataAdapter("", consS)
                            Dim dtChildS As New DataTable
                            'dasS.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='CAS." & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & childvalue(1).ToString() & "' and  F.EID = " & Session("EID").ToString() & "   Order By Displayorder"
                            dasS.SelectCommand.CommandText = ";with sa (FieldID,displayName,FieldType,displayOrder,dropdown,isrequired,isActive,isEditable,fieldmapping) as (  select FieldID,displayName,FieldType,displayOrder,dropdown,case isRequired when 1 then 'Mandatory' else 'Nullable' end,case isActive when 0 then 'InActive' else 'Active' end,isEditable,fieldmapping from mmm_mst_fields where documenttype='" & childvalue(1).ToString() & "' and eid=" & Session("EID").ToString() & ")select  sa.FieldID,sa.displayName,sa.FieldType,sa.displayOrder,sa.dropdown,sa.isrequired,sa.isActive,sa.isEditable,case isnull((FF.fieldmapping),'0') when '0' then '0' else '1' end as [AF] from mmm_mst_fields as FF right join sa on FF.FieldMapping=sa.fieldmapping and FF.documenttype='" & strs(i - 1).ToString().ToString() & "' and FF.EID=" & Session("EID").ToString() & " order by displayorder;"
                            dasS.Fill(dtChildS)
                            If (dtChildS.Rows.Count > 0) Then
                                pnlGrid1.Controls.Add(New LiteralControl("<div id=""tabPending" & i.ToString() & """style=""max-height:200px;overflow-x:scroll;overflow-y:scroll;width:650px;"">"))
                                'Dim rights As String() = {"CREATE", "EDIT", "DELETE", "2", "4", "6"}
                                'pnlGrid1.Controls.Add(New LiteralControl("<table cellpadding=""0"" cellspacing=""0""><tr>"))
                                'For x As Integer = 0 To rights.Length - 4
                                '    pnlGrid1.Controls.Add(New LiteralControl("<td>"))
                                '    Dim chk As New CheckBox
                                '    chk.ID = "CHK_" & childvalue(1).ToString().Replace(" ", "_") & "_" & x
                                '    chk.Text = rights(x).ToString()
                                '    pnlGrid1.Controls.Add(chk)
                                '    pnlGrid1.Controls.Add(New LiteralControl("</td>"))
                                'Next
                                'pnlGrid1.Controls.Add(New LiteralControl("</tr></table>"))
                                Dim chkedit As New CheckBoxList
                                chkedit.ID = "CHK_" & childvalue(1).ToString().Replace(" ", "_")
                                chkedit.Items.Add(New ListItem("Create", "2"))
                                chkedit.Items.Add(New ListItem("Edit", "4"))
                                chkedit.Items.Add(New ListItem("Delete", "8"))
                                chkedit.RepeatDirection = RepeatDirection.Horizontal
                                chkedit.EnableViewState = False
                                pnlGrid1.Controls.Add(chkedit)
                                If (Not IsNothing(val)) Then
                                    If (val.ToString().Contains("." & childvalue(1).ToString())) Then
                                        Dim childvalues As String() = val.ToString().Split(",")
                                        For t As Integer = 0 To childvalues.Length - 1
                                            If (childvalues(t).Contains("." & childvalue(1).ToString())) Then
                                                Dim finalvalues As String() = childvalues(t).ToString().Split(New String() {"" & childvalue(1).ToString() & "-" & ""}, StringSplitOptions.None)
                                                Checkboxvalidate(chkedit, Convert.ToInt32(finalvalues(1)))
                                                Exit For
                                            End If
                                        Next
                                    End If
                                End If
                                Dim GRDCHLDVIEW As New GridView
                                GRDCHLDVIEW.AutoGenerateColumns = "TRUE"
                                GRDCHLDVIEW.ID = "GRD_" & childvalue(1).ToString().Replace(" ", "_")
                                GRDCHLDVIEW.Width = "600"
                                GRDCHLDVIEW.CssClass = "mGrid"
                                GRDCHLDVIEW.AlternatingRowStyle.CssClass = "alt"
                                AddHandler GRDCHLDVIEW.RowDataBound, AddressOf gvData_InlineEdit
                                'dtChildS.Columns.AddRange(New DataColumn(2) {New DataColumn("Create", GetType(String)), New DataColumn("Edit", GetType(String)), New DataColumn("Delete", GetType(String))})
                                GRDCHLDVIEW.DataSource = dtChildS
                                GRDCHLDVIEW.DataBind()

                                'Dim li As New ListItem()
                                'Dim chks As New CheckBoxList()
                                'chks.ID = strs(i - 1).ToString().ToString()
                                'For x As Integer = 0 To rights.Length - 4
                                '    li.Attributes.Add(rights(x).ToString(), rights(x + 2).ToString())
                                'Next
                                'chks.DataSource = li
                                'chks.DataBind()
                                'chks.RepeatDirection = RepeatDirection.Horizontal
                                'pnlGrid1.Controls.Add(chks)

                                pnlGrid1.Controls.Add(GRDCHLDVIEW)
                                pnlGrid1.Controls.Add(New LiteralControl("</div>"))
                            End If
                        End If
                    Next
                End If
            End If


            pnlGrid1.Controls.Add(New LiteralControl("</div>"))
        End If

        'fill Product  
        'oda.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & fn & "' and EID=" & Session("eid") & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='" & fn & "' and EID=" & Session("eid") & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & En & "' and  F.EID = " & Session("EID") & "   Order By Displayorder"
        'oda.Fill(ds, "data")
        'GridView1.DataSource = ds.Tables("data")
        'GridView1.DataBind()
        'For Each row As GridViewRow In GridView1.Rows
        '    Dim rows As DataRow() = ds.Tables("data").Select("displayName='" & row.Cells("1").Text & "'")
        '    For Each rw As DataRow In rows
        '        If rw.Item("AF") = 1 Then
        '            Dim cb As New CheckBox
        '            cb = CType(row.FindControl("Check"), CheckBox)
        '            cb.Checked = True
        '        End If
        '        If rw.Item("isEditable") = 1 Then
        '            Dim cb1 As New CheckBox
        '            cb1 = CType(row.FindControl("ChkEdit"), CheckBox)
        '            cb1.Checked = True
        '        End If
        '    Next
        'Next
        con.Dispose()
        oda.Dispose()
    End Sub

    'Public Sub ADDField(ByVal sender As Object, ByVal e As System.EventArgs)
    '    If con.State <> ConnectionState.Open Then
    '        con.Open()
    '    End If
    '    Dim cnt As Integer = 0
    '    Dim chk As Integer = 0
    '    Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
    '    For Each gvr As GridViewRow In GridView1.Rows
    '        If gvr.Cells(0).Controls(1).GetType().ToString = "System.Web.UI.WebControls.CheckBox" Then
    '            Dim btnDetails As CheckBox = CType(gvr.Cells(0).Controls(1), CheckBox)
    '            Dim btnEdit As CheckBox = CType(gvr.FindControl("ChkEdit"), CheckBox)
    '            If btnDetails.Checked = True Then
    '                cnt += 1
    '                If cnt = 1 Then
    '                    da.SelectCommand.CommandText = "Delete from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " "
    '                    da.SelectCommand.ExecuteScalar()
    '                End If

    '                If btnEdit.Checked Then
    '                    chk = 1
    '                Else
    '                    chk = 0
    '                End If

    '                Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
    '                Dim pid As Integer = Convert.ToString(Me.GridView1.DataKeys(row.RowIndex).Value)
    '                Dim FLDS As String = CreateReference(ViewState("FORMNAME"), pid)
    '                Dim kicking As String = KickReferece(ViewState("FORMNAME"), pid)
    '                Dim fldid As String = ""
    '                Dim autofilter As String = ""
    '                Dim FieldType As String = ""
    '                Dim FLDMAPPING As String = ""
    '                If FLDS <> "" Then
    '                    Dim fld() As String = FLDS.Split("-")
    '                    FieldType = fld(0)
    '                    If FieldType.ToUpper = "DROP DOWN" Then
    '                        fldid = fld(1)
    '                        autofilter = fld(2)
    '                    ElseIf FieldType.ToUpper = "LOOKUP" Then
    '                        fldid = fld(1)
    '                        FLDMAPPING = fld(2).ToString()
    '                    End If
    '                End If
    '                da.SelectCommand.Parameters.Clear()
    '                da.SelectCommand.CommandText = "USP_ADDFIELD"
    '                da.SelectCommand.CommandType = CommandType.StoredProcedure
    '                da.SelectCommand.Parameters.AddWithValue("@FID", pid)
    '                da.SelectCommand.Parameters.AddWithValue("@FORMNAME", ViewState("FORMNAME"))
    '                da.SelectCommand.Parameters.AddWithValue("@chk", chk)
    '                da.SelectCommand.Parameters.AddWithValue("@FieldType", FieldType)
    '                da.SelectCommand.Parameters.AddWithValue("@fld", fldid)
    '                If FieldType.ToUpper = "DROP DOWN" Then
    '                    da.SelectCommand.Parameters.AddWithValue("@autofilter", autofilter)
    '                End If
    '                If FieldType.ToUpper = "LOOKUP" Then
    '                    da.SelectCommand.Parameters.AddWithValue("@LKUPFIELD", FLDMAPPING)
    '                End If
    '                If kicking.Length > 2 Then
    '                    da.SelectCommand.Parameters.AddWithValue("@KCValue", kicking)
    '                End If
    '                da.SelectCommand.ExecuteScalar()
    '            End If
    '        End If
    '    Next
    '    If cnt = 0 Then
    '        lbMsgField.Text = "Please Select Atleast One Field !"
    '        Exit Sub
    '    End If
    '    lbMsgField.Text = "Fields Added Successfully"
    '    BindFielddataGrid1(ViewState("EN"), ViewState("FORMNAME"))
    'End Sub

    Public Sub ADDField(ByVal sender As Object, ByVal e As System.EventArgs)
        Try
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim cnt As Integer = 0
            Dim chk As Integer = 0
            Dim flag = 0
            Dim InsertFlag = 0
            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim formrightsvalue As New ArrayList
            Dim rightsvalue As Integer = 0
            Dim FormName = ""
            For Each xControls As Control In pnlGrid1.Controls

                If TypeOf xControls Is GridView Then
                    Dim str As String = xControls.ID
                    Dim grd As GridView = CType(pnlGrid1.FindControl(str), GridView)


                    For Each gvr As GridViewRow In grd.Rows
                        flag = 0
                        If gvr.Cells(0).Controls(0).GetType().ToString = "System.Web.UI.WebControls.CheckBox" Then
                            Dim btnDetails As CheckBox = CType(gvr.Cells(0).Controls(0), CheckBox)
                            Dim btnEdit As CheckBox = CType(gvr.FindControl("ChkEdit"), CheckBox)
                            Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
                            Dim pid As Integer = Convert.ToString(Right(btnDetails.ID.ToString().Replace("chkbox_", ""), btnDetails.ID.Length - 2))
                            Dim FLDS As String = ""
                            Dim kicking As String = ""

                            If (str.Contains("GRD_" & Session("FORMNAME").ToString().Replace(" ", "_"))) Then
                                FLDS = CreateReference(Session("FORMNAME"), pid)
                                kicking = KickReferece(Session("FORMNAME"), pid)
                                FormName = Session("FORMNAME").ToString()
                            Else
                                Dim childvalues As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")
                                For i As Integer = 0 To childvalues.Length - 1
                                    Dim finlachildname As String() = childvalues(i).ToString().Split(".")
                                    If (str.Contains("GRD_" & finlachildname(1).ToString().Replace(" ", "_"))) Then
                                        FLDS = CreateReference(finlachildname(1).ToString(), pid)
                                        kicking = KickReferece(finlachildname(1).ToString(), pid)
                                        FormName = Session("FORMNAME").ToString() & "." & finlachildname(1).ToString()
                                        Exit For
                                    End If

                                Next
                            End If
                            Dim fldid As String = ""
                            Dim autofilter As String = ""
                            Dim FieldType As String = ""
                            Dim FLDMAPPING As String = ""

                            If btnDetails.Checked = True Then
                                flag = 1
                                test.Visible = False
                            End If
                            If btnEdit.Checked Then
                                chk = 1
                            Else
                                test.Visible = True
                                chk = 0
                            End If
                            'Dim FormName = ViewState("FORMNAME")
                            If FLDS <> "" Then
                                Dim fld() As String = FLDS.Split("-")
                                FieldType = fld(0)
                                If FieldType.ToUpper = "DROP DOWN" Then
                                    fldid = fld(1)
                                    autofilter = fld(2)
                                ElseIf FieldType.ToUpper = "LOOKUP" Then
                                    fldid = fld(1)
                                    FLDMAPPING = fld(2).ToString()
                                End If
                            End If

                            'Code By Ajeet 

                            da.SelectCommand.Parameters.Clear()
                            da.SelectCommand.CommandText = "checkAddActionFields"
                            da.SelectCommand.CommandType = CommandType.StoredProcedure
                            da.SelectCommand.Parameters.AddWithValue("@flag", flag)
                            da.SelectCommand.Parameters.AddWithValue("@FormName", FormName)
                            da.SelectCommand.Parameters.AddWithValue("@EID", Session("EID"))
                            '@FldID
                            da.SelectCommand.Parameters.AddWithValue("@isEditable", chk)
                            da.SelectCommand.Parameters.AddWithValue("@FldID", pid)
                            InsertFlag = da.SelectCommand.ExecuteScalar()

                            'Code by Ajeet end Here
                            If InsertFlag = 0 And flag = 1 Then
                                da.SelectCommand.Parameters.Clear()
                                da.SelectCommand.CommandText = "USP_ADDFIELD"
                                da.SelectCommand.CommandType = CommandType.StoredProcedure
                                da.SelectCommand.Parameters.AddWithValue("@FID", pid)
                                da.SelectCommand.Parameters.AddWithValue("@FORMNAME", FormName)
                                da.SelectCommand.Parameters.AddWithValue("@chk", chk)
                                da.SelectCommand.Parameters.AddWithValue("@FieldType", FieldType)
                                da.SelectCommand.Parameters.AddWithValue("@fld", fldid)
                                If FieldType.ToUpper = "DROP DOWN" Then
                                    da.SelectCommand.Parameters.AddWithValue("@autofilter", autofilter)
                                End If
                                If FieldType.ToUpper = "LOOKUP" Then
                                    da.SelectCommand.Parameters.AddWithValue("@LKUPFIELD", FLDMAPPING)
                                End If
                                If kicking.Length > 2 Then
                                    da.SelectCommand.Parameters.AddWithValue("@KCValue", kicking)
                                End If
                                da.SelectCommand.ExecuteScalar()
                            End If

                        End If

                    Next
                    Dim chkvalues As String() = str.ToString().Split(New String() {"GRD_"}, StringSplitOptions.None)
                    Dim chks As CheckBoxList = CType(pnlGrid1.FindControl("CHK_" & chkvalues(1).ToString()), CheckBoxList)
                    rightsvalue = 0
                    If (Not IsNothing(chks)) Then
                        For Each li As ListItem In chks.Items
                            If (li.Selected = True) Then
                                rightsvalue = rightsvalue + li.Value
                            End If
                        Next
                        formrightsvalue.Add(FormName & "-" & rightsvalue)
                    End If
                ElseIf TypeOf xControls Is CheckBox Then
                    Dim str As String = xControls.ID

                End If
            Next
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.CommandText = "Update mmm_mst_forms set ChidFormforActionScreen_Rights='" & String.Join(",", formrightsvalue.ToArray) & "' where eid=" & Session("EID") & " and formname='" & ViewState("FORMNAME") & "'"
            da.SelectCommand.CommandType = CommandType.Text
            da.SelectCommand.ExecuteScalar()
            lbMsgField.Text = "Fields Added Successfully"
            BindFielddataGrid1(ViewState("EN"), ViewState("FORMNAME"), String.Join(",", formrightsvalue.ToArray))

        Catch ex As Exception
            lbMsgField.Text = "Sorry! Your request can not be completed at the moment.Error occured at server."
        Finally
            con.Close()
            con.Dispose()
        End Try

    End Sub

    Protected Sub txtSubmit_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtSubmit.Click

        If txtWidth.Text = "" Then
            lblmes.Text = "please insert width of table"
            Exit Sub
        End If
        If txtFixRow.Text = "" Then
            lblmes.Text = "please insert Row of table"
            Exit Sub
        End If
        If txtFixCol.Text = "" Then
            lblmes.Text = "please insert Col of table"
            Exit Sub
        End If



        Dim rows As Integer = Convert.ToInt16(txtFixRow.Text)
        Dim cols As Integer = Convert.ToInt16(txtFixCol.Text)
        Dim tblStr As New StringBuilder()
        tblStr.Append("<table cellspacing=""2px"" cellpadding=""2px"" width=""" & txtWidth.Text & """ border=""1px"">")
        For j As Integer = 0 To rows - 1
            tblStr.Append("<tr>")
            For i As Integer = 0 To cols - 1
                tblStr.Append("<td> &nbsp; </td>")
            Next
            tblStr.Append("</tr>")
        Next
        tblStr.Append("</table>")
        txtTableSource.Text = tblStr.ToString()
        lblTablePreview.Text = tblStr.ToString()
        updatePanel3.Update()
        lblmes.Text = ""
    End Sub

    Protected Sub btnDelRow_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDelRow.Click

        If txtWidth.Text = "" Then
            lblmes.Text = "please insert width of table"
            Exit Sub
        End If
        If txtFixRow.Text = "" Then
            lblmes.Text = "please insert Row of table"
            Exit Sub
        End If
        If txtFixRow.Text = "" Then
            lblmes.Text = "please insert Col of table"
            Exit Sub
        End If

        If IsNothing(txtDelRow.Text) Then

        Else
            lblmes.Text = "please insert Col of table"
        End If


        Dim tblStr As String = lblTablePreview.Text
        Dim rows As Integer = Val(txtDelRow.Text)
        Dim tr() As String = {"<tr>"}
        Dim arr() As String = tblStr.Split(tr, StringSplitOptions.None)
        Dim strB As New StringBuilder()
        strB.Append(arr(0))
        For i As Integer = 1 To arr.Length - 1
            If i <> rows - 1 Then
                strB.Append("<tr>" & arr(i))
            End If
        Next

        lblTablePreview.Text = strB.ToString()
        txtTableSource.Text = tblStr.ToString()
        updatePanel3.Update()

        lblmes.Text = ""

    End Sub

    Protected Sub btnUpdate_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnUpdate.Click

        If txtWidth.Text = "" Then
            lblmes.Text = "please insert width of table"
            Exit Sub
        End If
        If txtFixRow.Text = "" Then
            lblmes.Text = "please insert Row of table"
            Exit Sub
        End If
        If txtFixRow.Text = "" Then
            lblmes.Text = "please insert Col of table"
            Exit Sub
        End If

        If txtEditRowNo.Text = "" Then
            lblmes.Text = "please insert row number  of table"
            Exit Sub
        End If

        If txtEditRowLogic.Text = "" Then
            lblmes.Text = "please insert row logic of table"
            Exit Sub
        End If
        If IsNumeric(txtWidth.Text) Then

        Else
            lblmes.Text = "please insert width of table"
            Exit Sub

        End If



        Dim tblStr As String = lblTablePreview.Text
        Dim Merge1val As String = txtEditRowNo.Text
        Dim mrgCol() As String = Split(txtEditRowLogic.Text, ",")
        Dim cols As Integer = Convert.ToInt16(txtFixCol.Text)
        Dim sum As Integer = 0

        For a As Integer = 0 To mrgCol.Length - 1
            sum = sum + Val(mrgCol(a))
            If sum > cols Then
                lblmes.Text = "sum of cells should not be greater than fixed coloumn "
                Exit Sub
            End If

        Next
        Dim coldiff As Integer = txtFixCol.Text - sum
        Dim j As Integer = 0
        Dim arrTr() As String = Split(tblStr, "<tr>")

        For i As Integer = 1 To Merge1val

            If i = Merge1val Then
                arrTr(i) = ""
                For k As Integer = 0 To mrgCol.Length - 1
                    If mrgCol(j) Is Nothing Then
                        'For l As Integer = 1 To coldiff
                        '    arrTr(i) = String.Concat(arrTr(i), "<td colspan=""" & l.ToString() & """ >&nbsp;</td></tr>")
                        'Next
                    Else
                        arrTr(i) = String.Concat(arrTr(i), "<td colspan=""" & mrgCol(j) & """ >&nbsp;</td>")
                        j = j + 1
                    End If
                Next
                For l As Integer = 1 To coldiff

                    arrTr(i) = String.Concat(arrTr(i), "<td>&nbsp;</td>")

                Next
                arrTr(i) = String.Concat(arrTr(i), "</tr>")
                tblStr = String.Join("<tr>", arrTr)

            End If

        Next

        lblTablePreview.Text = tblStr.ToString()
        txtTableSource.Text = tblStr.ToString()
        updatePanel3.Update()
        lblmes.Text = ""
    End Sub

    Protected Sub btnInsertRow_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnInsertRow.Click

        If txtWidth.Text = "" Then
            lblmes.Text = "please insert width of table"
            Exit Sub
        End If
        If IsNumeric(txtFixRow.Text) Then
        Else

            lblmes.Text = "please insert Row of table"
            Exit Sub
        End If
        If txtFixRow.Text = "" Then
            lblmes.Text = "please insert Col of table"
            Exit Sub
        End If

        If IsNumeric(txtWidth.Text) Then

        Else
            lblmes.Text = "please insert width of table"
            Exit Sub

        End If
        If IsNumeric(txtRowInsert.Text) Then
        Else
            lblmes.Text = "please insert width of table"
            Exit Sub

        End If
        If IsNumeric(txtInsertLogic.Text) Then
        Else
            lblmes.Text = "please insert width of table"
            Exit Sub

        End If

        Dim tblStr As String = lblTablePreview.Text
        Dim rowInsrtVal As Integer = Convert.ToInt16(txtRowInsert.Text)
        Dim mrgCol() As String = Split(txtInsertLogic.Text, ",")
        Dim cols As Integer = Convert.ToInt16(txtFixCol.Text)

        Dim sum As Integer = 0

        For a As Integer = 0 To mrgCol.Length - 1
            sum = sum + Val(mrgCol(a))
            If sum > cols Then
                lblmes.Text = "sum of cells should not be greater than fixed coloumn "
                Exit Sub
            End If
        Next

        Dim coldiff As Integer = txtFixCol.Text - sum
        Dim j As Integer = 0
        Dim arrTr() As String = Split(tblStr, "<tr>")
        For i As Integer = 0 To rowInsrtVal

            If i = rowInsrtVal - 1 Then

                arrTr(i) = String.Concat(arrTr(i), "<tr>")
                For k As Integer = 0 To mrgCol.Length - 1
                    arrTr(i) = String.Concat(arrTr(i), "<td colspan=""" & mrgCol(j) & """ >&nbsp;</td>")
                    j = j + 1
                Next
                For l As Integer = 1 To coldiff
                    arrTr(i) = String.Concat(arrTr(i), "<td>&nbsp;</td>")
                Next

                arrTr(i) = String.Concat(arrTr(i), "</tr>")
                tblStr = String.Join("<tr>", arrTr)
                tblStr = String.Concat(Replace(tblStr, "</table>", ""), "</table>")


            End If

        Next

        lblTablePreview.Text = tblStr.ToString()
        txtTableSource.Text = tblStr.ToString()
        updatePanel3.Update()
        lblmes.Text = ""
    End Sub

    Protected Sub btnTxt_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnTxt.Click
        Dim tblStr As String = txtTableSource.Text
        lblTablePreview.Text = tblStr.ToString()
        updatePanel3.Update()

    End Sub

    Protected Sub btnFinalSubmit_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnFinalSubmit.Click
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("UspTableText", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("tbltxt", txtTableSource.Text)
        oda.SelectCommand.Parameters.AddWithValue("fid", ViewState("FORMID"))
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteScalar()

        con.Close()
        con.Dispose()
        oda.Dispose()
    End Sub

    Protected Sub ApplyFieldsHit(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim pid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ' No Value in Session just fill the Edit Form and Show two button
        'two methods.. either show data from Grid or Show data from Database.
        ViewState("pid") = pid
        'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        'Dim con As SqlConnection = New SqlConnection(conStr)
        'Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        'Dim ds As New DataSet()





        If row.Cells(5).Text.ToUpper() = "CUSTOM" Then
            lblTab.Text = ""
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim ds As New DataSet()
            oda.SelectCommand.CommandText = "select layouttype,layoutdata,publicview,curstatus from MMM_MST_FORMS where FormID =" & pid & " "
            oda.Fill(ds, "form")
            Dim frm As String = ""
            If ds.Tables("form").Rows(0).Item("publicview").ToString = "1" Then
                frm = " formname='" & ds.Tables("form").Rows(0).Item("curstatus").ToString & "'"
            Else
                frm = "Formid=" & pid
            End If

            Dim str As String = "select ('lable'+displayName) [Caption] ,displayName,'" & ds.Tables("form").Rows(0).Item("layoutdata").ToString() & "'  [layoutdata]   from MMM_MST_FIELDS fd inner join MMM_MST_FORMS fm on fd.DocumentType =fm.FormName where " & frm & "  and fd.EID=" & Session("Eid") & " "
            str &= " union all "
            str &= " select ('Value'+displayName) [Caption] ,'{'+displayName+'}','" & ds.Tables("form").Rows(0).Item("layoutdata").ToString() & "' [layoutdata]  from MMM_MST_FIELDS fd inner join MMM_MST_FORMS fm on fd.DocumentType =fm.FormName where " & frm & " and fd.EID=" & Session("Eid") & " ORDER BY CAPTION"

            'Dim str As String = "select ('lable'+displayName) [Caption] ,displayName,layoutdata  from MMM_MST_FIELDS fd inner join MMM_MST_FORMS fm on fd.DocumentType =fm.FormName where formid= " & pid & "  and fd.EID=" & Session("Eid") & " "
            'str &= " union all "
            'str &= " select ('Value'+displayName) [Caption] ,'{'+displayName+'}',layoutdata  from MMM_MST_FIELDS fd inner join MMM_MST_FORMS fm on fd.DocumentType =fm.FormName where FormID =" & pid & " and fd.EID=" & Session("Eid") & " ORDER BY CAPTION"
            oda.SelectCommand.CommandText = str
            oda.Fill(ds, "fields")
            Session("FIELDS1") = ds.Tables("fields")
            Session("ACTION1") = "APPLYFIELDS"
            If ds.Tables("fields").Rows.Count > 0 Then
                Dim ob As New DynamicForm()
                ob.ApplyFieldsOnCustom(ds.Tables("fields"), ds.Tables("fields").Rows(0).Item("layoutdata"), pnlLayout)
            End If
            con.Close()
            oda.Dispose()
            con.Dispose()
            Me.updatePanel4.Update()
            Me.ModalPopupExtender_ApplyFields.Show()
        Else
            lblMsg.Text = "You can Apply Fields in 'Custom Layout' only."
        End If
    End Sub

    Protected Sub SaveFields(ByVal sender As Object, ByVal e As System.EventArgs)
        'Check All Validations
        ' now validation of created controls
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As DataTable
        dt = CType(Session("FIELDS1"), DataTable)

        Dim ob As New DynamicForm
        Dim FinalQry As String
        'pass query of updation and also type
        FinalQry = ob.SaveFieldsOnCustom("UPDATE MMM_MST_FORMS SET layoutdata=", dt, dt.Rows(0).Item("layoutdata").ToString(), pnlLayout)

        If Trim(Left(FinalQry, 6)).ToUpper() = "PLEASE" Then
            lblTab.Text = FinalQry
        Else
            FinalQry = "UPDATE MMM_MST_FORMS SET layoutdata= '" & FinalQry & "' WHERE FormID=" & ViewState("pid")
        End If
        'save the data
        lblTab.Text = ""
        da.SelectCommand.CommandText = FinalQry
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        da.SelectCommand.ExecuteNonQuery()
        Me.updatePanel4.Update()
        Me.ModalPopupExtender_ApplyFields.Hide()
        Session("FIELDS1") = Nothing
        Session("ACTION1") = Nothing
        da.Dispose()
        con.Dispose()
    End Sub

    Protected Sub ddlChkListBox_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlChkListBox.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        If ddlChkListBox.SelectedItem.Text = "FIX VALUED" Then
            ddlChkMasterSelect.Visible = False
            ddlChkfieldVal.Visible = False
            txtChkListBox.Visible = True
            lblChlVal.Visible = True
            lblChkMastr.Visible = False
        End If
        If ddlChkListBox.SelectedItem.Text = "MASTER VALUED" Then
            ddlChkMasterSelect.Visible = True
            ddlChkfieldVal.Visible = True
            txtChkListBox.Visible = False
            lblChlVal.Visible = False
            lblChkMastr.Visible = True

            ddlChkMasterSelect.Items.Clear()
            ddlChkfieldVal.Items.Clear()

            Dim da As New SqlDataAdapter("select FormName,FormType   from MMM_MST_FORMS where EID=" & Session("EID") & " and FormSource ='MENU DRIVEN'", con)
            Dim ds As New DataSet
            da.Fill(ds, "Master")
            ddlChkMasterSelect.Controls.Clear()
            If ds.Tables("Master").Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
                    ddlChkMasterSelect.Items.Add(ds.Tables("Master").Rows(i).Item("FormName").ToString())
                    ddlChkMasterSelect.Items(i).Value = ds.Tables("Master").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("Master").Rows(i).Item("Formname").ToString()
                Next
                ddlChkMasterSelect.Items.Insert(0, "Select Master")
            End If
            da.Dispose()
            ds.Dispose()
            updChk.Update()
        End If
    End Sub

    Protected Sub ddlChkMasterSelect_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlChkMasterSelect.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        DA.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ddlChkMasterSelect.SelectedItem.Text & "'"
        DA.Fill(ds, "FieldName")
        ddlChkfieldVal.Visible = True
        ddlChkfieldVal.Controls.Clear()
        If ds.Tables("FieldName").Rows.Count > 0 Then
            For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                ddlChkfieldVal.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                ddlChkfieldVal.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
            Next
            ddlChkfieldVal.Items.Insert(0, "SELECT FIELD")
        End If
        updChk.Update()
    End Sub

    Protected Sub Close(ByVal sender As Object, ByVal e As System.EventArgs)
        ModalPopUpDropDown.Hide()
    End Sub

    Protected Sub ddlLookUpMasterField_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlLookUpMasterField.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataTable()
        Dim query As String = ""

        If ddlLookUpMasterField.SelectedItem.Text = "Select Field" Then
            lblLookUP.Text = "Please select Field Type value "
            Exit Sub
        Else

            DA.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS WHERE DISPLAYNAME='" & ddlLookUpMasterField.SelectedItem.Text & "' AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " "
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim ddt As String = DA.SelectCommand.ExecuteScalar()

            Dim arr As String() = ddt.Split("-")
            If arr(0) = "CHILD" Then
                Dim ITEM As String() = Split(arr(1), ":")
                query = "select FieldID,displayName,FieldMapping,MinLen,MaxLen,documenttype from MMM_MST_FIELDS WHERE EID=" & Session("EID") & " AND documenttype='" & ITEM(1).ToString() & "' "
                DA.SelectCommand.CommandText = query
                DA.SelectCommand.CommandType = CommandType.Text
            Else
                query = "select  FieldID,displayName,FieldMapping,MinLen,MaxLen,documenttype from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr(1).ToString() & "'"
                DA.SelectCommand.CommandText = query
                DA.SelectCommand.CommandType = CommandType.Text
            End If
        End If
        ViewState("fldIDChange") = ddlLookUpMasterField.SelectedItem.Value
        DA.Fill(dt)
        ddlLookUpField.Visible = True
        ddlLookUpField.Items.Clear()
        updatepanelLookUp.Update()

        If dt.Rows.Count > 0 Then
            For i As Integer = 0 To dt.Rows.Count - 1
                ddlLookUpField.Items.Add(dt.Rows(i).Item(1))
                ddlLookUpField.Items(i).Value = dt.Rows(i).Item(2)
            Next
            ddlLookUpField.Items.Insert(0, "SELECT FIELD")
            If dt.Rows(0)("documenttype").ToString().ToUpper = "USER" Then
                ddlLookUpField.Items.Insert(1, "UserName")
                ddlLookUpField.Items.Insert(2, "emailid")
                ddlLookUpField.Items.Insert(3, "USERROLE")
            End If

        End If


        updatepanelLookUp.Update()

    End Sub

    Protected Sub ddlLookUpField_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlLookUpField.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataTable()
        Dim query As String = ""

        If ddlLookUpMasterField.SelectedItem.Text = "Select Field" Then
            lblLookUP.Text = "Please select Field Type value "
            Exit Sub
        Else

            DA.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS WHERE DISPLAYNAME='" & ddlLookUpMasterField.SelectedItem.Text & "' AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " "
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim ddt As String = DA.SelectCommand.ExecuteScalar()

            Dim arr As String() = ddt.Split("-")
            If arr(0) = "CHILD" Then
                Dim ITEM As String() = Split(arr(1), ":")
                query = "select FieldID,displayName,FieldMapping,MinLen,MaxLen from MMM_MST_FIELDS WHERE EID=" & Session("EID") & " AND documenttype='" & ITEM(1).ToString() & "' "
                DA.SelectCommand.CommandText = query
                DA.SelectCommand.CommandType = CommandType.Text
            Else
                query = "select  FieldID,displayName,FieldMapping,MinLen,MaxLen from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr(1).ToString() & "'"
                DA.SelectCommand.CommandText = query
                DA.SelectCommand.CommandType = CommandType.Text
            End If

        End If
        DA.SelectCommand.CommandText = query & "and DISPLAYNAME='" & ddlLookUpField.SelectedItem.Text & "'"
        DA.SelectCommand.CommandType = CommandType.Text
        DA.Fill(dt)
        If dt.Rows.Count > 0 Then
            lukup.Visible = True
            txtlukupmin.Text = dt.Rows(0).Item("MinLen").ToString()
            If dt.Rows(0).Item("MaxLen").ToString() = "0" Then
                txtlukupmax.Text = "500"
            Else
                txtlukupmax.Text = dt.Rows(0).Item("MaxLen").ToString()
            End If
            txtlukupmin.Enabled = False
            txtlukupmax.Enabled = False
        End If

    End Sub

    Protected Sub btnlistCalncel()
        Me.ModalPopupListBox.Hide()
    End Sub
    'Add Tally Config
    Protected Sub CloseMasterConfig()
        Me.MP_MasterConfig.Hide()
    End Sub
    'Add For Auto Config
    Protected Sub CloseShowExistingValues()
        Me.MP_ShowWixistingValues.Hide()
    End Sub
    Protected Sub CloseAutoConfig()
        Me.MP_AutoConfig.Hide()
    End Sub
    Protected Sub CloseCRule()
        Me.MP_DetailRule.Hide()
    End Sub

    Protected Sub btnLookUpClose()
        Me.ModalPopupLookUp.Hide()
    End Sub

    Protected Sub btnDDlLookUpClose()
        Me.ModalPopupDDlLookup.Hide()
    End Sub

    Protected Sub btnCFclose()
        Me.CFModalPopup.Hide()
    End Sub

    Protected Sub btnDFclose()
        Me.DFModalPopup.Hide()
    End Sub

    Protected Sub btnSRFclose()
        Me.SRF_ModalPopup.Hide()
    End Sub

    Protected Sub btnPRclose()
        Me.PR_ModalPopup.Hide()
    End Sub

    Protected Sub btnFUclose()
        Me.ModalPopupFileUoloader.Hide()
    End Sub

    Protected Sub chkClose()
        Me.ModalPopupChkListBoxSelect.Hide()
    End Sub

    Protected Sub closeProperty()
        Me.MP_CommonProp.Hide()
    End Sub


    Protected Sub txtBoxClose()
        Me.ModlPopupTxtBox.Hide()
    End Sub
    Protected Sub txtSepClose()
        Me.ModlPopupSeperator.Hide()
    End Sub
    Protected Sub LTLOOKUPClose()
        Me.ModlPopupLTLOOKUP.Hide()
    End Sub
    Protected Sub txtSignClose()         'Shalini
        Me.mdlpopup_signature.Hide()
    End Sub
    Protected Sub txtGeofenceClose()         'Shalini
        Me.mdl_geofence.Hide()
    End Sub
    Protected Sub btn_ParentVal_Cancle()         'Pallavi
        Me.modalpopup_ParentVal.Hide()
    End Sub
    Protected Sub txtGeoClose()         'Shalini
        Me.mdl_geo.Hide()
    End Sub

    Protected Sub txtcatchmentClose()         'Shalini
        Me.mdl_catchment.Hide()
    End Sub

    Protected Sub autonewNumberClose()
        Me.ModalPop_newautoNumber.Hide()
    End Sub

    Protected Sub txtBoxAreaClose()
        Me.ModalPopUpTxtArea.Hide()
    End Sub
    Protected Sub closeformula()
        MP_FormulaText.Hide()
    End Sub
    Protected Sub btnCHTclose()
        Me.ModalPopupCHT.Hide()
    End Sub

    Protected Sub btnChildmaxclose()
        Me.mdl_childmax.Hide()
    End Sub
    Protected Sub btnKCKFClose()
        Me.KCKF_ModalPopup.Hide()
    End Sub

    Protected Sub btncloseexportmapping()
        Me.MP_ExpMap.Hide()
    End Sub

    Protected Sub autoNumberClose()
        ModalPop_autoNumber.Hide()
    End Sub

    Protected Sub advanceformulaclose()
        Me.modalpopupadvformula.Hide()
    End Sub
    'Added For Child Item Specific Text for close
    Protected Sub CHLDSTClose()
        Me.mod_CHLDST.Hide()
    End Sub
    'Added For Variance for Close by Mayank
    'Added For Master Mapping for close
    Protected Sub UserMappingClose()
        Me.modUserMapping.Hide()
    End Sub
    'Added For Variance for Close by Mayank
    Protected Sub VarianceClose()
        Me.mod_Vairance.Hide()
    End Sub
    Protected Sub EditHitField(ByVal sender As Object, ByVal e As System.EventArgs)
        btnTxtBoxSave.Text = "UPDATE"
        btnTxtArea.Text = "UPDATE"
        btnddlSelect.Text = "UPDATE"
        BtnAutoSeriesSave.Text = "UPDATE"
        btnsignsave.Text = "UPDATE"   'Shalini
        btngeosave.Text = "UPDATE"   'Shalini
        btnChkLstBoxSave.Text = "UPDATE"
        btnchkBoxLstSave.Text = "UPDATE"
        btngeofencesave.Text = "UPDATE" 'Shalini
        btnFUSave.Text = "UPDATE"
        btnlookUpSave.Text = "UPDATE"
        btnDDllookUpSave.Text = "UPDATE"    'Shalini
        CF_Save.Text = "UPDATE"
        btnDF1.Text = "UPDATE"
        BTNCHTSAVE.Text = "UPDATE"
        BTNChildmaxSAVE.Text = "UPDATE"
        BtnPR_Save.Text = "UPDATE"
        BtnSRFSave.Text = "UPDATE"
        ViewState("RepLookValue") = ""
        ViewState("fldID") = ""
        ViewState("fldIDChange") = ""
        btnFormulaSave.Text = "UPDATE"
        BtnnewAutoSave.Text = "UPDATE"      ''Shalini   
        btncatchmentsave.Text = "UPDATE"   'Shalini
        btnsaveadvformula.Text = "UPDATE"
        BtnSaveML.Text = "UPDATE" ' Added on 29th January 2015; Vinay
        btn_chkbox.Text = "UPDATE" 'Mayank' Added For Check Box
        btnCHLDSTSAVE.Text = "UPDATE" 'Mayank' Added For Child Item Specific Text
        btnVarianceSave.Text = "UPDATE" 'Mayank' Added For Variance
        btnParentVal_Save.Text = "UPDATE"
        btn_mlddlSU.Text = "UPDATE" 'Added By mayank for MultiLookup DDl
        btnSaveLL.Text = "UPDATE" 'Added By mayank for LOOKUP DDL
        btnSeparator.Text = "UPDATE"
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim ChildActionScreen As Integer = 0

        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim grdview As GridView = DirectCast(row.NamingContainer, GridView)
        'Dim pid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex).Value)
        Dim pid As Integer = Convert.ToString(grdview.DataKeys(row.RowIndex).Value)
        ViewState("PID") = pid
        ViewState("Rowfields") = row.Cells(2).Text
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select * from MMM_MST_FIELDS where EID=" & Session("EID").ToString() & " and Fieldid=" & ViewState("PID") & " ", con)
        Dim ds As New DataSet()
        oda.Fill(ds, "field")
        If ds.Tables("field").Rows.Count > 0 Then
            If (ds.Tables("field").Rows(0).Item("DocumentType").ToString().Contains(".")) Then
                ChildActionScreen = 1
                ViewState("CHILDACTION") = ds.Tables("field").Rows(0).Item("DocumentType").ToString()
                Dim finalvalue As String() = ds.Tables("field").Rows(0).Item("DocumentType").ToString().Split(".")
                ViewState("FORMNAME") = finalvalue(1).ToString()
            Else
                ChildActionScreen = 0
                ViewState("CHILDACTION") = ""
                ViewState("FORMNAME") = ds.Tables("field").Rows(0).Item("DocumentType").ToString()
            End If

            formnameonapplyfields()
            ViewState("tabledata") = ds.Tables("field").Rows(0).Item("dbtableName").ToString()
            ViewState("fieldTypeF") = ds.Tables("field").Rows(0).Item("fieldtype").ToString()
            hdnDPName.Value = "{" & row.Cells(1).Text.Trim() & "}"
            Select Case ViewState("Rowfields")
                Case "Text Box"
                    txtDisplayName.Text = row.Cells(1).Text
                    txtMinlength.Text = row.Cells(6).Text
                    txtMaxL.Text = row.Cells(7).Text
                    txtDescription.Text = ds.Tables("field").Rows(0).Item("Description").ToString()                             'Added By Komal on 06Jan2014
                    txtDefVal.Text = ds.Tables("field").Rows(0).Item("defaultfieldVal").ToString()
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chkFldMandotry.Checked = True
                    Else
                        chkFldMandotry.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkActv.Checked = True
                    Else
                        chkActv.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkEditable.Checked = True
                    Else
                        chkEditable.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkTextBoxWF.Checked = True
                    Else
                        chkTextBoxWF.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isunique").ToString()) = 1 Then
                        Chkunique.Checked = True
                    Else
                        Chkunique.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isDescription").ToString()) = 1 Then                           'Added By Komal on 06Jan2014
                        ChkDesc.Checked = True
                    Else
                        ChkDesc.Checked = False
                    End If

                    ddltextBoxItem.SelectedIndex = ddltextBoxItem.Items.IndexOf(ddltextBoxItem.Items.FindByText(row.Cells(5).Text))
                    updtxtBox.Update()
                    ModlPopupTxtBox.Show()

                    ''''''''''''''''''Shalini'''''''''''''''''''''''

                Case "Separator"
                    txtSepDP.Text = row.Cells(1).Text
                    Dim Dropdown() As String = Convert.ToString(ds.Tables("field").Rows(0).Item("dropdown")).Split(":")
                    If Dropdown.Length > 1 Then
                        ddlBorderType.SelectedValue = Convert.ToString(Dropdown(0)).Trim()
                        Dim color() As String = Convert.ToString(Dropdown(1)).Split(",")
                        ddlSEPVT.SelectedValue = Convert.ToString(color(0)).Trim()
                        If color.Length > 1 Then
                            txtColorPicker.Text = Convert.ToString(color(1)).Trim()
                        Else
                            txtColorPicker.Text = ""
                        End If

                    End If
                    updSeperator.Update()
                    ModlPopupSeperator.Show()
                    'Added By Mayank for LT Lookup
                Case "LT Lookup"
                    txtLTLOOKUPDN.Text = row.Cells(1).Text
                    txtLTLOOKUPDS.Text = ds.Tables("field").Rows(0).Item("Description").ToString()                             'Added By Komal on 06Jan2014
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        ChkLLM.Checked = True
                    Else
                        ChkLLM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        ChkLLA.Checked = True
                    Else
                        ChkLLA.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        ChkLLE.Checked = True
                    Else
                        ChkLLE.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        ChkLLW.Checked = True
                    Else
                        ChkLLW.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isunique").ToString()) = 1 Then
                        ChkLLU.Checked = True
                    Else
                        ChkLLU.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isDescription").ToString()) = 1 Then                           'Added By Komal on 06Jan2014
                        ChkLLD.Checked = True
                    Else
                        ChkLLD.Checked = False
                    End If

                    Dim da As New SqlDataAdapter("", con)
                    da.SelectCommand.CommandText = "select displayName,FieldMapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ds.Tables("field").Rows(0).Item("DocumentType") & "' and DropDownType='MASTER VALUED';select formname,formid from MMM_MST_FORMS where eid=" & Session("EID") & " and formsource='MENU DRIVEN' and formType='Document' and isactive=1;Select case formSource when 'DETAIL FORM ' then 'C' when 'MENU DRIVEN' then 'M' end from mmm_mst_forms where eid=" & Session("EID") & " and formname='" & ds.Tables("field").Rows(0).Item("DocumentType") & "';select LTlookupval from mmm_mst_fields where fieldid in (select convert(int,dropdown) from mmm_mst_fields where fieldid=" & ds.Tables("field").Rows(0).Item("fieldid") & " and eid=" & Session("EID") & ") "
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim dt As New DataSet()
                    da.Fill(dt, "VAL")
                    If dt.Tables("VAL").Rows.Count > 0 Then
                        ddlLLSF.DataSource = dt.Tables("VAL")
                        ddlLLSF.DataTextField = "displayName"
                        ddlLLSF.DataValueField = "FieldMapping"
                        ddlLLSF.DataBind()
                        ddlLLSF.Items.Insert("0", New ListItem("Select"))
                    Else
                        If ddlLLSF.Items.Count > 0 Then
                            ddlLLSF.Items.Clear()
                        End If
                        ddlLLSF.Items.Insert("0", New ListItem("Select"))
                    End If
                    If dt.Tables("VAL1").Rows.Count > 0 Then
                        ddlLLTS.DataSource = dt.Tables("VAL1")
                        ddlLLTS.DataTextField = "formname"
                        ddlLLTS.DataValueField = "formid"
                        ddlLLTS.DataBind()
                        ddlLLTS.Items.Insert("0", New ListItem("Select"))
                    Else
                        If ddlLLTS.Items.Count > 0 Then
                            ddlLLTS.Items.Clear()
                        End If
                        ddlLLTS.Items.Insert("0", New ListItem("Select"))
                    End If
                    If dt.Tables("VAL2").Rows.Count > 0 Then
                        ddlLLSC.SelectedValue = dt.Tables("VAL2").Rows(0)(0)
                    End If
                    Dim LTLOOKUPVAL As String = Convert.ToString(ds.Tables("field").Rows(0).Item("dropdown"))
                    Dim str As String() = Convert.ToString(dt.Tables("VAL3").Rows(0)(0)).Split(",")
                    If str.Length > 0 Then
                        For i As Integer = 0 To str.Length - 1
                            If Convert.ToString(str(i)).Contains("$" & ds.Tables("field").Rows(0).Item("fieldid")) Then
                                Dim IDSplit As String() = Convert.ToString(str(i)).Split("$")
                                Dim CONSEP As String() = Convert.ToString(IDSplit(0)).Split(":")
                                Dim valSep As String() = Convert.ToString(CONSEP(0)).Split("-")
                                ddlLLSC.SelectedValue = valSep(0).Trim()
                                ddlLLTFS.SelectedValue = valSep(1).Trim()

                                Dim Values As String() = Convert.ToString(CONSEP(1)).Split("-")
                                ddlLLSF.SelectedValue = Values(0)
                                ddlLLSF_SelectedIndexChanged(ddlLLSF, New EventArgs())
                                If ddlLLTFS.SelectedIndex = 0 Then
                                    ddlLLTS.SelectedIndex = ddlLLTS.Items.IndexOf(ddlLLTS.Items.FindByText(Values(1)))
                                    ddlLLTS_SelectedIndexChanged(ddlLLTS, New EventArgs())
                                    ddlLLTFLDS.SelectedValue = Values(2)
                                    ddlLLTFLDS_SelectedIndexChanged(ddlLLTFLDS, New EventArgs())
                                    ddlLLMF.SelectedValue = Values(3)
                                Else
                                    Dim FinalValues As String() = Values(1).Split("|")
                                    ddlLLTS.SelectedIndex = ddlLLTS.Items.IndexOf(ddlLLTS.Items.FindByText(FinalValues(0)))
                                    ddlLLTS_SelectedIndexChanged(ddlLLTS, New EventArgs())
                                    ddlLLCTD.SelectedIndex = ddlLLCTD.Items.IndexOf(ddlLLCTD.Items.FindByText(FinalValues(1)))
                                    ddlLLCTD_SelectedIndexChanged(ddlLLCTD, New EventArgs())
                                    ddlLLTCRF.SelectedValue = Values(2)
                                    ddlLLTCRF_SelectedIndexChanged(ddlLLTCRF, New EventArgs())
                                    ddlLLMF.SelectedValue = Values(3)
                                End If
                                Exit For
                            End If
                        Next
                    End If





                    updLTLOOKUP.Update()
                    ModlPopupLTLOOKUP.Show()

                    ' '''Mayank Varaince 19-Feb-2015''''''''''''''''''
                Case "Variance"
                    txtVariance_DisplayName.Text = row.Cells(1).Text
                    txtVariance_Description.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        ChkVarMan.Checked = True
                    Else
                        ChkVarMan.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        ChkVarAct.Checked = True
                    Else
                        ChkVarAct.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        ChkVarEdit.Checked = True
                    Else
                        ChkVarEdit.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        ChkVarWf.Checked = True
                    Else
                        ChkVarWf.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isunique").ToString()) = 1 Then
                        ChkVarUQ.Checked = True
                    Else
                        ChkVarUQ.Checked = False
                    End If
                    Dim da As New SqlDataAdapter("", con)
                    da.SelectCommand.CommandText = "select displayname,Fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and fieldType='Text Box' and datatype='Numeric' and documenttype='" & ViewState("FORMNAME") & "'"
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim dt As New DataTable()
                    da.Fill(dt)
                    If (dt.Rows.Count > 0) Then
                        ddlSelectFileds.DataSource = dt
                        ddlSelectFileds.DataTextField = "displayname"
                        ddlSelectFileds.DataValueField = "Fieldmapping"
                        ddlSelectFileds.DataBind()
                    Else
                        If (ddlSelectFileds.Items.Count > 0) Then
                            ddlSelectFileds.Items.Clear()
                        End If
                    End If
                    ddlSelectFileds.Items.Insert("0", New ListItem("SELECT"))
                    ddlSelectFileds.SelectedIndex = ddlSelectFileds.Items.IndexOf(ddlSelectFileds.Items.FindByValue(ds.Tables("field").Rows(0).Item("Dropdown").ToString()))
                    Me.UpdateVariance.Update()
                    mod_Vairance.Show()
                    ' ''' '''Mayank Varaince 19-Feb-2015-------------''
                Case "Signature"
                    txtdisplysign.Text = row.Cells(1).Text
                    txtfieldsignmin.Text = row.Cells(6).Text
                    txtfieldsignmax.Text = row.Cells(7).Text
                    txtdescsign.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    txtDefValsign.Text = ds.Tables("field").Rows(0).Item("defaultfieldVal").ToString()
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chkfieldsignman.Checked = True
                    Else
                        chkfieldsignman.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkfieldsignact.Checked = True
                    Else
                        chkfieldsignman.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkfieldsignedit.Checked = True
                    Else
                        chkfieldsignedit.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkfieldsignwf.Checked = True
                    Else
                        chkfieldsignwf.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isunique").ToString()) = 1 Then
                        chkfieldsignuniq.Checked = True
                    Else
                        chkfieldsignuniq.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isDescription").ToString()) = 1 Then
                        chkfieldsigndes.Checked = True
                    Else
                        chkfieldsigndes.Checked = False
                    End If

                    ddldatatypesign.SelectedIndex = ddldatatypesign.Items.IndexOf(ddldatatypesign.Items.FindByText(row.Cells(5).Text))
                    UpSignature.Update()
                    mdlpopup_signature.Show()

                    ''''''''''''''''''''''''''Signature'''''''''''''''''''''''''''''''''''''''''''''

                    ''''''''''''''''''Shalini''''''''Geo Fence'''''''''''''''
                Case "Geo Fence"
                    txtdisplaynamefence.Text = row.Cells(1).Text
                    txtmaxfence.Text = row.Cells(7).Text
                    txtminfence.Text = row.Cells(6).Text
                    txtdesnamefence.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    txtdefaultfence.Text = ds.Tables("field").Rows(0).Item("defaultfieldVal").ToString()
                    ddlgeotype.SelectedIndex = ddlgeotype.Items.IndexOf(ddlgeotype.Items.FindByText(ds.Tables("field").Rows(0).Item("geofencetype").ToString()))
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chkmanfence.Checked = True
                    Else
                        chkmanfence.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkactfence.Checked = True
                    Else
                        chkactfence.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkeditfence.Checked = True
                    Else
                        chkeditfence.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkflowfence.Checked = True
                    Else
                        chkflowfence.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isunique").ToString()) = 1 Then
                        chkunifence.Checked = True
                    Else
                        chkunifence.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isDescription").ToString()) = 1 Then
                        chkdescfence.Checked = True
                    Else
                        chkdescfence.Checked = False
                    End If

                    ddldatatypegeofence.SelectedIndex = ddldatatypegeofence.Items.IndexOf(ddldatatypegeofence.Items.FindByText(row.Cells(5).Text))
                    Upgeofence.Update()
                    mdl_geofence.Show()

                    ''''''''''''''''''''''''''Geo Fence'''''''''''''''''''''''''''''''''''''''''''''


                    ''''''''''''''''''Shalini'''''''''''''''''''''''
                Case "Geo Point"
                    lblgeo.Text = ""
                    txtgeodisplay.Text = row.Cells(1).Text
                    txtfgeomin.Text = row.Cells(6).Text
                    txtfgeomax.Text = row.Cells(7).Text
                    txtgeodes.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    txtdefgeo.Text = ds.Tables("field").Rows(0).Item("defaultfieldVal").ToString()
                    ddlgeo.SelectedValue = ds.Tables("field").Rows(0).Item("geopointsource").ToString()
                    'Changes By mayank for Geo Point 26-Feb-2015
                    Dim eid As String = Session("EID").ToString()
                    Dim FORMNAME As String = ViewState("FORMNAME").ToString()
                    Dim daa As New SqlDataAdapter("Select displayname,fieldmapping from mmm_mst_fields where eid=" & eid & " and documenttype='" & FORMNAME & "' and fieldid not in(" & ViewState("PID") & ") order by displayname", con)
                    daa.SelectCommand.CommandType = CommandType.Text
                    Dim dss As New DataSet()
                    daa.Fill(dss, "data")
                    ChkMapList.DataSource = dss.Tables("data")
                    ChkMapList.DataTextField = "displayname"
                    ChkMapList.DataValueField = "fieldmapping"
                    ChkMapList.DataBind()
                    Dim mapflds As String = ds.Tables("field").Rows(0).Item("kc_value").ToString()
                    Dim maps = mapflds.Split(","c)
                    For i As Integer = 0 To ChkMapList.Items.Count - 1
                        For j As Integer = 0 To maps.Length - 1
                            If maps(j).ToString = ChkMapList.Items(i).Value.ToString() Then
                                ChkMapList.Items(i).Selected = True
                                Exit For
                            End If
                        Next
                    Next
                    autochk.Visible = False
                    If ds.Tables("field").Rows(0).Item("geopointsource") = "Auto" Then

                        chkautolist.DataSource = dss.Tables("data")
                        chkautolist.DataTextField = "displayname"
                        chkautolist.DataValueField = "fieldmapping"
                        chkautolist.DataBind()


                        Dim Allans As String = ds.Tables("field").Rows(0).Item("geopointsfields").ToString()

                        Dim Anss = Allans.Split(","c)
                        For i As Integer = 0 To chkautolist.Items.Count - 1
                            For j As Integer = 0 To Anss.Length - 1
                                If Anss(j).ToString = chkautolist.Items(i).Value.ToString() Then
                                    chkautolist.Items(i).Selected = True
                                    Exit For
                                End If
                            Next
                        Next
                        autochk.Visible = True
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chkgeoman.Checked = True
                    Else
                        chkgeoman.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkgeoact.Checked = True
                    Else
                        chkgeoact.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkgeoedit.Checked = True
                    Else
                        chkgeoedit.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkgeoWF.Checked = True
                    Else
                        chkgeoWF.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isunique").ToString()) = 1 Then
                        chkgeouni.Checked = True
                    Else
                        chkgeouni.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isDescription").ToString()) = 1 Then
                        chkgeodes.Checked = True
                    Else
                        chkgeodes.Checked = False
                    End If

                    ddltypegeo.SelectedIndex = ddltypegeo.Items.IndexOf(ddltypegeo.Items.FindByText(row.Cells(5).Text))
                    Upgeo.Update()
                    mdl_geo.Show()

                    ''''''''''''''''''''''''''GeoPoint'''''''''''''''''''''''''''''''''''''''''''''

                Case "Check Box"     'Check Box Added By Mayank
                    txtchkboxDN.Text = row.Cells(1).Text
                    txtchkboxDS.Text = ds.Tables("field").Rows(0).Item("description").ToString()
                    txtchkboxDT.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        ChkboxMan.Checked = True
                    Else
                        ChkboxMan.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        ChkboxAct.Checked = True
                    Else
                        ChkboxAct.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        ChkboxEdit.Checked = True
                    Else
                        ChkboxEdit.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkboxwf.Checked = True
                    Else
                        chkboxwf.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isunique").ToString()) = 1 Then
                        chkboxun.Checked = True
                    Else
                        chkboxun.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isDescription").ToString()) = 1 Then
                        ChkDesc.Checked = True
                    Else
                        ChkDesc.Checked = False
                    End If
                    Upchkbox.Update()
                    mdl_chkbox.Show()
                    'Check Box Added By Mayank
                    ''''''''''''''''''Shalini''''''''Catchment'''''''''''''''
                Case "Catchment"
                    txtcatchmentdisplay.Text = row.Cells(1).Text
                    txtfcatchmentmin.Text = row.Cells(6).Text
                    txtfcatchmentmax.Text = row.Cells(7).Text
                    txtcatchmentdes.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    txtdefcatchment.Text = ds.Tables("field").Rows(0).Item("defaultfieldVal").ToString()
                    Dim iscatchment As String = ds.Tables("field").Rows(0).Item("iscatchment").ToString()
                    Dim Anss = iscatchment.Split(":")
                    Dim geofield As String = Anss(0).ToString()
                    Dim displaynam As String = Anss(1).ToString()
                    Dim fencefield As String = Anss(2).ToString()
                    Dim da As New SqlDataAdapter("", con)
                    ddlcatchmentgeopointfield.Items.Clear()
                    da.SelectCommand.CommandText = "Select displayName,FieldMapping from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ViewState("FORMNAME").ToString() & "' and fieldtype='Geo Point' "
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim dt As New DataTable()
                    da.Fill(dt)
                    If dt.Rows.Count > 0 Then
                        For i As Integer = 0 To dt.Rows.Count - 1
                            ddlcatchmentgeopointfield.Items.Add(dt.Rows(i).Item("displayName").ToString())
                            ddlcatchmentgeopointfield.Items(i).Value = dt.Rows(i).Item("FieldMapping").ToString()
                        Next
                    End If
                    da.SelectCommand.CommandText = "Select displayName,FieldMapping from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ViewState("FORMNAME").ToString() & "' and fieldtype='Geo Point' and FieldMapping='" & geofield & "' "
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim dt1 As New DataTable()
                    da.Fill(dt1)
                    ddlcatchmentgeopointfield.SelectedItem.Text = dt1.Rows(0).Item("displayName").ToString()
                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    ddlcatchmentdisplayfield.Items.Clear()
                    da.SelectCommand.CommandText = "Select Formname,FormID from mmm_mst_forms WHERE EID = " & Session("EID").ToString() & " and ((formtype='MASTER') or (formtype='DOCUMENT')) and FormSource='MENU DRIVEN' "
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim dt2 As New DataTable()
                    da.Fill(dt2)
                    If dt2.Rows.Count > 0 Then
                        For j As Integer = 0 To dt2.Rows.Count - 1
                            ddlcatchmentdisplayfield.Items.Add(dt2.Rows(j).Item("Formname").ToString())
                            ddlcatchmentdisplayfield.Items(j).Value = dt2.Rows(j).Item("FormID").ToString()
                        Next
                    End If
                    da.SelectCommand.CommandText = "Select Formname,FormID from mmm_mst_forms WHERE EID = " & Session("EID").ToString() & " and ((formtype='MASTER') or (formtype='DOCUMENT')) and FormSource='MENU DRIVEN' and formname='" & displaynam & "' "
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim dt3 As New DataTable()
                    da.Fill(dt3)
                    ddlcatchmentdisplayfield.SelectedItem.Text = dt3.Rows(0).Item("Formname").ToString()
                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    ddlcatchmentgeofencefield.Items.Clear()
                    da.SelectCommand.CommandText = "Select displayName,FieldMapping from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ddlcatchmentdisplayfield.SelectedItem.Text & "' and fieldtype='Geo Fence'"
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim dt4 As New DataTable()
                    da.Fill(dt4)
                    If dt4.Rows.Count > 0 Then
                        For k As Integer = 0 To dt4.Rows.Count - 1
                            ddlcatchmentgeofencefield.Items.Add(dt4.Rows(k).Item("displayName").ToString())
                            ddlcatchmentgeofencefield.Items(k).Value = dt4.Rows(k).Item("FieldMapping").ToString()
                        Next
                    End If
                    da.SelectCommand.CommandText = "Select displayName,FieldMapping from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ddlcatchmentdisplayfield.SelectedItem.Text & "' and FieldMapping='" & fencefield & "' "
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim dt5 As New DataTable()
                    da.Fill(dt5)
                    ddlcatchmentgeofencefield.SelectedItem.Text = dt5.Rows(0).Item("displayName").ToString()

                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chkcatchmentman.Checked = True
                    Else
                        chkcatchmentman.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkcatchmentact.Checked = True
                    Else
                        chkcatchmentact.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkcatchmentedit.Checked = True
                    Else
                        chkcatchmentedit.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkcatchmentWF.Checked = True
                    Else
                        chkcatchmentWF.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isunique").ToString()) = 1 Then
                        chkcatchmentuni.Checked = True
                    Else
                        chkcatchmentuni.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isDescription").ToString()) = 1 Then
                        chkcatchmentdes.Checked = True
                    Else
                        chkcatchmentdes.Checked = False
                    End If

                    ddltypecatchment.SelectedIndex = ddltypecatchment.Items.IndexOf(ddltypecatchment.Items.FindByText(row.Cells(5).Text))
                    Upcatchment.Update()
                    mdl_catchment.Show()

                    ''''''''''''''''''''''''''Catchment'''''''''''''''''''''''''''''''''''''''''''''

                Case "Formula Field"
                    txtFormulaName.Text = row.Cells(1).Text
                    txtFormulaText.Text = ds.Tables("field").Rows(0).Item("KC_LOGIC").ToString()
                    txtformulaVar.Text = ""
                    Dim strvals As String = ""
                    strvals = ds.Tables("field").Rows(0).Item("KC_VALUE").ToString()
                    txtFormulaTextMob.Text = ""
                    If strvals.ToString() <> String.Empty Then
                        Dim val As String() = strvals.ToString().Split("=")

                        txtFormulaTextMob.Text = val(1).ToString()
                    End If
                    ddldatatypeformula.SelectedIndex = ddldatatypeformula.Items.IndexOf(ddldatatypeformula.Items.FindByText(row.Cells(5).Text))
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkformulaActive.Checked = True
                    Else
                        chkformulaActive.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkformulaRunable.Checked = True
                    Else
                        chkformulaRunable.Checked = False
                    End If
                    UP_formulatxt.Update()
                    Dim da As New SqlDataAdapter("select Fieldid, displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & "  and documenttype='" + ViewState("FORMNAME") + "' and isactive=1", con)
                    da.SelectCommand.CommandType = CommandType.Text
                    da.Fill(ds, "FieldName")
                    Dim strFields As String = ""
                    For Each dr As DataRow In ds.Tables("FieldName").Rows
                        strFields &= dr.Item("displayname").ToString()
                        strFields &= Environment.NewLine
                    Next
                    txtformulaVar.Text = strFields.ToString()
                    UP_formulatxt.Update()
                    MP_FormulaText.Show()


                Case "Auto Number"
                    txtAutoNumbrDisplay.Text = row.Cells(1).Text
                    txtPrefix.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                    txtSeriesNumber.Text = row.Cells(7).Text
                    updAutonumber.Update()
                    ModalPop_autoNumber.Show()

                Case "Advance Formula"
                    tvadvform.Nodes.Clear()
                    If Not ViewState("FORMNAME") Is Nothing Then
                        Call LoadWorkGroupTree(ViewState("FORMNAME"))
                    End If
                    Dim formulaid As String = ds.Tables("field").Rows(0).Item("fieldid").ToString()

                    txtdisplaynameadvform.Text = ds.Tables("field").Rows(0).Item("displayname").ToString()
                    txtdescadvform.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    Dim chk As Integer = Val(ds.Tables("field").Rows(0).Item("isactive"))
                    If chk = 1 Then
                        chkadvformactive.Checked = True
                    Else
                        chkadvformactive.Checked = False
                    End If
                    Dim var As String = ds.Tables("field").Rows(0).Item("advance_formula").ToString()
                    txtcontionadvform.Text = var.ToString()
                    Dim str As String() = var.ToString.Split("[")
                    If str.Length > 0 Then
                        For i As Integer = 0 To str.Length - 1

                            Dim ab As String() = str(i).ToString().Split(".")
                            If ab.Length > 1 Then
                                For j As Integer = 0 To ab.Length - 1
                                    oda.SelectCommand.CommandText = "select count(formname) from mmm_mst_forms where eid=" & Session("EID") & " and formname ='" & ab(j).ToString() & "'"
                                    If con.State <> ConnectionState.Open Then
                                        con.Open()
                                    End If
                                    Dim valu As Integer = Val(oda.SelectCommand.ExecuteScalar())
                                    If valu = 1 Then
                                        If UCase(ViewState("FORMNAME")) <> UCase(ab(j)).ToString() Then
                                            Call LoadWorkGroupTree(ab(j).ToString())
                                        End If
                                    End If

                                Next
                            End If

                        Next

                    End If
                    'binding formsource
                    If (Not IsNothing(Session("CHILDACTIONSCREEN"))) Then
                        oda.SelectCommand.CommandText = "select formtype from mmm_mst_forms where eid=" & Session("EID") & " and formname='" & ViewState("FORMNAME").ToString() & "'"
                    Else
                        oda.SelectCommand.CommandText = "select formtype from mmm_mst_forms where eid=" & Session("EID") & " and formname='" & ViewState("FORMNAME").ToString() & "'"
                    End If

                    oda.Fill(ds, "formsource")
                    ddladvfoftype.SelectedIndex = ddladvfoftype.Items.IndexOf(ddladvfoftype.Items.FindByText(ds.Tables("formsource").Rows(0).Item("formtype").ToString()))
                    'binding documenttype on edit hit

                    oda.SelectCommand.CommandText = "select distinct formname,formid from mmm_mst_forms where eid=" & Session("EID") & " and formtype='" & ds.Tables("formsource").Rows(0).Item("formtype").ToString.ToString() & "'"
                    oda.Fill(ds, "forms")
                    ddladvfodoctype.Items.Clear()
                    ddladvfodoctype.DataSource = ds.Tables("forms")
                    ddladvfodoctype.DataTextField = "formname"
                    ddladvfodoctype.DataValueField = "formid"
                    ddladvfodoctype.DataBind()

                    ddladvfodoctype.SelectedIndex = ddladvfodoctype.Items.IndexOf(ddladvfodoctype.Items.FindByText(ds.Tables("field").Rows(0).Item("documenttype").ToString()))



                    ''binding releation

                    oda.SelectCommand.CommandText = "select sourcetype[Source Type],Sourcename[Source Name],targettype[Target Type],targetname[Target Name],s_relationidentifierfield[Source Field],T_RelationIdentifierField [Target Field],sortingfield[Sorting Field] from [MMM_MST_AdvFormulaRelation] where eid=" & Session("EID") & " and formulaid=" & formulaid & ""
                    oda.Fill(ds, "fe")

                    If ds.Tables("fe").Rows.Count > 0 Then
                        gvmap.DataSource = ds.Tables("fe")
                        gvmap.DataBind()
                        Session("datat") = ds.Tables("fe")
                        ViewState("datat") = ds.Tables("fe")

                        For i As Integer = 0 To ds.Tables("fe").Rows.Count - 1
                            LoadWorkGroupTreeSource(ds.Tables("fe").Rows(i).Item("Target Name").ToString)
                        Next
                    End If




                    updpaneladvanceformula.Update()
                    modalpopupadvformula.Show()

                Case "New Auto Number"
                    txtdisplynewauto.Text = row.Cells(1).Text
                    ddlfieldss.Items.Clear()
                    Dim da As New SqlDataAdapter("", con)
                    da.SelectCommand.CommandText = "Select displayName,FieldID from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ViewState("FORMNAME").ToString() & "'  and (dropdown  like '%master%' or dropdown  like '%user%')  "
                    da.SelectCommand.CommandType = CommandType.Text
                    da.Fill(ds, "no")
                    If ds.Tables("field").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("no").Rows.Count - 1
                            ddlfieldss.Items.Add(ds.Tables("no").Rows(i).Item("displayName").ToString())
                            ddlfieldss.Items(i).Value = ds.Tables("no").Rows(i).Item("FieldID").ToString()
                        Next
                    End If
                    ddlfieldss.Items.Insert("0", New ListItem("SELECT"))
                    Dim value As String = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                    'Addded By Mayank For New Auto Number Start Here 18-Feb-2015
                    Dim dt As New DataTable
                    If (value.Contains("-")) Then
                        Dim a As String() = value.ToString().Split("-")
                        da.SelectCommand.CommandText = "Select displayName from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ViewState("FORMNAME").ToString() & "' and FieldID='" & a(0) & "'"
                        da.Fill(dt)
                        ddlfieldss.SelectedIndex = ddlfieldss.Items.IndexOf(ddlfieldss.Items.FindByText(dt.Rows(0).Item(0).ToString()))
                        ddlfieldss_SelectedIndexChanged(ddlfieldss, New EventArgs())
                        ddlAutoFieldName.SelectedIndex = ddlAutoFieldName.Items.IndexOf(ddlAutoFieldName.Items.FindByValue(a(1).ToString()))
                    Else
                        da.SelectCommand.CommandText = "Select displayName from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ViewState("FORMNAME").ToString() & "' and FieldID='" & value & "'"
                        da.Fill(dt)
                        ddlfieldss.SelectedIndex = ddlfieldss.Items.IndexOf(ddlfieldss.Items.FindByText(dt.Rows(0).Item(0).ToString()))
                        ddlfieldss_SelectedIndexChanged(ddlfieldss, New EventArgs())
                        If (ds.Tables("field").Rows(0).Item("kc_logic").ToString() <> String.Empty) Then
                            ddlAutoFieldName.SelectedIndex = ddlAutoFieldName.Items.IndexOf(ddlAutoFieldName.Items.FindByValue(ds.Tables("field").Rows(0).Item("kc_logic").ToString()))
                        End If

                    End If
                    'Addded By Mayank For New Auto Number End Here 18-Feb-2015


                    ' ddlfieldss.SelectedIndex = ddlfieldss.Items.IndexOf(ddlfieldss.Items.FindByText(ds.Tables("no").Rows(0).Item("displayName").ToString()))
                    txtnewSeriesNumber.Text = row.Cells(7).Text
                    updnewAutonumber.Update()
                    ModalPop_newautoNumber.Show()


                Case "Text Area"
                    txtDispalyNameArea.Text = row.Cells(1).Text
                    txtareaMaxLength.Text = row.Cells(7).Text
                    txtareaMinLength.Text = row.Cells(6).Text
                    txtAreaDefVal.Text = ds.Tables("field").Rows(0).Item("defaultfieldVal").ToString()
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chktxtAreaMandatory.Checked = True
                    Else
                        chktxtAreaMandatory.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chktxtAreaActive.Checked = True
                    Else
                        chktxtAreaActive.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chktxtAreaEditable.Checked = True
                    Else
                        chktxtAreaEditable.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkTxtAreaWF.Checked = True
                    Else
                        chkTxtAreaWF.Checked = False
                    End If

                    ddlDataTypesArea.SelectedIndex = ddlDataTypesArea.Items.IndexOf(ddlDataTypesArea.Items.FindByText(row.Cells(5).Text))
                    updtxtArea.Update()
                    ModalPopUpTxtArea.Show()

                Case "Drop Down", "AutoComplete"
                    ddlDropDownMasteValSelect.Items.Clear()
                    ddlDropDownFieldSelect.Items.Clear()
                    updDropdownSelected.Update()
                    ddlDispalyName.Text = row.Cells(1).Text


                    If ds.Tables("field").Rows(0).Item("fieldtype").ToString() = "AutoComplete" Then
                        chkAutoCom.Visible = True 'Shalini
                        chkAutoCom.Checked = True
                    Else
                        chkAutoCom.Visible = True
                        chkAutoCom.Checked = False
                    End If

                    'Dim var1 As String = Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 6)
                    'Dim var2 As String = Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 8)
                    If Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 6) = "MASTER" Or Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 8) = "DOCUMENT" Or Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 6) = "STATIC" Then
                        ddlDropdownList.SelectedIndex = 2
                        txtdropDownValued.Visible = False
                        lblDdlvalue.Visible = False
                        Dim da As New SqlDataAdapter("select FormName,FormType from MMM_MST_FORMS where EID=" & Session("EID") & " and FormSource ='MENU DRIVEN'", con)
                        da.Fill(ds, "Master")
                        If ds.Tables("Master").Rows.Count > 0 Then
                            For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
                                ddlDropDownMasteValSelect.Items.Add(ds.Tables("Master").Rows(i).Item("FormName").ToString().Trim())
                                ddlDropDownMasteValSelect.Items(i).Value = ds.Tables("Master").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("Master").Rows(i).Item("Formname").ToString()
                            Next
                            ddlDropDownMasteValSelect.Items.Add("USER")
                            ddlDropDownMasteValSelect.Items(ddlDropDownMasteValSelect.Items.Count - 1).Value = "STATIC-USER"
                            ddlDropDownMasteValSelect.Items.Add("Location")
                            ddlDropDownMasteValSelect.Items(ddlDropDownMasteValSelect.Items.Count - 1).Value = "STATIC-LOCATION"
                            ddlDropDownMasteValSelect.Items.Insert(0, "Select Master")
                        End If

                        ' for auto  drop down master selection 
                        Dim dropdownSplit As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")
                        ddlDropDownMasteValSelect.SelectedIndex = ddlDropDownMasteValSelect.Items.IndexOf(ddlDropDownMasteValSelect.Items.FindByText(dropdownSplit(1).Trim()))
                        da.SelectCommand.CommandText = "select DisplayName,FieldMapping from MMM_MST_FIELDS where eid=" & Session("EID") & " and UsableSession=1"
                        Dim dtUSER As New DataTable()
                        da.Fill(dtUSER)
                        If ddlSessionFieldVal.Items.Count > 0 Then
                            ddlSessionFieldVal.Items.Clear()
                        End If
                        If dtUSER.Rows.Count > 0 Then
                            ddlSessionFieldVal.DataSource = dtUSER
                            ddlSessionFieldVal.DataTextField = "DisplayName"
                            ddlSessionFieldVal.DataValueField = "FieldMapping"
                            ddlSessionFieldVal.DataBind()
                        End If
                        ddlSessionFieldVal.Items.Insert("0", New ListItem("SELECT FIELD"))
                        ' for field of master selection 
                        da.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ddlDropDownMasteValSelect.SelectedItem.Text & "'"
                        da.Fill(ds, "FieldName")
                        ddlDropDownFieldSelect.Visible = True
                        lblSelectField.Text = "* Select Field"
                        ddlDropDownFieldSelect.Items.Clear()
                        If ds.Tables("FieldName").Rows.Count > 0 Then
                            For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                ddlDropDownFieldSelect.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                                ddlDropDownFieldSelect.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                            Next
                            ddlDropDownFieldSelect.Items.Insert(0, "SELECT FIELD")
                            If ddlDropDownMasteValSelect.SelectedItem.Text = "USER" Then  ' in case of session valued filling the static valued 
                                ddlDropDownFieldSelect.Items.Insert(1, "UserName")
                                ddlDropDownFieldSelect.Items.Insert(2, "emailid")
                                ddlDropDownFieldSelect.Items.Insert(3, "USERROLE")
                            End If
                            ddlDropDownFieldSelect.SelectedIndex = ddlDropDownFieldSelect.Items.IndexOf(ddlDropDownFieldSelect.Items.FindByValue(dropdownSplit(2)))



                            '' for initialfilter selection  'ddlFltrMapping' added on 18 feb
                            ddlFltrMapping.Items.Clear()
                            Dim fltrID As String() = Split(ds.Tables("field").Rows(0).Item("initialfilter").ToString(), "-")
                            For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                ddlFltrMapping.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                                ddlFltrMapping.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                            Next
                            ddlFltrMapping.Items.Insert(0, "SELECT FIELD")
                            If fltrID.Length > 1 Then
                                ddlFltrMapping.SelectedIndex = ddlFltrMapping.Items.IndexOf(ddlFltrMapping.Items.FindByValue(fltrID(1)))
                            End If
                            If ddlSessionFieldVal.Items.Count > 1 Then
                                If Convert.ToString(ds.Tables("field").Rows(0).Item("SessionFieldVal")) <> "" Then
                                    If Convert.ToString(ds.Tables("field").Rows(0).Item("SessionFieldVal")).Contains("-") Then
                                        Dim temp As String() = Convert.ToString(ds.Tables("field").Rows(0).Item("SessionFieldVal")).Split("-")
                                        ddlSessionFieldVal.SelectedValue = temp(0)
                                        ddlSessionFieldVal_SelectedIndexChanged(ddlSessionFieldVal, New EventArgs())
                                        ddldependent.SelectedValue = temp(2)
                                    Else
                                        ddlSessionFieldVal.SelectedValue = Convert.ToString(ds.Tables("field").Rows(0).Item("SessionFieldVal"))
                                    End If
                                Else
                                    ddlSessionFieldVal.SelectedIndex = 0
                                    ddldependent.SelectedIndex = 0
                                End If

                            End If
                        End If

                        ''bind dropdown for fields on which current field can be filtered
                        Dim selfields As String = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
                        bindFields4Filter(ddlDropDownMasteValSelect.SelectedItem.Text, ds.Tables("field").Rows(0).Item("documenttype").ToString(), selfields)
                        ddlFLT.Visible = True
                        lblDdlSelectMaster.Visible = True
                        ddlDropDownMasteValSelect.Visible = True
                        ddlDropDownFieldSelect.Visible = True
                        'lblSelectField.Text = True
                        ''fill current value in dropdown of filteron
                        da.SelectCommand.CommandText = "select displayname,lookupvalue,FIELDID from mmm_mst_fields where eid=" & Session("eid") & " and documenttype='" & ds.Tables("field").Rows(0).Item("documenttype").ToString() & "' and lookupvalue like '%" & pid & "-%'"
                        da.Fill(ds, "dtflt")
                        If ds.Tables("dtflt").Rows.Count > 0 Then
                            Dim fltval As String = ds.Tables("dtflt").Rows(0).Item("displayname").ToString()
                            ViewState("LKUPVALUE") = ds.Tables("dtflt").Rows(0).Item("lookupvalue").ToString()
                            ViewState("SELFIELDS") = fltval
                            ViewState("FLTFLDID") = ds.Tables("dtflt").Rows(0).Item("fieldid").ToString
                            ddlFLT.SelectedIndex = ddlFLT.Items.IndexOf(ddlFLT.Items.FindByText(fltval))
                        Else
                            ViewState("LKUPVALUE") = ""
                            ViewState("SELFIELDS") = ""
                            ViewState("FLTFLDID") = ""
                        End If
                        ' for initialfilter selection  'ddlFltrSource' and ddlFltrMapping  ' adding on 17 feb balli
                        ddlFltrSource.Items.Clear()
                        da.SelectCommand.CommandText = "select  displayName,FieldMapping,fieldid from MMM_MST_FIELDS where (EID=" & Session("EID") & " OR EID=0) and documenttype='" & ViewState("FORMNAME") & "' and fieldtype='Text Box'"
                        da.SelectCommand.CommandType = CommandType.Text
                        da.Fill(ds, "displayname")
                        ddlFltrSource.Visible = True
                        If ds.Tables("displayname").Rows.Count > 0 Then
                            ' adding drop down of filter source
                            For i As Integer = 0 To ds.Tables("displayname").Rows.Count - 1
                                ddlFltrSource.Items.Add(ds.Tables("displayname").Rows(i).Item(0))
                                ddlFltrSource.Items(i).Value = ds.Tables("displayname").Rows(i).Item(2)
                            Next
                        End If
                        If ds.Tables("field").Rows(0).Item("initialfilter").ToString.Length > 1 Then
                            Dim fltrID As String() = Split(ds.Tables("field").Rows(0).Item("initialfilter").ToString(), ":")
                            If fltrID.Length > 1 Then
                                lblfilteron.Visible = True
                                ddlFltrSource.SelectedIndex = ddlFltrSource.Items.IndexOf(ddlFltrSource.Items.FindByValue(fltrID(0)))
                                ddlFltrMapping.SelectedIndex = ddlFltrMapping.Items.IndexOf(ddlFltrMapping.Items.FindByValue(fltrID(1)))
                                'ddlFltrMapping 
                            End If
                            'If ddlFltrSource.SelectedItem.Text.ToUpper <> "PLEASE SELECT" And ddlFltrMapping.SelectedItem.Text.ToUpper <> "PLEASE SELECT" Then
                            '    initialFilter = ddlFltrSource.SelectedItem.Value & "-" & ddlFltrMapping.SelectedItem.Value
                            'End If
                        End If
                        ddlFltrSource.Items.Insert(0, "SELECT FIELD")


                        Dim ddlFieldSelect As String = ddlDropDownFieldSelect.SelectedValue
                        Dim Dt As New DataTable
                        If ddlFieldSelect.ToUpper().Contains("USERNAME") Or ddlFieldSelect.ToUpper().Contains("EMAILID") Or ddlFieldSelect.ToUpper().Contains("PASSWORD") Or ddlFieldSelect.ToUpper().Contains("USERROLE") Or ddlFieldSelect.ToUpper().Contains("ENTITYNAME") Or ddlFieldSelect.ToUpper().Contains("LOCATION") Or ddlFieldSelect.ToUpper().Contains("ACTIVATIONLINK") Then
                            'oda.SelectCommand.CommandText = "Select " & ddlFieldSelect & ",uid from MMM_MST_USER Where eid='" & Session("EID") & "'"
                            'oda.Fill(Dt)
                            'ddldfultvalfld.DataSource = Dt
                            'ddldfultvalfld.DataTextField = ddlFieldSelect
                            'ddldfultvalfld.DataValueField = "uid"
                            'ddldfultvalfld.DataBind()
                            lbldfaultvalfld.Visible = False
                            ddldfultvalfld.Visible = False
                            ddldfultvalfld.Items.Insert(0, "SELECT")
                        Else
                            oda.SelectCommand.CommandText = "Select " & ddlFieldSelect & ",tid from MMM_MST_MASTER Where eid='" & Session("EID") & "' and documenttype='" & ddlDropDownMasteValSelect.SelectedItem.Text.ToString().Trim() & "'"
                            oda.Fill(Dt)
                            ddldfultvalfld.DataSource = Dt
                            ddldfultvalfld.DataTextField = ddlFieldSelect
                            ddldfultvalfld.DataValueField = "tid"
                            ddldfultvalfld.DataBind()
                            lbldfaultvalfld.Visible = True
                            ddldfultvalfld.Visible = True
                        End If
                        If ds.Tables("field").Rows(0).Item("ddlval").ToString() <> "" Then
                            lbldfaultvalfld.Visible = True
                            ddldfultvalfld.Visible = True
                            ddldfultvalfld.SelectedIndex = ddldfultvalfld.Items.IndexOf(ddldfultvalfld.Items.FindByValue(ds.Tables("field").Rows(0).Item("ddlval").ToString()))
                        End If
                        ddldfultvalfld.Items.Insert(0, "SELECT")
                        txtdftvalfix.Visible = False
                        lbldftvalfix.Visible = False
                        lblSelectField.Visible = True
                    ElseIf Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 7) = "SESSION" Then
                        ddlDropdownList.SelectedIndex = 3
                        txtdropDownValued.Visible = False
                        lblDdlvalue.Visible = False
                        chkAutoCom.Visible = False
                        ddlDropDownMasteValSelect.Visible = True
                        ddlDropDownFieldSelect.Visible = True
                        txtdropDownValued.Visible = False
                        lblDdlSelectMaster.Visible = True
                        ddlDropDownMasteValSelect.Items.Clear()
                        ddlDropDownFieldSelect.Items.Clear()
                        ddlDropDownMasteValSelect.Items.Add("USER")
                        ddlDropDownMasteValSelect.Items(0).Value = "MMM_MST_USER"
                        ddlDropDownMasteValSelect.Items.Add("LOCATION")
                        ddlDropDownMasteValSelect.Items(1).Value = "MMM_MST_LOCATION"
                        ddlDropDownMasteValSelect.Items.Insert(0, "Select Master")

                        Dim str As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")
                        ddlDropDownMasteValSelect.SelectedIndex = ddlDropDownMasteValSelect.Items.IndexOf(ddlDropDownMasteValSelect.Items.FindByText(str(1)))


                        If ddlDropDownMasteValSelect.SelectedItem.Text = "USER" Then
                            ddlDropDownFieldSelect.Items.Add("CURRENT USER")
                            ddlDropDownFieldSelect.Items(0).Value = "UID"
                        ElseIf ddlDropDownMasteValSelect.SelectedItem.Text = "LOCATION" Then
                            ddlDropDownFieldSelect.Items.Add("LOCATION")
                            ddlDropDownFieldSelect.Items(0).Value = "LID"
                        End If
                        ddlDropDownFieldSelect.Items.Insert(0, "SELECT FIELD")
                        ddlDropDownFieldSelect.SelectedIndex = ddlDropDownFieldSelect.Items.IndexOf(ddlDropDownFieldSelect.Items.FindByValue(str(2)))

                    ElseIf ds.Tables("field").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then ' for child item valued selection                                                             
                        ddlDropdownList.SelectedIndex = 4
                        txtdropDownValued.Visible = False
                        lblDdlvalue.Visible = False
                        chkAutoCom.Visible = False
                        Dim array1 As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), ":")
                        'Dim arr1 As String() = Split(array1(0), "-")
                        Dim arr2 As String() = Split(array1(1), "-")
                        Dim da As New SqlDataAdapter("", con)
                        'prev 
                        ' da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where EID=" & Session("EID") & " and DocumentType=(select distinct documenttype from MMM_MST_Fields where dropdown='" & ViewState("FORMNAME") & "' and EID=" & Session("EID") & ") and FieldType='drop down'"
                        da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where EID=" & Session("EID") & " and DocumentType=(select distinct documenttype from MMM_MST_Fields where dropdown='" & ViewState("FORMNAME") & "' and EID=" & Session("EID") & ") and FieldType='drop down'  and DROPDOWN LIKE 'DOCUMENT%'"

                        'da.SelectCommand.CommandType = CommandType.Text
                        'da.Fill(ds, "child")
                        'If ds.Tables("child").Rows.Count > 0 Then ' filling drop down master select  
                        '    For i As Integer = 0 To ds.Tables("child").Rows.Count - 1
                        '        ddlDropDownMasteValSelect.Items.Add(ds.Tables("child").Rows(i).Item("displayname").ToString() & ":" & ViewState("FORMNAME"))
                        '        ddlDropDownMasteValSelect.Items(i).Value = "CHILD-" & ds.Tables("child").Rows(i).Item("fieldID").ToString() & ":" & ViewState("FORMNAME")
                        '    Next
                        '    ddlDropDownMasteValSelect.Items.Insert(0, "Select Child")
                        da.SelectCommand.CommandType = CommandType.Text
                        da.Fill(ds, "Fname")
                        Dim count As Integer = 0
                        For k As Integer = 0 To ds.Tables("Fname").Rows.Count - 1
                            Dim ddl As String() = Split(ds.Tables("Fname").Rows(k).Item("dropdown").ToString(), "-")
                            da.SelectCommand.CommandText = "select fieldid,displayname,dropdown from MMM_MST_Fields where documenttype='" & ddl(1) & "' and fieldtype='Child Item' and eid='" & Session("EID") & "'"
                            da.Fill(ds, "childname")
                            If ds.Tables("childname").Rows.Count > 0 Then
                                For j As Integer = 0 To ds.Tables("childname").Rows.Count - 1
                                    ddlDropDownMasteValSelect.Items.Add(ds.Tables("Fname").Rows(k).Item("displayname").ToString() & ":" & ds.Tables("childname").Rows(j).Item("dropdown").ToString())
                                    ddlDropDownMasteValSelect.Items(count).Value = "CHILD-" & ds.Tables("Fname").Rows(k).Item("fieldID").ToString() & ":" & ds.Tables("childname").Rows(j).Item("dropdown").ToString()
                                    count = count + 1
                                Next
                            End If
                        Next
                        ddlDropDownMasteValSelect.SelectedIndex = ddlDropDownMasteValSelect.Items.IndexOf(ddlDropDownMasteValSelect.Items.FindByValue(array1(0) & ":" & arr2(0)))
                        ' filling selected master child  to tis child field value
                        Dim childName As String() = Split(ddlDropDownMasteValSelect.SelectedItem.Text, ":")
                        da.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where (EID=" & Session("EID") & " OR EID=0) and documenttype='" & arr2(0) & "'"
                        da.SelectCommand.CommandType = CommandType.Text
                        da.Fill(ds, "childValue")
                        If ds.Tables("childValue").Rows.Count > 0 Then ' filling drop down master select  
                            For i As Integer = 0 To ds.Tables("childValue").Rows.Count - 1
                                ddlDropDownFieldSelect.Items.Add(ds.Tables("childValue").Rows(i).Item(0))
                                ddlDropDownFieldSelect.Items(i).Value = ds.Tables("childValue").Rows(i).Item(1)
                            Next
                            ddlDropDownFieldSelect.Items.Insert(0, "Select Child Field")
                            ddlDropDownFieldSelect.SelectedIndex = ddlDropDownFieldSelect.Items.IndexOf(ddlDropDownFieldSelect.Items.FindByValue(arr2(1)))
                        End If
                    ElseIf ds.Tables("field").Rows(0).Item("dropdowntype") = "FIX VALUED" Then
                        ddlDropdownList.SelectedIndex = 1
                        txtdropDownValued.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                        txtdropDownValued.Visible = True
                        txtdftvalfix.Text = ds.Tables("field").Rows(0).Item("ddlval").ToString()
                        lblDdlvalue.Visible = True
                        lblSelectField.Visible = False
                        ddlFLT.Visible = False
                        lblDdlSelectMaster.Visible = False
                        lblfilteron.Visible = False
                        ddlDropDownMasteValSelect.Visible = False
                        ddlDropDownFieldSelect.Visible = False
                        chkAutoCom.Visible = False                                           'Shalini
                        ddlFltrMapping.Visible = False
                        ddlFltrSource.Visible = False
                        lblFltrDestination.Visible = False
                        lblFldsource.Visible = False
                        txtdftvalfix.Visible = True
                        lbldftvalfix.Visible = True
                    Else
                        ddlDropdownList.SelectedIndex = 1
                        txtdropDownValued.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                        ddlDropDownMasteValSelect.Visible = False
                        ddlDropDownFieldSelect.Visible = False
                        lblDdlSelectMaster.Visible = False
                        chkAutoCom.Visible = False
                        ddlFltrMapping.Visible = False                                          'Shalini
                        ddlFltrSource.Visible = False
                        lblFltrDestination.Visible = False
                        lblFldsource.Visible = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chkDdlMan.Checked = True
                    Else
                        chkDdlMan.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkDlActive.Checked = True
                    Else
                        chkDlActive.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkDdlEditable.Checked = True
                    Else
                        chkDdlEditable.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkDdlWF.Checked = True
                    Else
                        chkDdlWF.Checked = False
                    End If
                    updDropdownSelected.Update()
                    ModalPopUpDropDown.Show()

                Case "List Box"
                    ddlLstMasterSelect.Items.Clear()
                    ddlLstBxField.Items.Clear()
                    updLstBox.Update()
                    txtListBoxDisplayName.Text = row.Cells(1).Text
                    If Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 6) = "MASTER" Or Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 8) = "DOCUMENT" Then
                        ddlListBoxValued.SelectedIndex = 2
                        ' for master selection list box 
                        Dim da As New SqlDataAdapter("select FormName,FormType   from MMM_MST_FORMS where EID=" & Session("EID") & " and FormSource ='MENU DRIVEN'", con)
                        da.Fill(ds, "Master")
                        If ds.Tables("Master").Rows.Count > 0 Then
                            For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
                                ddlLstMasterSelect.Items.Add(ds.Tables("Master").Rows(i).Item("FormName").ToString())
                                ddlLstMasterSelect.Items(i).Value = ds.Tables("Master").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("Master").Rows(i).Item("Formname").ToString()
                            Next
                            ddlLstMasterSelect.Items.Insert(0, "Select Master")
                        End If
                        Dim dropdownSplit As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")
                        ddlLstMasterSelect.SelectedIndex = ddlLstMasterSelect.Items.IndexOf(ddlLstMasterSelect.Items.FindByText(dropdownSplit(1)))

                        'for fields master selection list box

                        da.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ddlLstMasterSelect.SelectedItem.Text & "'"
                        da.Fill(ds, "FieldName")
                        ddlLstBxField.Visible = True
                        ddlLstBxField.Controls.Clear()
                        If ds.Tables("FieldName").Rows.Count > 0 Then
                            For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                ddlLstBxField.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                                ddlLstBxField.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                            Next
                            ddlLstBxField.Items.Insert(0, "SELECT FIELD")
                        End If
                        ddlLstBxField.SelectedIndex = ddlLstBxField.Items.IndexOf(ddlLstBxField.Items.FindByValue(dropdownSplit(2)))
                        txtListBoxValue.Visible = False

                        lblListSelectMaster.Visible = True
                        lblListBoxSelect.Visible = False
                        ddlLstMasterSelect.Visible = True
                        txtListBoxValue.Visible = False
                    ElseIf Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 7) = "SESSION" Then
                        ddlListBoxValued.SelectedIndex = 3
                        lblListBoxSelect.Visible = False
                        txtListBoxValue.Visible = False

                        ddlLstMasterSelect.Visible = True
                        ddlLstBxField.Visible = True
                        lblListSelectMaster.Visible = True

                        ddlLstMasterSelect.Items.Clear()
                        ddlLstBxField.Items.Clear()
                        ddlLstMasterSelect.Items.Add("USER")
                        ddlLstMasterSelect.Items(0).Value = "MMM_MST_USER"
                        ddlLstMasterSelect.Items.Add("LOCATION")
                        ddlLstMasterSelect.Items(1).Value = "MMM_MST_LOCATION"
                        ddlLstMasterSelect.Items.Insert(0, "Select Master")

                        Dim str As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")
                        ddlLstMasterSelect.SelectedIndex = ddlLstMasterSelect.Items.IndexOf(ddlLstMasterSelect.Items.FindByText(str(1)))


                        If ddlLstMasterSelect.SelectedItem.Text = "USER" Then
                            ddlLstBxField.Items.Add("CURRENT USER")
                            ddlLstBxField.Items(0).Value = "UID"
                        ElseIf ddlLstMasterSelect.SelectedItem.Text = "LOCATION" Then
                            ddlLstBxField.Items.Add("LOCATION")
                            ddlLstBxField.Items(0).Value = "LID"
                        End If
                        ddlLstBxField.Items.Insert(0, "SELECT FIELD")
                        ddlLstBxField.SelectedIndex = ddlLstBxField.Items.IndexOf(ddlLstBxField.Items.FindByValue(str(2)))
                    ElseIf ds.Tables("field").Rows(0).Item("dropdowntype").ToString() = "FIX VALUED" Then
                        txtListBoxValue.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                        ddlListBoxValued.SelectedIndex = 1

                        lblListBoxSelect.Visible = True
                        txtListBoxValue.Visible = True
                        ddlLstMasterSelect.Visible = False
                        lblListSelectMaster.Visible = False
                        ddlLstBxField.Visible = False

                    Else
                        ddlListBoxValued.SelectedIndex = 1
                        txtListBoxValue.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                        ddlLstMasterSelect.Visible = False
                        ddlLstBxField.Visible = False
                        lblListSelectMaster.Visible = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chklstBoxMan.Checked = True
                    Else
                        chklstBoxMan.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkLstBoxActive.Checked = True
                    Else
                        chkLstBoxActive.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkLstBoxEditable.Checked = True
                    Else
                        chkLstBoxEditable.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkLstBoxWF.Checked = True
                    Else
                        chkLstBoxWF.Checked = False
                    End If
                    updLstBox.Update()
                    ModalPopupListBox.Show()

                Case "CheckBox List"
                    ddlChkMasterSelect.Items.Clear()
                    ddlChkfieldVal.Items.Clear()
                    updChk.Update()
                    txtChkBoxList.Text = row.Cells(1).Text
                    If Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 6) = "MASTER" Or Left(ds.Tables("field").Rows(0).Item("dropdown").ToString(), 8) = "DOCUMENT" Then
                        ddlChkListBox.SelectedIndex = 2
                        'for master list box selection
                        Dim da As New SqlDataAdapter("select FormName,FormType   from MMM_MST_FORMS where EID=" & Session("EID") & " and FormSource ='MENU DRIVEN'", con)
                        da.Fill(ds, "Master")
                        ddlChkMasterSelect.Controls.Clear()
                        If ds.Tables("Master").Rows.Count > 0 Then
                            For i As Integer = 0 To ds.Tables("Master").Rows.Count - 1
                                ddlChkMasterSelect.Items.Add(ds.Tables("Master").Rows(i).Item("FormName").ToString())
                                ddlChkMasterSelect.Items(i).Value = ds.Tables("Master").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("Master").Rows(i).Item("Formname").ToString()
                            Next
                            ddlChkMasterSelect.Items.Insert(0, "Select Master")
                        End If
                        Dim dropdownSplit As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")
                        ddlChkMasterSelect.SelectedIndex = ddlChkMasterSelect.Items.IndexOf(ddlChkMasterSelect.Items.FindByText(dropdownSplit(1)))

                        'for field of  master list box selection

                        da.SelectCommand.CommandText = "select  displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ddlChkMasterSelect.SelectedItem.Text & "'"
                        da.Fill(ds, "FieldName")
                        ddlChkfieldVal.Visible = True
                        ddlChkfieldVal.Controls.Clear()
                        ddlChkMasterSelect.Visible = True
                        txtChkListBox.Visible = False
                        lblChkMastr.Visible = True
                        lblChlVal.Visible = False
                        If ds.Tables("FieldName").Rows.Count > 0 Then
                            For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                ddlChkfieldVal.Items.Add(ds.Tables("FieldName").Rows(i).Item(0))
                                ddlChkfieldVal.Items(i).Value = ds.Tables("FieldName").Rows(i).Item(1)
                            Next
                            ddlChkfieldVal.Items.Insert(0, "SELECT FIELD")
                        End If
                        ddlChkfieldVal.SelectedIndex = ddlChkfieldVal.Items.IndexOf(ddlChkfieldVal.Items.FindByValue(dropdownSplit(2)))
                    ElseIf ds.Tables("field").Rows(0).Item("dropdowntype").ToString() = "FIX VALUED" Then
                        ddlChkListBox.SelectedIndex = 1
                        lblChlVal.Visible = True
                        txtChkListBox.Visible = True

                        txtChkListBox.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                        lblChkMastr.Visible = False
                        ddlChkMasterSelect.Visible = False
                        ddlChkfieldVal.Visible = False

                    Else
                        ddlChkListBox.SelectedIndex = 1
                        txtChkBoxList.Text = ds.Tables("field").Rows(0).Item("displayName").ToString()
                        txtChkListBox.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                        lblChkMastr.Visible = False
                        ddlChkMasterSelect.Visible = False
                        ddlChkfieldVal.Visible = False
                    End If


                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chklstMandatory.Checked = True
                    Else
                        chklstMandatory.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        ChklistBoxActive.Checked = True
                    Else
                        ChklistBoxActive.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chklistBoxEditable.Checked = True
                    Else
                        chklistBoxEditable.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkListBoxWF.Checked = True
                    Else
                        chkListBoxWF.Checked = False
                    End If
                    updChk.Update()
                    ModalPopupChkListBoxSelect.Show()

                Case "File Uploader"
                    txtFUDiaplayName.Text = row.Cells(1).Text
                    txtFUMinL.Text = row.Cells(6).Text
                    txtFUMaxL.Text = row.Cells(7).Text
                    txtFupload.Text = Trim(ds.Tables("field").Rows(0).Item("UploadAllowedTypes").ToString())
                    If (ds.Tables("field").Rows(0).Item("dropdown").ToString() <> String.Empty) Then
                        ImgType.Visible = True
                        txtDPFU.Text = Trim(ds.Tables("field").Rows(0).Item("dropdown").ToString())
                        ddlFUDataTypes.SelectedIndex = 1
                        ddlFUDataTypes_SelectedIndexChanged(ddlFUDataTypes, New EventArgs())
                        txtDPFU.Text = Trim(ds.Tables("field").Rows(0).Item("dropdown").ToString())
                        For Each li As ListItem In chklFUL.Items
                            Dim st As String() = txtDPFU.Text.ToString().Split(",")
                            For i As Integer = 0 To st.Length - 1
                                If ("{" & li.Value & "}" = st(i).ToString()) Then
                                    li.Selected = True
                                    Exit For
                                End If
                            Next
                        Next

                    Else
                        ddlFUDataTypes.SelectedIndex = 2
                        txtDPFU.Text = ""
                        ImgType.Visible = False
                    End If
                    txtDPFU.Attributes.Add("readonly", "readonly")
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chkFUMandaotry.Checked = True
                    Else
                        chkFUMandaotry.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkFUActive.Checked = True
                    Else
                        chkFUActive.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkFUEditable.Checked = True
                    Else
                        chkFUEditable.Checked = False
                    End If
                    If ds.Tables("field").Rows(0).Item("isinvoiceattachment") = True Then
                        chkIsEinvoiceAttachment.Checked = True
                    Else
                        chkIsEinvoiceAttachment.Checked = False
                    End If


                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkFUWF.Checked = True
                    Else
                        chkFUWF.Checked = False
                    End If
                    'ddlFUDataTypes.SelectedIndex = ddlFUDataTypes.Items.IndexOf(ddlFUDataTypes.Items.FindByText(row.Cells(5).Text))

                    updFU.Update()
                    ModalPopupFileUoloader.Show()
                Case "Lookup"
                    ddlLookUpField.Items.Clear()
                    ddlLookUpMasterField.Items.Clear()
                    updatepanelLookUp.Update()
                    txtLookUP.Text = row.Cells(1).Text
                    lukup.Visible = True
                    txtlukupmin.Text = row.Cells(6).Text
                    txtlukupmax.Text = row.Cells(7).Text
                    txtlukupdesc.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    ddlLUdatatypes.SelectedIndex = ddlLUdatatypes.Items.IndexOf(ddlLUdatatypes.Items.FindByText(row.Cells(5).Text))

                    Dim dashowtext As New SqlDataAdapter("select isnull(IflookupMvShowValue,1) [IflookupMvShowValue] from mmm_mst_fields where Fieldid =" & pid, con)
                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If
                    Dim ishshowtext = dashowtext.SelectCommand.ExecuteScalar()
                    con.Close()

                    chkShowText.Checked = ishshowtext


                    ' ,isnull(IflookupMvShowValue,1) [IflookupMvShowValue]
                    'If (ds.Tables("data").Rows(0).Item("IflookupMvShowValue").ToString() = "True") Then
                    '    chkShowText.Checked = True
                    'Else : chkShowText.Checked = False
                    'End If

                    Dim dss As New DataSet()
                    Dim da As New SqlDataAdapter("", con)
                    If (ViewState("CHILDACTION").ToString().Contains(".")) Then
                        Dim actualformname As String() = ViewState("CHILDACTION").ToString().Split(".")
                        da.SelectCommand.CommandText = "SELECT FieldID,displayName,FieldMapping , lookupvalue FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED') AND (fieldtype='Drop Down' or FieldType='AutoComplete')  AND DOCUMENTTYPE='" & actualformname(1).ToString() & "' AND EID=" & Session("EID")
                        'da.SelectCommand.Connection = con
                        ''Dim da As New SqlDataAdapter("SELECT FieldID,displayName,FieldMapping , lookupvalue FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED') AND fieldtype='Drop Down'  AND DOCUMENTTYPE='" & actualformname(1).ToString() & "' AND EID=" & Session("EID") & " ", con)
                        da.Fill(dss, "Master")
                    Else
                        da.SelectCommand.CommandText = "SELECT FieldID,displayName,FieldMapping , lookupvalue FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED') AND (fieldtype='Drop Down' or FieldType='AutoComplete')  AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID")
                        'da.SelectCommand.Connection = con
                        'Dim da As New SqlDataAdapter("SELECT FieldID,displayName,FieldMapping , lookupvalue FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED') AND fieldtype='Drop Down'  AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " ", con)
                        da.Fill(dss, "Master")
                    End If


                    ddlLookUpMasterField.Controls.Clear()
                    'for master value selection 
                    If dss.Tables("Master").Rows.Count > 0 Then
                        For i As Integer = 0 To dss.Tables("Master").Rows.Count - 1
                            ddlLookUpMasterField.Items.Add(dss.Tables("Master").Rows(i).Item("displayName").ToString())
                            ddlLookUpMasterField.Items(i).Value = dss.Tables("Master").Rows(i).Item("FieldID").ToString()
                        Next
                        ddlLookUpMasterField.Items.Insert(0, "Select Field")



                        For i As Integer = 0 To dss.Tables("Master").Rows.Count - 1
                            ' for cheking lookupvalue contains the fieldid or not 
                            If dss.Tables("Master").Rows(i).Item("lookupvalue").ToString().Contains(ViewState("PID")) Then
                                ViewState("lookVal") = dss.Tables("Master").Rows(i).Item("lookupvalue").ToString()
                                Dim splitlookupval() As String = Split(ViewState("lookVal"), ",") ' for spliting "," sapareted value in lookupvalue 
                                For k As Integer = 0 To splitlookupval.Length - 1         'for searching the particular fieldid and field in the lookupvalue
                                    If splitlookupval(k).Contains(ViewState("PID")) Then
                                        Dim splitid() As String = Split(splitlookupval(k), "-") ' sapareting fieldid and fld value from lookupvalue  
                                        If ViewState("PID") = Val(splitid(0)) Then        ' fieldid is always at zero location of array and fld as 1st location of array
                                            ddlLookUpMasterField.SelectedIndex = ddlLookUpMasterField.Items.IndexOf(ddlLookUpMasterField.Items.FindByText(dss.Tables("Master").Rows(i).Item("displayName").ToString()))
                                            ViewState("RepLookValue") = Replace(ViewState("lookVal"), splitlookupval(k) & ",", " ").ToString()
                                            ViewState("fldID") = dss.Tables("Master").Rows(i).Item("FieldID").ToString()
                                            ViewState("fldIDChange") = dss.Tables("Master").Rows(i).Item("FieldID").ToString()
                                            ' for fields of master selection value 
                                            ddlLookUpField.Items.Clear()
                                            updatepanelLookUp.Update()
                                            da.SelectCommand.CommandText = "SELECT DROPDOWN,dropdowntype FROM MMM_MST_FIELDS WHERE fieldid='" & ddlLookUpMasterField.SelectedItem.Value & "' and DISPLAYNAME='" & ddlLookUpMasterField.SelectedItem.Text & "' AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " "
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If
                                            da.Fill(ds, "data")
                                            If ds.Tables("data").Rows.Count > 0 Then ' for child valued lookup code 

                                                If ds.Tables("data").Rows(0).Item("dropdowntype").ToString() = "CHILD VALUED" Then
                                                    Dim arr As String() = Split(ds.Tables("data").Rows(0).Item("dropdown"), ":")
                                                    Dim arr1 As String() = Split(arr(1), "-")
                                                    da.SelectCommand.CommandText = "select  FieldID,displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr1(0).ToString() & "'"
                                                    da.SelectCommand.CommandType = CommandType.Text
                                                    da.Fill(ds, "FieldName")
                                                    If ds.Tables("FieldName").Rows.Count > 0 Then
                                                        For j As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                                            ddlLookUpField.Items.Add(ds.Tables("FieldName").Rows(j).Item(1))
                                                            ddlLookUpField.Items(j).Value = ds.Tables("FieldName").Rows(j).Item(2)
                                                        Next
                                                        ddlLookUpField.Items.Insert(0, "SELECT FIELD")

                                                        da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where  FieldMapping ='" & splitid(1) & "' and EID=" & Session("EID") & " and DOCUMENTTYPE='" & arr1(0).ToString() & "'"
                                                        da.SelectCommand.CommandType = CommandType.Text
                                                        da.Fill(ds, "fldVal")
                                                        ddlLookUpField.SelectedIndex = ddlLookUpField.Items.IndexOf(ddlLookUpField.Items.FindByText(ds.Tables("fldVal").Rows(0).Item("displayName").ToString()))
                                                    End If
                                                ElseIf ds.Tables("data").Rows(0).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                                    Dim arr As String() = Split(ds.Tables("data").Rows(0).Item("dropdown"), "-")
                                                    da.SelectCommand.CommandText = "select  FieldID,displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr(1).ToString() & "'"
                                                    da.Fill(ds, "FieldName")
                                                    If ds.Tables("FieldName").Rows.Count > 0 Then
                                                        For j As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                                            ddlLookUpField.Items.Add(ds.Tables("FieldName").Rows(j).Item(1))
                                                            ddlLookUpField.Items(j).Value = ds.Tables("FieldName").Rows(j).Item(2)
                                                        Next
                                                        ddlLookUpField.Items.Insert(0, "SELECT FIELD")
                                                        If arr(1).ToUpper = "USER" Then
                                                            ddlLookUpField.Items.Insert(1, "UserName")
                                                            ddlLookUpField.Items.Insert(2, "emailid")
                                                            ddlLookUpField.Items.Insert(3, "USERROLE")
                                                            ddlLookUpField.SelectedValue = splitid(1)
                                                        Else
                                                            da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where  FieldMapping ='" & splitid(1) & "' and EID=" & Session("EID") & " and DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                            da.Fill(ds, "fldVal")
                                                            If ds.Tables("fldVal").Rows.Count > 0 Then
                                                                ddlLookUpField.SelectedIndex = ddlLookUpField.Items.IndexOf(ddlLookUpField.Items.FindByText(ds.Tables("fldVal").Rows(0).Item("displayName").ToString()))
                                                            End If
                                                        End If


                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                Next
                            End If
                        Next
                    End If
                    da.Dispose()
                    dss.Dispose()
                    updatepanelLookUp.Update()
                    ModalPopupLookUp.Show()


                Case "Multi LookUP"



                    txtdpML.Text = ds.Tables("field").Rows(0).Item("Displayname").ToString()
                    txtdescML.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    ddlftypeML.SelectedIndex = ddlftypeML.Items.IndexOf(ddlftypeML.Items.FindByText(ds.Tables("field").Rows(0).Item("datatype").ToString()))
                    'Updated for check form type 

                    Dim vals As String() = ds.Tables("field").Rows(0).Item("dropdown").ToString().Split(",")

                    'If Not UCase(ds.Tables("field").Rows(0).Item("DocumentType").ToString()) = "USER" Then
                    '    oda.SelectCommand.CommandText = "select formtype from mmm_mst_forms where eid=" & Session("EID") & " and formname ='" & ds.Tables("field").Rows(0).Item("DocumentType").ToString() & "'"
                    '    If con.State <> ConnectionState.Open Then
                    '        con.Open()
                    '    End If
                    '    ddlFtypeMultiL.SelectedIndex = ddlFtypeMultiL.Items.IndexOf(ddlFtypeMultiL.Items.FindByText(oda.SelectCommand.ExecuteScalar().ToString()))
                    'Else
                    '    ddlFtypeMultiL.SelectedItem.Text = "User"
                    'End If

                    Dim str As String() = ds.Tables("field").Rows(0).Item("dropdown").ToString().Split(",")
                    If str.Length > 0 Then
                        oda.SelectCommand.CommandText = "Select multilookupval from mmm_mst_fields where eid=" & Session("EID") & " and fieldid=" & Val(str(0)) & ""
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        Dim tempval As String = DBNull.Value.ToString()
                        Dim sa As String() = oda.SelectCommand.ExecuteScalar().ToString.Split(",")
                        For z As Integer = 0 To sa.Length - 1
                            If (sa(z).ToString().Contains("-" & ds.Tables("field").Rows(0).Item("Fieldid").ToString())) Then
                                tempval = sa(z).ToString()
                            End If
                        Next
                        Dim ab As String() = tempval.ToString.Split("-")
                        ddlcompositeForm.Items.Clear()



                        oda.SelectCommand.CommandText = "Select formname,formid,formtype from mmm_mst_forms where eid=" & Session("EID") & " and formtype in(select top(1) formtype from mmm_mst_forms where formname='" & ab(0).ToString() & "' and eid=" & Session("EID") & ") and isactive=1 order by Formname "
                        oda.Fill(ds, "formss")
                        ddlFtypeMultiL.SelectedIndex = ddlFtypeMultiL.Items.IndexOf(ddlFtypeMultiL.Items.FindByText(ds.Tables("formss").Rows(0).Item("formtype").ToString()))
                        If ds.Tables("formss").Rows.Count > 0 Then
                            ddlcompositeForm.DataSource = ds.Tables("formss")
                            ddlcompositeForm.DataTextField = "formname"
                            ddlcompositeForm.DataValueField = "formid"
                            ddlcompositeForm.DataBind()
                            ddlcompositeForm.Items.Insert(0, "Select")
                            If ds.Tables("formss").Rows(0)("formtype").ToString().ToUpper = "MASTER" Then
                                'ddlFieldType.SelectedIndex = 1
                            Else
                                'ddlFieldType.SelectedIndex = 2
                            End If
                        End If
                        ddlcompositeForm.SelectedIndex = ddlcompositeForm.Items.IndexOf(ddlcompositeForm.Items.FindByText(ab(0).ToString()))
                        ' bind fields
                        oda.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ab(0).ToString() & "' and  dropdowntype  not in ('MASTER VALUED')  order by displayname "
                        oda.Fill(ds, "flds")
                        If ds.Tables("flds").Rows.Count > 0 Then
                            ddlfieldsMLC.Items.Clear()
                            ddlfieldsMLC.DataSource = ds.Tables("flds")
                            ddlfieldsMLC.DataTextField = "displayname"
                            ddlfieldsMLC.DataValueField = "fieldmapping"
                            ddlfieldsMLC.DataBind()
                            ddlfieldsMLC.Items.Insert(0, "Select")
                        End If
                        'end
                        oda.SelectCommand.CommandText = "Select displayname from mmm_mst_fields where eid=" & Session("EID") & " and fieldmapping='" & ab(1).ToString() & "' and documenttype='" & ab(0).ToString() & "'"
                        Dim bc As String = oda.SelectCommand.ExecuteScalar().ToString()
                        ddlfieldsMLC.SelectedIndex = ddlfieldsMLC.Items.IndexOf(ddlfieldsMLC.Items.FindByText(bc.ToString()))
                    End If
                    If (ViewState("FS").ToString().ToUpper().Trim() <> "DETAIL FORM") Then


                        oda.SelectCommand.CommandText = "select distinct f.fieldid,(f.displayname+'(DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;"
                        oda.Fill(ds, "mlfields")
                        Dim dt As New DataTable()
                        dt = ds.Tables("mlfields").Clone()
                        'If (ddlFieldType.SelectedIndex = 1) Then
                        '    oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;"
                        '    oda.Fill(ds, "mlfields")
                        'Else
                        '    oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by f.displayname;"
                        '    oda.Fill(ds, "mlfields")
                        'End If




                        ' bind code for checkboxlist
                        'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;select fieldid,displayname,fieldmapping,dropdowntype,DDLlookupValueSource from mmm_mst_fields where documenttype='" & ViewState("FORMNAME").ToString() & "' and eid=" & Session("EID") & " and  fieldtype='LookupDDL'"
                        'oda.Fill(ds, "mlfields")
                        'Dim dt As New DataTable()
                        'dt = ds.Tables("mlfields").Clone()

                        'If ds.Tables("mlfields1").Rows.Count > 0 Then
                        '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                        '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                        '                Dim drs As DataRow
                        '                drs = dt.NewRow()
                        '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                        '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                        '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                        '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                        '                dt.Rows.Add(drs)
                        '            End If
                        '        Next
                        '    Next
                        '    If (dt.Rows.Count > 0) Then
                        '        For Each dr As DataRow In dt.Rows
                        '            Dim drs1 As DataRow
                        '            drs1 = ds.Tables("mlfields").NewRow()
                        '            drs1("fieldid") = dr("fieldid")
                        '            drs1("displayname") = dr("displayname")
                        '            drs1("fieldmapping") = dr("fieldmapping")
                        '            drs1("dropdown") = dr("dropdown")
                        '            ds.Tables("mlfields").Rows.Add(drs1)
                        '        Next
                        '    End If
                        'End If
                        If (ds.Tables("mlfields1").Rows.Count > 0) Then
                            For Each dr As DataRow In ds.Tables("mlfields1").Rows
                                Dim drs1 As DataRow
                                drs1 = ds.Tables("mlfields").NewRow()
                                drs1("fieldid") = dr("fieldid")
                                drs1("displayname") = dr("displayname")
                                drs1("fieldmapping") = dr("fieldmapping")
                                drs1("dropdown") = dr("dropdown")
                                ds.Tables("mlfields").Rows.Add(drs1)
                            Next
                        End If
                        If ds.Tables("mlfields").Rows.Count > 0 Then
                            chklistMultiLookup.Items.Clear()
                            For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                                chklistMultiLookup.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                                chklistMultiLookup.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                            Next
                            'ddlfieldsMLC.Items.Insert(0, "Select Field")
                        End If
                        'If ds.Tables("mlfields").Rows.Count > 0 Then
                        '    chklistMultiLookup.Items.Clear()
                        '    For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        '        chklistMultiLookup.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                        '        chklistMultiLookup.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                        '    Next
                        'End If

                        For i As Integer = 0 To str.Length - 1
                            For Each li As ListItem In chklistMultiLookup.Items
                                ' Dim ad As String = str(i).ToString()
                                If UCase(str(i).ToString()) = UCase(li.Value.ToString()) Then
                                    li.Selected = True

                                End If
                            Next

                        Next
                    Else
                        'oda.SelectCommand.CommandText = "SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype not in ('MASTER VALUED') AND  DOCUMENTTYPE='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' AND EID=" & Session("EID") & " order by displayname"
                        'oda.Fill(ds, "fields")
                        'If ds.Tables("fields").Rows.Count > 0 Then
                        '    ddlfieldsMLC.Items.Clear()
                        '    For i As Integer = 0 To ds.Tables("fields").Rows.Count - 1
                        '        ddlfieldsMLC.Items.Add(ds.Tables("fields").Rows(i).Item("displayName").ToString())
                        '        ddlfieldsMLC.Items(i).Value = ds.Tables("fields").Rows(i).Item("FieldMapping").ToString()
                        '    Next
                        '    ddlfieldsMLC.Items.Insert(0, "Select Field")
                        'End If


                        'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;select fieldid,displayname,fieldmapping,dropdowntype,DDLlookupValueSource from mmm_mst_fields where documenttype='" & ViewState("FORMNAME").ToString() & "' and eid=" & Session("EID") & " and  fieldtype='LookupDDL';select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in( select top(1) documenttype from mmm_mst_fields where FieldType='Child Item' and eid=" & Session("EID").ToString() & " and dropdown='" & ViewState("FORMNAME").ToString() & "') and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;"
                        'oda.Fill(ds, "mlfields")
                        'Dim dt As New DataTable()
                        'dt = ds.Tables("mlfields").Clone()

                        'If ds.Tables("mlfields1").Rows.Count > 0 Then
                        '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                        '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                        '                Dim drs As DataRow
                        '                drs = dt.NewRow()
                        '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                        '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                        '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                        '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                        '                dt.Rows.Add(drs)
                        '            End If
                        '        Next
                        '    Next
                        '    If (dt.Rows.Count > 0) Then
                        '        For Each dr As DataRow In dt.Rows
                        '            Dim drs1 As DataRow
                        '            drs1 = ds.Tables("mlfields").NewRow()
                        '            drs1("fieldid") = dr("fieldid")
                        '            drs1("displayname") = dr("displayname")
                        '            drs1("fieldmapping") = dr("fieldmapping")
                        '            drs1("dropdown") = dr("dropdown")
                        '            ds.Tables("mlfields").Rows.Add(drs1)
                        '        Next
                        '    End If
                        'End If
                        'If ds.Tables("mlfields2").Rows.Count > 0 Then
                        '    For Each dr As DataRow In ds.Tables("mlfields2").Rows
                        '        Dim drs1 As DataRow
                        '        drs1 = ds.Tables("mlfields").NewRow()
                        '        drs1("fieldid") = dr("fieldid")
                        '        drs1("displayname") = dr("displayname")
                        '        drs1("fieldmapping") = dr("fieldmapping")
                        '        drs1("dropdown") = dr("dropdown")
                        '        ds.Tables("mlfields").Rows.Add(drs1)
                        '    Next


                        'End If

                        oda.SelectCommand.CommandText = "select distinct f.fieldid,(f.displayname+'(CHILD DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (CHILD LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;select distinct f.fieldid,(f.displayname+'(DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in (select top(1) documenttype from MMM_MST_FIELDS where dropdown='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & ") and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in (select top(1) documenttype from MMM_MST_FIELDS where dropdown='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & ") and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;"
                        oda.Fill(ds, "mlfields")
                        Dim dt As New DataTable()
                        dt = ds.Tables("mlfields").Clone()

                        'If ds.Tables("mlfields1").Rows.Count > 0 Then
                        '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                        '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                        '                Dim drs As DataRow
                        '                drs = dt.NewRow()
                        '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                        '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                        '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                        '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                        '                dt.Rows.Add(drs)
                        '            End If
                        '        Next
                        '    Next
                        '    If (dt.Rows.Count > 0) Then
                        '        For Each dr As DataRow In dt.Rows
                        '            Dim drs1 As DataRow
                        '            drs1 = ds.Tables("mlfields").NewRow()
                        '            drs1("fieldid") = dr("fieldid")
                        '            drs1("displayname") = dr("displayname")
                        '            drs1("fieldmapping") = dr("fieldmapping")
                        '            drs1("dropdown") = dr("dropdown")
                        '            ds.Tables("mlfields").Rows.Add(drs1)
                        '        Next
                        '    End If
                        'End If
                        If ds.Tables("mlfields1").Rows.Count > 0 Then
                            For Each dr As DataRow In ds.Tables("mlfields1").Rows
                                Dim drs1 As DataRow
                                drs1 = ds.Tables("mlfields").NewRow()
                                drs1("fieldid") = dr("fieldid")
                                drs1("displayname") = dr("displayname")
                                drs1("fieldmapping") = dr("fieldmapping")
                                drs1("dropdown") = dr("dropdown")
                                ds.Tables("mlfields").Rows.Add(drs1)
                            Next
                        End If
                        If ds.Tables("mlfields2").Rows.Count > 0 Then
                            For Each dr As DataRow In ds.Tables("mlfields2").Rows
                                Dim drs1 As DataRow
                                drs1 = ds.Tables("mlfields").NewRow()
                                drs1("fieldid") = dr("fieldid")
                                drs1("displayname") = dr("displayname")
                                drs1("fieldmapping") = dr("fieldmapping")
                                drs1("dropdown") = dr("dropdown")
                                ds.Tables("mlfields").Rows.Add(drs1)
                            Next
                        End If
                        If ds.Tables("mlfields3").Rows.Count > 0 Then
                            For Each dr As DataRow In ds.Tables("mlfields3").Rows
                                Dim drs1 As DataRow
                                drs1 = ds.Tables("mlfields").NewRow()
                                drs1("fieldid") = dr("fieldid")
                                drs1("displayname") = dr("displayname")
                                drs1("fieldmapping") = dr("fieldmapping")
                                drs1("dropdown") = dr("dropdown")
                                ds.Tables("mlfields").Rows.Add(drs1)
                            Next
                        End If
                        If ds.Tables("mlfields").Rows.Count > 0 Then
                            chklistMultiLookup.Items.Clear()
                            For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                                chklistMultiLookup.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                                chklistMultiLookup.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                            Next
                            'ddlfieldsMLC.Items.Insert(0, "Select Field")
                        Else
                            If (chklistMultiLookup.Items.Count > 0) Then
                                chklistMultiLookup.Items.Clear()
                            End If
                        End If
                        For i As Integer = 0 To str.Length - 1
                            For Each li As ListItem In chklistMultiLookup.Items
                                ' Dim ad As String = str(i).ToString()
                                If UCase(str(i).ToString()) = UCase(li.Value.ToString()) Then
                                    li.Selected = True

                                End If
                            Next

                        Next
                    End If

                    txtFieldLengthminML.Text = row.Cells(6).Text
                    txtFieldLengthmaxML.Text = row.Cells(7).Text
                    Dim chka As Integer = Val(ds.Tables("field").Rows(0).Item("isactive"))
                    Dim chkM As Integer = Val(ds.Tables("field").Rows(0).Item("isrequired"))
                    Dim chkE As Integer = Val(ds.Tables("field").Rows(0).Item("isEditable"))
                    Dim chkW As Integer = Val(ds.Tables("field").Rows(0).Item("isWorkFlow"))
                    If chka = 1 Then
                        chkFieldActdML.Checked = True
                    Else
                        chkFieldActdML.Checked = False
                    End If
                    If chkM = 1 Then
                        chkFieldMandML.Checked = True
                    Else
                        chkFieldMandML.Checked = False
                    End If
                    If chkE = 1 Then
                        chkFieldEditdML.Checked = True
                    Else
                        chkFieldEditdML.Checked = False
                    End If
                    If chkW = 1 Then
                        chkFieldWFdML.Checked = True
                    Else
                        chkFieldWFdML.Checked = False
                    End If
                    oda.Dispose()
                    ds.Dispose()
                    UpdpanelMultiLookUp.Update()
                    modalpopupMultiLookUP.Show()

                    'Added For Multilookup DDl by mayank
                Case "Multi LookupDDL"
                    txtmlddldn.Text = ds.Tables("field").Rows(0).Item("Displayname").ToString()
                    txtmlddlDs.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    Ddlmlddldt.SelectedIndex = Ddlmlddldt.Items.IndexOf(Ddlmlddldt.Items.FindByText(ds.Tables("field").Rows(0).Item("datatype").ToString()))
                    'Updated for check form type 

                    Dim vals As String() = ds.Tables("field").Rows(0).Item("dropdown").ToString().Split(",")

                    'If Not UCase(ds.Tables("field").Rows(0).Item("DocumentType").ToString()) = "USER" Then
                    '    oda.SelectCommand.CommandText = "select formtype from mmm_mst_forms where eid=" & Session("EID") & " and formname ='" & ds.Tables("field").Rows(0).Item("DocumentType").ToString() & "'"
                    '    If con.State <> ConnectionState.Open Then
                    '        con.Open()
                    '    End If
                    '    ddlFtypeMultiL.SelectedIndex = ddlFtypeMultiL.Items.IndexOf(ddlFtypeMultiL.Items.FindByText(oda.SelectCommand.ExecuteScalar().ToString()))
                    'Else
                    '    ddlFtypeMultiL.SelectedItem.Text = "User"
                    'End If

                    Dim str As String() = ds.Tables("field").Rows(0).Item("dropdown").ToString().Split(",")
                    If str.Length > 0 Then
                        oda.SelectCommand.CommandText = "Select ddlmultilookupval from mmm_mst_fields where eid=" & Session("EID") & " and fieldid=" & Val(str(0)) & ""
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        Dim tempval As String = DBNull.Value.ToString()
                        Dim sa As String() = oda.SelectCommand.ExecuteScalar().ToString.Split(",")
                        For z As Integer = 0 To sa.Length - 1
                            If (sa(z).ToString().Contains("-" & ds.Tables("field").Rows(0).Item("Fieldid").ToString())) Then
                                tempval = sa(z).ToString()
                            End If
                        Next
                        Dim ab As String() = tempval.ToString.Split("-")
                        ddlmlddlcf.Items.Clear()



                        oda.SelectCommand.CommandText = "Select formname,formid,formtype from mmm_mst_forms where eid=" & Session("EID") & " and formtype in(select top(1) formtype from mmm_mst_forms where formname='" & ab(0).ToString() & "' and eid=" & Session("EID") & ") and isactive=1 order by Formname "
                        oda.Fill(ds, "formss")
                        ddlmlddlft.SelectedIndex = ddlmlddlft.Items.IndexOf(ddlmlddlft.Items.FindByText(ds.Tables("formss").Rows(0).Item("formtype").ToString()))
                        If ds.Tables("formss").Rows.Count > 0 Then
                            ddlmlddlcf.DataSource = ds.Tables("formss")
                            ddlmlddlcf.DataTextField = "formname"
                            ddlmlddlcf.DataValueField = "formid"
                            ddlmlddlcf.DataBind()
                            ddlmlddlcf.Items.Insert(0, "Select")
                            If ds.Tables("formss").Rows(0)("formtype").ToString().ToUpper = "MASTER" Then
                                'ddlMLDDLType.SelectedIndex = 1
                            Else
                                'ddlMLDDLType.SelectedIndex = 2
                            End If

                        End If
                        ddlmlddlcf.SelectedIndex = ddlmlddlcf.Items.IndexOf(ddlmlddlcf.Items.FindByText(ab(0).ToString()))
                        ' bind fields
                        oda.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ab(0).ToString() & "' and dropdowntype in ('MASTER VALUED','CHILD VALUED','SESSION VALUED') AND fieldtype in ('Drop Down','AutoComplete')  order by displayname "
                        oda.Fill(ds, "flds")
                        If ds.Tables("flds").Rows.Count > 0 Then
                            ddlmlddlf.Items.Clear()
                            ddlmlddlf.DataSource = ds.Tables("flds")
                            ddlmlddlf.DataTextField = "displayname"
                            ddlmlddlf.DataValueField = "fieldmapping"
                            ddlmlddlf.DataBind()
                            ddlmlddlf.Items.Insert(0, "Select")

                        End If
                        'end
                        oda.SelectCommand.CommandText = "Select displayname from mmm_mst_fields where eid=" & Session("EID") & " and fieldmapping='" & ab(1).ToString() & "' and documenttype='" & ab(0).ToString() & "'"
                        Dim bc As String = oda.SelectCommand.ExecuteScalar().ToString()
                        ddlmlddlf.SelectedIndex = ddlmlddlf.Items.IndexOf(ddlmlddlf.Items.FindByText(bc.ToString()))
                    End If
                    'If ddlMLDDLType.SelectedIndex = 1 Then
                    '    oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;"
                    '    oda.Fill(ds, "mlfields")
                    'Else
                    '    oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by f.displayname"
                    '    oda.Fill(ds, "mlfields")

                    'End If




                    ' bind code for checkboxlist

                    'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;select fieldid,displayname,fieldmapping,dropdowntype,DDLlookupValueSource from mmm_mst_fields where documenttype='" & ViewState("FORMNAME").ToString() & "' and eid=" & Session("EID") & " and  fieldtype='LookupDDL'"
                    'oda.Fill(ds, "mlfields")
                    'Dim dt As New DataTable()
                    'dt = ds.Tables("mlfields").Clone()

                    'If ds.Tables("mlfields1").Rows.Count > 0 Then
                    '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                    '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                    '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                    '                Dim drs As DataRow
                    '                drs = dt.NewRow()
                    '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                    '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                    '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                    '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                    '                dt.Rows.Add(drs)
                    '            End If
                    '        Next
                    '    Next
                    '    If (dt.Rows.Count > 0) Then
                    '        For Each dr As DataRow In dt.Rows
                    '            Dim drs1 As DataRow
                    '            drs1 = ds.Tables("mlfields").NewRow()
                    '            drs1("fieldid") = dr("fieldid")
                    '            drs1("displayname") = dr("displayname")
                    '            drs1("fieldmapping") = dr("fieldmapping")
                    '            drs1("dropdown") = dr("dropdown")
                    '            ds.Tables("mlfields").Rows.Add(drs1)
                    '        Next
                    '    End If
                    'End If

                    If (ViewState("FS").ToString().ToUpper().Trim() <> "DETAIL FORM") Then


                        oda.SelectCommand.CommandText = "select distinct f.fieldid,(f.displayname+'(DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;"
                        oda.Fill(ds, "mlfields")
                        Dim dt As New DataTable()
                        dt = ds.Tables("mlfields").Clone()
                        'If (ddlFieldType.SelectedIndex = 1) Then
                        '    oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;"
                        '    oda.Fill(ds, "mlfields")
                        'Else
                        '    oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by f.displayname;"
                        '    oda.Fill(ds, "mlfields")
                        'End If




                        ' bind code for checkboxlist
                        'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;select fieldid,displayname,fieldmapping,dropdowntype,DDLlookupValueSource from mmm_mst_fields where documenttype='" & ViewState("FORMNAME").ToString() & "' and eid=" & Session("EID") & " and  fieldtype='LookupDDL'"
                        'oda.Fill(ds, "mlfields")
                        'Dim dt As New DataTable()
                        'dt = ds.Tables("mlfields").Clone()

                        'If ds.Tables("mlfields1").Rows.Count > 0 Then
                        '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                        '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                        '                Dim drs As DataRow
                        '                drs = dt.NewRow()
                        '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                        '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                        '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                        '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                        '                dt.Rows.Add(drs)
                        '            End If
                        '        Next
                        '    Next
                        '    If (dt.Rows.Count > 0) Then
                        '        For Each dr As DataRow In dt.Rows
                        '            Dim drs1 As DataRow
                        '            drs1 = ds.Tables("mlfields").NewRow()
                        '            drs1("fieldid") = dr("fieldid")
                        '            drs1("displayname") = dr("displayname")
                        '            drs1("fieldmapping") = dr("fieldmapping")
                        '            drs1("dropdown") = dr("dropdown")
                        '            ds.Tables("mlfields").Rows.Add(drs1)
                        '        Next
                        '    End If
                        'End If
                        If (ds.Tables("mlfields1").Rows.Count > 0) Then
                            For Each dr As DataRow In ds.Tables("mlfields1").Rows
                                Dim drs1 As DataRow
                                drs1 = ds.Tables("mlfields").NewRow()
                                drs1("fieldid") = dr("fieldid")
                                drs1("displayname") = dr("displayname")
                                drs1("fieldmapping") = dr("fieldmapping")
                                drs1("dropdown") = dr("dropdown")
                                ds.Tables("mlfields").Rows.Add(drs1)
                            Next
                        End If

                    Else
                        oda.SelectCommand.CommandText = "select distinct f.fieldid,(f.displayname+'(CHILD DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (CHILD LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;select distinct f.fieldid,(f.displayname+'(DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in (select top(1) documenttype from MMM_MST_FIELDS where dropdown='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & ") and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in (select top(1) documenttype from MMM_MST_FIELDS where dropdown='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & ") and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;"
                        oda.Fill(ds, "mlfields")
                        Dim dt As New DataTable()
                        dt = ds.Tables("mlfields").Clone()

                        'If ds.Tables("mlfields1").Rows.Count > 0 Then
                        '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                        '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                        '                Dim drs As DataRow
                        '                drs = dt.NewRow()
                        '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                        '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                        '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                        '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                        '                dt.Rows.Add(drs)
                        '            End If
                        '        Next
                        '    Next
                        '    If (dt.Rows.Count > 0) Then
                        '        For Each dr As DataRow In dt.Rows
                        '            Dim drs1 As DataRow
                        '            drs1 = ds.Tables("mlfields").NewRow()
                        '            drs1("fieldid") = dr("fieldid")
                        '            drs1("displayname") = dr("displayname")
                        '            drs1("fieldmapping") = dr("fieldmapping")
                        '            drs1("dropdown") = dr("dropdown")
                        '            ds.Tables("mlfields").Rows.Add(drs1)
                        '        Next
                        '    End If
                        'End If
                        If ds.Tables("mlfields1").Rows.Count > 0 Then
                            For Each dr As DataRow In ds.Tables("mlfields1").Rows
                                Dim drs1 As DataRow
                                drs1 = ds.Tables("mlfields").NewRow()
                                drs1("fieldid") = dr("fieldid")
                                drs1("displayname") = dr("displayname")
                                drs1("fieldmapping") = dr("fieldmapping")
                                drs1("dropdown") = dr("dropdown")
                                ds.Tables("mlfields").Rows.Add(drs1)
                            Next
                        End If
                        If ds.Tables("mlfields2").Rows.Count > 0 Then
                            For Each dr As DataRow In ds.Tables("mlfields2").Rows
                                Dim drs1 As DataRow
                                drs1 = ds.Tables("mlfields").NewRow()
                                drs1("fieldid") = dr("fieldid")
                                drs1("displayname") = dr("displayname")
                                drs1("fieldmapping") = dr("fieldmapping")
                                drs1("dropdown") = dr("dropdown")
                                ds.Tables("mlfields").Rows.Add(drs1)
                            Next
                        End If
                        If ds.Tables("mlfields3").Rows.Count > 0 Then
                            For Each dr As DataRow In ds.Tables("mlfields3").Rows
                                Dim drs1 As DataRow
                                drs1 = ds.Tables("mlfields").NewRow()
                                drs1("fieldid") = dr("fieldid")
                                drs1("displayname") = dr("displayname")
                                drs1("fieldmapping") = dr("fieldmapping")
                                drs1("dropdown") = dr("dropdown")
                                ds.Tables("mlfields").Rows.Add(drs1)
                            Next
                        End If


                    End If

                    If ds.Tables("mlfields").Rows.Count > 0 Then
                        chkmlddl.Items.Clear()
                        For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                            chkmlddl.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                            chkmlddl.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                        Next
                        'ddlfieldsMLC.Items.Insert(0, "Select Field")
                    End If
                    'If ds.Tables("mlfields").Rows.Count > 0 Then
                    '    chklistMultiLookup.Items.Clear()
                    '    For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                    '        chklistMultiLookup.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                    '        chklistMultiLookup.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                    '    Next
                    'End If

                    For i As Integer = 0 To str.Length - 1
                        For Each li As ListItem In chkmlddl.Items
                            ' Dim ad As String = str(i).ToString()
                            If UCase(str(i).ToString()) = UCase(li.Value.ToString()) Then
                                li.Selected = True

                            End If
                        Next

                    Next

                    txtmlddlfl.Text = row.Cells(6).Text
                    txtmlddlfml.Text = row.Cells(7).Text
                    Dim chka As Integer = Val(ds.Tables("field").Rows(0).Item("isactive"))
                    Dim chkM As Integer = Val(ds.Tables("field").Rows(0).Item("isrequired"))
                    Dim chkE As Integer = Val(ds.Tables("field").Rows(0).Item("isEditable"))
                    Dim chkW As Integer = Val(ds.Tables("field").Rows(0).Item("isWorkFlow"))
                    If chka = 1 Then
                        chkFieldActdML.Checked = True
                    Else
                        chkFieldActdML.Checked = False
                    End If
                    If chkM = 1 Then
                        chkFieldMandML.Checked = True
                    Else
                        chkFieldMandML.Checked = False
                    End If
                    If chkE = 1 Then
                        chkFieldEditdML.Checked = True
                    Else
                        chkFieldEditdML.Checked = False
                    End If
                    If chkW = 1 Then
                        chkFieldWFdML.Checked = True
                    Else
                        chkFieldWFdML.Checked = False
                    End If
                    oda.Dispose()
                    ds.Dispose()
                    UpMultiLookUpddl.Update()
                    Mod_mlddl.Show()


                Case "LookupDDL"   ' modified on 11/sept/14
                    ddlDDlLookUpField.Items.Clear()
                    ddlDDlLookUpMasterField.Items.Clear()
                    updatepanelDDlLookUp.Update()
                    txtDDlLookUP.Text = row.Cells(1).Text
                    DDllukup.Visible = True
                    txtDDllukupmin.Text = row.Cells(6).Text
                    txtDDllukupmax.Text = row.Cells(7).Text
                    txtDDllukupdesc.Text = ds.Tables("field").Rows(0).Item("Description").ToString()
                    ddlDDlLUdatatypes.SelectedIndex = ddlDDlLUdatatypes.Items.IndexOf(ddlDDlLUdatatypes.Items.FindByText(row.Cells(5).Text))
                    Dim da As New SqlDataAdapter("SELECT FieldID,displayName,FieldMapping , lookupvalue,DDllookupvalue FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED','SESSION VALUED') AND fieldtype='Drop Down'  AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " ", con)
                    Dim dss As New DataSet()
                    da.Fill(dss, "Master")
                    ddlDDlLookUpMasterField.Controls.Clear()
                    'for master value selection 
                    If dss.Tables("Master").Rows.Count > 0 Then
                        For i As Integer = 0 To dss.Tables("Master").Rows.Count - 1
                            ddlDDlLookUpMasterField.Items.Add(dss.Tables("Master").Rows(i).Item("displayName").ToString())
                            ddlDDlLookUpMasterField.Items(i).Value = dss.Tables("Master").Rows(i).Item("FieldID").ToString()
                        Next
                        ddlDDlLookUpMasterField.Items.Insert(0, "Select Field")
                        For i As Integer = 0 To dss.Tables("Master").Rows.Count - 1
                            ' for cheking lookupvalue contains the fieldid or not 
                            If dss.Tables("Master").Rows(i).Item("DDllookupvalue").ToString().Contains(ViewState("PID")) Then
                                ViewState("lookVal") = dss.Tables("Master").Rows(i).Item("DDllookupvalue").ToString()
                                Dim splitlookupval() As String = Split(ViewState("lookVal"), ",") ' for spliting "," sapareted value in lookupvalue 
                                For k As Integer = 0 To splitlookupval.Length - 1         'for searching the particular fieldid and field in the lookupvalue
                                    If splitlookupval(k).Contains(ViewState("PID")) Then
                                        Dim splitid() As String = Split(splitlookupval(k), "-") ' sapareting fieldid and fld value from lookupvalue  
                                        If ViewState("PID") = Val(splitid(0)) Then        ' fieldid is always at zero location of array and fld as 1st location of array
                                            ddlDDlLookUpMasterField.SelectedIndex = ddlDDlLookUpMasterField.Items.IndexOf(ddlDDlLookUpMasterField.Items.FindByText(dss.Tables("Master").Rows(i).Item("displayName").ToString()))
                                            ViewState("RepLookValue") = Replace(ViewState("lookVal"), splitlookupval(k) & ",", " ").ToString()
                                            ViewState("fldID") = dss.Tables("Master").Rows(i).Item("FieldID").ToString()
                                            ViewState("fldIDChange") = dss.Tables("Master").Rows(i).Item("FieldID").ToString()
                                            ' for fields of master selection value 
                                            ddlDDlLookUpField.Items.Clear()
                                            updatepanelDDlLookUp.Update()
                                            da.SelectCommand.CommandText = "SELECT DROPDOWN,dropdowntype FROM MMM_MST_FIELDS WHERE fieldid='" & ddlDDlLookUpMasterField.SelectedItem.Value & "' and DISPLAYNAME='" & ddlDDlLookUpMasterField.SelectedItem.Text & "' AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " "
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If
                                            da.Fill(ds, "data")
                                            If ds.Tables("data").Rows.Count > 0 Then ' for child valued lookup code 
                                                If ds.Tables("data").Rows(0).Item("dropdowntype").ToString() = "CHILD VALUED" Then
                                                    Dim arr As String() = Split(ds.Tables("data").Rows(0).Item("dropdown"), ":")
                                                    Dim arr1 As String() = Split(arr(1), "-")
                                                    da.SelectCommand.CommandText = "select  FieldID,displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr1(0).ToString() & "'"
                                                    da.SelectCommand.CommandType = CommandType.Text
                                                    da.Fill(ds, "FieldName")
                                                    If ds.Tables("FieldName").Rows.Count > 0 Then
                                                        For j As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                                            ddlDDlLookUpField.Items.Add(ds.Tables("FieldName").Rows(j).Item(1))
                                                            ddlDDlLookUpField.Items(j).Value = ds.Tables("FieldName").Rows(j).Item(2)
                                                        Next
                                                        ddlDDlLookUpField.Items.Insert(0, "SELECT FIELD")
                                                        da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where  FieldMapping ='" & splitid(1) & "' and EID=" & Session("EID") & " and DOCUMENTTYPE='" & arr1(0).ToString() & "'"
                                                        da.SelectCommand.CommandType = CommandType.Text
                                                        da.Fill(ds, "fldVal")
                                                        ddlDDlLookUpField.SelectedIndex = ddlDDlLookUpField.Items.IndexOf(ddlDDlLookUpField.Items.FindByText(ds.Tables("fldVal").Rows(0).Item("displayName").ToString()))
                                                    End If
                                                ElseIf ds.Tables("data").Rows(0).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                                    Dim arr As String() = Split(ds.Tables("data").Rows(0).Item("dropdown"), "-")
                                                    da.SelectCommand.CommandText = "select  FieldID,displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr(1).ToString() & "' AND fieldtype='Drop Down'"
                                                    da.Fill(ds, "FieldName")
                                                    If ds.Tables("FieldName").Rows.Count > 0 Then
                                                        For j As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                                            ddlDDlLookUpField.Items.Add(ds.Tables("FieldName").Rows(j).Item(1))
                                                            ddlDDlLookUpField.Items(j).Value = ds.Tables("FieldName").Rows(j).Item(2)
                                                        Next
                                                        ddlDDlLookUpField.Items.Insert(0, "SELECT FIELD")
                                                        da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where  FieldMapping ='" & splitid(1) & "' and EID=" & Session("EID") & " and DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        da.Fill(ds, "fldVal")
                                                        ddlDDlLookUpField.SelectedIndex = ddlDDlLookUpField.Items.IndexOf(ddlDDlLookUpField.Items.FindByText(ds.Tables("fldVal").Rows(0).Item("displayName").ToString()))
                                                    End If
                                                ElseIf ds.Tables("data").Rows(0).Item("dropdowntype").ToString() = "SESSION VALUED" Then
                                                    Dim arr As String() = Split(ds.Tables("data").Rows(0).Item("dropdown"), "-")
                                                    da.SelectCommand.CommandText = "select  FieldID,displayName,FieldMapping from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr(1).ToString() & "' AND fieldtype='Drop Down'"
                                                    da.Fill(ds, "FieldName")
                                                    If ds.Tables("FieldName").Rows.Count > 0 Then
                                                        For j As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                                                            ddlDDlLookUpField.Items.Add(ds.Tables("FieldName").Rows(j).Item(1))
                                                            ddlDDlLookUpField.Items(j).Value = ds.Tables("FieldName").Rows(j).Item(2)
                                                        Next
                                                        ddlDDlLookUpField.Items.Insert(0, "SELECT FIELD")
                                                        If arr(1) = "USER" Then  ' in case of session valued filling the static valued 
                                                            ddlDDlLookUpField.Items.Insert(1, "USERNAME")
                                                            ddlDDlLookUpField.Items.Insert(2, "EMAILID")
                                                            ddlDDlLookUpField.Items.Insert(3, "USERROLE")
                                                            If Not splitid(1).Contains("fld") Then  ' means this contain STATIC FIELD 'USERNAME , USERROLE,EMAILID'
                                                                ddlDDlLookUpField.SelectedIndex = ddlDDlLookUpField.Items.IndexOf(ddlDDlLookUpField.Items.FindByText(splitid(1)))
                                                            Else
                                                                da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where  FieldMapping ='" & splitid(1) & "' and EID=" & Session("EID") & " and DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                                da.Fill(ds, "fldVal")
                                                                ddlDDlLookUpField.SelectedIndex = ddlDDlLookUpField.Items.IndexOf(ddlDDlLookUpField.Items.FindByText(ds.Tables("fldVal").Rows(0).Item("displayName").ToString()))
                                                            End If
                                                        Else
                                                            da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where  FieldMapping ='" & splitid(1) & "' and EID=" & Session("EID") & " and DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                            da.Fill(ds, "fldVal")
                                                            ddlDDlLookUpField.SelectedIndex = ddlDDlLookUpField.Items.IndexOf(ddlDDlLookUpField.Items.FindByText(ds.Tables("fldVal").Rows(0).Item("displayName").ToString()))
                                                        End If

                                                    End If
                                                End If

                                            End If
                                        End If
                                    End If
                                Next
                            End If
                        Next
                    End If
                    da.Dispose()
                    dss.Dispose()
                    updatepanelDDlLookUp.Update()
                    ModalPopupDDlLookup.Show()

                Case "Child Item"
                    TextBox1.Text = row.Cells(1).Text

                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        DFChkM.Checked = True
                    Else
                        DFChkM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        DFchkA.Checked = True
                    Else
                        DFchkA.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        DFchkE.Checked = True
                    Else
                        DFchkE.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        DFchkw.Checked = True
                    Else
                        DFchkw.Checked = False
                    End If
                    Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM'", con)
                    da.Fill(ds, "FieldName")
                    ddlDF.Items.Clear()
                    If ds.Tables("FieldName").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                            ddlDF.Items.Add(ds.Tables("FieldName").Rows(i).Item("FormName").ToString())
                            ddlDF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("formid").ToString()
                        Next
                        'Dim s As String = ddlDF.Items.IndexOf(ddlDF.Items.FindByText(ds.Tables("field").Rows(0).Item("dropdown").ToString()))
                        'ddlDF.SelectedIndex = s
                        ddlDF.Items.Insert(0, "Select Field")
                    End If
                    Dim DF As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")
                    If DF.Length > 1 Then
                        ddlDF.SelectedIndex = ddlDF.Items.IndexOf(ddlDF.Items.FindByText(DF(0)))
                    Else
                        ddlDF.SelectedItem.Text = ds.Tables("field").Rows(0).Item("dropdown").ToString()
                    End If

                    'adding code for child item Master field bind drop down
                    da.SelectCommand.CommandText = "Select displayname,fieldid from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' AND DROPDOWNTYPE='MASTER VALUED' "
                    da.Fill(ds, "CIMF")
                    ddlMFF.Items.Clear()
                    If ds.Tables("CIMF").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("CIMF").Rows.Count - 1
                            ddlMFF.Items.Add(ds.Tables("CIMF").Rows(i).Item(0))
                            ddlMFF.Items(i).Value = ds.Tables("CIMF").Rows(i).Item(1).ToString()
                        Next
                    End If
                    ddlMFF.Items.Insert(0, "SELECT ONE")
                    Dim MF As String() = Split(ds.Tables("field").Rows(0).Item("KC_LOGIC").ToString(), "-") ' value of master form form field and child form field are save in KC logic with - saperated value
                    If MF.Length > 1 Then
                        ddlMFF.SelectedIndex = ddlMFF.Items.IndexOf(ddlMFF.Items.FindByValue(MF(0)))
                        'adding code for child item form field bind drop down
                        da.SelectCommand.CommandText = "Select displayname,fieldid from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & ddlDF.SelectedItem.Text & "' AND DROPDOWNTYPE='MASTER VALUED'"
                        da.Fill(ds, "CIF")
                        ddlCFF.Items.Clear()
                        If ds.Tables("CIF").Rows.Count > 0 Then
                            For i As Integer = 0 To ds.Tables("CIF").Rows.Count - 1
                                ddlCFF.Items.Add(ds.Tables("CIF").Rows(i).Item(0))
                                ddlCFF.Items(i).Value = ds.Tables("CIF").Rows(i).Item(1).ToString()
                            Next
                        End If
                        ddlCFF.Items.Insert(0, "SELECT ONE")
                        ddlCFF.SelectedIndex = ddlCFF.Items.IndexOf(ddlCFF.Items.FindByValue(MF(1)))
                    End If
                    UpdPnlDF.Update()
                    DFModalPopup.Show()
                    'ddlFUDataTypes.SelectedIndex = ddlFUDataTypes.Items.IndexOf(ddlFUDataTypes.Items.FindByText(row.Cells(5).Text))

                    'Case "Calculative Field"
                    '    CF_txtFE.Text = ""
                    '    CF_txtdisplayname.Text = row.Cells(1).Text
                    '    ' for selecting numeric field only of form type
                    '    Dim da As New SqlDataAdapter("select Fieldid, displayName,FieldMapping,Cal_Fields from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric'", con)
                    '    Dim dss As New DataSet()
                    '    da.Fill(dss, "FieldName")
                    '    ViewState("FieldName") = dss.Tables("FieldName")
                    '    Dim strFields As String = ""
                    '    For Each dr As DataRow In dss.Tables("FieldName").Rows
                    '        strFields &= dr.Item("displayname").ToString()
                    '        strFields &= Environment.NewLine
                    '    Next
                    '    CF_TxtFields.Text = strFields.ToString()
                    '    'for selecting Formula editor value
                    '    Dim Cval As Integer = 0
                    '    For k As Integer = 0 To dss.Tables("FieldName").Rows.Count - 1
                    '        If Cval = 1 Then
                    '            Exit For
                    '        End If
                    '        If IsDBNull(dss.Tables("fieldName").Rows(k).Item("Cal_Fields")) = False Then
                    '            Dim spltFEComma As String() = Split(dss.Tables("fieldName").Rows(k).Item("Cal_Fields").ToString(), ",") ' spliting cal fields with comma saperated
                    '            For i As Integer = 0 To spltFEComma.Length - 1  ' looping to end of the calculative field
                    '                ViewState("ScriptID") = spltFEComma(0)
                    '                Dim spltCpnl As String() = Split(spltFEComma(i), "parseFloat($('#ContentPlaceHolder1_") ' spliting to find fieldid in which numeric field to be applied as cal field
                    '                If spltCpnl(0).Contains(ViewState("PID")) Then
                    '                    For a As Integer = 0 To spltCpnl.Length - 1
                    '                        Dim valmid As String = Replace(spltCpnl(a), "fld", "")
                    '                        valmid = Replace(valmid, "').val())", "")
                    '                        'valmid = Replace(valmid, Right(valmid, 2), "")
                    '                        Dim operators As String = "+-*/%"  ' for checking mathmetical operator 
                    '                        For J As Integer = 0 To dss.Tables("FieldName").Rows.Count - 1
                    '                            If dss.Tables("fieldName").Rows(J).Item("fieldid") = Val(valmid) Then
                    '                                Dim strOPT As String = Right(spltCpnl(a), 1)
                    '                                strOPT = Left(strOPT, 1)
                    '                                If operators.Contains(strOPT) Then
                    '                                    CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString() & strOPT
                    '                                Else
                    '                                    CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString()
                    '                                End If
                    '                            End If
                    '                        Next
                    '                        If CF_txtFE.Text.Length > 1 Then
                    '                            Cval = 1
                    '                        End If
                    '                    Next
                    '                End If
                    '            Next
                    '        End If
                    '    Next
                    '    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                    '        CF_chkM.Checked = True
                    '    Else
                    '        CF_chkM.Checked = False
                    '    End If
                    '    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                    '        CF_chkActive.Checked = True
                    '    Else
                    '        CF_chkActive.Checked = False
                    '    End If
                    '    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                    '        CF_chkEdit.Checked = True
                    '    Else
                    '        CF_chkEdit.Checked = False
                    '    End If

                    '    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                    '        CF_chkWF.Checked = True
                    '    Else
                    '        CF_chkWF.Checked = False
                    '    End If

                    '    da.Dispose()
                    '    ds.Dispose()
                    '    upd_CF.Update()
                    '    CFModalPopup.Show()

                    'Case "Calculative Field"
                    '    CF_txtFE.Text = ""
                    '    CF_txtdisplayname.Text = row.Cells(1).Text
                    '    ' for selecting numeric field only of form type
                    '    Dim da As New SqlDataAdapter("select Fieldid, displayName,FieldMapping,Cal_Fields from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric'", con)
                    '    Dim dss As New DataSet()
                    '    da.Fill(dss, "FieldName")
                    '    ViewState("FieldName") = dss.Tables("FieldName")
                    '    Dim strFields As String = ""
                    '    For Each dr As DataRow In dss.Tables("FieldName").Rows
                    '        strFields &= dr.Item("displayname").ToString()
                    '        strFields &= Environment.NewLine
                    '    Next
                    '    CF_TxtFields.Text = strFields.ToString()
                    '    'for selecting Formula editor value
                    '    Dim Cval As Integer = 0
                    '    For k As Integer = 0 To dss.Tables("FieldName").Rows.Count - 1
                    '        If Cval = 1 Then
                    '            Exit For
                    '        End If
                    '        If IsDBNull(dss.Tables("fieldName").Rows(k).Item("Cal_Fields")) = False Then
                    '            Dim spltFEComma As String() = Split(dss.Tables("fieldName").Rows(k).Item("Cal_Fields").ToString(), ",") ' spliting cal fields with comma saperated
                    '            For i As Integer = 0 To spltFEComma.Length - 1  ' looping to end of the calculative field
                    '                ViewState("ScriptID") = spltFEComma(0)
                    '                Dim spltCpnl As String() = Split(spltFEComma(i), "parseFloat($('#ContentPlaceHolder1_") ' spliting to find fieldid in which numeric field to be applied as cal field
                    '                If spltCpnl(0).Contains(ViewState("PID")) Then
                    '                    For a As Integer = 0 To spltCpnl.Length - 1
                    '                        Dim valmid As String = Replace(spltCpnl(a), "fld", "")
                    '                        valmid = Replace(valmid, "').val())", "")
                    '                        'valmid = Replace(valmid, Right(valmid, 2), "")
                    '                        Dim operators As String = "+-*/%"  ' for checking mathmetical operator 
                    '                        For J As Integer = 0 To dss.Tables("FieldName").Rows.Count - 1
                    '                            If dss.Tables("fieldName").Rows(J).Item("fieldid") = Val(valmid) Then
                    '                                Dim strOPT As String = Right(spltCpnl(a), 1)
                    '                                strOPT = Left(strOPT, 1)
                    '                                If operators.Contains(strOPT) Then
                    '                                    CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString() & strOPT
                    '                                Else
                    '                                    CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString()
                    '                                End If
                    '                            End If
                    '                        Next
                    '                        If CF_txtFE.Text.Length > 1 Then
                    '                            Cval = 1
                    '                        End If
                    '                    Next
                    '                End If
                    '            Next
                    '        End If
                    '    Next
                    '    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                    '        CF_chkM.Checked = True
                    '    Else
                    '        CF_chkM.Checked = False
                    '    End If
                    '    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                    '        CF_chkActive.Checked = True
                    '    Else
                    '        CF_chkActive.Checked = False
                    '    End If
                    '    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                    '        CF_chkEdit.Checked = True
                    '    Else
                    '        CF_chkEdit.Checked = False
                    '    End If

                    '    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                    '        CF_chkWF.Checked = True
                    '    Else
                    '        CF_chkWF.Checked = False
                    '    End If

                    '    da.Dispose()
                    '    ds.Dispose()
                    '    upd_CF.Update()
                    '    CFModalPopup.Show()

                Case "Calculative Field"
                    CF_txtFE.Text = ""
                    CF_txtdisplayname.Text = row.Cells(1).Text
                    txtCalDefVal.Text = ds.Tables("field").Rows(0).Item("defaultfieldVal").ToString()
                    ' for selecting numeric field only of form type
                    Dim da As New SqlDataAdapter("select Fieldid, displayName,FieldMapping,Cal_Fields from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and datatype='Numeric'", con)
                    Dim dss As New DataSet()
                    da.Fill(dss, "FieldName")
                    ViewState("FieldName") = dss.Tables("FieldName")
                    Dim strFields As String = ""
                    For Each dr As DataRow In dss.Tables("FieldName").Rows
                        strFields &= dr.Item("displayname").ToString()
                        strFields &= Environment.NewLine
                    Next
                    CF_TxtFields.Text = strFields.ToString()
                    'for selecting Formula editor value
                    Dim Cval As Integer = 0
                    For k As Integer = 0 To dss.Tables("FieldName").Rows.Count - 1
                        If Cval = 1 Then
                            Exit For
                        End If
                        If IsDBNull(dss.Tables("fieldName").Rows(k).Item("Cal_Fields")) = False Then
                            Dim spltFEComma As String() = Split(dss.Tables("fieldName").Rows(k).Item("Cal_Fields").ToString(), ";") ' spliting cal fields with comma saperated
                            'For i As Integer = 0 To spltFEComma.Length - 1  ' looping to end of the calculative field
                            '    ViewState("ScriptID") = spltFEComma(0)
                            '    Dim spltCpnl As String() = Split(spltFEComma(i), "parseFloat($('#ContentPlaceHolder1_") ' spliting to find fieldid in which numeric field to be applied as cal field
                            '    If spltCpnl(1).Contains(ViewState("PID")) Then
                            '        For a As Integer = 1 To spltCpnl.Length - 1
                            '            Dim valmid As String = Replace(spltCpnl(a), "fld", "")
                            '            valmid = Replace(valmid, "').val(", "")
                            '            'valmid = Replace(valmid, Right(valmid, 2), "")
                            '            Dim operators As String = "+-*/%"  ' for checking mathmetical operator 
                            '            For J As Integer = 0 To dss.Tables("FieldName").Rows.Count - 1
                            '                If dss.Tables("fieldName").Rows(J).Item("fieldid") = Val(valmid) And Val(valmid) <> ViewState("PID") Then
                            '                    Dim strOPT As String = Right(spltCpnl(a), 1)
                            '                    strOPT = Left(strOPT, 1)
                            '                    If operators.Contains(strOPT) Then
                            '                        CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString() & strOPT
                            '                    Else
                            '                        CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString()
                            '                    End If
                            '                End If
                            '            Next
                            '            If CF_txtFE.Text.Length > 1 Then
                            '                Cval = 1
                            '            End If
                            '        Next
                            '    End If
                            'Next
                            For i As Integer = 0 To spltFEComma.Length - 1  ' looping to end of the calculative field
                                ViewState("ScriptID") = spltFEComma(0)
                                Dim spltCpnl As String() = Split(spltFEComma(i), "parseFloat($('#ContentPlaceHolder1_") ' spliting to find fieldid in which numeric field to be applied as cal field
                                If (spltCpnl.Length > 1) Then
                                    If spltCpnl(1).Contains(ViewState("PID")) Then
                                        For a As Integer = 1 To spltCpnl.Length - 1
                                            Dim valmid As String = Replace(spltCpnl(a), "fld", "")
                                            valmid = Replace(valmid, "').val(", "")
                                            'valmid = Replace(valmid, Right(valmid, 2), "")
                                            Dim operators As String = "+-*/%"  ' for checking mathmetical operator 
                                            Dim stringArray() As String = {"+", "-", "/", "%", "*"}
                                            Dim restvalue As String
                                            For J As Integer = 0 To dss.Tables("FieldName").Rows.Count - 1
                                                If dss.Tables("fieldName").Rows(J).Item("fieldid") = Val(valmid) And Val(valmid) <> ViewState("PID") Then
                                                    Dim strOPT As String = Right(spltCpnl(a), 1)
                                                    Dim test As String
                                                    test = strOPT
                                                    strOPT = Left(strOPT, 1)
                                                    If operators.Contains(strOPT) Then
                                                        CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString() & strOPT
                                                    Else
                                                        For Each x As String In stringArray
                                                            If spltCpnl(a).Contains(x) Then

                                                                Dim rv As String() = Split(spltCpnl(a), x)
                                                                If (rv.Length > 1) Then
                                                                    restvalue = x + rv(1)

                                                                End If

                                                            End If
                                                        Next
                                                        If (restvalue <> String.Empty) Then
                                                            CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString() + restvalue
                                                            CF_txtFE.Text = CF_txtFE.Text.Replace(")).toPrecision(2)", "")
                                                        Else
                                                            CF_txtFE.Text = CF_txtFE.Text & dss.Tables("fieldName").Rows(J).Item("displayname").ToString()
                                                            CF_txtFE.Text = CF_txtFE.Text.Replace(")).toPrecision(2)", "")
                                                        End If

                                                    End If
                                                End If
                                            Next
                                            If CF_txtFE.Text.Length > 1 Then
                                                Cval = 1
                                            End If
                                        Next
                                    End If
                                End If
                            Next
                        End If
                    Next
                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        CF_chkM.Checked = True
                    Else
                        CF_chkM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        CF_chkActive.Checked = True
                    Else
                        CF_chkActive.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        CF_chkEdit.Checked = True
                    Else
                        CF_chkEdit.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        CF_chkWF.Checked = True
                    Else
                        CF_chkWF.Checked = False
                    End If
                    da.Dispose()
                    ds.Dispose()
                    upd_CF.Update()
                    CFModalPopup.Show()
                    'Added By Mayank For Child Item Specific Text
                Case "Child Item Specific Text"
                    ' Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM'", con)
                    Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM' and formname in(select dropdown from mmm_mst_fields where documenttype='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & " and fieldtype='Child Item')", con)
                    da.SelectCommand.CommandType = CommandType.Text
                    da.Fill(ds, "FieldName")
                    If ds.Tables("FieldName").Rows.Count > 0 Then
                        ddlCHLDSTC.DataSource = ds.Tables("FieldName")
                        ddlCHLDSTC.DataTextField = "formname"
                        ddlCHLDSTC.DataValueField = "Formid"
                        ddlCHLDSTC.DataBind()
                    End If


                    ddlCHLDSTC.Items.Insert(0, "Select Form")
                    'ddlCHLDSTC.SelectedValue = ds.Tables("field").Rows(0).Item("Formid")
                    ddlCHLDSTC.SelectedIndex = ddlCHLDSTC.Items.IndexOf(ddlCHLDSTC.Items.FindByValue(ds.Tables("FieldName").Rows(0).Item("Formid").ToString()))
                    txtCHLDSTD.Text = row.Cells(1).Text
                    ddlCHLDSTC_SelectedIndexChanged(ddlCHLDSTC, New EventArgs())
                    hdnTempval.Value = String.Empty
                    For Each Lists As ListItem In ddlCHLDSTCommanChld.Items
                        Dim a As String() = Lists.Value.ToString().Split(",")
                        If (a.Length > 1) Then
                            If (a(1).ToString().Trim() = ds.Tables("field").Rows(0).Item("dropdown").ToString().Trim()) Then
                                hdnTempval.Value = Lists.Value.ToString().Trim()
                            End If
                        End If

                    Next
                    ddlCHLDSTCommanChld.SelectedIndex = ddlCHLDSTCommanChld.Items.IndexOf(ddlCHLDSTCommanChld.Items.FindByValue(hdnTempval.Value.ToString()))
                    ddlCHLDSTCommanChld_SelectedIndexChanged(ddlCHLDSTCommanChld, New EventArgs())
                    ddlCHLDCommanVal.SelectedIndex = ddlCHLDCommanVal.Items.IndexOf(ddlCHLDCommanVal.Items.FindByValue(ds.Tables("field").Rows(0).Item("KC_Logic").ToString()))
                    'ddlCHLDSTCommanChld.SelectedValue = ds.Tables("field").Rows(0).Item("dropdown")
                    'ddlCHLDCommanVal.SelectedValue = ds.Tables("field").Rows(0).Item("KC_Logic")

                    'Dim dropdown As String = ds.Tables("field").Rows(0).Item("dropdown")

                    'Dim daa As New SqlDataAdapter("select * from MMM_MST_FIELDS where EID=" & Session("EID") & " and FieldID='" & dropdown & "'", con)
                    'daa.SelectCommand.CommandType = CommandType.Text
                    'daa.Fill(ds, "childtot")
                    'ddlCHLDSTC.SelectedIndex = ddlCHLDSTC.Items.IndexOf(DDLCHF.Items.FindByText(ds.Tables("childtot").Rows(0).Item("documenttype")))


                    ''command for binf drop down
                    'Dim text As String = DDLCHF.SelectedItem.Text
                    'da.SelectCommand.CommandText = "select FIELDID, DISPLAYNAME from MMM_MST_FIELDS where EID=" & Session("EID") & " and DOCUMENTTYPE='" & text & "' AND DATATYPE='NUMERIC'"
                    'da.Fill(ds, "ddch")
                    'ddlCHLDSTCommanChld.Items.Clear()
                    'If ds.Tables("ddch").Rows.Count > 0 Then
                    '    For i As Integer = 0 To ds.Tables("ddch").Rows.Count - 1
                    '        ddlCHLDSTCommanChld.Items.Add(ds.Tables("ddch").Rows(i).Item("DISPLAYName").ToString())
                    '        ddlCHLDSTCommanChld.Items(i).Value = ds.Tables("ddch").Rows(i).Item("FIELDID").ToString()
                    '    Next
                    '    ddlCHLDSTCommanChld.Items.Insert(0, "Select Field")
                    'End If
                    'ddlCHLDSTCommanChld.SelectedIndex = ddlCHLDSTCommanChld.Items.IndexOf(DDLCHFF.Items.FindByValue(ds.Tables("field").Rows(0).Item("dropdown").ToString()))


                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        chkCHLDSTFM.Checked = True
                    Else
                        chkCHLDSTFM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        chkCHLDSTA.Checked = True
                    Else
                        chkCHLDSTA.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        chkCHLDSTE.Checked = True
                    Else
                        chkCHLDSTE.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        chkCHLDWF.Checked = True
                    Else
                        chkCHLDWF.Checked = False
                    End If
                    upCHLDST.Update()
                    mod_CHLDST.Show()

                Case "Child Item Total"
                    Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM'", con)
                    da.SelectCommand.CommandType = CommandType.Text
                    da.Fill(ds, "FieldName")
                    If ds.Tables("FieldName").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                            DDLCHF.Items.Add(ds.Tables("FieldName").Rows(i).Item("FormName").ToString())
                            DDLCHF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("formid").ToString()
                        Next
                    End If


                    DDLCHF.Items.Insert(0, "Select Form")
                    TXTCHT.Text = row.Cells(1).Text

                    Dim dropdown As String = ds.Tables("field").Rows(0).Item("dropdown")

                    Dim daa As New SqlDataAdapter("select * from MMM_MST_FIELDS where EID=" & Session("EID") & " and FieldID='" & dropdown & "'", con)
                    daa.SelectCommand.CommandType = CommandType.Text
                    daa.Fill(ds, "childtot")

                    If (ds.Tables("childtot").Rows.Count > 0) Then
                        DDLCHF.SelectedIndex = DDLCHF.Items.IndexOf(DDLCHF.Items.FindByText(ds.Tables("childtot").Rows(0).Item("documenttype")))
                    End If



                    'command for binf drop down
                    Dim text As String = DDLCHF.SelectedItem.Text
                    da.SelectCommand.CommandText = "select FIELDID, DISPLAYNAME from MMM_MST_FIELDS where EID=" & Session("EID") & " and DOCUMENTTYPE='" & text & "' AND DATATYPE='NUMERIC'"
                    da.Fill(ds, "ddch")
                    DDLCHFF.Items.Clear()
                    If ds.Tables("ddch").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("ddch").Rows.Count - 1
                            DDLCHFF.Items.Add(ds.Tables("ddch").Rows(i).Item("DISPLAYName").ToString())
                            DDLCHFF.Items(i).Value = ds.Tables("ddch").Rows(i).Item("FIELDID").ToString()
                        Next
                        DDLCHFF.Items.Insert(0, "Select Field")
                    End If
                    DDLCHFF.SelectedIndex = DDLCHFF.Items.IndexOf(DDLCHFF.Items.FindByValue(ds.Tables("field").Rows(0).Item("dropdown").ToString()))


                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        DFChkM.Checked = True
                    Else
                        DFChkM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        DFchkA.Checked = True
                    Else
                        DFchkA.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        DFchkE.Checked = True
                    Else
                        DFchkE.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        DFchkw.Checked = True
                    Else
                        DFchkw.Checked = False
                    End If
                    UpDCHT.Update()
                    ModalPopupCHT.Show()

                Case "Child Item MAX"
                    Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM'", con)
                    da.SelectCommand.CommandType = CommandType.Text
                    da.Fill(ds, "FieldName")
                    If ds.Tables("FieldName").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                            ddlchildF.Items.Add(ds.Tables("FieldName").Rows(i).Item("FormName").ToString())
                            ddlchildF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("formid").ToString()
                        Next
                    End If


                    ddlchildF.Items.Insert(0, "Select Form")
                    TXTChilddisplay.Text = row.Cells(1).Text

                    Dim dropdown As String = ds.Tables("field").Rows(0).Item("dropdown")

                    Dim daa As New SqlDataAdapter("select * from MMM_MST_FIELDS where EID=" & Session("EID") & " and FieldID='" & dropdown & "'", con)
                    daa.SelectCommand.CommandType = CommandType.Text
                    daa.Fill(ds, "childtot")
                    ddlchildF.SelectedIndex = ddlchildF.Items.IndexOf(ddlchildF.Items.FindByText(ds.Tables("childtot").Rows(0).Item("documenttype")))


                    'command for binf drop down
                    Dim text As String = ddlchildF.SelectedItem.Text
                    da.SelectCommand.CommandText = "select FIELDID, DISPLAYNAME from MMM_MST_FIELDS where EID=" & Session("EID") & " and DOCUMENTTYPE='" & text & "' AND DATATYPE='NUMERIC'"
                    da.Fill(ds, "ddch")
                    ddlchildHFF.Items.Clear()
                    If ds.Tables("ddch").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("ddch").Rows.Count - 1
                            ddlchildHFF.Items.Add(ds.Tables("ddch").Rows(i).Item("DISPLAYName").ToString())
                            ddlchildHFF.Items(i).Value = ds.Tables("ddch").Rows(i).Item("FIELDID").ToString()
                        Next
                        ddlchildHFF.Items.Insert(0, "Select Field")
                    End If
                    ddlchildHFF.SelectedIndex = ddlchildHFF.Items.IndexOf(ddlchildHFF.Items.FindByValue(ds.Tables("field").Rows(0).Item("dropdown").ToString()))


                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        DFChkM.Checked = True
                    Else
                        DFChkM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        DFchkA.Checked = True
                    Else
                        DFchkA.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        DFchkE.Checked = True
                    Else
                        DFchkE.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        DFchkw.Checked = True
                    Else
                        DFchkw.Checked = False
                    End If
                    Upchildmax.Update()
                    mdl_childmax.Show()
                Case "Self Reference"

                    SRF_txtdisplay.Text = row.Cells(1).Text
                    oda.SelectCommand.CommandText = "select  DocumentType,FM.FormType   from MMM_MST_FIELDS FF inner join MMM_MST_FORMS FM ON FF.DocumentType =FM.FormName  where FieldType ='parent Field' AND FF.EID=" & Session("EID")
                    oda.Fill(ds, "SR")
                    If ds.Tables("SR").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("SR").Rows.Count - 1
                            ddlSF.Items.Add(ds.Tables("SR").Rows(i).Item("Documenttype").ToString())
                            ddlSF.Items(i).Value = ds.Tables("SR").Rows(i).Item("FormType").ToString() & "-" & ds.Tables("SR").Rows(i).Item("Documenttype").ToString()
                        Next
                        ddlSF.Items.Insert(0, "Select Field")
                    End If
                    'selecting drop down DDLSF
                    Dim str As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")


                    ddlSF.SelectedIndex = ddlSF.Items.IndexOf(ddlSF.Items.FindByText(str(1)))

                    ' on the basis of ddlsf selecting value in ddlsr
                    oda.SelectCommand.CommandText = "Select F1.displayname,F1.fieldmapping,F1.dropdown from MMM_MST_FIELDS F1 inner join MMM_MST_FIELDS F2 ON F1.DROPDOWN=F2.FIELDMAPPING AND F1.DOCUMENTTYPE=F2.DOCUMENTTYPE WHERE F1.EID=" & Session("EID") & " AND F2.EID=" & Session("EID") & " AND F1.DOCUMENTTYPE='" & ddlSF.SelectedItem.Text & "' and F1.Fieldtype<>'Parent Field' "
                    oda.Fill(ds, "SF")
                    ddlRF.Items.Clear()
                    If ds.Tables("SF").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("SF").Rows.Count - 1
                            ddlRF.Items.Add(ds.Tables("SF").Rows(i).Item(0))
                            ddlRF.Items(i).Value = ds.Tables("SR").Rows(i).Item(1) & "-" & ds.Tables("SF").Rows(i).Item(2).ToString()
                        Next
                        ddlRF.Items.Insert(0, "SELECT ONE")
                    End If


                    ddlRF.SelectedIndex = ddlRF.Items.IndexOf(ddlRF.Items.FindByText(str(1)))

                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        SRF_ChkM.Checked = True
                    Else
                        SRF_ChkM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        SRF_ChkA.Checked = True
                    Else
                        SRF_ChkA.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        SRF_ChkE.Checked = True
                    Else
                        SRF_ChkE.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        SRF_ChkWF.Checked = True
                    Else
                        SRF_ChkWF.Checked = False
                    End If
                    UpdPnlSF.Update()
                    SRF_ModalPopup.Show()

                Case "Parent Field"
                    prTxtName.Text = row.Cells(1).Text
                    oda.SelectCommand.CommandText = "select displayname, fieldmapping,documenttype from MMM_MST_Fields where EID=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "'"
                    oda.SelectCommand.CommandType = CommandType.Text
                    oda.Fill(ds, "PF")
                    If ds.Tables("PF").Rows.Count > 0 Then
                        For i As Integer = 0 To ds.Tables("PF").Rows.Count - 1
                            ddlPR.Items.Add(ds.Tables("PF").Rows(i).Item("displayname").ToString())
                            ddlPR.Items(i).Value = ViewState("FORMTYPE").ToString() & "-" & ds.Tables("PF").Rows(i).Item("documenttype").ToString() & "-" & ds.Tables("PF").Rows(i).Item("fieldmapping").ToString()
                        Next
                        ddlPR.Items.Insert(0, "Select Field")
                    End If

                    Dim str As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")
                    ddlPR.SelectedIndex = ddlPR.Items.IndexOf(ddlPR.Items.FindByText(str(1))).ToString()

                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        PR_ChkM.Checked = True
                    Else
                        PR_ChkM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        PR_ChkA.Checked = True
                    Else
                        PR_ChkA.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        PR_ChkE.Checked = True
                    Else
                        PR_ChkE.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        PR_ChkWF.Checked = True
                    Else
                        PR_ChkWF.Checked = False
                    End If
                    UpdPNLPR.Update()
                    PR_ModalPopup.Show()
                Case "Parent Value"
                    txtParentVal_DisplayNm.Text = row.Cells(1).Text
                    oda.SelectCommand.CommandText = "select Documenttype from MMM_MST_Fields where EID=" & Session("EID") & " and Fieldtype='Child Item'  and dropdown='" & ViewState("FORMNAME") & "';select * from mmm_mst_fields where fieldid in (select dropdown from mmm_mst_fields where displayname='" & row.Cells(1).Text & "' and eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "') and eid=" & Session("EID")
                    oda.SelectCommand.CommandType = CommandType.Text
                    oda.Fill(ds, "PV")
                    If ds.Tables("PV").Rows.Count > 0 Then
                        ddlParentVal_Parentdoc.DataSource = ds.Tables("PV")
                        ddlParentVal_Parentdoc.DataTextField = "DocumentType"
                        ddlParentVal_Parentdoc.DataValueField = "DocumentType"
                        ddlParentVal_Parentdoc.DataBind()
                        ddlParentVal_Parentdoc.Items.Insert(0, "Select Field")
                        ddlParentVal_Parentdoc.SelectedIndex = ddlParentVal_Parentdoc.Items.IndexOf(ddlParentVal_Parentdoc.Items.FindByText(ds.Tables("PV1").Rows(0)("DocumentType"))).ToString()
                        'For i As Integer = 0 To ds.Tables("PV").Rows.Count - 1
                        '    ddlPR.Items.Add(ds.Tables("PV").Rows(i).Item("displayname").ToString())
                        '    ddlPR.Items(i).Value = ViewState("FORMTYPE").ToString() & "-" & ds.Tables("PV").Rows(i).Item("documenttype").ToString() & "-" & ds.Tables("PV").Rows(i).Item("fieldmapping").ToString()
                        'Next

                        ddlParentVal_Parentdoc_SelectedIndexChanged(ddlParentVal_ParentFields, New EventArgs())
                        ddlParentVal_ParentFields.SelectedIndex = ddlParentVal_ParentFields.Items.IndexOf(ddlParentVal_ParentFields.Items.FindByValue(ds.Tables("field").Rows(0)("dropdown")))
                    End If

                    'Dim str As String() = Split(ds.Tables("field").Rows(0).Item("dropdown").ToString(), "-")
                    'ddlPR.SelectedIndex = ddlPR.Items.IndexOf(ddlPR.Items.FindByText(str(1))).ToString()

                    If Val(ds.Tables("field").Rows(0).Item("isrequired").ToString()) = 1 Then
                        PR_ChkM.Checked = True
                    Else
                        PR_ChkM.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isActive").ToString()) = 1 Then
                        PR_ChkA.Checked = True
                    Else
                        PR_ChkA.Checked = False
                    End If
                    If Val(ds.Tables("field").Rows(0).Item("isEditable").ToString()) = 1 Then
                        PR_ChkE.Checked = True
                    Else
                        PR_ChkE.Checked = False
                    End If

                    If Val(ds.Tables("field").Rows(0).Item("isWorkFlow").ToString()) = 1 Then
                        PR_ChkWF.Checked = True
                    Else
                        PR_ChkWF.Checked = False
                    End If
                    upd_ParentVal.Update()
                    modalpopup_ParentVal.Show()
            End Select
        End If
        ds.Dispose()
        oda.Dispose()
        con.Dispose()
    End Sub

    Protected Sub DDLCHF_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles DDLCHF.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("select FIELDID, DISPLAYNAME from MMM_MST_FIELDS where EID=" & Session("EID") & " and DOCUMENTTYPE='" & DDLCHF.SelectedItem.Text & "' AND DATATYPE='NUMERIC'", con)
        Dim ds As New DataSet
        da.Fill(ds, "FieldName")
        DDLCHFF.Items.Clear()
        If ds.Tables("FieldName").Rows.Count > 0 Then
            For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                DDLCHFF.Items.Add(ds.Tables("FieldName").Rows(i).Item("DISPLAYName").ToString())
                DDLCHFF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("FIELDID").ToString()
            Next
            DDLCHFF.Items.Insert(0, "Select Field")
        End If
        da.Dispose()
        con.Close()
    End Sub

    'Added For Chiled Specific Text by mayank 04-Feb-2015
    Protected Sub ddlCHLDSTC_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlCHLDSTC.SelectedIndexChanged

        If (hdnDDNVALUE.Value <> String.Empty) Then
            Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con1 As New SqlConnection(conStr1)
            Dim das As New SqlDataAdapter("select displayname,documenttype from mmm_msT_fields where eid=" & Session("eid") & " and FieldID=" & hdnDDNVALUE.Value.ToString() & "", con1)
            Dim dsa As New DataSet
            das.Fill(dsa, "val")
            If (dsa.Tables("val").Rows.Count > 0) Then
                If (value = False) Then
                    ddlCHLDSTC.SelectedIndex = ddlCHLDSTC.Items.IndexOf(ddlCHLDSTC.Items.FindByText(dsa.Tables("val").Rows(0).Item("documenttype").ToString()))
                    value = True
                End If

            End If
        End If
        Dim a As String() = ddlchldvalue.SelectedValue.Trim().Split(",")
        Dim ab As String() = a(1).ToString().Split("-")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("select distinct B.dropdown+','+convert(varchar(50),B.fieldid) as dropdown,B.displayname from mmm_mst_fields as A inner join mmm_mst_fields as B on '-'+A.dropdown+'-' like'%-" & ab(1).ToString() & "-%' and '-'+B.dropdown+'-' like'%-" & ab(1).ToString() & "-%' and A.documenttype='" & Fname.Text.Trim() & "' and B.documenttype='" & ddlCHLDSTC.SelectedItem.Text.Trim() & "' and A.eid=" & Session("EID") & " and B.eid=" & Session("EID") & "", con)
        Dim ds As New DataSet
        da.Fill(ds, "FieldName")
        ddlCHLDSTCommanChld.Items.Clear()
        If ds.Tables("FieldName").Rows.Count > 0 Then
            ddlCHLDSTCommanChld.DataSource = ds.Tables("FieldName")
            ddlCHLDSTCommanChld.DataTextField = "displayname"
            ddlCHLDSTCommanChld.DataValueField = "dropdown"
            ddlCHLDSTCommanChld.DataBind()
            ddlCHLDSTCommanChld.Items.Insert(0, "Select Field")
        End If

        If (hdnDDNVALUE.Value <> String.Empty) Then
            For Each li As ListItem In ddlCHLDSTCommanChld.Items
                If (li.Value.ToString().Contains("," & hdnDDNVALUE.Value.ToString())) Then
                    li.Selected = True
                    Exit For
                End If
            Next
            ddlCHLDSTCommanChld_SelectedIndexChanged(ddlCHLDSTCommanChld, New System.EventArgs())
        End If
        da.Dispose()
        con.Close()
    End Sub

    Protected Sub ddlCHLDSTCommanChld_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlCHLDSTCommanChld.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim ds As New DataSet
        Dim ar1 As String() = ddlCHLDSTCommanChld.SelectedValue.Trim().Split(",")
        Dim ar As String() = ar1(0).ToString().Trim().Split("-")
        If (ar.Length > 1) Then
            If (ar(0).ToString().ToUpper() = "MASTER") Then
                Dim da As New SqlDataAdapter("select  " & ar(2).ToString() & ",tid from mmm_mst_master where eid= " & Session("EID") & " and  documenttype='" & ar(1).ToString() & "'", con)
                da.Fill(ds, "FieldNames")
                ddlCHLDCommanVal.Items.Clear()
                If ds.Tables("FieldNames").Rows.Count > 0 Then
                    ddlCHLDCommanVal.DataSource = ds.Tables("FieldNames")
                    ddlCHLDCommanVal.DataTextField = ar(2).ToString()
                    ddlCHLDCommanVal.DataValueField = "tid"
                    ddlCHLDCommanVal.DataBind()
                    ddlCHLDCommanVal.Items.Insert(0, "Select Field")
                    If (hdnTempval.Value <> String.Empty) Then
                        ddlCHLDCommanVal.SelectedIndex = ddlCHLDCommanVal.Items.IndexOf(ddlCHLDCommanVal.Items.FindByValue(hdnTempval.Value.ToString()))
                    End If
                End If
                da.Dispose()
                con.Close()
            ElseIf (ar(0).ToString().ToUpper() = "DOCUMENT") Then
                Dim da As New SqlDataAdapter("select  " & ar(2).ToString() & ",tid from mmm_mst_doc where eid= " & Session("EID") & " and  documenttype='" & ar(1).ToString() & "'", con)
                da.Fill(ds, "FieldNames")
                ddlCHLDCommanVal.Items.Clear()
                If ds.Tables("FieldNames").Rows.Count > 0 Then
                    ddlCHLDCommanVal.DataSource = ds.Tables("FieldNames")
                    ddlCHLDCommanVal.DataTextField = ar(2).ToString()
                    ddlCHLDCommanVal.DataValueField = "tid"
                    ddlCHLDCommanVal.DataBind()
                    ddlCHLDCommanVal.Items.Insert(0, "Select Field")
                    If (hdnTempval.Value <> String.Empty) Then
                        ddlCHLDCommanVal.SelectedIndex = ddlCHLDCommanVal.Items.IndexOf(ddlCHLDCommanVal.Items.FindByValue(hdnTempval.Value.ToString()))
                    End If
                End If
                da.Dispose()
                con.Close()
            ElseIf (ar(0).ToString().ToUpper() = "STATIC") Then
                Dim da As New SqlDataAdapter("select  " & ar(2).ToString() & ",uid from mmm_mst_user where eid= " & Session("EID") & " and  documenttype='" & ar(1).ToString() & "'", con)
                da.Fill(ds, "FieldNames")
                ddlCHLDCommanVal.Items.Clear()
                If ds.Tables("FieldNames").Rows.Count > 0 Then
                    ddlCHLDCommanVal.DataSource = ds.Tables("FieldNames")
                    ddlCHLDCommanVal.DataTextField = ar(2).ToString()
                    ddlCHLDCommanVal.DataValueField = "uid"
                    ddlCHLDCommanVal.DataBind()
                    ddlCHLDCommanVal.Items.Insert(0, "Select Field")
                    If (hdnTempval.Value <> String.Empty) Then
                        ddlCHLDCommanVal.SelectedIndex = ddlCHLDCommanVal.Items.IndexOf(ddlCHLDCommanVal.Items.FindByValue(hdnTempval.Value.ToString()))
                    End If
                End If
                da.Dispose()
                con.Close()
            End If
        End If
    End Sub
    'Added For Chiled Specific Text by mayank 04-Feb-2015

    Protected Sub gvData_PageIndexChanging(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewPageEventArgs) Handles gvData.PageIndexChanging
        gvData.PageIndex = e.NewPageIndex
        If txtValue.Text <> "" Then
            search()
        Else
            BinddataGrid()
        End If
        enableicon()
    End Sub

    Public Function getAutolookup(ByVal MainForm As String, ByVal currentForm As String) As String
        Dim fldid As String = ""
        'Dim CRTFRM As String() = currentForm.Split("-")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        oda.SelectCommand.CommandText = "Select * from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & MainForm & "' and dropdowntype='MASTER VALUED'"
        Dim DS As New DataSet
        oda.Fill(DS, "MAIN")
        For Each DR As DataRow In DS.Tables("MAIN").Rows
            Dim ddlvalue As String = DR.Item("dropdown").ToString()
            Dim arr() As String = ddlvalue.Split("-")
            Dim DROPDOWN As String = arr(0) & "-" & arr(1)
            oda.SelectCommand.CommandText = "select * from MMM_MST_FIELDS WHERE EID=" & Session("EID") & " AND DROPDOWNTYPE='MASTER VALUED' AND DROPDOWN LIKE '" & DROPDOWN & "%' AND DOCUMENTTYPE='" & currentForm & "' "
            oda.Fill(DS, "CURRENT")
            If DS.Tables("CURRENT").Rows.Count > 0 Then
                fldid = DR.Item("FIELDID").ToString() & "," & DS.Tables("CURRENT").Rows(0).Item("FIELDMAPPING")
            End If
        Next
        con.Dispose()
        Return fldid

    End Function

    Protected Sub BtnKCKFSave_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles BtnKCKFSave.Click
        'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        'Dim con As SqlConnection = New SqlConnection(conStr)
        'Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        'Dim doctype As String = ""
        'Dim tfldid As Integer = 0
        'If ddlKCType.SelectedItem.Text.ToUpper = "SELECT ONE" Then
        '    LBKCK.Text = "Please Select a Kicking Type"
        '    Exit Sub
        'End If

        'If ddlFormType.SelectedItem.Text.ToUpper = "SELECT ONE" Then
        '    LBKCK.Text = "Please Select a Form Type"
        '    Exit Sub
        'End If

        'If ddlDoctype.SelectedItem.Text.ToUpper() = "SELECT ONE" Then
        '    LBKCK.Text = "Please Select a Document"
        '    Exit Sub
        'Else
        '    Dim selval() As String = ddlDoctype.SelectedValue.ToString.Split("-")
        '    doctype = selval(0).ToString
        '    tfldid = CInt(selval(1))
        'End If

        'If ddlKFields.SelectedItem.Text.ToUpper() = "SELECT ONE" Then
        '    LBKCK.Text = "Please Select a Field"
        '    Exit Sub
        'End If

        'If ddlKCSTATUS.SelectedItem.Text.ToUpper = "SELECT ONE" Then
        '    LBKCK.Text = "Please Select a Status"
        '    Exit Sub
        'End If

        'If ddlLogic.SelectedItem.Text.ToUpper() = "SELECT LOGIC" Then
        '    LBKCK.Text = "Please Select a Update Logic"
        '    Exit Sub
        'End If
        ''Dim KCValue As String = ddlDoctype.SelectedValue & ":" & ddlKFields.SelectedValue & ":" & ddlLogic.SelectedValue & ","
        ''oda.SelectCommand.CommandText = "update MMM_MST_FIELDS SET KC_VALUE='" & KCValue & "' WHERE FIELDID=" & ViewState("FID") & ""
        'Dim s_fldid As Integer = CInt(ViewState("FID"))
        ' '''CALL PROCEDURE FOR APPLYING KICKING SETTINGS 
        'oda.SelectCommand.Parameters.Clear()
        'oda.SelectCommand.CommandText = "USP_APPLYKICKING"
        'oda.SelectCommand.CommandType = CommandType.StoredProcedure
        'oda.SelectCommand.Parameters.AddWithValue("@EID", Session("EID"))
        'oda.SelectCommand.Parameters.AddWithValue("@KC_TYPE", ddlKCType.SelectedItem.Text)
        'oda.SelectCommand.Parameters.AddWithValue("@FMTYPE", ddlFMType.SelectedItem.Text)
        'oda.SelectCommand.Parameters.AddWithValue("@S_DOCTYPE", ViewState("FORMNAME").ToString())
        'oda.SelectCommand.Parameters.AddWithValue("@T_DOCTYPE", doctype)
        'oda.SelectCommand.Parameters.AddWithValue("@T_FLDMAPPING", ddlKFields.SelectedValue)
        'oda.SelectCommand.Parameters.AddWithValue("@T_FLDID", tfldid)
        'oda.SelectCommand.Parameters.AddWithValue("@S_FLDID", s_fldid)
        'oda.SelectCommand.Parameters.AddWithValue("@KC_OPERATOR", ddlLogic.SelectedValue)
        'If txtSV.Text.Trim <> "" Then
        '    oda.SelectCommand.Parameters.AddWithValue("@SV", txtSV.Text.Trim)
        'End If
        'oda.SelectCommand.Parameters.AddWithValue("@KC_STATUS", ddlKCSTATUS.SelectedItem.Text)
        'If con.State <> ConnectionState.Open Then
        '    con.Open()
        'End If
        'oda.SelectCommand.ExecuteScalar()
        'oda.Dispose()
        'con.Dispose()
        'KCKF_ModalPopup.Hide()
        'lblMsgEdit.Text = "Kicking Field Added Successfully."
        'updatePanelEdit.Update()
        ''ViewState("KCF") = ddlDoctype.SelectedValue & "-" & ddlKFields.SelectedValue & "-" & ddlLogic.SelectedValue
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        If ddlDoctype.SelectedItem.Text.ToUpper() = "SELECT ONE" Then
            LBKCK.Text = "Please Select a Document"
            Exit Sub
        End If
        If ddlKFields.SelectedItem.Text.ToUpper() = "SELECT ONE" Then
            LBKCK.Text = "Please Select a Field"
            Exit Sub
        End If
        If ddlLogic.SelectedItem.Text.ToUpper() = "SELECT LOGIC" Then
            LBKCK.Text = "Please Select a Update Logic"
            Exit Sub
        End If
        Dim KCValue As String = ddlDoctype.SelectedValue & ":" & ddlKFields.SelectedValue & ":" & ddlLogic.SelectedValue & ","
        oda.SelectCommand.CommandText = "update MMM_MST_FIELDS SET KC_VALUE='" & KCValue & "' WHERE FIELDID=" & ViewState("FID") & ""
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        oda.Dispose()
        con.Dispose()
        KCKF_ModalPopup.Hide()
        lblMsgEdit.Text = "Kicking Field Added Successfully."
        updatePanelEdit.Update()
        '  ViewState("KCF") = ddlDoctype.SelectedValue & "-" & ddlKFields.SelectedValue & "-" & ddlLogic.SelectedValue


    End Sub

    Protected Sub KickFieldHit(ByVal sender As Object, ByVal e As System.EventArgs)
        'commented code is new KICKING FIELD code and again we are applying old code 
        'Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        'Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)

        'Dim grdview As GridView = DirectCast(row.NamingContainer, GridView)
        'Dim Fieldid As Integer = Convert.ToString(grdview.DataKeys(row.RowIndex).Value)
        'ViewState("FID") = Fieldid
        'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        'Dim con As SqlConnection = New SqlConnection(conStr)
        'Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        'Dim Ds As New DataSet
        'lblMsgEdit.Text = ""
        ''oda.SelectCommand.CommandText = "SELECT FORMNAME,FORMTYPE FROM MMM_MST_FORMS WHERE EID='" & Session("EID") & "' AND FORMSOURCE='MENU DRIVEN'"
        ''oda.SelectCommand.CommandText = "select  substring(right(dropdown,len(dropdown)-charindex('-',dropdown)),0,CHARINDEX('-',right(dropdown,len(dropdown)-charindex('-',dropdown)))),LEFT(dropdown,CHARINDEX('-',DROPDOWN)-1) ,FieldID  from MMM_MST_FIELDS where EID=" & Session("EID") & " and DropDownType ='MASTER VALUED' AND DocumentType ='" & ViewState("FORMNAME") & "'"
        ''oda.Fill(Ds, "FORM")
        ''ddlDoctype.Items.Clear()
        ''If Ds.Tables("FORM").Rows.Count > 0 Then
        ''    For i As Integer = 0 To Ds.Tables("FORM").Rows.Count - 1
        ''        ddlDoctype.Items.Add(Ds.Tables("FORM").Rows(i).Item(0))
        ''        ddlDoctype.Items(i).Value = Ds.Tables("FORM").Rows(i).Item(1) & ":" & Ds.Tables("FORM").Rows(i).Item(0) & ":" & Ds.Tables("FORM").Rows(i).Item(2)
        ''    Next
        ''    ddlDoctype.Items.Insert(0, "SELECT ONE")
        ''End If

        ' ''bind kicking setting if any for current documenttype
        'oda.SelectCommand.Parameters.Clear()
        'oda.SelectCommand.CommandText = "USP_SHOWKICKING"
        'oda.SelectCommand.CommandType = CommandType.StoredProcedure
        'oda.SelectCommand.Parameters.AddWithValue("@EID", Session("EID"))
        'oda.SelectCommand.Parameters.AddWithValue("DOCUMENTTYPE", ViewState("FORMNAME"))
        'oda.Fill(Ds, "KICKING")
        'If Ds.Tables("KICKING").Rows.Count > 0 Then
        '    GrdKCF.DataSource = Ds.Tables("KICKING")
        '    GrdKCF.DataBind()
        'End If
        'ddlKFields.Items.Clear()
        'ddlLogic.SelectedIndex = 0
        'UpdPNLKCKF.Update()
        'KCKF_ModalPopup.Show()

        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Fieldid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex).Value)
        ViewState("FID") = Fieldid
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim Ds As New DataSet
        lblMsgEdit.Text = ""
        'oda.SelectCommand.CommandText = "SELECT FORMNAME,FORMTYPE FROM MMM_MST_FORMS WHERE EID='" & Session("EID") & "' AND FORMSOURCE='MENU DRIVEN'"
        oda.SelectCommand.CommandText = "select  substring(right(dropdown,len(dropdown)-charindex('-',dropdown)),0,CHARINDEX('-',right(dropdown,len(dropdown)-charindex('-',dropdown)))),LEFT(dropdown,CHARINDEX('-',DROPDOWN)-1) ,FieldID  from MMM_MST_FIELDS where EID=" & Session("EID") & " and DropDownType ='MASTER VALUED' AND DocumentType ='" & ViewState("FORMNAME") & "'"
        oda.Fill(Ds, "FORM")
        ddlDoctype.Items.Clear()
        If Ds.Tables("FORM").Rows.Count > 0 Then
            For i As Integer = 0 To Ds.Tables("FORM").Rows.Count - 1
                ddlDoctype.Items.Add(Ds.Tables("FORM").Rows(i).Item(0))
                ddlDoctype.Items(i).Value = Ds.Tables("FORM").Rows(i).Item(1) & ":" & Ds.Tables("FORM").Rows(i).Item(0) & ":" & Ds.Tables("FORM").Rows(i).Item(2)
            Next
            ddlDoctype.Items.Insert(0, "SELECT ONE")
        End If
        con.Dispose()
        ddlKFields.Items.Clear()
        ddlLogic.SelectedIndex = 0
        UpdPNLKCKF.Update()
        KCKF_ModalPopup.Show()

    End Sub


    Protected Sub ddlSF_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlSF.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim Ds As New DataSet
        lblMsgEdit.Text = ""
        oda.SelectCommand.CommandText = "Select F1.displayname,F1.fieldmapping,F1.dropdown from MMM_MST_FIELDS F1 inner join MMM_MST_FIELDS F2 ON F1.DROPDOWN=F2.FIELDMAPPING AND F1.DOCUMENTTYPE=F2.DOCUMENTTYPE WHERE F1.EID=" & Session("EID") & " AND F2.EID=" & Session("EID") & " AND F1.DOCUMENTTYPE='" & ddlSF.SelectedItem.Text & "' and F1.Fieldtype<>'Parent Field' "
        oda.Fill(Ds, "FIELDS")
        ddlRF.Items.Clear()
        If Ds.Tables("FIELDS").Rows.Count > 0 Then
            For i As Integer = 0 To Ds.Tables("FIELDS").Rows.Count - 1
                ddlRF.Items.Add(Ds.Tables("FIELDS").Rows(i).Item(0))
                ddlRF.Items(i).Value = Ds.Tables("FIELDS").Rows(i).Item(1) & "-" & Ds.Tables("FIELDS").Rows(i).Item(2).ToString()
            Next
            ddlRF.Items.Insert(0, "SELECT ONE")
        End If
        UpdPnlSF.Update()
        oda.Dispose()
        con.Dispose()
    End Sub

    Protected Sub ReferralCheck(ByVal sender As Object, ByVal e As System.EventArgs)
        If ChkRef.Checked Then
            ddlref.Enabled = True
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim Ds As New DataSet
            lblMsgEdit.Text = ""
            oda.SelectCommand.CommandText = "Select displayname,fieldid from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' AND DROPDOWNTYPE='MASTER VALUED' "
            oda.Fill(Ds, "FIELDS")
            ddlref.Items.Clear()
            If Ds.Tables("FIELDS").Rows.Count > 0 Then
                For i As Integer = 0 To Ds.Tables("FIELDS").Rows.Count - 1
                    ddlref.Items.Add(Ds.Tables("FIELDS").Rows(i).Item(0))
                    ddlref.Items(i).Value = Ds.Tables("FIELDS").Rows(i).Item(1).ToString()
                Next
                ddlref.Items.Insert(0, "SELECT ONE")
            End If
            UpdPnlDF.Update()
            oda.Dispose()
            con.Dispose()
        Else
            ddlref.Enabled = False
            ddlref.SelectedIndex = 0
        End If
    End Sub

    Protected Sub ddlDF_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlDF.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim Ds As New DataSet
        lblMsgEdit.Text = ""
        oda.SelectCommand.CommandText = "Select displayname,fieldid from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & ddlDF.SelectedItem.Text & "' AND DROPDOWNTYPE='MASTER VALUED' "
        oda.Fill(Ds, "FIELDS")
        ddlCFF.Items.Clear()
        If Ds.Tables("FIELDS").Rows.Count > 0 Then
            For i As Integer = 0 To Ds.Tables("FIELDS").Rows.Count - 1
                ddlCFF.Items.Add(Ds.Tables("FIELDS").Rows(i).Item(0))
                ddlCFF.Items(i).Value = Ds.Tables("FIELDS").Rows(i).Item(1).ToString()
            Next
        End If
        ddlCFF.Items.Insert(0, "SELECT ONE")
        UpdPnlDF.Update()
        oda.Dispose()
        con.Dispose()
    End Sub

    Protected Sub LockHitField(ByVal sender As Object, ByVal e As EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim tid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex).Value)
        ViewState("fieldID") = tid
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        da.SelectCommand.CommandText = "select isactive from MMM_MST_Fields where FieldId=" & ViewState("fieldID") & " "
        da.SelectCommand.CommandType = CommandType.Text
        Dim ds As New DataSet
        da.Fill(ds, "isactive")

        If ds.Tables("isactive").Rows(0).Item("isactive") = 1 Then
            lblLockField.Text = "Are you Sure Want to Lock Field - " & row.Cells(1).Text
            BtnLockfield.Text = "lock"
        Else
            lblLockField.Text = "Are you Sure Want to Unlock from  - " & row.Cells(1).Text
            BtnLockfield.Text = "Unlock"
        End If

        da.Dispose()
        con.Dispose()
        Me.UpdLockField.Update()
        Me.MPFieldBlock.Show()
    End Sub

    Protected Sub LockfieldRecord(ByVal sender As Object, ByVal e As EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
        If BtnLockfield.Text = "lock" Then
            DA.SelectCommand.CommandText = "update MMM_MST_Fields set isactive=0 where EID=" & Session("EID") & " and FieldID=" & ViewState("fieldID") & ""
        Else
            DA.SelectCommand.CommandText = "update MMM_MST_Fields set isactive=1 where EID=" & Session("EID") & " and FieldId=" & ViewState("fieldID") & ""
        End If
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        DA.SelectCommand.ExecuteNonQuery()
        DA.Dispose()
        con.Dispose()
        BindFielddataGrid()
        MPFieldBlock.Hide()
    End Sub

    ''Create New Refernce on Action Screen
    Public Function CreateReference(ByVal documenttype As String, ByVal fldid As Integer) As String
        Dim Lookup As String = ""
        'Dim CRTFRM As String() = currentForm.Split("-")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim DS As New DataSet
        ''Get the DocumentType of Current Field
        oda.SelectCommand.CommandText = "Select * from mmm_mst_fields where fieldid=" & fldid & " "
        oda.Fill(DS, "Field")
        If DS.Tables("Field").Rows.Count > 0 And DS.Tables("Field").Rows(0).Item("FieldType").ToString.ToUpper = "DROP DOWN" And DS.Tables("Field").Rows(0).Item("DROPDOWNTYPE").ToString.ToUpper = "MASTER VALUED" Then
            Dim currentForm() As String = DS.Tables("Field").Rows(0).Item("DROPDOWN").ToString.Split("-")
            oda.SelectCommand.CommandText = "Select * from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & documenttype & "' and dropdowntype='MASTER VALUED'"
            oda.Fill(DS, "MAIN")
            For Each DR As DataRow In DS.Tables("MAIN").Rows
                Dim ddlvalue As String = DR.Item("dropdown").ToString()
                Dim arr() As String = ddlvalue.Split("-")
                Dim DROPDOWN As String = arr(0) & "-" & arr(1)
                oda.SelectCommand.CommandText = "select * from MMM_MST_FIELDS WHERE EID=" & Session("EID") & " AND DROPDOWNTYPE='MASTER VALUED' AND DROPDOWN LIKE '" & DROPDOWN & "%' AND DOCUMENTTYPE='" & currentForm(1).ToString() & "' "
                oda.Fill(DS, "CURRENT")
                If DS.Tables("CURRENT").Rows.Count > 0 Then
                    Lookup = DR.Item("FIELDTYPE").ToString() & "-" & DR.Item("FIELDID").ToString() & "-" & DS.Tables("CURRENT").Rows(0).Item("FIELDMAPPING")
                End If
            Next

        ElseIf DS.Tables("Field").Rows.Count > 0 And DS.Tables("Field").Rows(0).Item("FieldType").ToString.ToUpper = "LOOKUP" Then
            oda.SelectCommand.CommandText = "select f1.FieldID,f1.displayName,f1.LOOKUPvalue  from MMM_MST_FIELDS f1 inner join MMM_MST_FIELDS f2 on convert(nvarchar(40),f1.FieldID)=f2.dropdown where f2.fieldid=" & fldid & ""
            oda.Fill(DS, "LOOKUP")

            If DS.Tables("LOOKUP").Rows.Count > 0 Then
                oda.SelectCommand.CommandText = "SELECT * FROM MMM_MST_FIELDS WHERE DISPLAYNAME='" & DS.Tables("LOOKUP").Rows(0).Item("DISPLAYNAME") & "' AND EID=" & Session("EID") & " and documenttype='" & documenttype & "'"
                oda.Fill(DS, "LOOKUPFIELD")
                If DS.Tables("LOOKUPFIELD").Rows.Count > 0 Then
                    Dim FLDMAPPING As String = SPLITLOOKUP(DS.Tables("LOOKUP").Rows(0).Item("LOOKUPvalue"), fldid)
                    Lookup = "LOOKUP-" & DS.Tables("LOOKUPFIELD").Rows(0).Item("FIELDID") & "-" & FLDMAPPING
                End If
            End If


        ElseIf DS.Tables("Field").Rows.Count > 0 And DS.Tables("Field").Rows(0).Item("FieldType").ToString.ToUpper = "LOOKUPDDL" Then
            oda.SelectCommand.CommandText = "select f1.FieldID,f1.displayName,f1.LOOKUPvalue,f1.DDllookupvalue  from MMM_MST_FIELDS f1 inner join MMM_MST_FIELDS f2 on convert(nvarchar(40),f1.FieldID)=f2.dropdown where f2.fieldid=" & fldid & ""
            oda.Fill(DS, "LOOKUP")

            If DS.Tables("LOOKUP").Rows.Count > 0 Then
                oda.SelectCommand.CommandText = "SELECT * FROM MMM_MST_FIELDS WHERE DISPLAYNAME='" & DS.Tables("LOOKUP").Rows(0).Item("DISPLAYNAME") & "' AND EID=" & Session("EID") & " and documenttype='" & documenttype & "'"
                oda.Fill(DS, "LOOKUPFIELD")
                If DS.Tables("LOOKUPFIELD").Rows.Count > 0 Then
                    Dim FLDMAPPING As String = SPLITLOOKUP(DS.Tables("LOOKUP").Rows(0).Item("DDllookupvalue"), fldid)
                    Lookup = "LOOKUP-" & DS.Tables("LOOKUPFIELD").Rows(0).Item("FIELDID") & "-" & FLDMAPPING
                End If
            End If
        End If

        oda.Dispose()
        DS.Dispose()
        con.Close()
        con.Dispose()
        Return Lookup
    End Function

    ''Create KickField Reference on Action Screen
    Public Function KickReferece(ByVal documenttype As String, ByVal fldid As Integer) As String
        Dim kicking As String = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim DS As New DataSet
        Dim dt As New DataTable
        Dim kcvalue As String = ""
        Dim kcFields As String = ""
        oda.SelectCommand.CommandText = "select KC_VALUE,fieldtype from mmm_mst_fields where fieldid=" & fldid & ""
        oda.Fill(dt)
        'If con.State <> ConnectionState.Open Then
        '    con.Open()
        'End If
        If dt.Rows.Count > 0 Then
            If dt.Rows(0)("fieldtype").ToString().ToUpper = "FORMULA FIELD" Then
                kcvalue = ""
            Else
                kcvalue = Convert.ToString(dt.Rows(0)("KC_VALUE"))
            End If
        End If
        'kcvalue = Convert.ToString(oda.SelectCommand.ExecuteScalar())
        If kcvalue <> "" Then
            Dim kcvalues() As String = kcvalue.Split(",")
            For i As Integer = 0 To kcvalues.Length - 1
                If kcvalues(i).Length > 2 Then
                    Dim fldpair() As String = kcvalues(i).ToString.Split(":")
                    oda.SelectCommand.CommandText = "select f2.fieldid from mmm_mst_fields f1 inner join mmm_mst_fields f2 on f1.displayname=f2.displayname where f2.eid=" & Session("eid") & " and f1.eid=" & Session("eid") & " and f2.documenttype='" & documenttype & "' and f1.fieldid=" & fldpair(2) & ""
                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If
                    kcFields = Convert.ToString(oda.SelectCommand.ExecuteScalar())
                    If kcFields <> "" Then
                        kicking &= kcvalues(i).Replace(":" & fldpair(2) & ":", ":" & kcFields & ":") & ","
                    End If
                End If
            Next
        End If
        con.Dispose()
        Return kicking
    End Function

    '' Creation of Field Mapping for Push Functionality
    Protected Sub ExportMapping(ByVal sender As Object, ByVal e As EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim pid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("PID") = pid
        Dim formname As String = row.Cells(1).Text
        ViewState("targetForm") = formname
        Exportmappingss.Text = formname
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("select formname from MMM_MST_FORMS where eid=" & Session("EID") & " and FormType='MASTER'", con)
        Dim ds As New DataSet
        da.Fill(ds, "formname")
        ddltarget.Items.Clear()
        If ds.Tables("formname").Rows.Count > 0 Then
            For i As Integer = 0 To ds.Tables("formname").Rows.Count - 1
                ddltarget.Items.Add(ds.Tables("formname").Rows(i).Item("formname").ToString())
                ddltarget.Items(i).Value = ds.Tables("formname").Rows(i).Item("formname").ToString()
            Next
            ddltarget.Items.Insert(0, "Select")
        End If

        da = New SqlDataAdapter("select displayname,fieldmapping from MMM_MST_FIELDS where eid=" & Session("Eid") & " and documenttype='" & formname & "'", con)
        da.Fill(ds, "SFields")
        ddlSourceFields.Items.Clear()
        For i As Integer = 0 To ds.Tables("SFields").Rows.Count - 1
            ddlSourceFields.Items.Add(ds.Tables("SFields").Rows(i).Item("displayname").ToString())
            ddlSourceFields.Items(i).Value = ds.Tables("SFields").Rows(i).Item("fieldmapping").ToString()
        Next
        con.Dispose()
        ddlSourceFields.Items.Insert(0, "Select")
        bindFM(formname)
        updExMp.Update()
        MP_ExpMap.Show()
    End Sub

    Protected Sub Savemapping(ByVal sender As Object, ByVal e As EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        da.SelectCommand.CommandType = CommandType.StoredProcedure
        da.SelectCommand.CommandText = "USP_EXPORTMAPPING"
        da.SelectCommand.Parameters.Clear()
        da.SelectCommand.Parameters.AddWithValue("sDoctype", ViewState("targetForm"))
        da.SelectCommand.Parameters.AddWithValue("tDoctype", ddltarget.SelectedItem.Text.ToString())
        da.SelectCommand.Parameters.AddWithValue("sfldmapping", ddlSourceFields.SelectedItem.Value.ToString())
        da.SelectCommand.Parameters.AddWithValue("tfldmapping", ddlTargetField.SelectedItem.Value.ToString())
        da.SelectCommand.Parameters.AddWithValue("sdisplayname", ddlSourceFields.SelectedItem.Text.ToString())
        da.SelectCommand.Parameters.AddWithValue("tdisplayname", ddlTargetField.SelectedItem.Text.ToString())
        da.SelectCommand.Parameters.AddWithValue("Eid", Session("eid"))
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        da.SelectCommand.ExecuteScalar()
        'ddlTargetField.Items.Remove(ddlTargetField.SelectedItem.Text)
        'ddlSourceFields.Items.Remove(ddlSourceFields.SelectedItem.Text)
        bindFM(ViewState("targetForm"))
        'ddlTargetField.Items.Clear()
        'ddlSourceFields.Items.Clear()
        lblMesExMp.Text = "Mapping Created Successfully."
        da.Dispose()
        con.Dispose()
        updExMp.Update()
    End Sub

    Protected Sub ddltarget_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddltarget.SelectedIndexChanged
        'Dim da As SqlDataAdapter = New SqlDataAdapter("select displayname,fieldmapping from MMM_MST_FIELDS where eid=" & Session("Eid") & " and documenttype='" & ddltarget.SelectedItem.Text & "'", con)
        'Dim ds As New DataSet
        'da.Fill(ds, "SFields")
        'ddlTargetField.Items.Clear()
        'For i As Integer = 0 To ds.Tables("SFields").Rows.Count - 1
        '    ddlTargetField.Items.Add(ds.Tables("SFields").Rows(i).Item("displayname").ToString())
        '    ddlTargetField.Items(i).Value = ds.Tables("SFields").Rows(i).Item("fieldmapping").ToString()
        'Next
        'ddlTargetField.Items.Insert(0, "Select")
        'updExMp.Update()

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        da.SelectCommand.CommandType = CommandType.StoredProcedure
        da.SelectCommand.CommandText = "bindtargetfieldexportmapping"
        da.SelectCommand.Parameters.Clear()
        da.SelectCommand.Parameters.AddWithValue("@dtype", ddltarget.SelectedItem.Text)
        da.SelectCommand.Parameters.AddWithValue("@eid", Session("eid"))
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim sqlReader As SqlDataReader = da.SelectCommand.ExecuteReader()
        If sqlReader.HasRows Then
            ddlTargetField.DataSource = sqlReader
            ddlTargetField.DataTextField = "displayname"
            ddlTargetField.DataValueField = "fieldmapping"
            ddlTargetField.Items.Insert(0, "Select")
            ddlTargetField.DataBind()
        End If
        con.Dispose()
        updExMp.Update()
    End Sub

    Public Sub bindFM(ByVal SourceForm As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim DS As New DataSet
        da.SelectCommand.CommandType = CommandType.StoredProcedure
        da.SelectCommand.CommandText = "USP_GetMappingFields"
        da.SelectCommand.Parameters.Clear()
        da.SelectCommand.Parameters.AddWithValue("SF", SourceForm)
        'da.SelectCommand.Parameters.AddWithValue("TF", TargetForm)
        da.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
        da.Fill(DS, "MAPPING")
        GrdFM.DataSource = DS.Tables("MAPPING")
        GrdFM.DataBind()
        DS.Dispose()
        da.Dispose()
        con.Dispose()
        updExMp.Update()
    End Sub

    Protected Sub DeleteMapping(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim tid As Integer = Convert.ToString(Me.GrdFM.DataKeys(row.RowIndex).Value)

        '' Delete the Mapping From ExportMapping Table
        da.SelectCommand.CommandText = "delete from mmm_mst_exportmapping where tid=" & tid & ""

        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        da.SelectCommand.ExecuteScalar()
        con.Dispose()
        da.Dispose()

        ''Bind the Grid After Deletion
        bindFM(ViewState("targetForm"))
        updExMp.Update()
    End Sub

    Protected Sub btnvclose()
        Me.ModalPopupExtender1.Hide()
    End Sub
    Protected Sub btnMultiLookUpClose()
        Me.modalpopupMultiLookUP.Hide()
    End Sub
    'Added for MultiLookup ddl
    Protected Sub btnMultiLookUpDDLClose()
        Me.Mod_mlddl.Hide()
    End Sub
    Sub fnames()
        Fname.Text = ViewState("FORMNAME")
    End Sub
    Sub formnameonapplyfields()
        dd.Text = ViewState("FORMNAME")
        AutonumberF.Text = ViewState("FORMNAME")
        Textboxf.Text = ViewState("FORMNAME")
        textareaf.Text = ViewState("FORMNAME")
        ListBoxF.Text = ViewState("FORMNAME")
        CheckBoxF.Text = ViewState("FORMNAME")
        FileUploaderF.Text = ViewState("FORMNAME")
        btnLookUpFld.Text = ViewState("FORMNAME")
        CalculativeF.Text = ViewState("FORMNAME")
        ChildItemF.Text = ViewState("FORMNAME")
        ChilditemtotalF.Text = ViewState("FORMNAME")
        'KickingF.Text = ViewState("FORMNAME")
        LookupF.Text = ViewState("FORMNAME")
        ParentFieldsF.Text = ViewState("FORMNAME")
        FormulaF.Text = ViewState("FORMNAME")
        lblCHLDST.Text = ViewState("FORMNAME")
        lblVarianceHeader.Text = ViewState("FORMNAME")
    End Sub
    Protected Sub ValidateHit(ByVal sender As Object, ByVal e As System.EventArgs)

        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("FORMID") = Formid
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        da.SelectCommand.CommandText = "SELECT formname  FROM MMM_MST_FORMS WHERE  FORMID = " & Formid & " AND EID = " & Session("EID").ToString() & ""
        da.Fill(ds, "DETAIL")
        ViewState("FORMNAME") = ds.Tables("DETAIL").Rows(0).Item("formname").ToString
        validationFname.Text = ViewState("FORMNAME")
        da.SelectCommand.CommandText = "SELECT DISPLAYNAME,fieldid from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "'"
        da.Fill(ds, "data")

        da.SelectCommand.CommandText = "SELECT distinct formid,formname from MMM_MST_forms where eid=" & Session("EID") & " union select 0,'Select One' order by formid "
        da.Fill(ds, "formname")

        da.SelectCommand.CommandText = "SELECT STATUSNAME FROM MMM_MST_WORKFLOW_STATUS WHERE EID=32 AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' ORDER BY Dord "
        da.Fill(ds, "WFSTATUS")

        con.Dispose()
        ddlfldname.DataSource = ds.Tables("data")
        ddlfldname.DataTextField = "DISPLAYNAME"
        ddlfldname.DataValueField = "fieldid"
        ddlfldname.DataBind()

        ddlfldopr.DataSource = ds.Tables("data")
        ddlfldopr.DataTextField = "DISPLAYNAME"
        ddlfldopr.DataValueField = "fieldid"
        ddlfldopr.DataBind()

        ddlvalue.DataSource = ds.Tables("data")
        ddlvalue.DataTextField = "DISPLAYNAME"
        ddlvalue.DataValueField = "fieldid"
        ddlvalue.DataBind()

        ddlvalfield.DataSource = ds.Tables("data")
        ddlvalfield.DataTextField = "DISPLAYNAME"
        ddlvalfield.DataValueField = "fieldid"
        ddlvalfield.DataBind()

        ddlDtype.DataSource = ds.Tables("formname")
        ddlDtype.DataTextField = "formname"
        ddlDtype.DataValueField = "formid"
        ddlDtype.DataBind()

        chkWFStatus.Items.Clear()
        chkWFStatus.Items.Add("UPLOADED")
        For Each DR As DataRow In ds.Tables("WFSTATUS").Rows
            chkWFStatus.Items.Add(DR.Item("STATUSNAME").ToString())
        Next
        chkWFStatus.Items.Add("ARCHIVE")

        BinddataGridValidation()
        con.Dispose()
        divopr.Visible = True
        txtDispFilter.Visible = False
        ddlvtype.SelectedIndex = -1
        dynamic.Visible = False
        lblvalmsg.Text = ""
        uplvalidation.Update()
        ModalPopupExtender1.Show()
        'Response.Redirect("NewForm.aspx?FormID=" & Formid)
    End Sub

    Public Sub BinddataGridValidation()
        'fill Product  
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("SELECT  tid,doctype,valtype,(select displayname from mmm_mst_fields where eid=" & Session("EID") & " and fieldid= right(fldid,len(fldid)-3) )[FldID],operator, case valtype when 'field' then (select displayname from mmm_mst_fields where eid=" & Session("EID") & " and fieldid=right(value,len(value)-3)) when 'Mandatory' then (select displayname from mmm_mst_fields where eid=" & Session("EID") & " and fieldid=right(fldid,len(fldid)-3)) when 'dynamic' then (select dms.Replacevaluer(f.tid)) when 'Other' then (select dms.Replacevaluer(f.tid)) when 'Duplicacycheck' then (select dms.Replacevaluer(f.tid))  else value end [Value] ,err_msg  FROM MMM_MST_FORMVALIDATION f where EID=" & Session("EID") & " and DocTYPE='" & ViewState("FORMNAME") & "'", con)
        da.SelectCommand.CommandType = CommandType.Text
        Dim ds As New DataSet()
        da.Fill(ds, "grdfill")
        grdvalidation.DataSource = ds.Tables("grdfill")
        grdvalidation.DataBind()
        updPnlGrid.Update()
        da.Dispose()
        con.Dispose()
    End Sub

    Protected Sub ddlvtype_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlvtype.SelectedIndexChanged
        If ddlvtype.SelectedItem.Text = "Static" Then
            ddloperator.Visible = True
            ddlfldopr.Visible = False
            ddlvalue.Visible = False
            txtval.Visible = True
            dynamic.Visible = False
            lblval.Text = "Value"
            btnAddfld1.Visible = False
            divopr.Visible = True
            txtDispFilter.Visible = False
        ElseIf ddlvtype.SelectedItem.Text = "Field" Then
            ddloperator.Visible = True
            ddlfldopr.Visible = False
            ddlvalue.Visible = True
            txtval.Visible = False
            dynamic.Visible = False
            lblval.Text = "Field Name"
            btnAddfld1.Visible = False
            divopr.Visible = True
            txtDispFilter.Visible = False
        ElseIf ddlvtype.SelectedItem.Text = "Mandatory" Then
            ddloperator.Visible = False
            ddlfldopr.Visible = True
            ddlvalue.Visible = False
            txtval.Visible = True
            dynamic.Visible = False
            lbloperator.Text = "Field Name"
            lblval.Text = "Value"
            btnAddfld1.Visible = False
            divopr.Visible = True
            txtDispFilter.Visible = False
        ElseIf ddlvtype.SelectedItem.Text = "Dynamic" Or ddlvtype.SelectedItem.Text.ToUpper = "DUPLICACYCHECK" Then
            ddloperator.Visible = True
            ddlfldopr.Visible = False
            ddlvalue.Visible = True
            txtval.Visible = False
            dynamic.Visible = True
            lblval.Text = "Target Field"
            txtDispFilter.Visible = True
            btnAddfld1.Visible = True
            divopr.Visible = False
        End If
    End Sub

    Protected Sub btnvsave_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnvsave.Click
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        If ddlvtype.SelectedItem.Text.ToUpper() = "SELECT ONE" Then
            lblvalmsg.Text = "Please Select a Validation Type"
            Exit Sub
        Else
            If ddlDtype.SelectedItem.Text.ToUpper() = "SELECT ONE" And ddlvtype.SelectedItem.Text.ToUpper() = "DYNAMIC" Then
                lblvalmsg.Text = "Please Select a Document Type"
                Exit Sub
            End If
        End If
        If txterrmsg.Text = "" Then
            lblvalmsg.Text = "Please Enter the Error Message."
            Exit Sub
        End If
        Dim type As String
        If ddlvtype.SelectedItem.Text = "Query String" Then
            If ddlDtype.SelectedItem.Text.ToUpper <> "SELECT ONE" Then
                da.SelectCommand.CommandText = "select formtype from mmm_mst_forms where eid=" & Session("EID") & " and formname='" & ddlDtype.SelectedItem.Text & "'"
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                type = da.SelectCommand.ExecuteScalar()
            End If
        End If

        '' Add Selected WorkFlow status 
        Dim wfstatus As String = ""

        For Each li As ListItem In chkWFStatus.Items
            If li.Selected Then
                wfstatus &= li.Text & ","
            End If
        Next
        If wfstatus.Length > 3 Then
            wfstatus = wfstatus.Substring(0, wfstatus.Length - 1)
        End If

        da.SelectCommand.Parameters.Clear()
        da.SelectCommand.CommandText = "uspFormValidation"
        da.SelectCommand.CommandType = CommandType.StoredProcedure
        da.SelectCommand.Parameters.AddWithValue("@eid", Session("EID"))
        da.SelectCommand.Parameters.AddWithValue("@Dtype", ViewState("FORMNAME"))
        da.SelectCommand.Parameters.AddWithValue("@ValType", ddlvtype.SelectedItem.Text)
        da.SelectCommand.Parameters.AddWithValue("@fldid", "fld" & ddlfldname.SelectedValue.ToString)
        If ddlvtype.SelectedItem.Text = "Mandatory" Then
            da.SelectCommand.Parameters.AddWithValue("@Operator", "fld" & ddlfldopr.SelectedValue.ToString)
        Else
            da.SelectCommand.Parameters.AddWithValue("@Operator", ddloperator.SelectedItem.ToString)
        End If
        If ddlvtype.SelectedItem.Text = "Mandatory" Or ddlvtype.SelectedItem.Text = "Static" Then
            da.SelectCommand.Parameters.AddWithValue("@value", txtval.Text.ToString)
        ElseIf ddlvtype.SelectedItem.Text = "Field" Then
            da.SelectCommand.Parameters.AddWithValue("@value", "fld" & ddlvalue.SelectedValue)
        ElseIf ddlvtype.SelectedItem.Text = "Dynamic" Or ddlvtype.SelectedItem.Text.ToUpper = "DUPLICACYCHECK" Then
            da.SelectCommand.Parameters.AddWithValue("@value", ViewState("FinalVal") & Left(txtDispFilter.Text, txtDispFilter.Text.Length - 1))
        End If
        If wfstatus <> "" Then
            da.SelectCommand.Parameters.AddWithValue("@wfstatus", wfstatus)
        End If
        da.SelectCommand.Parameters.AddWithValue("@errmsg", txterrmsg.Text)
        da.SelectCommand.Parameters.AddWithValue("@docNature", docnature.SelectedItem.Text)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If

        da.SelectCommand.ExecuteScalar()
        da.Dispose()
        con.Dispose()
        lblvalmsg.Text = "Validation Added Successfully."
        reset()
        BinddataGridValidation()
        updatePanelEdit.Update()
    End Sub

    Private Sub reset()
        ddlvtype.SelectedIndex = -1
        txterrmsg.Text = ""
        txtval.Text = ""
    End Sub

    Protected Sub DeleteHit(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim tid As Integer = Convert.ToString(Me.grdvalidation.DataKeys(row.RowIndex).Value)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        oda.SelectCommand.CommandText = "delete MMM_MST_FORMVALIDATION where tid=" & tid & "  "
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        'oda.SelectCommand.CommandType = CommandType.Text
        'oda.SelectCommand.CommandType = CommandType.Text
        BinddataGridValidation()
        con.Close()
        oda.Dispose()
        con.Dispose()
    End Sub

    Protected Sub ddlDtype_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlDtype.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        da.SelectCommand.CommandText = "SELECT DISPLAYNAME,fieldmapping from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype='" & ddlDtype.SelectedItem.Text & "'"
        da.Fill(ds, "data")

        da.SelectCommand.CommandText = "SELECT formtype FROM MMM_MST_FORMS WHERE FormName='" & ddlDtype.SelectedItem.Text & "' AND EID=" & Session("EID") & ""
        con.Open()
        ViewState("type") = da.SelectCommand.ExecuteScalar()

        da.SelectCommand.CommandText = "SELECT Distinct STATUSNAME FROM MMM_MST_WORKFLOW_STATUS WHERE eid=" & Session("EID") & " AND DOCUMENTTYPE in ('" & ViewState("FORMNAME") & "','" & ddlDtype.SelectedItem.Text & "') "
        da.Fill(ds, "WFSTATUS")

        If ViewState("type").ToString.ToUpper = "MASTER" Then
            ViewState("FinalVal") = ddlDtype.SelectedItem.Text & "-MMM_MST_MASTER:"
        Else
            ViewState("FinalVal") = ddlDtype.SelectedItem.Text & "-MMM_MST_DOC:"
        End If
        con.Dispose()
        chkWFStatus.Items.Clear()
        chkWFStatus.Items.Add("UPLOADED")
        For Each DR As DataRow In ds.Tables("WFSTATUS").Rows
            chkWFStatus.Items.Add(DR.Item("STATUSNAME").ToString())
        Next
        chkWFStatus.Items.Add("ARCHIVE")
        ddlTfield.DataSource = ds.Tables("data")
        ddlTfield.DataTextField = "DISPLAYNAME"
        ddlTfield.DataValueField = "fieldmapping"
        ddlTfield.DataBind()
        UpdatePanel1.Update()
    End Sub
    Protected Sub btnAddfld1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAddfld1.Click
        If ddlvtype.SelectedItem.Text.ToUpper = "DYNAMIC" Or ddlvtype.SelectedItem.Text.ToUpper = "DUPLICACYCHECK" Then
            txtDispFilter.Text = txtDispFilter.Text & ddlTfield.SelectedValue & "-" & ddlopr.SelectedItem.Text & "fld" & ddlvalfield.SelectedValue & ":"
        End If

    End Sub

    Public Function SPLITLOOKUP(ByVal LOOKUP As String, ByVal FIELDID As Integer) As String
        Dim LOOKUPFLD As String = ""
        Dim LOOKUPARR() As String = LOOKUP.Split(",")
        If LOOKUPARR.Length > 0 Then
            For i As Integer = 0 To LOOKUPARR.Length - 1
                If LOOKUPARR(i).Contains("-") = True Then
                    Dim fldarr() = LOOKUPARR(i).ToString.Split("-")
                    If fldarr(0) = FIELDID Then
                        LOOKUPFLD = fldarr(1).ToString()
                        Exit For
                    End If
                End If
            Next
        End If
        Return LOOKUPFLD
    End Function

    'Public Function SPLITLOOKUP(ByVal LOOKUP As String, ByVal FIELDID As Integer) As String
    '    Dim LOOKUPFLD As String = ""
    '    Dim LOOKUPARR() As String = LOOKUP.Split(",")
    '    If LOOKUPARR.Length > 0 Then
    '        For i As Integer = 0 To LOOKUPARR.Length - 1
    '            Dim fldarr() = LOOKUPARR(i).ToString.Split("-")
    '            If fldarr(0) = FIELDID Then
    '                LOOKUPFLD = fldarr(1).ToString()
    '                Exit For
    '            End If
    '        Next
    '    End If
    '    Return LOOKUPFLD
    'End Function

    ''BIND THE FIELDS BY WHICH ANOTHER DROP DOWN FIELD CAN BE FILTERED

    Public Sub bindFields4Filter(ByVal Ref_doctype As String, ByVal cur_doctype As String, ByVal selfields As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim DS As New DataSet
        Dim J As Integer = 0
        Dim STR As String = ""
        ddlFLT.Items.Clear()
        oda.SelectCommand.CommandText = "select f2.displayname,convert(nvarchar(10),f2.fieldid) +'-'+ f1.fieldmapping+'-S' from mmm_mst_fields f1 inner join mmm_mst_fields f2 on f1.dropdown=f2.dropdown and f1.eid=f2.eid  where f1.documenttype='" & Ref_doctype & "' and f2.documenttype='" & cur_doctype & "' and f1.eid=" & Session("eid") & " and f1.dropdown<>'' and f2.dropdown<>''"
        oda.Fill(DS, "FILTER")
        ddlFLT.Items.Clear()
        If DS.Tables("FILTER").Rows.Count > 0 Then
            For I As Integer = 0 To DS.Tables("FILTER").Rows.Count - 1
                ddlFLT.Items.Add(DS.Tables("FILTER").Rows(I).Item(0).ToString)
                ddlFLT.Items(I).Value = DS.Tables("FILTER").Rows(I).Item(1).ToString
            Next
        End If
        oda.SelectCommand.CommandText = "select DROPDOWN,fieldid from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' AND FIELDTYPE='DROP DOWN' AND (DROPDOWNTYPE ='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED')"
        oda.Fill(DS, "FIELDS")
        Dim DTFIELDS As New DataTable
        DTFIELDS = DS.Tables("FIELDS")
        If DTFIELDS.Rows.Count > 0 Then
            For Each DR As DataRow In DTFIELDS.Rows
                Dim DOCTYPE() As String = DR.Item("DROPDOWN").ToString.Split("-")
                If ddlFLT.Items.Count > 0 Then
                    J = ddlFLT.Items.Count
                Else
                    J = 0
                End If

                STR = "select F1.DISPLAYNAME,CONVERT(NVARCHAR(10),F1.FIELDID)+'-'+F2.FIELDMAPPING+'-R' [FIELDID] from mmm_mst_fields f1 inner join mmm_mst_fields f2 on F1.EID=F2.EID "
                STR &= " where f2.dropdown='" & selfields & "' and f1.eid=" & Session("EID") & " and f2.documenttype='" & DOCTYPE(1).ToString & "' and f1.documenttype='" & ViewState("FORMNAME") & "' and F1.dropdown='" & DR.Item("DROPDOWN") & "' and f1.fieldid=" & DR.Item("fieldid") & "  and f2.isactive=1"
                oda.SelectCommand.CommandText = STR
                DS.Tables.Clear()
                Dim DT As New DataTable
                oda.Fill(DS, "REV_FILTER")
                DT = DS.Tables("REV_FILTER")
                If DT.Rows.Count > 0 Then
                    For Each DRF As DataRow In DT.Rows
                        ddlFLT.Items.Add(DRF.Item(0).ToString)
                        ddlFLT.Items(J).Value = DRF.Item(1).ToString
                        J = J + 1
                    Next
                End If
            Next
        End If
        con.Dispose()
        ddlFLT.Items.Insert(0, "SELECT ONE")
    End Sub

    Protected Sub ddlDropDownFieldSelect_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles ddlDropDownFieldSelect.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim Dt As New DataTable
        If ddlDropDownFieldSelect.SelectedItem.Text.ToUpper <> "SELECT FIELD" Then
            Dim selFields As String = ddlDropDownMasteValSelect.SelectedValue & "-" & ddlDropDownFieldSelect.SelectedValue
            bindFields4Filter(ddlDropDownMasteValSelect.SelectedItem.Text, ViewState("FORMNAME"), selFields)
            ddlFLT.Visible = True
            lblfilteron.Visible = True
            Dim ddlFieldSelect As String = ddlDropDownFieldSelect.SelectedValue
            If ddlFieldSelect.ToUpper().Contains("UID") Or ddlFieldSelect.ToUpper().Contains("USERNAME") Or ddlFieldSelect.ToUpper().Contains("EMAILID") Or ddlFieldSelect.ToUpper().Contains("PASSWORD") Or ddlFieldSelect.ToUpper().Contains("USERROLE") Or ddlFieldSelect.ToUpper().Contains("ENTITYNAME") Or ddlFieldSelect.ToUpper().Contains("LOCATION") Or ddlFieldSelect.ToUpper().Contains("ACTIVATIONLINK") Then
                'oda.SelectCommand.CommandText = "Select " & ddlFieldSelect & ",uid from MMM_MST_USER Where eid='" & Session("EID") & "'"
                'oda.Fill(Dt)
                'ddldfultvalfld.DataSource = Dt
                'ddldfultvalfld.DataTextField = ddlFieldSelect
                'ddldfultvalfld.DataValueField = "uid"
                'ddldfultvalfld.DataBind()
                'ddldfultvalfld.Items.Insert(0, "SELECT")
                lbldfaultvalfld.Visible = False
                ddldfultvalfld.Visible = False
                ddldfultvalfld.Items.Insert(0, "SELECT")
            Else
                oda.SelectCommand.CommandText = "Select " & ddlFieldSelect & ",tid from MMM_MST_MASTER Where eid='" & Session("EID") & "' and documenttype='" & ddlDropDownMasteValSelect.SelectedItem.Text.ToString().Trim() & "'"
                oda.Fill(Dt)
                ddldfultvalfld.DataSource = Dt
                ddldfultvalfld.DataTextField = ddlFieldSelect
                ddldfultvalfld.DataValueField = "tid"
                ddldfultvalfld.DataBind()
                ddldfultvalfld.Items.Insert(0, "SELECT")
                lbldfaultvalfld.Visible = True
                ddldfultvalfld.Visible = True
            End If
        Else
            ddlFLT.Items.Clear()
            ddlFLT.Visible = False
            lblfilteron.Visible = False
            ddldfultvalfld.Items.Clear()
            ddldfultvalfld.Visible = False
            lbldfaultvalfld.Visible = False

        End If
    End Sub

    Public Function changelookupval(ByVal lkval As String) As String
        Dim updlkval As String = ""
        Dim updquery As String = ""
        If lkval.ToString.Length > 1 Then
            Dim lkvalue As String = lkval.Substring(0, lkval.Length - 1)
            Dim spltval() As String = lkvalue.Split(",")
            If spltval.Length > 1 Then
                For i As Integer = 0 To spltval.Length - 1
                    Dim fldpair() As String = spltval(i).ToString.Split("-")
                    If fldpair.Length > 1 Then
                        If ViewState("PID") <> fldpair(0).ToString Then
                            updlkval &= spltval(i).ToString & ","
                        End If
                    End If
                Next

            End If
        End If

        Return updlkval
    End Function

    Public Sub CommonPropertiesofField(ByVal sender As Object, ByVal e As EventArgs)
        lblMessComProp.Text = ""
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim grdview As GridView = DirectCast(row.NamingContainer, GridView)
        Dim fID As Integer = Convert.ToString(grdview.DataKeys(row.RowIndex).Value)
        ViewState("filedID") = fID
        ViewState("txtType") = row.Cells(5).Text
        If (row.Cells(5).Text.ToUpper() = "NUMERIC") Then
            txtAllowDecimalDigit.Enabled = True
        Else
            txtAllowDecimalDigit.Enabled = False
        End If
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select fieldid,eid,datatype,externallookupformobile,OwnerEmail_WFstatus,Showinroleassignment,IsTotal,alloweditonedit,FieldType,DropDownType,displayname,documenttype,showOnDashboard,fieldmapping, isnull(isrequired,0) [isrequired], isnull(isActive,0) [isActive], isnull(iseditable,0) [iseditable], isnull(isworkflow,0) [isworkflow], isnull(isUnique,0) [isUnique], isnull(iseditonAmend,0) [iseditonAmend], isnull(showonamendment,0) [showonamendment], isnull(issearch,0) [issearch], isnull(isImieno,0) [isImieno], isnull(isPhoneNo,0) [isPhoneNo] , isnull(ismail,0)[ismail] , isnull(inlineediting,0) [inlineediting] ,isnull(splittable,0)[splittable],Showondocdetail,ShowOnSplit,Invisible,splitlinkfld,isSupervisor,splitvalidation,isnull(EnableEdit,0)[EnableEdit],isnull(PriorityDecider,0)[PriorityDecider],isnull(CrmReminder,0)[CrmReminder],isnull(EDIT_ON_CRM,0)[EDIT_ON_CRM],isnull(SHOW_ON_CRM,0)[SHOW_ON_CRM],ISCardNo,fillwithexistingonEdit,ReportName,isnull(isgeofence_filter,'0') as isgeofence_filter,isnull(geofensefiltersourcefield,'') as geofensefiltersourcefield,isnull(roundoff,-1) as roundoff, isnull(UsableSession,'0') as UsableSession,         ISNULL(AllowDecimalDigit,0) as AllowDecimalDigit,isnull(showonReallocation,0) as showonReallocation,isnull(isinvoiceattachment,0) as isinvoiceattachment,isnull(QRCodeMappedCoulmn,'')QRCodeMappedCoulmn,isnull(isValidPAN,0)[isValidPAN],isnull(isValidGST,0)[isValidGST],isnull(isValidIFSC,0)[isValidIFSC],isnull(excludePanCondition,'')[excludePanCondition],isnull(excludeGSTCondition,'')[excludeGSTCondition],isnull(excludeIFSCCondition,'')[excludeIFSCCondition] from MMM_MST_Fields where eid=" & Session("EID") & " and fieldID=" & ViewState("filedID") & "", con)
        Dim ds As New DataSet
        oda.Fill(ds, "fields")
        If ds.Tables("fields").Rows.Count <> 0 Then
            ViewState("datatype") = ds.Tables("fields").Rows(0).Item("datatype").ToString()    'Shalini
            ViewState("FieldType") = ds.Tables("fields").Rows(0).Item("FieldType").ToString()
            ViewState("DropDownType") = ds.Tables("fields").Rows(0).Item("DropDownType").ToString()
            txtReportName.Text = ds.Tables("fields").Rows(0).Item("ReportName").ToString()
            txtAllowDecimalDigit.Text = ds.Tables("fields").Rows(0).Item("AllowDecimalDigit").ToString()
        End If
        If row.Cells(2).Text.ToUpper.Trim() = "DROP DOWN" Then

            fillonedit.Visible = True
            If (ds.Tables("fields").Rows(0).Item("fillwithexistingonEdit").ToString().ToUpper = "TRUE") Then
                chk_fillwithexistingonEdit.Checked = True
            Else
                chk_fillwithexistingonEdit.Checked = False
            End If
            oda.SelectCommand.CommandText = "select displayName,FieldMapping from mmm_mst_fields where fieldtype='Geo Fence' and eid=" & Session("EID") & " and documenttype='" & Convert.ToString(ds.Tables("fields").Rows(0).Item("documenttype")) & "'"
            Dim dt As New DataTable
            oda.Fill(dt)
            If dt.Rows.Count > 0 Then
                ddlGeoFenceMap.DataSource = dt
                ddlGeoFenceMap.DataTextField = "displayName"
                ddlGeoFenceMap.DataValueField = "FieldMapping"
                ddlGeoFenceMap.DataBind()
                ddlGeoFenceMap.Items.Insert("0", New ListItem("SELECT"))
            Else
                If ddlGeoFenceMap.Items.Count > 0 Then
                    ddlGeoFenceMap.Items.Clear()
                End If
                ddlGeoFenceMap.Items.Insert("0", New ListItem("SELECT"))
            End If
            IsGeoFenceFilter.Visible = True
            If ds.Tables("fields").Rows(0).Item("isgeofence_filter").ToString() = "1" Then
                If Convert.ToString(ds.Tables("fields").Rows(0).Item("geofensefiltersourcefield")) = String.Empty Then
                    chk_IsGeoFenceFilter.Checked = False
                Else
                    chk_IsGeoFenceFilter.Checked = True
                    ddlGeoFenceMap.SelectedValue = Convert.ToString(ds.Tables("fields").Rows(0).Item("geofensefiltersourcefield"))
                End If
            Else
                chk_IsGeoFenceFilter.Checked = False
            End If
        Else

            fillonedit.Visible = False
            chk_fillwithexistingonEdit.Checked = False
            IsGeoFenceFilter.Visible = False
            chk_IsGeoFenceFilter.Checked = False
        End If

        oda.SelectCommand.CommandText = "Select StatusName,TID from MMM_MST_workflow_status where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "'"
        oda.SelectCommand.CommandType = CommandType.Text
        oda.Fill(ds, "wrkflow")
        chkddlismail.Items.Clear()
        chkddlismail.DataSource = ds.Tables("wrkflow")
        chkddlismail.DataTextField = "StatusName"
        chkddlismail.DataValueField = "TID"
        chkddlismail.DataBind()
        chkddlismail.Items.Insert(0, "Please Select")
        chkddlismail.Items.Insert(1, "Archive")


        oda.SelectCommand.CommandText = "Select UniqueKeys from mmm_mst_forms where eid=" & Session("EID") & " and formid =" & ViewState("Formid").ToString() & " and ',' + UniqueKeys + ',' like '%," & ds.Tables("fields").Rows(0).Item("fieldmapping").ToString() & ",%'"
        oda.Fill(ds, "form")
        If ds.Tables("form").Rows.Count > 0 Then
            chkAActive.Checked = True
            chkAActive.Enabled = False
        Else
            If Val(ds.Tables("fields").Rows(0).Item("isActive").ToString()) = 1 Then
                chkAActive.Checked = True
                chkAActive.Enabled = True
            Else
                chkAActive.Checked = False
                chkAActive.Enabled = True
            End If
        End If
        ' Dim uniquekey As String = ds.Tables("form").Rows(0).Item("UniqueKeys").ToString()  
        'If uniquekey.Contains(ds.Tables("fields").Rows(0).Item("fieldmapping").ToString()) Then 
        'End If
        lblControl.Text = ds.Tables("fields").Rows(0).Item("displayname").ToString()

        If Val(ds.Tables("fields").Rows(0).Item("isrequired").ToString()) = 1 Then
            chkCMan.Checked = True
        Else
            chkCMan.Checked = False
        End If

        If ViewState("FieldType") = "Child Item Total" Then
            chkAActive.Checked = True
            chkAActive.Enabled = False
        End If
        'If Val(ds.Tables("fields").Rows(0).Item("isActive").ToString()) = 1 Then
        '    chkAActive.Checked = True
        '    chkAActive.Enabled = True
        'Else
        '    chkAActive.Checked = False
        '    chkAActive.Enabled = True
        'End If
        'Shalini

        If Val(ds.Tables("fields").Rows(0).Item("iseditable").ToString()) = 1 Then
            chkCEdit.Checked = True
        Else
            chkCEdit.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("isworkflow").ToString()) = 1 Then
            chkCWork.Checked = True
        Else
            chkCWork.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("isunique").ToString()) = 1 Then
            chkCUni.Checked = True
        Else
            chkCUni.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("showonamendment").ToString()) = 1 Then
            chkShowAmen.Checked = True
        Else
            chkShowAmen.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("issearch").ToString()) = 1 Then
            chkSearch.Checked = True
        Else
            chkSearch.Checked = False
        End If

        If Val(ds.Tables("fields").Rows(0).Item("iseditonAmend").ToString()) = 1 Then
            chkEditonAmendment.Checked = True
        Else
            chkEditonAmendment.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("isImieno").ToString()) = 1 Then
            chkImieNo.Checked = True
        Else
            chkImieNo.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("isPhoneNo").ToString()) = 1 Then
            chkPhoneNo.Checked = True
        Else
            chkPhoneNo.Checked = False
        End If

        If Val(ds.Tables("fields").Rows(0).Item("ismail").ToString()) = 1 Then
            chkIsmail.Checked = True
            Dim ownrmail As String = ds.Tables("fields").Rows(0).Item("OwnerEmail_WFstatus").ToString()
            If txtmail.Text.Trim() <> "Please Select" Then
                lblMessComProp.Text = "Please select Work Flow Status Value"
            Else
                txtmail.Text = ownrmail
                Dim stt As String() = Convert.ToString(ds.Tables("fields").Rows(0).Item("OwnerEmail_WFstatus").ToString()).Split(",")
                If stt.Length > 0 Then
                    For i As Integer = 0 To chkddlismail.Items.Count - 1
                        For j As Integer = 0 To stt.Length - 1
                            If stt(j).ToString = chkddlismail.Items(i).Text.ToString() Then
                                chkddlismail.Items(i).Selected = True
                                Exit For
                            End If
                        Next
                    Next
                End If
            End If
        Else
            chkIsmail.Checked = False
            txtmail.Text = "Please Select"
            chkddlismail.Items(0).Selected = True
        End If

        If Val(ds.Tables("fields").Rows(0).Item("splittable").ToString()) = 1 Then
            chksplttable.Checked = True
            'adding splittbale date time drop down 'balli'
            If ViewState("datatype").ToString.ToUpper = "DATETIME" Or ViewState("datatype").ToString.ToUpper = "NUMERIC" Then
                ddlspltTable.Visible = True
                Dim splval As String() = Split(ds.Tables("fields").Rows(0).Item("splitvalidation").ToString(), "|")
                If splval.Length > 0 Then
                    ddlSpltOprtr.Visible = True
                    ddlSpltOprtr.SelectedIndex = ddlSpltOprtr.Items.IndexOf(ddlSpltOprtr.Items.FindByText(splval(0)))
                Else
                    ddlSpltOprtr.Visible = False
                End If
                oda.SelectCommand.CommandText = "select displayname,fieldmapping from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and fieldid<> " & ViewState("filedID") & " and datatype='" & ViewState("datatype") & "'"
                oda.SelectCommand.CommandType = CommandType.Text
                oda.Fill(ds, "fldMap")
                ddlspltTable.Items.Clear()
                ddlspltTable.DataSource = ds.Tables("fldMap")
                ddlspltTable.DataTextField = "displayname"
                ddlspltTable.DataValueField = "fieldmapping"
                ddlspltTable.DataBind()
                ddlspltTable.Items.Insert(0, "Please Select")
                If ds.Tables("fields").Rows(0).Item("splitLinkfld").ToString.Length > 1 Then
                    ddlspltTable.SelectedIndex = ddlspltTable.Items.IndexOf(ddlspltTable.Items.FindByValue(ds.Tables("fields").Rows(0).Item("splitLinkfld").ToString))
                    ddlSpltOprtr.Visible = False
                Else
                    ddlspltTable.SelectedIndex = ddlspltTable.Items.IndexOf(ddlspltTable.Items.FindByValue(splval(1)))
                End If
            Else
                ddlspltTable.Visible = False
            End If
        Else
            chksplttable.Checked = False
            ddlspltTable.Visible = False
            ddlSpltOprtr.Visible = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("inlineediting").ToString()) = 1 Then
            chkInLinEdt.Checked = True
        Else
            chkInLinEdt.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("Showondocdetail").ToString()) = 1 Then
            chkDocDetail.Checked = True
        Else
            chkDocDetail.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("ShowOnSplit").ToString()) = 1 Then
            chkDocSplit.Checked = True
        Else
            chkDocSplit.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("Invisible").ToString()) = 1 Then
            chkinvisible.Checked = True
        Else
            chkinvisible.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("isSupervisor").ToString()) = 1 Then
            chkIsSupervisor.Checked = True
        Else
            chkIsSupervisor.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("EnableEdit").ToString()) = 1 Then  'Shalini
            chkenableEdit.Checked = True
        Else
            chkenableEdit.Checked = False
        End If
        If Convert.ToString(ds.Tables("fields").Rows(0).Item("DocumentType")).ToUpper = "USER" Then
            UserEanbled.Visible = True
            IsEUS.Checked = Convert.ToString(ds.Tables("fields").Rows(0).Item("UsableSession"))
        Else
            UserEanbled.Visible = False
            IsEUS.Checked = False
        End If

        If ViewState("DropDownType") = "FIX VALUED" Then
            chkpriority.Enabled = True
            If Val(ds.Tables("fields").Rows(0).Item("PriorityDecider").ToString()) = 1 Then  'Shalini
                chkpriority.Checked = True
            Else
                chkpriority.Checked = False
            End If
        Else
            chkpriority.Enabled = False
        End If

        If ViewState("FieldType") = "Text Box" And ViewState("datatype") = "New Datetime" Then   'Shalini
            chkcrmreminder.Enabled = True
            If Val(ds.Tables("fields").Rows(0).Item("CrmReminder").ToString()) = 1 Then  'Shalini
                chkcrmreminder.Checked = True
            Else
                chkcrmreminder.Checked = False
            End If
        Else
            chkcrmreminder.Enabled = False
            chkcrmreminder.Checked = False
            oda.SelectCommand.Parameters.AddWithValue("CrmReminder", "")
        End If

        If ViewState("FieldType") = "Drop Down" Then
            chkdeshboard.Checked = False
            chkdeshboard.Enabled = False
        Else
            If Val(ds.Tables("fields").Rows(0).Item("showOnDashboard").ToString()) = 1 Then  'Shalini
                chkdeshboard.Checked = True
                chkdeshboard.Enabled = True
            Else
                chkdeshboard.Checked = False
                chkdeshboard.Enabled = True
            End If
        End If

        If UCase(ViewState("datatype")) = "NUMERIC" Then
            If Val(ds.Tables("fields").Rows(0).Item("IsTotal").ToString()) = 1 Then  'Shalini
                chkeditistotal.Checked = True
                chkeditistotal.Enabled = True
            Else
                chkeditistotal.Checked = False
                chkeditistotal.Enabled = True
            End If
            RoundOffHead.Visible = True
            If Convert.ToString(ds.Tables("fields").Rows(0).Item("roundoff")) = "-1" Or IsNothing(ds.Tables("fields").Rows(0).Item("roundoff")) Then
                txtRoundOffVal.Visible = False
                IsRoundOff.Checked = False
            Else
                IsRoundOff.Checked = True
                txtRoundOffVal.Visible = True
                txtRoundOffVal.Text = Convert.ToString(ds.Tables("fields").Rows(0).Item("roundoff"))
            End If

        Else
            chkeditistotal.Checked = False
            chkeditistotal.Enabled = False
            RoundOffHead.Visible = False
            txtRoundOffVal.Text = ""
        End If

        If Val(ds.Tables("fields").Rows(0).Item("show_on_CRM").ToString()) = 1 Then
            ChkShwCRM.Checked = True
        Else
            ChkShwCRM.Checked = False
        End If
        If Val(ds.Tables("fields").Rows(0).Item("EDIT_On_CRM").ToString()) = 1 Then
            chkEditCrm.Checked = True
        Else
            chkEditCrm.Checked = False
        End If

        If Val(ds.Tables("fields").Rows(0).Item("alloweditonedit").ToString()) = 1 Then
            chkalloweditonedit.Checked = True
        Else
            chkalloweditonedit.Checked = False
        End If

        If Val(ds.Tables("fields").Rows(0).Item("Showinroleassignment").ToString()) = 1 Then
            chk_assignment.Checked = True
        Else
            chk_assignment.Checked = False
        End If


        If ViewState("FieldType") = "Drop Down" Then
            If Val(ds.Tables("fields").Rows(0).Item("externallookupformobile").ToString()) = 1 Then  'Shalini
                chkextrnllukupformobile.Checked = True
                chkextrnllukupformobile.Enabled = True
            Else
                chkextrnllukupformobile.Checked = False
                chkextrnllukupformobile.Enabled = True
            End If
        Else
            chkextrnllukupformobile.Checked = False
            chkextrnllukupformobile.Enabled = False
        End If
        If ds.Tables("fields").Rows(0).Item("ISCardNo").ToString() = "True" Then
            chk_CardNO.Checked = True
        Else
            chk_CardNO.Checked = False
        End If
        If ds.Tables("fields").Rows(0).Item("showonReallocation").ToString() = "True" Then
            chk_Reallocation.Checked = True
        Else
            chk_Reallocation.Checked = False
        End If
        If ds.Tables("fields").Rows(0).Item("isinvoiceattachment").ToString() = "True" Then
            chkIsEinvoiceAttachment.Checked = True
        Else
            chkIsEinvoiceAttachment.Checked = False
        End If

        'GST
        If ds.Tables("fields").Rows(0).Item("isValidGST").ToString() = "1" Then
            chk_GST.Checked = True
        Else
            chk_GST.Checked = False
        End If
        If ds.Tables("fields").Rows(0).Item("excludeGSTCondition").ToString() <> "" Then
            txtGSTExcep.Text = ds.Tables("fields").Rows(0).Item("excludeGSTCondition").ToString()
            txtPANExcep.Text = ""
            txtIFSCExcep.Text = ""
        End If
        'PAN
        If ds.Tables("fields").Rows(0).Item("isValidPAN").ToString() = "1" Then
            chk_PAN.Checked = True
        Else
            chk_PAN.Checked = False
        End If
        If ds.Tables("fields").Rows(0).Item("excludePanCondition").ToString() <> "" Then
            txtPANExcep.Text = ds.Tables("fields").Rows(0).Item("excludePanCondition").ToString()
            txtGSTExcep.Text = ""
            txtIFSCExcep.Text = ""
        End If
        'IFSC
        If ds.Tables("fields").Rows(0).Item("isValidIFSC").ToString() = "1" Then
            chk_IFSC.Checked = True
        Else
            chk_IFSC.Checked = False
        End If
        If ds.Tables("fields").Rows(0).Item("excludeIFSCCondition").ToString() <> "" Then
            txtIFSCExcep.Text = ds.Tables("fields").Rows(0).Item("excludeIFSCCondition").ToString()
            txtGSTExcep.Text = ""
            txtPANExcep.Text = ""
        End If





        If Not String.IsNullOrEmpty(ds.Tables("fields").Rows(0).Item("QRCodeMappedCoulmn").ToString()) Then
            'ddlEinvoiceFields.SelectedItem.Value = ds.Tables("fields").Rows(0).Item("QRCodeMappedCoulmn").ToString().Trim()
            ddlEinvoiceFields.SelectedIndex = ddlEinvoiceFields.Items.IndexOf(ddlEinvoiceFields.Items.FindByValue(ds.Tables("fields").Rows(0).Item("QRCodeMappedCoulmn").ToString().Trim()))
        Else
            'ddlEinvoiceFields.SelectedItem.Value = String.Empty
            ddlEinvoiceFields.SelectedIndex = 0
        End If
        updCommonProp.Update()
        MP_CommonProp.Show()
        ds.Dispose()
        oda.Dispose()
        con.Close()
    End Sub
    'Changes By mayank For Is Card No 11-Feb-2015
    Public Sub SaveCommonProp(ByVal sender As Object, ByVal e As EventArgs)

        If (txtReportName.Text.Length < 3) Then
            lblMessComProp.Text = "Please Fill Report Name."
            Exit Sub
        End If
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspCommonField", con)
        'Dim oda As SqlDataAdapter = New SqlDataAdapter("NewuspCommonField", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("eid", Session("EID"))
        oda.SelectCommand.Parameters.AddWithValue("fieldID", ViewState("filedID"))
        oda.SelectCommand.Parameters.AddWithValue("ReportName", txtReportName.Text.Trim())
        oda.SelectCommand.Parameters.AddWithValue("AllowDecimalDigit", txtAllowDecimalDigit.Text)
        If ddlEinvoiceFields.SelectedItem.Text = "Please Select" Then
            ' ddlEinvoiceFields.SelectedItem.Value = String.Empty
            oda.SelectCommand.Parameters.AddWithValue("QRCodeMappedValue", "")
        Else
            oda.SelectCommand.Parameters.AddWithValue("QRCodeMappedValue", ddlEinvoiceFields.SelectedItem.Value.Trim())
        End If
        If ViewState("FieldType") = "Child Item Total" Then   'Shalini
            chkAActive.Checked = True
            oda.SelectCommand.Parameters.AddWithValue("Act", 1)
            chkAActive.Enabled = False
        Else
            If chkAActive.Checked = True Then
                oda.SelectCommand.Parameters.AddWithValue("Act", 1)
                chkAActive.Enabled = True
            Else
                oda.SelectCommand.Parameters.AddWithValue("Act", 0)
                chkAActive.Enabled = True
            End If
        End If

        If chkCMan.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("Man", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("Man", 0)
        End If


        If chk_assignment.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("Showinroleassignment", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("Showinroleassignment", 0)
        End If


        If chkCEdit.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("Edit", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("Edit", 0)
        End If
        If chkCWork.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("WF", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("WF", 0)
        End If
        If chkCUni.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("Unique", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("Unique", 0)
        End If

        If chkShowAmen.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("Amendment", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("Amendment", 0)
        End If
        If chkSearch.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("search", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("search", 0)
        End If

        If chkEditonAmendment.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("iseditonAmend", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("iseditonAmend", 0)
        End If
        If chkImieNo.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("isImieno", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("isImieno", 0)
        End If
        If chkPhoneNo.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("isPhoneNo", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("isPhoneNo", 0)
        End If

        If chkIsmail.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("ismail", 1)
            If txtmail.Text = "Please Select" Then
                lblMessComProp.Text = "Please select Work Flow Status Value"
                Exit Sub
            Else
                oda.SelectCommand.Parameters.AddWithValue("OwnerEmail_WFstatus", txtmail.Text.ToString().Trim())
            End If

        Else
            oda.SelectCommand.Parameters.AddWithValue("ismail", 0)
            oda.SelectCommand.Parameters.AddWithValue("OwnerEmail_WFstatus", "Please Select")
        End If
        If chkInLinEdt.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("isinlineedit", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("isinlineedit", 0)
        End If
        If chksplttable.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("splittable", 1)
            If ViewState("datatype").ToString.ToUpper = "DATETIME" Then
                If ddlspltTable.SelectedItem.Text <> "Please Select" Then
                    oda.SelectCommand.Parameters.AddWithValue("splitLinkFld", ddlspltTable.SelectedItem.Value)
                Else
                    lblMessComProp.Text = "Please select splittable link field Name"
                    updCommonProp.Update()
                    Exit Sub
                End If
            ElseIf ViewState("datatype").ToString.ToUpper = "NUMERIC" Then
                If ddlSpltOprtr.SelectedItem.Text <> "Please Select" Or ddlspltTable.SelectedItem.Text <> "Please Select" Then
                    oda.SelectCommand.Parameters.AddWithValue("spltValidation", ddlSpltOprtr.SelectedItem.Text & "|" & ddlspltTable.SelectedItem.Value)
                Else
                    lblMessComProp.Text = "Please select splittable field Name"
                    updCommonProp.Update()
                    Exit Sub
                End If
            End If

        Else
            If ViewState("datatype").ToString.ToUpper = "DATETIME" Then
                oda.SelectCommand.Parameters.AddWithValue("splitLinkFld", "")
            End If
            oda.SelectCommand.Parameters.AddWithValue("splittable", 0)
        End If

        If chkDocDetail.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("ShowOnDocDetail", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("ShowOnDocDetail", 0)
        End If

        If chkDocSplit.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("ShowOnSplit", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("ShowOnSplit", 0)
        End If
        If chkinvisible.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("@Invisible", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@Invisible", 0)
        End If
        If chkIsSupervisor.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("@IsSupervisor", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@IsSupervisor", 0)
        End If
        If chkenableEdit.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("EnableEdit", 1)  'Shalini
        Else
            oda.SelectCommand.Parameters.AddWithValue("EnableEdit", 0)
        End If

        If ViewState("DropDownType") = "FIX VALUED" Then
            chkpriority.Enabled = True
            If chkpriority.Checked = True Then
                oda.SelectCommand.Parameters.AddWithValue("PriorityDecider", 1)
            Else
                oda.SelectCommand.Parameters.AddWithValue("PriorityDecider", 0)
            End If
        Else
            oda.SelectCommand.Parameters.AddWithValue("PriorityDecider", "")
            chkpriority.Enabled = False
        End If


        If ViewState("FieldType") = "Text Box" And ViewState("datatype") = "New Datetime" Then  'Shalini
            If chkcrmreminder.Checked = True Then
                oda.SelectCommand.Parameters.AddWithValue("CrmReminder", 1)
                chkcrmreminder.Enabled = True
            Else
                oda.SelectCommand.Parameters.AddWithValue("CrmReminder", 0)
                chkcrmreminder.Enabled = True
            End If
        Else
            chkcrmreminder.Enabled = False
            chkcrmreminder.Checked = False
            oda.SelectCommand.Parameters.AddWithValue("CrmReminder", "")
        End If



        If UCase(ViewState("datatype")) = "NUMERIC" Then
            If txtRoundOffVal.Text = "" Then
                txtRoundOffVal.Text = "0"
            End If
            oda.SelectCommand.Parameters.AddWithValue("@RoundOff", IIf(IsRoundOff.Checked = True, txtRoundOffVal.Text, "-1"))
            If chkeditistotal.Checked = True Then
                oda.SelectCommand.Parameters.AddWithValue("IsTotal", 1)  'Shalini
            Else
                oda.SelectCommand.Parameters.AddWithValue("IsTotal", 0)
            End If
        Else
            oda.SelectCommand.Parameters.AddWithValue("@RoundOff", "-1")
            chkeditistotal.Checked = False
            chkeditistotal.Enabled = False
            oda.SelectCommand.Parameters.AddWithValue("IsTotal", "")
        End If


        If ViewState("FieldType") = "Drop Down" Then
            chkdeshboard.Checked = False
            chkdeshboard.Enabled = False
            oda.SelectCommand.Parameters.AddWithValue("showOnDashboard", "")
        Else
            If chkdeshboard.Checked = True Then
                oda.SelectCommand.Parameters.AddWithValue("showOnDashboard", 1)  'Shalini
            Else
                oda.SelectCommand.Parameters.AddWithValue("showOnDashboard", 0)
            End If
        End If
        If UserEanbled.Visible = True Then
            oda.SelectCommand.Parameters.AddWithValue("UsableSession", IIf(IsEUS.Checked = True, "1", "0"))
        Else
            oda.SelectCommand.Parameters.AddWithValue("UsableSession", "0")
        End If

        If ChkShwCRM.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("@shwCRM", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@shwCRM", 0)
        End If


        If chkEditCrm.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("@edtCRM", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@edtCRM", 0)
        End If

        If chkalloweditonedit.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("@alloweditonedit", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@alloweditonedit", 0)
        End If

        If ViewState("FieldType") = "Drop Down" Then
            If chkextrnllukupformobile.Checked = True Then
                oda.SelectCommand.Parameters.AddWithValue("externallookupformobile", 1)  'Shalini
            Else
                oda.SelectCommand.Parameters.AddWithValue("externallookupformobile", 0)
            End If
        Else
            chkextrnllukupformobile.Checked = False
            chkextrnllukupformobile.Enabled = False
            oda.SelectCommand.Parameters.AddWithValue("externallookupformobile", "")
        End If
        If (chk_CardNO.Checked = True) Then
            oda.SelectCommand.Parameters.AddWithValue("IsCardNO", "True")
        Else
            oda.SelectCommand.Parameters.AddWithValue("IsCardNO", "False")
        End If
        If fillonedit.Visible = True Then
            If (chk_fillwithexistingonEdit.Checked) Then
                oda.SelectCommand.Parameters.AddWithValue("fillwithexistingonEdit", "TRUE")
            Else
                oda.SelectCommand.Parameters.AddWithValue("fillwithexistingonEdit", "FALSE")
            End If

        Else
            oda.SelectCommand.Parameters.AddWithValue("fillwithexistingonEdit", "FALSE")
        End If
        If IsGeoFenceFilter.Visible = True Then
            If chk_IsGeoFenceFilter.Checked = True Then
                If ddlGeoFenceMap.SelectedIndex = 0 Then
                    lblMessComProp.Text = "If you want to select geo fence filter kindly select any one mapping fields."
                    ddlGeoFenceMap.Focus()
                    Exit Sub
                End If
                oda.SelectCommand.Parameters.AddWithValue("isgeofence_filter", "1")
            Else
                oda.SelectCommand.Parameters.AddWithValue("isgeofence_filter", "0")
            End If
        Else
            oda.SelectCommand.Parameters.AddWithValue("isgeofence_filter", "0")
        End If

        oda.SelectCommand.Parameters.AddWithValue("geofensefiltersourcefield", IIf(ddlGeoFenceMap.SelectedIndex = 0, "", ddlGeoFenceMap.SelectedValue))
        If chk_Reallocation.Checked = True Then
            'oda.SelectCommand.Parameters.AddWithValue("@reallocationonedit", 1)
            oda.SelectCommand.Parameters.AddWithValue("@reallocationonedit", "TRUE")
        Else
            'oda.SelectCommand.Parameters.AddWithValue("@reallocationonedit", 0)
            oda.SelectCommand.Parameters.AddWithValue("@reallocationonedit", "FALSE")
        End If


        'GST PAN IFSC
        If chk_GST.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("@isGST", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@isGST", 0)
        End If
        If chk_PAN.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("@isPAN", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@isPAN", 0)
        End If
        If chk_IFSC.Checked = True Then
            oda.SelectCommand.Parameters.AddWithValue("@isIFSC", 1)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@isIFSC", 0)
        End If
        oda.SelectCommand.Parameters.AddWithValue("@GSTExcep", txtGSTExcep.Text.ToString().Trim())
        oda.SelectCommand.Parameters.AddWithValue("@PANExcep", txtPANExcep.Text.ToString().Trim())
        oda.SelectCommand.Parameters.AddWithValue("@IFSCExcep", txtIFSCExcep.Text.ToString().Trim())
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        oda.SelectCommand.ExecuteNonQuery()
        lblMsgEdit.Text = "property of field - '" & lblControl.Text & "' is updated "
        oda.SelectCommand.CommandText = "Update MMM_MST_Fields set Showinroleassignment=0 where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and fieldid<> " & ViewState("filedID") & ""
        oda.SelectCommand.CommandType = CommandType.Text
        oda.SelectCommand.ExecuteNonQuery()
        updatePanelEdit.Update()
        MP_CommonProp.Hide()
        oda.Dispose()
        con.Close()
    End Sub
    'Changes By mayank For Is Card No 11-Feb-2015

    'Protected Sub ddlKCType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlKCType.SelectedIndexChanged
    '    If ddlKCType.SelectedItem.Text.ToUpper = "STATIC" Then
    '        txtSV.Enabled = True
    '    Else
    '        txtSV.Enabled = False
    '    End If
    'End Sub

    'Protected Sub ddlFMType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlFMType.SelectedIndexChanged
    '    Dim FM_TYPE As String = ""
    '    Dim CONSTR As String = ConfigurationManager.ConnectionStrings("Constr").ConnectionString
    '    Dim CON As SqlConnection = New SqlConnection(CONSTR)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("", CON)
    '    Dim ds As New DataSet
    '    Dim query As String = "SELECT displayname [FIELDNAME],SUBSTRING(dropdown,(CHARINDEX('-',dropdown)+1),CHARINDEX('-',dropdown,CHARINDEX('-',dropdown)+1)-CHARINDEX('-',dropdown)-1)+'-'+convert(nvarchar(10),fieldid) [FORMNAME] FROM MMM_MST_FIELDS WHERE EID=32 AND DROPDOWNTYPE ='MASTER VALUED' AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND DROPDOWN LIKE '" & ddlFMType.SelectedItem.Text & "-%'"
    '    oda.SelectCommand.CommandText = query
    '    oda.Fill(ds, "forms")
    '    ddlDoctype.Items.Clear()
    '    If ds.Tables("forms").Rows.Count > 0 Then
    '        For i As Integer = 0 To ds.Tables("forms").Rows.Count - 1
    '            ddlDoctype.Items.Add(ds.Tables("forms").Rows(i).Item("FIELDNAME").ToString)
    '            ddlDoctype.Items(i).Value = ds.Tables("forms").Rows(i).Item("FORMNAME").ToString()
    '        Next
    '    End If
    '    ddlDoctype.Items.Insert(0, "SELECT ONE")
    'End Sub

    Protected Sub ddlDoctype_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlDoctype.SelectedIndexChanged
        'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        'Dim con As SqlConnection = New SqlConnection(conStr)
        'Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        'Dim Ds As New DataSet
        'If ddlDoctype.SelectedItem.Text.ToUpper <> "SELECT ONE" Then
        '    Dim DOCTYPE As String() = ddlDoctype.SelectedValue.ToString.Split("-")
        '    oda.SelectCommand.CommandText = "Select displayname,Fieldmapping from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & DOCTYPE(0) & "' UNION ALL Select displayname,Fieldmapping from MMM_MST_Fields where eid=-1 and documenttype='DOCUMENT'"
        '    oda.Fill(Ds, "Fields")
        '    ddlKFields.Items.Clear()
        '    If Ds.Tables("Fields").Rows.Count > 0 Then
        '        For i As Integer = 0 To Ds.Tables("Fields").Rows.Count - 1
        '            ddlKFields.Items.Add(Ds.Tables("Fields").Rows(i).Item(0))
        '            ddlKFields.Items(i).Value = Ds.Tables("Fields").Rows(i).Item(1)
        '        Next
        '    End If
        '    ddlKFields.Items.Insert(0, "SELECT ONE")

        '    ''Bind the Workflow status of selected documenttype
        '    oda.SelectCommand.CommandText = "select statusname,tid from mmm_mst_workflow_status where eid=" & Session("eid") & " and (documenttype='" & DOCTYPE(0).ToString & "' OR DOCUMENTTYPE IS NULL) ORDER BY DORD "
        '    oda.Fill(Ds, "WS")
        '    ddlKCSTATUS.Items.Clear()

        '    If Ds.Tables("WS").Rows.Count > 0 Then
        '        For I As Integer = 0 To Ds.Tables("WS").Rows.Count - 1
        '            ddlKCSTATUS.Items.Add(Ds.Tables("WS").Rows(I).Item(0).ToString())
        '            ddlKCSTATUS.Items(I).Value = Ds.Tables("WS").Rows(I).Item(0).ToString()
        '        Next
        '    End If
        '    ddlKCSTATUS.Items.Insert(0, "SELECT ONE")
        'Else
        '    ddlKFields.Items.Clear()
        '    ddlKCSTATUS.Items.Clear()
        'End If
        'UpdPNLKCKF.Update()
        'oda.Dispose()
        'con.Dispose()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim Ds As New DataSet
        oda.SelectCommand.CommandText = "Select displayname,Fieldmapping from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & ddlDoctype.SelectedItem.Text & "' UNION ALL Select displayname,Fieldmapping from MMM_MST_Fields where eid=-1 and documenttype='DOCUMENT'"
        oda.Fill(Ds, "Fields")
        ddlKFields.Items.Clear()
        If Ds.Tables("Fields").Rows.Count > 0 Then
            For i As Integer = 0 To Ds.Tables("Fields").Rows.Count - 1
                ddlKFields.Items.Add(Ds.Tables("Fields").Rows(i).Item(0))
                ddlKFields.Items(i).Value = Ds.Tables("Fields").Rows(i).Item(1)
            Next
        End If
        ddlKFields.Items.Insert(0, "SELECT ONE")
        UpdPNLKCKF.Update()
        oda.Dispose()
        con.Dispose()
    End Sub
    Sub hidetrigger()
        Me.mdladdtrg.Hide()
    End Sub
#Region "Trigger"
#Region "Trigger"
    Protected Sub TriggerModal(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("trgFORMID") = Formid
        Fnameontrigger.Text = row.Cells(1).Text
        lblTrigger.Text = ""
        txtTrgText.Text = ""
        Dim Tid As Integer = 0
        Dim EID As Integer = 0
        EID = Session("EID")

        Dim trgDS As DataSet
        trgDS = GetTriggers(Tid, EID, Formid)
        BindTriggerGrid(trgDS)
        btnAddTrigger.Visible = True
        btnEditTrigger.Visible = False
        Me.Uptrigger.Update()
        Me.mdladdtrg.Show()
    End Sub
    Protected Sub BtnTgrHit(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim trgID As Integer = Convert.ToString(Me.gvTrg.DataKeys(row.RowIndex).Value)
        ViewState("trgID") = trgID
        Dim Formid = Convert.ToInt32(ViewState("trgFORMID"))
        Dim Tid As Integer = trgID
        Dim EID As Integer = 0
        EID = Session("EID")
        Dim trgDS As DataSet
        trgDS = GetTriggers(Tid, EID, Formid)
        txtTrgText.Text = trgDS.Tables("tbltrg").Rows(0).Item("TriggerText").ToString()
        If trgDS.Tables("tbltrg").Rows(0).Item("oncreate") = 1 Then
            chkTrgEdit.Checked = True
        Else
            chkTrgEdit.Checked = False
        End If
        If trgDS.Tables("tbltrg").Rows(0).Item("onEdit") = 1 Then
            chkTrgEdit.Checked = True
        Else
            chkTrgEdit.Checked = False
        End If
        btnAddTrigger.Visible = False
        btnEditTrigger.Visible = True
        Me.Uptrigger.Update()
        Me.mdladdtrg.Show()
    End Sub
    Protected Sub AddTrigger(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim TId As Integer = 0
        Dim EID As Integer = 0
        Dim FormID As Integer = 0
        Dim TriggerText As String = ""
        Dim ret As Integer = -2
        Dim strMsg As String = ""

        If Session("EID") <> Nothing Then
            TId = 0
            EID = Convert.ToInt32(Session("EID"))
            FormID = Convert.ToInt32(ViewState("trgFORMID"))
            TriggerText = txtTrgText.Text.Trim()
            ret = AddUpdateTrigger(TId, EID, FormID, TriggerText)
        Else
            ret = -1
        End If
        If ret > 0 Then
            strMsg = "Trigger added successfully."
            txtTrgText.Text = ""
            txtTrgText.Focus()
            EID = Convert.ToInt32(Session("EID"))
            FormID = Convert.ToInt32(ViewState("trgFORMID"))
            Dim trgDS As DataSet
            trgDS = GetTriggers(TId, EID, FormID)
            BindTriggerGrid(trgDS)
            Me.Uptrigger.Update()
        ElseIf ret = -1 Then
            strMsg = "Sorry! Your login session has expired."
        ElseIf ret = -2 Then
            strMsg = "Sorry! Your request can not be completed at the moment.<br/><br/> Error occured at server."
        End If
        lblTrigger.Text = "<b>" + strMsg + "</b>"
    End Sub
    Protected Sub UpdateTrigger(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim TId As Integer = 0
        Dim EID As Integer = 0
        Dim FormID As Integer = 0
        Dim TriggerText As String = ""
        Dim ret As Integer = -2
        Dim strMsg As String = ""

        If Session("EID") <> Nothing Then
            TId = Convert.ToInt32(ViewState("trgID"))
            EID = Convert.ToInt32(Session("EID"))
            FormID = Convert.ToInt32(ViewState("trgFORMID"))
            TriggerText = txtTrgText.Text.Trim()
            ret = AddUpdateTrigger(TId, EID, FormID, TriggerText)
            btnEditTrigger.Visible = False
            btnAddTrigger.Visible = True
        Else
            ret = -1
        End If
        If ret = 0 Then
            strMsg = "Trigger updated successfully."
            txtTrgText.Text = ""
            txtTrgText.Focus()
            EID = Convert.ToInt32(Session("EID"))
            FormID = Convert.ToInt32(ViewState("trgFORMID"))
            Dim trgDS As DataSet
            TId = 0
            trgDS = GetTriggers(TId, EID, FormID)
            BindTriggerGrid(trgDS)
            Me.Uptrigger.Update()
        ElseIf ret = -1 Then
            strMsg = "Sorry! Your login session has expired."
        ElseIf ret = -2 Then
            strMsg = "Sorry! Your request can not be completed at the moment.<br/><br/> Error occured at server."
        End If
        lblTrigger.Text = "<b>" + strMsg + "</b>"
    End Sub
    Protected Sub DeleteHitTrigger(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        'upDelTrg mdlTrgDel pnlDeltrg
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim trgdelID As Integer = Convert.ToString(Me.gvTrg.DataKeys(row.RowIndex).Value)
        ViewState("Deltid") = trgdelID
        lblTrgDel.Text = "Are you Sure Want to delete - " & row.Cells(3).Text
        Me.upDelTrg.Update()
        btntrgdel.Visible = True
        Me.mdlTrgDel.Show()
    End Sub
    Protected Sub DeleteTrigger(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim Result As Integer = -2
        Dim strMsg As String = ""
        Dim EID As String
        Dim FormID As Integer
        Dim TId As Integer = 0
        Try
            If Session("EID") <> Nothing Then
                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                Dim con As SqlConnection = New SqlConnection(conStr)
                Dim da As SqlDataAdapter = New SqlDataAdapter("DeleteTrigger", con)
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                TId = ViewState("Deltid")
                da.SelectCommand.Parameters.AddWithValue("@TrgID", TId)
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                Result = (Convert.ToInt32(da.SelectCommand.ExecuteScalar()))
                con.Close()
                da.Dispose()
            Else
                Result = -1
            End If
            If Result > 0 Then
                strMsg = "Trigger deleted successfully."
                EID = Convert.ToInt32(Session("EID"))
                FormID = Convert.ToInt32(ViewState("trgFORMID"))
                Dim trgDS As DataSet
                TId = 0
                trgDS = GetTriggers(TId, EID, FormID)
                BindTriggerGrid(trgDS)
                Me.Uptrigger.Update()
                'btntrgdel lblTrgDel
                btntrgdel.Visible = False
            ElseIf Result = -1 Then
                strMsg = "Sorry! Your login session has expired."
            ElseIf Result = -2 Then
            End If
            lblTrgDel.Text = "<b>" + strMsg + "</b>"
            'Return Result
        Catch ex As Exception
            strMsg = "Sorry! Your request can not be completed at the moment.<br/><br/> Error occured at server."
            lblTrgDel.Text = "<b>" + strMsg + "</b>"
        End Try
    End Sub
    Function AddUpdateTrigger(ByVal TId As Integer, ByVal EID As Integer, ByVal FormID As Integer, ByVal TriggerText As String) As Integer
        Dim Result As Integer = -2
        Dim oncreate As Integer = 0
        Dim onedit As Integer = 0
        Try
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim da As SqlDataAdapter = New SqlDataAdapter("AddUpdateTrigger", con)
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.AddWithValue("@Tid", TId)
            da.SelectCommand.Parameters.AddWithValue("@EID", EID)
            da.SelectCommand.Parameters.AddWithValue("@FormId", FormID)
            da.SelectCommand.Parameters.AddWithValue("@TriggerText", TriggerText)
            If chkTrgEdit.Checked = True Then
                onedit = 1
            End If
            If chkTrgOnCreate.Checked = True Then
                oncreate = 1
            End If
            da.SelectCommand.Parameters.AddWithValue("@onCreate", oncreate)
            da.SelectCommand.Parameters.AddWithValue("@onEdit", onedit)
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Result = (Convert.ToInt32(da.SelectCommand.ExecuteScalar()))
            con.Close()
            da.Dispose()
            Return Result
        Catch ex As Exception
            Return Result
        End Try

    End Function
    Function GetTriggers(ByVal TId As Integer, ByVal EID As Integer, ByVal FORMID As Integer) As DataSet
        Dim DsTrg As New DataSet
        Try
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim da As SqlDataAdapter = New SqlDataAdapter("getTriggrers", con)
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.AddWithValue("@TID", TId)
            da.SelectCommand.Parameters.AddWithValue("@EID", EID)
            da.SelectCommand.Parameters.AddWithValue("@FORMID", FORMID)
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.Fill(DsTrg, "tbltrg")
            con.Close()
            da.Dispose()
            Return DsTrg

        Catch ex As Exception
            Throw
        End Try

    End Function
    Public Sub BindTriggerGrid(ByVal trgDS As DataSet)
        gvTrg.DataSource = trgDS.Tables("tbltrg")
        gvTrg.DataBind()
    End Sub
#End Region

#End Region
    Protected Sub chksplttable_CheckedChanged(sender As Object, e As System.EventArgs) Handles chksplttable.CheckedChanged
        If chksplttable.Checked = True And (ViewState("txtType").ToString.ToUpper = "DATETIME" Or ViewState("txtType").ToString.ToUpper = "NUMERIC") Then
            ddlspltTable.Visible = True
            If ViewState("txtType").ToString.ToUpper = "NUMERIC" Then
                ddlSpltOprtr.Visible = True
            Else
                ddlSpltOprtr.Visible = False
            End If
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ToString()
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim od As New SqlDataAdapter("", con)
            od.SelectCommand.CommandText = "select displayname,fieldmapping from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' and fieldid<> " & ViewState("filedID") & " and datatype='" & ViewState("txtType") & "'"
            od.SelectCommand.CommandType = CommandType.Text
            Dim ds As New DataSet
            od.Fill(ds, "fldMap")
            ddlspltTable.Items.Clear()
            ddlspltTable.DataSource = ds.Tables("fldMap")
            ddlspltTable.DataTextField = "displayname"
            ddlspltTable.DataValueField = "fieldmapping"
            ddlspltTable.DataBind()
            ddlspltTable.Items.Insert(0, "Please Select")
            od.Dispose()
            con.Close()
        Else
            ddlspltTable.Visible = False
            ddlSpltOprtr.Visible = False
        End If
        updCommonProp.Update()
    End Sub

    Protected Sub btnSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnSearch.Click
        search()
        enableicon()
    End Sub

    Protected Sub search()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim odao As SqlDataAdapter

        If ddlField.SelectedValue = "Form Name" Then
            odao = New SqlDataAdapter("SELECT FormID,FormName,FormCaption,EID,FormType,FormSource,LayOutType,EventName [DocumentType],docnature, case isActive when 0 then 'InActive' else 'Active' end [isActive] FROM MMM_MST_FORMS WHERE FormName like '" & txtValue.Text & "%' and EID='" & Session("eid") & "'", con)
        ElseIf ddlField.SelectedValue = "Form Caption" Then
            odao = New SqlDataAdapter("SELECT FormID,FormName,FormCaption,EID,FormType,FormSource,LayOutType,EventName [DocumentType],docnature, case isActive when 0 then 'InActive' else 'Active' end [isActive] FROM MMM_MST_FORMS WHERE FormCaption like '" & txtValue.Text & "%' and EID='" & Session("eid") & "'", con)
        ElseIf ddlField.SelectedValue = "Form Type" Then
            odao = New SqlDataAdapter("SELECT FormID,FormName,FormCaption,EID,FormType,FormSource,LayOutType,EventName [DocumentType],docnature, case isActive when 0 then 'InActive' else 'Active' end [isActive] FROM MMM_MST_FORMS WHERE FormType like '" & txtValue.Text & "%' and EID='" & Session("eid") & "'", con)
        ElseIf ddlField.SelectedValue = "Layout Type" Then
            odao = New SqlDataAdapter("SELECT FormID,FormName,FormCaption,EID,FormType,FormSource,LayOutType,EventName [DocumentType],docnature, case isActive when 0 then 'InActive' else 'Active' end [isActive] FROM MMM_MST_FORMS WHERE LayoutType like '" & txtValue.Text & "%' and EID='" & Session("eid") & "'", con)
        ElseIf ddlField.SelectedValue = "Form Source" Then
            odao = New SqlDataAdapter("SELECT FormID,FormName,FormCaption,EID,FormType,FormSource,LayOutType,EventName [DocumentType],docnature, case isActive when 0 then 'InActive' else 'Active' end [isActive] FROM MMM_MST_FORMS WHERE FormSource like '" & txtValue.Text & "%' and EID='" & Session("eid") & "'", con)

        End If

        Dim ds As New DataSet()
        odao.Fill(ds, "data")
        gvData.DataSource = ds.Tables("data")
        gvData.DataBind()
        If gvData.Rows.Count = 0 Then
            lblMsg.Visible = True
            lblMsg.Text = "No Record Found"
        Else
            lblMsg.Visible = False
        End If
        ds.Dispose()
        odao.Dispose()
        con.Close()
    End Sub


    '''given code below for isinlineediting

    Protected Sub isinlineediting(ByVal sender As Object, ByVal e As System.EventArgs)
        gvinline.DataSource = Nothing
        gvinline.DataBind()
        Lblinlineeditmsg.Text = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            ddlcurdoc.Items.Clear()
            lastrow.Visible = False
            Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
            Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
            Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
            ViewState("grdFormid") = Formid
            da.SelectCommand.CommandText = "select FormName ,FormSource ,EventName,FORMTYPE,hasDefaultValue,InLineMathType  from MMM_MST_FORMS where FormID=" & Formid & " and isinlineediting=1"
            da.Fill(ds, "FormDetails")
            If (ds.Tables("FormDetails").Rows.Count > 0) Then
                ddlInlineEdit.SelectedIndex = 1
                ddlMatchType.SelectedValue = ds.Tables("FormDetails").Rows(0)("InLineMathType").ToString()
            End If
            da.SelectCommand.CommandText = "select FormName ,FormSource ,EventName,FORMTYPE,hasDefaultValue  from MMM_MST_FORMS where FormID=" & Formid & ""
            da.Fill(ds, "FormDetail")
            If ds.Tables("FormDetail").Rows.Count > 0 Then
                da.SelectCommand.CommandText = "Select displayname,convert(nvarchar,FIELDID)[fieldid] from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ds.Tables("FormDetail").Rows(0).Item("Formname").ToString() & "' order by displayname "
                da.Fill(ds, "fields")

                ddlcurdoc.DataSource = ds.Tables("fields")
                ddlcurdoc.DataTextField = "displayname"
                ddlcurdoc.DataValueField = "fieldid"
                ddlcurdoc.DataBind()

                ViewState("currentchild") = ds.Tables("FormDetail").Rows(0).Item("Formname").ToString()
                Call bindgrid()
                bindgridfilter()

            End If
            ddlcurdoc.Items.Insert(0, "SELECT")
            If ddlcurdoc.Items.Count = 1 Then
                Lblinlineeditmsg.Text = "Please Enable Isinline Configuration "
                Call bindgrid()
            End If
            btnForm_ModalPopupExtenderinconfig.Show()
            Me.Updpanelinconfig.Update()

        Catch ex As Exception
            Lblinlineeditmsg.Text = ex.Message.ToString()

        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try


    End Sub


    Protected Sub isinlineeditingmapping(ByVal sender As Object, ByVal e As System.EventArgs)
        gvinline.DataSource = Nothing
        gvinline.DataBind()
        Lblinlineeditmsg.Text = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            ddlcurdoc.Items.Clear()
            lastrow.Visible = False
            Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
            Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
            Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
            da.SelectCommand.CommandText = "select FormName ,FormSource ,EventName,FORMTYPE,hasDefaultValue  from MMM_MST_FORMS where FormID=" & Formid & " and isinlineediting=1"
            da.Fill(ds, "FormDetail")
            If ds.Tables("FormDetail").Rows.Count > 0 Then
                da.SelectCommand.CommandText = "Select displayname,convert(nvarchar,FIELDID)[fieldid] from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ds.Tables("FormDetail").Rows(0).Item("Formname").ToString() & "' order by displayname "
                da.Fill(ds, "fields")

                ddlcurdoc.DataSource = ds.Tables("fields")
                ddlcurdoc.DataTextField = "displayname"
                ddlcurdoc.DataValueField = "fieldid"
                ddlcurdoc.DataBind()

                ViewState("currentchild") = ds.Tables("FormDetail").Rows(0).Item("Formname").ToString()
                Call bindgrid()
                bindgridfilter()

            End If
            ddlcurdoc.Items.Insert(0, "SELECT")
            If ddlcurdoc.Items.Count = 1 Then
                Lblinlineeditmsg.Text = "Please Enable Isinline Configuration "
            End If
            btnForm_ModalPopupExtenderinconfig.Show()
            Me.Updpanelinconfig.Update()

        Catch ex As Exception
            Lblinlineeditmsg.Text = ex.Message.ToString()

        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try


    End Sub


    Protected Sub saveinlineconfig(ByVal sender As Object, ByVal e As EventArgs)

        If ddlintype.SelectedItem.Text = "SELECT" Then
            Lblinlineeditmsg.Text = "* Please select Type"
            Exit Sub
        End If

        If ddlsdoc.SelectedItem.Text = "SELECT" Then
            Lblinlineeditmsg.Text = "* Please select Source Document"
            Exit Sub
        End If
        If ddlcurdoc.SelectedItem.Text = "SELECT" Then
            Lblinlineeditmsg.Text = "* Please select Current Document Fields"
            Exit Sub
        End If

        If ddlsdocf.SelectedItem.Text = "SELECT" Then
            Lblinlineeditmsg.Text = "* Please select Source Document Fields"
            Exit Sub
        End If

        If ddlsdtype.SelectedItem.Text <> "SELECT" Then


            If ddlcdocfilter.SelectedItem.Text = "SELECT" Then
                Lblinlineeditmsg.Text = "* Please select Current Document Fields to filter"
                Exit Sub
            End If

            If ddlopfields.SelectedItem.Text = "SELECT" Then
                Lblinlineeditmsg.Text = "* Please select operator"
                Exit Sub
            End If

            If ddlsdtype.SelectedItem.Text = "STATIC" Then
                If txtsdocvalue.Text = "" Then
                    Lblinlineeditmsg.Text = "* Please write a value"
                    Exit Sub
                End If
            Else
                If ddlsdocfieldss.SelectedItem.Text = "SELECT" Then
                    Lblinlineeditmsg.Text = "* Please select source document fields to filter"
                    Exit Sub
                End If

            End If
            'Else
            '    Lblinlineeditmsg.Text = "* Please Select Filter Type"
            '    Exit Sub
        End If


        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)

        'BELOW CODE TO EVALUATE THE INLINE FILTER 
        Dim inlinefilter As String = ""
        Dim lastval As String = ""
        Dim lastname As String = ""
        If ddlsdtype.SelectedItem.Text = "STATIC" Then
            lastval = txtsdocvalue.Text.ToString()
        ElseIf ddlsdtype.SelectedItem.Text = "DYNAMIC" Then
            lastval = ddlsdocfieldss.SelectedValue
            lastname = ddlsdocfieldss.SelectedItem.Text
        End If

        'END

        'Below code to get inline mapping field and it's field id
        Dim Inlinemapping As String = ""
        Dim fid As Integer = ddlcurdoc.SelectedValue
        Dim fld As String = ddlsdocf.SelectedValue

        Dim zzs As String = String.Empty
        zzs = "Current-" & ddlcurdoc.SelectedItem.Text & "|Source:" & ddlsdocf.SelectedItem.Text
        'END

        Try
            If ddlsdtype.SelectedItem.Text <> "SELECT" Then
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.CommandText = "USP_inlineeditingconfigurationproc"
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("@inlinetype", ddlintype.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@inlinesourcedoc", ddlsdoc.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@filtertype", ddlsdtype.SelectedItem.Text.ToString())
                'da.SelectCommand.Parameters.AddWithValue("@ffirstfield", ddlsdocf.SelectedValue)
                da.SelectCommand.Parameters.AddWithValue("@ffirstfield", ddlcdocfilter.SelectedValue)
                da.SelectCommand.Parameters.AddWithValue("@ffirstdisp", ddlcdocfilter.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@foperator", ddlopfields.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@fsecondfilterfield", lastval)
                da.SelectCommand.Parameters.AddWithValue("@fsecondfilterfielddisp", lastname.ToString())
                da.SelectCommand.Parameters.AddWithValue("@inlinemapping", fld.ToString())
                da.SelectCommand.Parameters.AddWithValue("@curmappingid", Val(fid))
                da.SelectCommand.Parameters.AddWithValue("@currentform", ViewState("currentchild"))
                da.SelectCommand.Parameters.AddWithValue("@Eid", Session("eid"))
                da.SelectCommand.Parameters.AddWithValue("@inlinemappingdisplay", Trim(zzs.ToString()))
            Else
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.CommandText = "USP_inlineeditingconfigurationproc"
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("@inlinetype", ddlintype.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@inlinesourcedoc", ddlsdoc.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@filtertype", "")
                da.SelectCommand.Parameters.AddWithValue("@ffirstfield", "")
                da.SelectCommand.Parameters.AddWithValue("@ffirstdisp", "")
                da.SelectCommand.Parameters.AddWithValue("@foperator", "")
                da.SelectCommand.Parameters.AddWithValue("@fsecondfilterfield", "")
                da.SelectCommand.Parameters.AddWithValue("@fsecondfilterfielddisp", "")
                da.SelectCommand.Parameters.AddWithValue("@inlinemapping", fld.ToString())
                da.SelectCommand.Parameters.AddWithValue("@curmappingid", Val(fid))
                da.SelectCommand.Parameters.AddWithValue("@currentform", ViewState("currentchild"))
                da.SelectCommand.Parameters.AddWithValue("@Eid", Session("eid"))
                da.SelectCommand.Parameters.AddWithValue("@inlinemappingdisplay", Trim(zzs.ToString()))
            End If

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteScalar()
            Lblinlineeditmsg.Text = "InlineEditing Configuration Created Successfully."

            Call bindgrid()
            bindgridfilter()

            'gvinline.DataBind()

            Call Clearinline()

        Catch ex As Exception
            Lblinlineeditmsg.Text = ex.Message.ToString()
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Sub

    Protected Sub saveinlinemappingconfig(ByVal sender As Object, ByVal e As EventArgs)

        If ddlintype.SelectedItem.Text = "SELECT" Then
            Lblinlineeditmsg.Text = "* Please select Type"
            Exit Sub
        End If

        If ddlsdoc.SelectedItem.Text = "SELECT" Then
            Lblinlineeditmsg.Text = "* Please select Source Document"
            Exit Sub
        End If
        If ddlcurdoc.SelectedItem.Text = "SELECT" Then
            Lblinlineeditmsg.Text = "* Please select Current Document Fields"
            Exit Sub
        End If

        If ddlsdocf.SelectedItem.Text = "SELECT" Then
            Lblinlineeditmsg.Text = "* Please select Source Document Fields"
            Exit Sub
        End If
        If ddlInlineEdit.SelectedItem.Text = "SELECT" Or ddlInlineEdit.SelectedItem.Text = "IN ACTIVE" Then
            Lblinlineeditmsg.Text = "* Please select Is Inline Editing"
            Exit Sub
        End If




        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)

        Dim Inlinemapping As String = ""
        Dim fid As Integer = ddlcurdoc.SelectedValue
        Dim fld As String = ddlsdocf.SelectedValue

        da.SelectCommand.CommandText = "declare @val as char(6)select @val= inlinemapping from MMM_MST_FIELDS where documenttype='" & ViewState("currentchild") & "' and eid=" & Session("EID") & " and displayname='" & ddlcurdoc.SelectedItem.Text & "'if @val<>''  select 'TRUE'  else Select 'FALSE'"
        If con.State = ConnectionState.Closed Then
            con.Open()
        End If
        If da.SelectCommand.ExecuteScalar().ToString().ToUpper = "TRUE" Then
            Lblinlineeditmsg.Text = "Current Doc fields setting already exists"
            Exit Sub
        End If
        Dim zzs As String = String.Empty
        zzs = "Current-" & ddlcurdoc.SelectedItem.Text & "|Source:" & ddlsdocf.SelectedItem.Text
        'END

        Try

            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.CommandText = "usp_inlinemappingconfig"
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.Parameters.AddWithValue("@inlinetype", ddlintype.SelectedItem.Text.ToString())
            da.SelectCommand.Parameters.AddWithValue("@inlinesourcedoc", ddlsdoc.SelectedItem.Text.ToString())
            da.SelectCommand.Parameters.AddWithValue("@inlinemapping", fld.ToString())
            da.SelectCommand.Parameters.AddWithValue("@curmappingid", Val(fid))
            da.SelectCommand.Parameters.AddWithValue("@currentform", ViewState("currentchild"))
            da.SelectCommand.Parameters.AddWithValue("@Eid", Session("eid"))
            da.SelectCommand.Parameters.AddWithValue("@inlinemappingdisplay", Trim(zzs.ToString()))

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteScalar()
            Lblinlineeditmsg.Text = "InlineEditing Mapping Configuration Created Successfully."

            Call bindgrid()
            bindgridfilter()
            'gvinline.DataBind()

            'Call Clearinline()
            ddlcurdoc.SelectedIndex = 0
            ddlsdocf.SelectedIndex = 0

        Catch ex As Exception
            Lblinlineeditmsg.Text = ex.Message.ToString()
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
        TabContainer2.ActiveTabIndex = 0
    End Sub

    Protected Sub saveinlinefilterconfig(ByVal sender As Object, ByVal e As EventArgs)

        If ddlsdtype.SelectedItem.Text <> "SELECT" Then

            If ddlcdocfilter.SelectedItem.Text = "SELECT" Then
                Lblinlineeditmsg.Text = "* Please select Current Document Fields to filter"
                Exit Sub
            End If

            If ddlopfields.SelectedItem.Text = "SELECT" Then
                Lblinlineeditmsg.Text = "* Please select operator"
                Exit Sub
            End If

            If ddlsdtype.SelectedItem.Text = "STATIC" Then
                If txtsdocvalue.Text = "" Then
                    Lblinlineeditmsg.Text = "* Please write a value"
                    Exit Sub
                End If
            Else
                If ddlsdocfieldss.SelectedItem.Text = "SELECT" Then
                    Lblinlineeditmsg.Text = "* Please select source document fields to filter"
                    Exit Sub
                End If

            End If
            'Else
            '    Lblinlineeditmsg.Text = "* Please Select Filter Type"
            '    Exit Sub
        End If


        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)

        'BELOW CODE TO EVALUATE THE INLINE FILTER 
        Dim inlinefilter As String = ""
        Dim lastval As String = ""
        Dim lastname As String = ""
        If ddlsdtype.SelectedItem.Text = "STATIC" Then
            lastval = txtsdocvalue.Text.ToString()
        ElseIf ddlsdtype.SelectedItem.Text = "DYNAMIC" Then
            lastval = ddlsdocfieldss.SelectedValue
            lastname = ddlsdocfieldss.SelectedItem.Text
        End If

        'END

        'Below code to get inline mapping field and it's field id
        Dim Inlinemapping As String = ""
        Dim fid As Integer = 0

        da.SelectCommand.CommandText = "Select fieldid from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("currentchild") & "' and displayname ='" & ddlcdocfilter.SelectedItem.Text.ToString().Trim() & "'"
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        da.SelectCommand.ExecuteScalar()

        Dim fld As String = da.SelectCommand.ExecuteScalar()

        Dim zzs As String = String.Empty
        zzs = "Current-" & ddlcdocfilter.SelectedItem.Text & "|Source:" & ddlsdocf.SelectedItem.Text

        'END

        Try
            If ddlsdtype.SelectedItem.Text <> "SELECT" Then
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.CommandText = "usp_inlinefilteringconfig"
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("@inlinetype", ddlintype.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@inlinesourcedoc", ddlsdoc.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@filtertype", ddlsdtype.SelectedItem.Text.ToString())
                'da.SelectCommand.Parameters.AddWithValue("@ffirstfield", ddlsdocf.SelectedValue)
                da.SelectCommand.Parameters.AddWithValue("@ffirstfield", ddlcdocfilter.SelectedValue)
                da.SelectCommand.Parameters.AddWithValue("@ffirstdisp", ddlcdocfilter.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@foperator", ddlopfields.SelectedItem.Text.ToString())
                da.SelectCommand.Parameters.AddWithValue("@fsecondfilterfield", lastval)
                da.SelectCommand.Parameters.AddWithValue("@fsecondfilterfielddisp", lastname.ToString())
                'da.SelectCommand.Parameters.AddWithValue("@inlinemapping", fld.ToString())
                ' da.SelectCommand.Parameters.AddWithValue("@curmappingid", Val(fid))
                da.SelectCommand.Parameters.AddWithValue("@currentform", ViewState("currentchild"))
                da.SelectCommand.Parameters.AddWithValue("@Eid", Session("eid"))
                da.SelectCommand.Parameters.AddWithValue("@InLineMathType", ddlMatchType.SelectedValue.Trim())
                ' da.SelectCommand.Parameters.AddWithValue("@inlinemappingdisplay", Trim(zzs.ToString()))

            End If

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteScalar()
            Lblinlineeditmsg.Text = "InlineEditing Filtering Configuration Created Successfully."

            Call bindgrid()
            bindgridfilter()
            'gvinline.DataBind()

            'Call Clearinline()
            ddlsdtype.SelectedIndex = 1
            ddlsdtype_SelectedIndexChanged(ddlsdtype, New EventArgs())
            TabContainer2.ActiveTabIndex = 1
            ddlcdocfilter.SelectedIndex = 0
        Catch ex As Exception
            Lblinlineeditmsg.Text = ex.Message.ToString()
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Sub
    Protected Sub closemod()
        Clearinline()
        btnForm_ModalPopupExtenderinconfig.Hide()
    End Sub

    Protected Sub bindgrid()

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Try

            'da.SelectCommand.CommandText = "Select fo.formid[Tid],fo.inlinetype,fo.inlinesourcedoc,fo.inlinefilterdisplay,(select displayname from mmm_mst_fields where eid=" & Session("EID") & " and documenttype=fo.inlinesourcedoc and fieldmapping=f.inlinemapping)[inlinemapping]  from mmm_mst_forms fo inner join mmm_mst_fields f on fo.formname=f.documenttype where fo.eid=" & Session("EID") & " and fo.formname='" & ViewState("currentchild") & "' and f.inlinemapping is not null"
            'da.SelectCommand.CommandText = "select t.formid[Tid],t.inlinetype[Type], t.formname[FormName],t.inlinesourcedoc[Source Document], b.Val[Val] ,b.valdisp[Inline Filter] FROM mmm_mst_forms  t  CROSS APPLY ParseValuesnew(t.inlinefilter,t.inlinefilterdisplay)b where t.eid=" & Session("EID") & " and t.formname='" & ViewState("currentchild") & "'"
            'da.SelectCommand.CommandText = "select t.formid[Tid],t.inlinetype[Type], t.formname[FormName],t.inlinesourcedoc[Source Document], b.valflds  FROM mmm_mst_forms  t  CROSS APPLY ParseValuesnew26(t.inlinefilter,t.inlinefilterdisplay,t.inlinemappingdisplay)b where t.eid=" & Session("EID") & " and t.formname='" & ViewState("currentchild") & "'"
            da.SelectCommand.CommandText = "SELECT formid[Tid],inlinetype[Type], formname[FormName],inlinesourcedoc[Source Document],item  FROM mmm_mst_forms AS s  CROSS APPLY SplitStringstoday(s.inlinemappingdisplay, '~')  where eid=" & Session("EID") & " and formname='" & ViewState("currentchild") & "'"
            Dim ds As New DataSet
            da.Fill(ds, "data")
            If ds.Tables("data").Rows.Count > 0 Then
                gvinline.DataSource = ds.Tables("data")
                gvinline.DataBind()
                Session("inlinedata") = ds.Tables("data")
                ddlintype.SelectedIndex = ddlintype.Items.IndexOf(ddlintype.Items.FindByText(ds.Tables("data").Rows(0)("Type")))
                ddlintype_SelectedIndexChanged(ddlintype, New EventArgs())
                ddlsdoc.SelectedIndex = ddlsdoc.Items.IndexOf(ddlsdoc.Items.FindByText(ds.Tables("data").Rows(0)("Source Document")))
                ddlsdoc_SelectedIndexChanged(ddlsdoc, New EventArgs())
            Else
                gvinline.DataSource = Nothing
                gvinline.DataBind()
            End If
            'Me.Updpanelinconfig.Update()
        Catch ex As Exception
            Lblinlineeditmsg.Text = ex.Message
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If

        End Try

    End Sub
    Protected Sub bindgridfilter()

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Try

            'da.SelectCommand.CommandText = "Select fo.formid[Tid],fo.inlinetype,fo.inlinesourcedoc,fo.inlinefilterdisplay,(select displayname from mmm_mst_fields where eid=" & Session("EID") & " and documenttype=fo.inlinesourcedoc and fieldmapping=f.inlinemapping)[inlinemapping]  from mmm_mst_forms fo inner join mmm_mst_fields f on fo.formname=f.documenttype where fo.eid=" & Session("EID") & " and fo.formname='" & ViewState("currentchild") & "' and f.inlinemapping is not null"
            'da.SelectCommand.CommandText = "select t.formid[Tid],t.inlinetype[Type], t.formname[FormName],t.inlinesourcedoc[Source Document], b.Val[Val] ,b.valdisp[Inline Filter],t.inlinemappingdisplay  FROM mmm_mst_forms  t  CROSS APPLY ParseValuesnew(t.inlinefilter,t.inlinefilterdisplay)b where t.eid=" & Session("EID") & " and t.formname='" & ViewState("currentchild") & "'"
            'da.SelectCommand.CommandText = "select formid[Tid],inlinetype[Type], formname[FormName],inlinesourcedoc[Source Document],item FROM mmm_mst_forms AS s  CROSS APPLY SplitStringstoday(s.inlinefilterdisplay, '~')  where eid=" & Session("EID") & " and formname='" & ViewState("currentchild") & "'"
            da.SelectCommand.CommandText = "select t.formid[Tid],t.inlinetype[Type], t.formname[FormName],t.inlinesourcedoc[Source Document], b.Val[Val] ,b.valdisp[Inline Filter] FROM mmm_mst_forms  t  CROSS APPLY ParseValuesnew(t.inlinefilter,t.inlinefilterdisplay)b where t.eid=" & Session("EID") & " and t.formname='" & ViewState("currentchild") & "'"
            Dim ds As New DataSet
            da.Fill(ds, "data")
            If ds.Tables("data").Rows.Count > 0 Then

                gvinlinefilter.DataSource = ds.Tables("data")
                gvinlinefilter.DataBind()
                Session("inlinedatafilter") = ds.Tables("data")
            Else
                gvinlinefilter.DataSource = Nothing
                gvinlinefilter.DataBind()
            End If
            'Me.Updpanelinconfig.Update()
        Catch ex As Exception
            Lblinlineeditmsg.Text = ex.Message
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If

        End Try
        Updpanelinconfig.Update()
    End Sub


    Protected Sub DeleteHitinline(ByVal sender As Object, ByVal e As System.EventArgs)
        lblMsgEdit.Text = ""
        lblMsgDelFolder.ForeColor = Drawing.Color.Red
        lblMsgDelFolder.Text = "Are You Sure Want to Delete this Configuration!!"
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Tid As Integer = Convert.ToInt32(row.RowIndex)
        Dim formid As Integer = Convert.ToString(Me.gvinline.DataKeys(row.RowIndex).Value)
        ' btnActEdit.Text = "Update"
        ViewState("TID") = Tid
        ViewState("FORMID") = formid
        bindgrid()
        Me.btnDelFolder_ModalPopupExtender.Show()
        Me.updatePanelDelFolder.Update()


    End Sub
    Protected Sub DeleteHitinlinefilter(ByVal sender As Object, ByVal e As System.EventArgs)
        Label7.Text = ""
        Label7.ForeColor = Drawing.Color.Red
        Label7.Text = "Are You Sure Want to Delete this Configuration!!"
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Tid As Integer = Convert.ToInt32(row.RowIndex)
        Dim formid As Integer = Convert.ToString(Me.gvinlinefilter.DataKeys(row.RowIndex).Value)
        ' btnActEdit.Text = "Update"
        ViewState("TID") = Tid
        ViewState("FORMID") = formid
        bindgridfilter()
        Me.ModalPopupExtender2.Show()
        Me.updatePanel5.Update()


    End Sub

    Protected Sub DelFilefilter(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim dt As DataTable = Session("inlinedatafilter")
        'Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        'Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        ' Dim Tid As Integer = Convert.ToString(Me.gvinline.DataKeys(row.RowIndex).Value)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim da As New SqlDataAdapter("", con)
        Try

            For i As Integer = 0 To dt.Rows.Count - 1
                Dim lds As String = String.Empty
                Dim sdoc As String = dt.Rows(i).Item("Source Document").ToString()
                Dim form As String = dt.Rows(i).Item("FormName").ToString()
                Dim val As String = dt.Rows(i).Item("val").ToString()
                Dim disp As String = dt.Rows(i).Item("Inline Filter").ToString()
                '   Dim flds As String = dt.Rows(i).Item("valflds").ToString()

                Dim spl As String() = val.ToString.Split("-")
                If spl.Length > 0 Then
                    Dim fld As String() = spl(1).ToString.Split("|")
                    If fld.Length > 0 Then
                        lds = fld(0).ToString()
                    End If

                End If
                If ViewState("TID") = Convert.ToInt32(gvinlinefilter.Rows(i).RowIndex) Then
                    Dim cnt As Integer = gvinlinefilter.Rows.Count
                    Dim updateSql As String = ""
                    Dim UpdateCmd As New SqlCommand("", con)
                    If cnt > 1 Then

                        updateSql = "Update mmm_mst_forms set inlinefilter=replace(inlinefilter, @val, ''),inlinefilterdisplay=replace(inlinefilterdisplay, @disp, '') where Eid=@eid and formid=@formid"
                        UpdateCmd.CommandText = updateSql.ToString()
                        UpdateCmd.Parameters.AddWithValue("@val", "~" & val)
                        UpdateCmd.Parameters.AddWithValue("@disp", "~" & disp)
                        'UpdateCmd.Parameters.AddWithValue("@valflds", "~" & flds)
                        UpdateCmd.Parameters.AddWithValue("@eid", Session("EID"))
                        UpdateCmd.Parameters.AddWithValue("@formid", ViewState("FORMID"))
                        'oda.SelectCommand.CommandText = "Update mmm_mst_forms set inlinefilter=replace(inlinefilter, '" & "~" & val & "', ''),inlinefilterdisplay=replace(inlinefilterdisplay, '" & disp & "', '')  where Eid=" & Session("EID") & " and formid=" & ViewState("FORMID") & ";"
                    Else
                        updateSql = "Update mmm_mst_forms set inlinefilter=null,inlinefilterdisplay=null  where Eid=@eid and formid=@formid"
                        UpdateCmd.CommandText = updateSql.ToString()
                        UpdateCmd.Parameters.AddWithValue("@val", val)
                        UpdateCmd.Parameters.AddWithValue("@disp", disp)
                        'UpdateCmd.Parameters.AddWithValue("@valflds", "~" & flds)
                        UpdateCmd.Parameters.AddWithValue("@eid", Session("EID"))
                        UpdateCmd.Parameters.AddWithValue("@formid", ViewState("FORMID"))
                        'oda.SelectCommand.CommandText = "Update mmm_mst_forms inlinetype=null,inlinesourcedoc=null, set inlinefilter=replace(inlinefilter, '" & val & "', ''),inlinefilterdisplay=replace(inlinefilterdisplay, '" & disp & "', '')  where Eid=" & Session("EID") & " and formid=" & ViewState("FORMID") & ";"
                    End If

                    'Dim upd As String = "Update mmm_mst_fields set inlinemapping=null where fieldid=(Select fieldid from mmm_mst_fields where eid=@eid and documenttype=@doctype and inlinemapping=@lds)"
                    'Dim updatecmd2 As New SqlCommand(upd, con)
                    'updatecmd2.Parameters.AddWithValue("@val", val)
                    'updatecmd2.Parameters.AddWithValue("@doctype", ViewState("currentchild"))
                    'updatecmd2.Parameters.AddWithValue("@eid", Session("EID"))
                    'updatecmd2.Parameters.AddWithValue("@lds", lds.ToString())

                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If
                    UpdateCmd.ExecuteNonQuery()
                    'updatecmd2.ExecuteNonQuery()
                    Lblinlineeditmsg.Text = "Deleted Successfully"
                End If
            Next


            ' Clearinline()
            bindgridfilter()
            ModalPopupExtender2.Hide()
            updatePanel5.Update()
        Catch ex As Exception
            Label7.Text = ex.Message
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try

    End Sub

    Protected Sub DelFile(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim dt As DataTable = Session("inlinedata")
        'Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        'Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        ' Dim Tid As Integer = Convert.ToString(Me.gvinline.DataKeys(row.RowIndex).Value)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim da As New SqlDataAdapter("", con)
        Try

            For i As Integer = 0 To dt.Rows.Count - 1
                Dim lds As String = String.Empty
                Dim sdoc As String = dt.Rows(i).Item("Source Document").ToString()
                Dim form As String = dt.Rows(i).Item("FormName").ToString()
                'Dim val As String = dt.Rows(i).Item("val").ToString()
                'Dim disp As String = dt.Rows(i).Item("Inline Filter").ToString()
                Dim flds As String = dt.Rows(i).Item("item").ToString()

                'Dim spl As String() = val.ToString.Split("-")
                'If spl.Length > 0 Then
                '    Dim fld As String() = spl(1).ToString.Split("|")
                '    If fld.Length > 0 Then
                '        lds = fld(0).ToString()
                '    End If

                'End If
                If ViewState("TID") = Convert.ToInt32(gvinline.Rows(i).RowIndex) Then
                    Dim cnt As Integer = gvinline.Rows.Count
                    Dim updateSql As String = ""
                    Dim UpdateCmd As New SqlCommand("", con)
                    If cnt > 1 Then

                        updateSql = "Update mmm_mst_forms set inlinemappingdisplay=replace(inlinemappingdisplay, @valflds, '')  where Eid=@eid and formid=@formid"
                        UpdateCmd.CommandText = updateSql.ToString()
                        'UpdateCmd.Parameters.AddWithValue("@val", "~" & val)
                        'UpdateCmd.Parameters.AddWithValue("@disp", "~" & disp)
                        UpdateCmd.Parameters.AddWithValue("@valflds", "~" & flds)
                        UpdateCmd.Parameters.AddWithValue("@eid", Session("EID"))
                        UpdateCmd.Parameters.AddWithValue("@formid", ViewState("FORMID"))
                        'oda.SelectCommand.CommandText = "Update mmm_mst_forms set inlinefilter=replace(inlinefilter, '" & "~" & val & "', ''),inlinefilterdisplay=replace(inlinefilterdisplay, '" & disp & "', '')  where Eid=" & Session("EID") & " and formid=" & ViewState("FORMID") & ";"
                        Dim str As String() = flds.ToString().Split("|")
                        Dim str1 As String() = str(0).ToString().Split("-")
                        lds = str1(1).ToString()
                    Else
                        updateSql = "Update mmm_mst_forms set  inlinemappingdisplay=null  where Eid=@eid and formid=@formid"
                        UpdateCmd.CommandText = updateSql.ToString()
                        'UpdateCmd.Parameters.AddWithValue("@val", val)
                        'UpdateCmd.Parameters.AddWithValue("@disp", disp)
                        UpdateCmd.Parameters.AddWithValue("@valflds", "~" & flds)
                        UpdateCmd.Parameters.AddWithValue("@eid", Session("EID"))
                        UpdateCmd.Parameters.AddWithValue("@formid", ViewState("FORMID"))
                        'oda.SelectCommand.CommandText = "Update mmm_mst_forms inlinetype=null,inlinesourcedoc=null, set inlinefilter=replace(inlinefilter, '" & val & "', ''),inlinefilterdisplay=replace(inlinefilterdisplay, '" & disp & "', '')  where Eid=" & Session("EID") & " and formid=" & ViewState("FORMID") & ";"
                        Dim str As String() = flds.ToString().Split("|")
                        Dim str1 As String() = str(0).ToString().Split("-")
                        lds = str1(1).ToString()
                    End If

                    Dim upd As String = "Update mmm_mst_fields set inlinemapping=null where fieldid=(Select fieldid from mmm_mst_fields where eid=@eid and documenttype=@doctype and displayname=@lds)"
                    Dim updatecmd2 As New SqlCommand(upd, con)
                    'updatecmd2.Parameters.AddWithValue("@val", val)
                    updatecmd2.Parameters.AddWithValue("@doctype", ViewState("currentchild"))
                    updatecmd2.Parameters.AddWithValue("@eid", Session("EID"))
                    updatecmd2.Parameters.AddWithValue("@lds", lds.ToString())

                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If
                    UpdateCmd.ExecuteNonQuery()
                    updatecmd2.ExecuteNonQuery()
                    Lblinlineeditmsg.Text = "Deleted Successfully"
                End If
            Next


            ' Clearinline()
            bindgrid()
            btnDelFolder_ModalPopupExtender.Hide()
            Updpanelinconfig.Update()
        Catch ex As Exception
            Lblinlineeditmsg.Text = ex.Message
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try

    End Sub

    Protected Sub Clearinline()
        ddlintype.SelectedIndex = 0
        ddlsdoc.Items.Clear()
        ddlcurdoc.SelectedIndex = 0
        ddlsdocf.Items.Clear()
        ddlsdtype.SelectedIndex = 0
        ddlopfields.SelectedIndex = 0
        lastrow.Visible = False
        txtsdocvalue.Text = ""
    End Sub


    Protected Sub enableicon()

        For i As Integer = 0 To gvData.Rows.Count - 1
            Dim imgbt As ImageButton = DirectCast(gvData.Rows(i).FindControl("btnisinline"), ImageButton)
            Dim imgConfig As ImageButton = DirectCast(gvData.Rows(i).FindControl("btnshowexisting"), ImageButton)
            If gvData.Rows(i).Cells(4).Text.ToString().Trim = "DETAIL FORM" Then
                imgbt.Visible = True
                imgConfig.Visible = False
            Else

                'ElseIf gvData.Rows(i).Cells(3).Text.ToString().Trim = "DOCUMENT" And gvData.Rows(i).Cells(4).Text.ToString().Trim = "MENU DRIVEN" Then
                '    imgConfig.Visible = True
            End If
        Next
    End Sub


    Protected Sub ddlintype_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlintype.SelectedIndexChanged
        Try
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim Ds As New DataSet
            Dim dt As New DataTable
            If ddlintype.SelectedIndex <> 0 Then
                da.SelectCommand.CommandText = "select isnull(inlinesourcedoc,'') as inlinesourcedoc,isnull(inlinetype,'') as inlinetype,isnull(inlinemappingdisplay,'') as inlinemappingdisplay,isnull(inlinefilterdisplay,'') as inlinefilterdisplay from mmm_mst_forms where  formid='" & Convert.ToInt32(ViewState("grdFormid")) & "' and eid=" & Session("EID")
                'If con.State = ConnectionState.Closed Then
                '    con.Open()
                'End If
                da.Fill(dt)
                If dt.Rows.Count > 0 Then
                    If Convert.ToString(dt.Rows(0)("inlinemappingdisplay")) = String.Empty And Convert.ToString(dt.Rows(0)("inlinefilterdisplay")) = String.Empty Then
                        If ddlintype.SelectedItem.Text = "MASTER" Then
                            da.SelectCommand.CommandText = "SELECT FORMID,FORMNAME FROM MMM_MST_FORMS WHERE EID=" & Session("EID") & " AND FORMTYPE='Master' and formsource='MENU DRIVEN' order by FormName"
                            da.Fill(Ds, "FORM")
                            ddlsdoc.Items.Clear()
                            ddlsdoc.DataSource = Ds.Tables("FORM")
                            ddlsdoc.DataTextField = "FORMNAME"
                            ddlsdoc.DataValueField = "FORMID"
                            ddlsdoc.DataBind()
                            ddlsdoc.Items.Insert(0, "SELECT")
                        ElseIf ddlintype.SelectedItem.Text = "DETAIL FORM" Then
                            da.SelectCommand.CommandText = "SELECT FORMID,FORMNAME FROM MMM_MST_FORMS WHERE EID=" & Session("EID") & " AND FORMSOURCE='Detail Form' and formid not in(" & Convert.ToInt32(ViewState("grdFormid")) & ") order by FormName "
                            da.Fill(Ds, "FORM")
                            ddlsdoc.Items.Clear()
                            ddlsdoc.DataSource = Ds.Tables("FORM")
                            ddlsdoc.DataTextField = "FORMNAME"
                            ddlsdoc.DataValueField = "FORMID"
                            ddlsdoc.DataBind()
                            ddlsdoc.Items.Insert(0, "SELECT")
                        ElseIf ddlintype.SelectedItem.Text = "DOCUMENT" Then
                            da.SelectCommand.CommandText = "SELECT FORMID,FORMNAME FROM MMM_MST_FORMS WHERE EID=" & Session("EID") & " AND FORMTYPE='DOCUMENT' and formsource='MENU DRIVEN' order by FormName "
                            da.Fill(Ds, "FORM")
                            ddlsdoc.Items.Clear()
                            ddlsdoc.DataSource = Ds.Tables("FORM")
                            ddlsdoc.DataTextField = "FORMNAME"
                            ddlsdoc.DataValueField = "FORMID"
                            ddlsdoc.DataBind()
                            ddlsdoc.Items.Insert(0, "SELECT")
                        Else
                            Lblinlineeditmsg.Text = "* Please select Type!"
                            Exit Sub
                        End If
                    Else
                        da.SelectCommand.CommandText = "select isnull(inlinetype,'') from mmm_mst_forms where formid=" & Convert.ToInt32(ViewState("grdFormid")) & " and eid=" & Session("EID") & ""
                        If con.State = ConnectionState.Closed Then
                            con.Open()
                        End If
                        Dim type As String = da.SelectCommand.ExecuteScalar()
                        If type.ToString() <> String.Empty Then
                            If type.ToString().ToUpper <> ddlintype.SelectedItem.Text.ToString().ToUpper Then
                                ddlintype.SelectedIndex = ddlintype.Items.IndexOf(ddlintype.Items.FindByText(type))
                                ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('Please remove all Mapping Fields and Filtering depedency on this target document to change Type');", True)
                            Else
                            End If
                        End If
                        If ddlintype.SelectedItem.Text = "MASTER" Then
                            da.SelectCommand.CommandText = "SELECT FORMID,FORMNAME FROM MMM_MST_FORMS WHERE EID=" & Session("EID") & " AND FORMTYPE='Master' and formsource='MENU DRIVEN' order by FormName"
                            da.Fill(Ds, "FORM")
                            ddlsdoc.Items.Clear()
                            ddlsdoc.DataSource = Ds.Tables("FORM")
                            ddlsdoc.DataTextField = "FORMNAME"
                            ddlsdoc.DataValueField = "FORMID"
                            ddlsdoc.DataBind()
                            ddlsdoc.Items.Insert(0, "SELECT")
                        ElseIf ddlintype.SelectedItem.Text = "DETAIL FORM" Then
                            da.SelectCommand.CommandText = "SELECT FORMID,FORMNAME FROM MMM_MST_FORMS WHERE EID=" & Session("EID") & " AND FORMSOURCE='Detail Form' and formid not in(" & Convert.ToInt32(ViewState("grdFormid")) & ") order by FormName "
                            da.Fill(Ds, "FORM")
                            ddlsdoc.Items.Clear()
                            ddlsdoc.DataSource = Ds.Tables("FORM")
                            ddlsdoc.DataTextField = "FORMNAME"
                            ddlsdoc.DataValueField = "FORMID"
                            ddlsdoc.DataBind()
                            ddlsdoc.Items.Insert(0, "SELECT")
                        ElseIf ddlintype.SelectedItem.Text = "DOCUMENT" Then
                            da.SelectCommand.CommandText = "SELECT FORMID,FORMNAME FROM MMM_MST_FORMS WHERE EID=" & Session("EID") & " AND FORMTYPE='DOCUMENT' and formsource='MENU DRIVEN' order by FormName "
                            da.Fill(Ds, "FORM")
                            ddlsdoc.Items.Clear()
                            ddlsdoc.DataSource = Ds.Tables("FORM")
                            ddlsdoc.DataTextField = "FORMNAME"
                            ddlsdoc.DataValueField = "FORMID"
                            ddlsdoc.DataBind()
                            ddlsdoc.Items.Insert(0, "SELECT")
                        Else
                            Lblinlineeditmsg.Text = "* Please select Type!"
                            Exit Sub
                        End If
                    End If
                End If
                'If Convert.ToString(da.SelectCommand.ExecuteScalar) = "TRUE" Then

                'Else
                '    da.SelectCommand.CommandText = "select isnull(inlinetype,'') from mmm_mst_forms where formid=" & Convert.ToInt32(ViewState("grdFormid")) & " and eid=" & Session("EID") & ""
                '    If con.State = ConnectionState.Closed Then
                '        con.Open()
                '    End If

                '    ddlintype.SelectedIndex = ddlintype.Items.IndexOf(ddlintype.Items.FindByText(da.SelectCommand.ExecuteScalar()))
                '    ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('Please remove all Mapping Fields and Filtering depedency on this target document to change Type');", True)
                'End If
            Else
                ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('Please Select Document Type');", True)
            End If


        Catch ex As Exception
        End Try

    End Sub

    Protected Sub ddlsdoc_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlsdoc.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim Ds As New DataSet
        Try
            da.SelectCommand.CommandText = "Select displayname,Fieldmapping from MMM_MST_Fields where eid=" & Session("EID") & " and documenttype='" & ddlsdoc.SelectedItem.Text & "' order by displayname;select isnull(inlinesourcedoc,'') as inlinesourcedoc,isnull(inlinetype,'') as inlinetype,isnull(inlinemappingdisplay,'') as inlinemappingdisplay,isnull(inlinefilterdisplay,'') as inlinefilterdisplay from mmm_mst_forms where  formid='" & Convert.ToInt32(ViewState("grdFormid")) & "' and eid=" & Session("EID")
            da.Fill(Ds, "fields")
            If Ds.Tables("fields1").Rows.Count > 0 Then
                If Convert.ToString(Ds.Tables("fields1").Rows(0)("inlinemappingdisplay")) = String.Empty And Convert.ToString(Ds.Tables("fields1").Rows(0)("inlinefilterdisplay")) = String.Empty Then

                    ddlsdocf.Items.Clear()
                    If Ds.Tables("fields").Rows.Count > 0 Then
                        ddlsdocf.DataSource = Ds.Tables("fields")
                        ddlsdocf.DataTextField = "displayname"
                        ddlsdocf.DataValueField = "Fieldmapping"
                        ddlsdocf.DataBind()
                        ddlsdocf.Items.Insert(0, "SELECT")
                        ViewState("sdocfilter") = Ds.Tables("fields")

                    End If
                ElseIf Convert.ToString(Ds.Tables("fields1").Rows(0)("inlinesourcedoc")) = String.Empty Then
                    ddlsdocf.Items.Clear()
                    If Ds.Tables("fields").Rows.Count > 0 Then
                        ddlsdocf.DataSource = Ds.Tables("fields")
                        ddlsdocf.DataTextField = "displayname"
                        ddlsdocf.DataValueField = "Fieldmapping"
                        ddlsdocf.DataBind()
                        ddlsdocf.Items.Insert(0, "SELECT")
                        ViewState("sdocfilter") = Ds.Tables("fields")

                    End If
                Else
                    Dim sourcedoc As String = Convert.ToString(Ds.Tables("fields1").Rows(0)("inlinesourcedoc"))
                    If sourcedoc.ToString().ToUpper = ddlsdoc.SelectedItem.Text.ToUpper Then
                        ddlsdocf.Items.Clear()
                        If Ds.Tables("fields").Rows.Count > 0 Then
                            ddlsdocf.DataSource = Ds.Tables("fields")
                            ddlsdocf.DataTextField = "displayname"
                            ddlsdocf.DataValueField = "Fieldmapping"
                            ddlsdocf.DataBind()
                            ddlsdocf.Items.Insert(0, "SELECT")
                            ViewState("sdocfilter") = Ds.Tables("fields")

                        End If
                    ElseIf Convert.ToString(Ds.Tables("fields1").Rows(0)("inlinesourcedoc")) = String.Empty Then
                        ddlsdocf.Items.Clear()
                        If Ds.Tables("fields").Rows.Count > 0 Then
                            ddlsdocf.DataSource = Ds.Tables("fields")
                            ddlsdocf.DataTextField = "displayname"
                            ddlsdocf.DataValueField = "Fieldmapping"
                            ddlsdocf.DataBind()
                            ddlsdocf.Items.Insert(0, "SELECT")
                            ViewState("sdocfilter") = Ds.Tables("fields")

                        End If
                    Else
                        ddlsdoc.SelectedIndex = ddlsdoc.Items.IndexOf(ddlsdoc.Items.FindByText(Convert.ToString(sourcedoc)))
                        ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('Please Remove all mapping Fields and filter fields to change Source Document');", True)
                    End If
                End If

                'If Convert.ToString(Ds.Tables("fields1").Rows(0)(0)) <> String.Empty Then
                '    If ddlsdoc.SelectedItem.Text.ToUpper <> Convert.ToString(Ds.Tables("fields1").Rows(0)(0)).ToString().ToUpper Then

                '        Return
                '    End If
                'Else

                'End If
            End If


        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If

        End Try


    End Sub

    Protected Sub ddlsdtype_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlsdtype.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        If ddlsdtype.SelectedItem.Text = "STATIC" Then
            lastrow.Visible = True
            txtsdocvalue.Visible = True
            ddlsdocfieldss.Visible = False
            Label8.Text = "Source Doc Fields"
            ddlcdocfilter.Items.Clear()
            ddlcdocfilter.DataSource = ViewState("sdocfilter")
            ddlcdocfilter.DataTextField = "displayname"
            ddlcdocfilter.DataValueField = "Fieldmapping"
            ddlcdocfilter.DataBind()
            ddlcdocfilter.Items.Insert(0, "SELECT")
        ElseIf ddlsdtype.SelectedItem.Text = "DYNAMIC" Then
            Try
                Label8.Text = "Parent Field"
                lastrow.Visible = True
                ddlsdocfieldss.Visible = True
                txtsdocvalue.Visible = False

                da.SelectCommand.CommandText = "Select * from mmm_mst_fields where eid=" & Session("EID") & " and DocumentType= (select  Documenttype from MMM_MST_FIELDS where eid=" & Session("EID") & " and dropdown='" & ViewState("currentchild") & "') order by displayname"
                da.Fill(ds, "fields")
                ddlsdocfieldss.Items.Clear()
                ddlsdocfieldss.DataSource = ds.Tables("fields")
                ddlsdocfieldss.DataTextField = "displayname"
                ddlsdocfieldss.DataValueField = "FIELDID"
                ddlsdocfieldss.DataBind()
                ddlsdocfieldss.Items.Insert(0, "SELECT")



                ddlcdocfilter.Items.Clear()
                ddlcdocfilter.DataSource = ViewState("sdocfilter")
                ddlcdocfilter.DataTextField = "displayname"
                ddlcdocfilter.DataValueField = "Fieldmapping"
                ddlcdocfilter.DataBind()
                ddlcdocfilter.Items.Insert(0, "SELECT")


            Catch ex As Exception
                Lblinlineeditmsg.Text = ex.Message.ToString()
            Finally
                If Not con Is Nothing Then
                    con.Close()
                    con.Dispose()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try
        Else
            lastrow.Visible = False
        End If

    End Sub

    ''below given code is for unique key functionality
    '' prev 
    'Protected Sub Hitukey(ByVal sender As Object, ByVal e As System.EventArgs)
    '    lblmsgukey.Text = String.Empty
    '    txtuk.Text = String.Empty
    '    txtSorting.Text = String.Empty
    '    lblmsgSorting.Text = String.Empty 
    '    Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
    '    Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
    '    Dim Tid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
    '    btnActEditukey.Text = "Update"
    '    ViewState("TID") = Tid

    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As New SqlConnection(conStr)
    '    Dim da As New SqlDataAdapter("Select * from mmm_mst_forms where eid=" & Session("EID") & " and formsource <>'action driven' and formid=" & Tid & "", con)
    '    Dim ds As New DataSet
    '    da.Fill(ds, "Edit")

    '    If ds.Tables("Edit").Rows.Count > 0 Then
    '        lblfn.Text = ds.Tables("Edit").Rows(0).Item("FormName").ToString()
    '        lblfnSorting.Text = ds.Tables("Edit").Rows(0).Item("FormName").ToString()
    '        txtexchars.Text = ds.Tables("Edit").Rows(0).Item("UniqueKeys_ExChars").ToString()
    '        ViewState("uval") = ds.Tables("Edit").Rows(0).Item("UniqueKeys").ToString()
    '        bindchk()
    '        If Convert.ToString(ds.Tables("Edit").Rows(0).Item("UniqueKeys")).Length > 0 Then
    '            Dim ukey As String = Convert.ToString(ds.Tables("Edit").Rows(0).Item("UniqueKeys")).ToString()
    '            If ukey.Contains(",") Then
    '                Dim str As String() = Convert.ToString(ds.Tables("Edit").Rows(0).Item("UniqueKeys")).Split(",")
    '                Dim a As String = ""
    '                For i As Integer = 0 To str.Length - 1
    '                    a = a & "'" & str(i).ToString & "',"
    '                Next
    '                a = a.Remove(a.Length - 1)
    '                ' da.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ")"
    '                da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
    '                da.Fill(ds, "val")
    '                If ds.Tables("val").Rows.Count > 0 Then
    '                    txtuk.Text = ds.Tables("val").Rows(0).Item("displayname").ToString()
    '                    Dim stt As String() = Convert.ToString(ds.Tables("val").Rows(0).Item("displayname")).Split(",")
    '                    If stt.Length > 0 Then
    '                        'Dim StrList As List(Of [String]) = New List(Of String)()
    '                        For i As Integer = 0 To chkflds.Items.Count - 1
    '                            For j As Integer = 0 To stt.Length - 1
    '                                If stt(j).ToString = chkflds.Items(i).Text.ToString() Then
    '                                    chkflds.Items(i).Selected = True
    '                                    Exit For
    '                                End If
    '                            Next
    '                        Next
    '                    End If
    '                End If
    '            Else
    '                da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in ('" & ukey.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in ('" & ukey.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
    '                da.Fill(ds, "val")
    '                If ds.Tables("val").Rows.Count > 0 Then
    '                    txtuk.Text = Convert.ToString(ds.Tables("val").Rows(0).Item("displayname"))
    '                    Dim stt As String = Convert.ToString(ds.Tables("val").Rows(0).Item("displayname"))
    '                    If stt.Length > 0 Then
    '                        For i As Integer = 0 To chkflds.Items.Count - 1
    '                            If stt.ToString.ToUpper() = chkflds.Items(i).Text.ToString.ToUpper() Then
    '                                chkflds.Items(i).Selected = True
    '                                Exit For
    '                            End If
    '                        Next
    '                    End If
    '                End If

    '            End If
    '        End If
    '        If Convert.ToString(ds.Tables("Edit").Rows(0).Item("SortingFields")).Length > 0 Then
    '            Dim sortingfields As String = Convert.ToString(ds.Tables("Edit").Rows(0).Item("SortingFields")).ToString()
    '            If sortingfields.Contains(",") Then
    '                Dim str As String() = Convert.ToString(sortingfields).Split(",")
    '                Dim a As String = ""
    '                For i As Integer = 0 To str.Length - 1
    '                    a = a & "'" & str(i).ToString & "',"
    '                Next
    '                a = a.Remove(a.Length - 1)
    '                ' da.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ")"
    '                da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
    '                da.Fill(ds, "sort")
    '                If ds.Tables("sort").Rows.Count > 0 Then
    '                    txtSorting.Text = ds.Tables("sort").Rows(0).Item("displayname").ToString()
    '                    Dim stt As String() = Convert.ToString(ds.Tables("sort").Rows(0).Item("displayname")).Split(",")
    '                    If stt.Length > 0 Then
    '                        For i As Integer = 0 To chkfldsorting.Items.Count - 1
    '                            For j As Integer = 0 To stt.Length - 1
    '                                If stt(j).ToString = chkfldsorting.Items(i).Text.ToString() Then
    '                                    chkfldsorting.Items(i).Selected = True
    '                                    Exit For
    '                                End If
    '                            Next
    '                        Next
    '                    End If
    '                End If
    '            Else
    '                da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in ('" & sortingfields.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in ('" & sortingfields.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
    '                da.Fill(ds, "sort")
    '                If ds.Tables("sort").Rows.Count > 0 Then
    '                    txtSorting.Text = Convert.ToString(ds.Tables("sort").Rows(0).Item("displayname"))
    '                    Dim stt As String = Convert.ToString(ds.Tables("sort").Rows(0).Item("displayname"))
    '                    If stt.Length > 0 Then
    '                        For i As Integer = 0 To chkfldsorting.Items.Count - 1
    '                            If stt.ToString.ToUpper() = chkfldsorting.Items(i).Text.ToString().ToUpper() Then
    '                                chkfldsorting.Items(i).Selected = True
    '                                Exit For
    '                            End If
    '                        Next
    '                    End If
    '                End If
    '            End If

    '        End If
    '    End If

    '    Me.Updpanelukey.Update()
    '    Me.btnForm_ModalPopupExtenderuKEY.Show()

    'End Sub

    'Updated for Primary Key by Mayank 02-Feb-2015
    Protected Sub Hitukey(ByVal sender As Object, ByVal e As System.EventArgs)
        lblmsgukey.Text = String.Empty
        txtuk.Text = String.Empty
        txtSorting.Text = String.Empty
        lblmsgSorting.Text = String.Empty
        lblmsgPrimaryKey.Text = String.Empty
        txtPrimaryKey.Text = String.Empty
        chkDocID.Checked = False
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Tid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        btnActEditukey.Text = "Update"
        ViewState("TID") = Tid

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("Select * from mmm_mst_forms where eid=" & Session("EID") & " and formid=" & Tid & "", con)
        Dim ds As New DataSet
        da.Fill(ds, "Edit")

        If ds.Tables("Edit").Rows.Count > 0 Then
            lblfn.Text = ds.Tables("Edit").Rows(0).Item("FormName").ToString()
            lblfnSorting.Text = ds.Tables("Edit").Rows(0).Item("FormName").ToString()
            lblfnPrimary.Text = ds.Tables("Edit").Rows(0).Item("FormName").ToString() 'Added by Mayank for Primary key'
            txtexchars.Text = ds.Tables("Edit").Rows(0).Item("UniqueKeys_ExChars").ToString()
            ViewState("uval") = ds.Tables("Edit").Rows(0).Item("UniqueKeys").ToString()
            ViewState("formNU") = ds.Tables("Edit").Rows(0).Item("FormName").ToString()
            ViewState("Fsource") = ds.Tables("Edit").Rows(0).Item("FormSource").ToString()

            bindchk()
            If Convert.ToString(ds.Tables("Edit").Rows(0).Item("UniqueKeys")).Length > 0 Then
                Dim ukey As String = Convert.ToString(ds.Tables("Edit").Rows(0).Item("UniqueKeys")).ToString()
                If ukey.Contains(",") Then
                    Dim str As String() = Convert.ToString(ds.Tables("Edit").Rows(0).Item("UniqueKeys")).Split(",")
                    Dim a As String = ""
                    For i As Integer = 0 To str.Length - 1
                        a = a & "'" & str(i).ToString & "',"
                    Next
                    a = a.Remove(a.Length - 1)
                    ' da.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ")"
                    da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
                    da.Fill(ds, "val")
                    If ds.Tables("val").Rows.Count > 0 Then
                        txtuk.Text = ds.Tables("val").Rows(0).Item("displayname").ToString()
                        Dim stt As String() = Convert.ToString(ds.Tables("val").Rows(0).Item("displayname")).Split(",")
                        If stt.Length > 0 Then
                            'Dim StrList As List(Of [String]) = New List(Of String)()
                            For i As Integer = 0 To chkflds.Items.Count - 1
                                For j As Integer = 0 To stt.Length - 1
                                    If stt(j).ToString = chkflds.Items(i).Text.ToString() Then
                                        chkflds.Items(i).Selected = True
                                        Exit For
                                    End If
                                Next
                            Next
                        End If
                    End If
                Else
                    da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in ('" & ukey.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in ('" & ukey.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
                    da.Fill(ds, "val")
                    If ds.Tables("val").Rows.Count > 0 Then
                        txtuk.Text = Convert.ToString(ds.Tables("val").Rows(0).Item("displayname"))
                        Dim stt As String = Convert.ToString(ds.Tables("val").Rows(0).Item("displayname"))
                        If stt.Length > 0 Then
                            For i As Integer = 0 To chkflds.Items.Count - 1
                                If stt.ToString.ToUpper() = chkflds.Items(i).Text.ToString.ToUpper() Then
                                    chkflds.Items(i).Selected = True
                                    Exit For
                                End If
                            Next
                        End If
                    End If

                End If
            End If
            If Convert.ToString(ds.Tables("Edit").Rows(0).Item("SortingFields")).Length > 0 Then
                Dim sortingfields As String = Convert.ToString(ds.Tables("Edit").Rows(0).Item("SortingFields")).ToString()
                If sortingfields.Contains(",") Then
                    Dim str As String() = Convert.ToString(sortingfields).Split(",")
                    Dim a As String = ""
                    For i As Integer = 0 To str.Length - 1
                        a = a & "'" & str(i).ToString & "',"
                    Next
                    a = a.Remove(a.Length - 1)
                    ' da.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ")"
                    da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
                    da.Fill(ds, "sort")
                    If ds.Tables("sort").Rows.Count > 0 Then
                        txtSorting.Text = ds.Tables("sort").Rows(0).Item("displayname").ToString()
                        Dim stt As String() = Convert.ToString(ds.Tables("sort").Rows(0).Item("displayname")).Split(",")
                        If stt.Length > 0 Then
                            For i As Integer = 0 To chkfldsorting.Items.Count - 1
                                For j As Integer = 0 To stt.Length - 1
                                    If stt(j).ToString = chkfldsorting.Items(i).Text.ToString() Then
                                        chkfldsorting.Items(i).Selected = True
                                        Exit For
                                    End If
                                Next
                            Next
                        End If
                    End If
                Else
                    da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in ('" & sortingfields.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnSorting.Text & "' and fieldmapping in ('" & sortingfields.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
                    da.Fill(ds, "sort")
                    If ds.Tables("sort").Rows.Count > 0 Then
                        txtSorting.Text = Convert.ToString(ds.Tables("sort").Rows(0).Item("displayname"))
                        Dim stt As String = Convert.ToString(ds.Tables("sort").Rows(0).Item("displayname"))
                        If stt.Length > 0 Then
                            For i As Integer = 0 To chkfldsorting.Items.Count - 1
                                If stt.ToString.ToUpper() = chkfldsorting.Items(i).Text.ToString().ToUpper() Then
                                    chkfldsorting.Items(i).Selected = True
                                    Exit For
                                End If
                            Next
                        End If
                    End If
                End If

            End If
            'Added For Primary key by Mayank 
            If Convert.ToString(ds.Tables("Edit").Rows(0).Item("Primarykey")).Length > 0 Then
                Dim primafields As String = Convert.ToString(ds.Tables("Edit").Rows(0).Item("Primarykey")).ToString()
                If primafields.Contains(",") Then
                    Dim str As String() = Convert.ToString(primafields).Split(",")
                    Dim a As String = ""
                    For i As Integer = 0 To str.Length - 1
                        a = a & "'" & str(i).ToString & "',"
                    Next
                    a = a.Remove(a.Length - 1)
                    ' da.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & lblfn.Text & "' and fieldmapping in (" & a.ToString() & ")"
                    da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnPrimary.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnPrimary.Text & "' and fieldmapping in (" & a.ToString() & ") ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
                    da.Fill(ds, "Primary")
                    If ds.Tables("Primary").Rows.Count > 0 Then
                        txtPrimaryKey.Text = ds.Tables("Primary").Rows(0).Item("displayname").ToString()
                        Dim stt As String() = Convert.ToString(ds.Tables("Primary").Rows(0).Item("displayname")).Split(",")
                        If stt.Length > 0 Then
                            For i As Integer = 0 To chkfldPrimarykey.Items.Count - 1
                                For j As Integer = 0 To stt.Length - 1
                                    If stt(j).ToString = chkfldPrimarykey.Items(i).Text.ToString() Then
                                        chkfldPrimarykey.Items(i).Selected = True
                                        Exit For
                                    End If
                                Next
                            Next
                        End If
                    End If
                Else
                    If (Convert.ToString(ds.Tables("Edit").Rows(0).Item("Primarykey")) = "DocID") Then
                        chkDocID.Checked = True
                        txtPrimaryKey.Text = "DocID"
                        chkDocID_CheckedChanged(chkDocID, New EventArgs())
                    Else
                        da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + s.fieldmapping FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnPrimary.Text & "' and fieldmapping in ('" & primafields.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS fieldmapping,SUBSTRING((SELECT ',' + s.displayname FROM mmm_mst_fields s where eid=" & Session("EID") & " and documenttype='" & lblfnPrimary.Text & "' and fieldmapping in ('" & primafields.ToString() & "') ORDER BY displayName FOR XML PATH('')),2,200000) AS displayname"
                        da.Fill(ds, "Primary")
                        If ds.Tables("Primary").Rows.Count > 0 Then
                            txtPrimaryKey.Text = Convert.ToString(ds.Tables("Primary").Rows(0).Item("displayname"))
                            Dim stt As String = Convert.ToString(ds.Tables("Primary").Rows(0).Item("displayname"))
                            If stt.Length > 0 Then
                                For i As Integer = 0 To chkfldPrimarykey.Items.Count - 1
                                    If stt.ToString.ToUpper() = chkfldPrimarykey.Items(i).Text.ToString().ToUpper() Then
                                        chkfldPrimarykey.Items(i).Selected = True
                                        Exit For
                                    End If
                                Next
                            End If
                        End If
                    End If

                End If

            End If
        End If
        If (chkDocID.Checked = False) Then
            chkfldPrimarykey_SelectedIndexedChanged(chkfldPrimarykey, New EventArgs())
        End If
        chkflds_SelectedIndexChanged(chkflds, New EventArgs())
        chkfldsorting_SelectedIndexChanged(chkfldsorting, New EventArgs())
        Me.Updpanelukey.Update()
        Me.btnForm_ModalPopupExtenderuKEY.Show()
    End Sub



    Protected Sub bindchk()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            da.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & Trim(lblfn.Text) & "' order by displayname"
            da.Fill(ds, "data")
            chkflds.DataSource = ds.Tables("data")
            chkflds.DataTextField = "displayname"
            chkflds.DataValueField = "fieldmapping"
            chkflds.DataBind()

            chkfldsorting.DataSource = ds.Tables("data")
            chkfldsorting.DataTextField = "displayname"
            chkfldsorting.DataValueField = "fieldmapping"
            chkfldsorting.DataBind()
            'Added for Primary key By Mayank
            chkfldPrimarykey.DataSource = ds.Tables("data")
            chkfldPrimarykey.DataTextField = "displayname"
            chkfldPrimarykey.DataValueField = "fieldmapping"
            chkfldPrimarykey.DataBind()

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If

        End Try



    End Sub





    '' prev
    'Protected Sub chkflds_SelectedIndexChanged(sender As Object, e As EventArgs) Handles chkflds.SelectedIndexChanged
    '    Dim YrStrListtext As List(Of [String]) = New List(Of String)()
    '    Dim YrStrListVal As List(Of [String]) = New List(Of String)()
    '    lblmsgukey.Visible = False
    '    For Each item As ListItem In chkflds.Items
    '        If item.Selected Then                'Shalini
    '            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '            Dim con As New SqlConnection(conStr)
    '            Dim da As New SqlDataAdapter("", con)
    '            Dim ds As New DataSet
    '            Dim s As String = item.Text
    '            da.SelectCommand.CommandText = "Select displayname,fieldmapping,isrequired from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & Trim(lblfn.Text) & "' and displayname='" & s & "' order by displayname"
    '            da.Fill(ds, "req")
    '            Dim text As Integer = ds.Tables("req").Rows(0).Item("isrequired")
    '            If text = 0 Then
    '                lblmsgukey.Visible = True
    '                lblmsgukey.Text = "Field Should be Mandatory for addition in Unique List"
    '                item.Selected = False
    '                Exit For
    '            Else
    '                YrStrListVal.Add(item.Value)
    '                YrStrListtext.Add(item.Text)
    '                'lblmsgukey.Visible = False
    '            End If
    '        Else
    '        End If
    '    Next
    '    Dim YrStrval As [String] = [String].Join(",", YrStrListVal.ToArray())
    '    Dim YrStrtext As [String] = [String].Join(",", YrStrListtext.ToArray())

    '    txtuk.Text = YrStrtext.ToString()
    '    ViewState("uval") = YrStrval.ToString()
    '    'lblmsgukey.Visible = False

    'End Sub

    Protected Sub chkflds_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkflds.SelectedIndexChanged
        Dim YrStrListtext As List(Of [String]) = New List(Of String)()
        Dim YrStrListVal As List(Of [String]) = New List(Of String)()
        lblmsgukey.Text = String.Empty
        Dim irqr As Integer = 0
        Dim iact As Integer = 0
        Dim ftype As String = String.Empty

        For Each item As ListItem In chkflds.Items
            If item.Selected Then

                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                Dim con As New SqlConnection(conStr)
                Dim da As New SqlDataAdapter("", con)
                Dim ds As New DataSet
                da.SelectCommand.CommandType = CommandType.Text
                da.SelectCommand.CommandText = "Select * from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("formNU") & "' and fieldmapping='" & item.Value & "'"
                da.Fill(ds, "data")
                If ds.Tables("data").Rows.Count > 0 Then

                    irqr = Val(ds.Tables("data").Rows(0).Item("isrequired"))
                    iact = Val(ds.Tables("data").Rows(0).Item("isactive"))
                    ftype = ds.Tables("data").Rows(0).Item("fieldtype").ToString
                    If irqr = 1 Then
                        If ViewState("Fsource").ToString.ToUpper() = "MENU DRIVEN" Then

                            If iact = 1 Then
                                YrStrListVal.Add(item.Value)
                                YrStrListtext.Add(item.Text)
                            ElseIf iact = 0 Then
                                If ftype.ToString.ToUpper() = "AUTO NUMBER" Then
                                    YrStrListVal.Add(item.Value)
                                    YrStrListtext.Add(item.Text)
                                Else
                                    lblmsgukey.Text = "Field Should Be Active!!"
                                    item.Selected = False
                                    Exit Sub

                                End If

                            End If
                        ElseIf ViewState("Fsource").ToString.ToUpper() = "ACTION DRIVEN" Then
                            YrStrListVal.Add(item.Value)
                            YrStrListtext.Add(item.Text)
                        End If
                    Else
                        lblmsgukey.Text = "This Field should be mandatory!!!"
                        item.Selected = False
                        Exit Sub
                    End If
                End If


            Else
            End If
        Next
        Dim YrStrval As [String] = [String].Join(",", YrStrListVal.ToArray())
        Dim YrStrtext As [String] = [String].Join(",", YrStrListtext.ToArray())

        txtuk.Text = YrStrtext.ToString()
        ViewState("uval") = YrStrval.ToString()
    End Sub


    Protected Sub EditRecordukey(ByVal sender As Object, ByVal e As System.EventArgs)
        'If txtuk.Text = "" Then                                                          Shalini
        '    lblmsgukey.Text = "* Please select a Key"
        '    Exit Sub
        'End If

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("USPupdate_uniquekey", con)

        Try
            oda.SelectCommand.CommandType = CommandType.StoredProcedure
            oda.SelectCommand.Parameters.AddWithValue("@doctype", Trim(lblfn.Text))
            oda.SelectCommand.Parameters.AddWithValue("@EID", Session("EID").ToString())
            oda.SelectCommand.Parameters.AddWithValue("@ukeys", Trim(ViewState("uval")))
            oda.SelectCommand.Parameters.AddWithValue("@exchars", Trim(txtexchars.Text))

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            '
            lblmsgukey.Text = oda.SelectCommand.ExecuteScalar()
            lblmsgukey.Visible = True
            '  Me.btnForm_ModalPopupExtenderuKEY.Hide()
            '   gvedit.DataBind()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If

        End Try
    End Sub



    Protected Sub chkfldsorting_SelectedIndexChanged(sender As Object, e As EventArgs) Handles chkfldsorting.SelectedIndexChanged
        Dim YrStrListtext As List(Of [String]) = New List(Of String)()
        Dim YrStrListVal As List(Of [String]) = New List(Of String)()

        For Each item As ListItem In chkfldsorting.Items
            If item.Selected Then
                YrStrListVal.Add(item.Value)
                YrStrListtext.Add(item.Text)
            Else
            End If
        Next
        Dim YrStrval As [String] = [String].Join(",", YrStrListVal.ToArray())
        Dim YrStrtext As [String] = [String].Join(",", YrStrListtext.ToArray())

        txtSorting.Text = YrStrtext.ToString()
        ViewState("sortingfields") = YrStrval.ToString()
    End Sub
    'Added for Primary Key by Mayank 31-jan-2015

    Protected Sub chkfldPrimarykey_SelectedIndexedChanged(sender As Object, e As EventArgs) Handles chkfldPrimarykey.SelectedIndexChanged
        Dim YrStrListtext As List(Of [String]) = New List(Of String)()
        Dim YrStrListVal As List(Of [String]) = New List(Of String)()

        If (chkDocID.Checked = True) Then
            chkDocID.Checked = False
        End If
        For Each item As ListItem In chkfldPrimarykey.Items
            If item.Selected Then
                YrStrListVal.Add(item.Value)
                YrStrListtext.Add(item.Text)
            Else
            End If
        Next
        Dim YrStrval As [String] = [String].Join(",", YrStrListVal.ToArray())
        Dim YrStrtext As [String] = [String].Join(",", YrStrListtext.ToArray())

        txtPrimaryKey.Text = YrStrtext.ToString()
        ViewState("primaryfields") = YrStrval.ToString()
    End Sub
    Protected Sub EditRecordsPrimarykeyfields(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("USPupdate_primarykeyfields", con)
        Try
            oda.SelectCommand.CommandType = CommandType.StoredProcedure
            oda.SelectCommand.Parameters.AddWithValue("@doctype", Trim(lblfnPrimary.Text))
            oda.SelectCommand.Parameters.AddWithValue("@EID", Session("EID").ToString())
            oda.SelectCommand.Parameters.AddWithValue("@primarykeyfields", Trim(ViewState("primaryfields")))


            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            lblmsgPrimaryKey.Text = oda.SelectCommand.ExecuteScalar()
            '
            'txtSorting.Text = oda.SelectCommand.ExecuteScalar()

            'Me.btnForm_ModalPopupExtenderuKEY.Hide()
            '   gvedit.DataBind()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If

        End Try
    End Sub

    'Added for Primary Key by Mayank 31-jan-2015
    Protected Sub EditRecordsortingfields(ByVal sender As Object, ByVal e As System.EventArgs)
        'If txtSorting.Text = "" Then                                                    Shalini
        '    lblmsgSorting.Text = "* Please select a Sorting Fields"
        '    Exit Sub
        'End If

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("USPupdate_sortingfields", con)

        Try
            oda.SelectCommand.CommandType = CommandType.StoredProcedure
            oda.SelectCommand.Parameters.AddWithValue("@doctype", Trim(lblfnSorting.Text))
            oda.SelectCommand.Parameters.AddWithValue("@EID", Session("EID").ToString())
            oda.SelectCommand.Parameters.AddWithValue("@sortingfields", Trim(ViewState("sortingfields")))


            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            lblmsgSorting.Text = oda.SelectCommand.ExecuteScalar()
            '
            'txtSorting.Text = oda.SelectCommand.ExecuteScalar()

            'Me.btnForm_ModalPopupExtenderuKEY.Hide()
            '   gvedit.DataBind()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If

        End Try
    End Sub

    Protected Sub ddlgeo_DataBinding(sender As Object, e As EventArgs) Handles ddlgeo.DataBinding

    End Sub

    Protected Sub ddlgeo_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlgeo.SelectedIndexChanged
        If ddlgeo.SelectedItem.Text = "Auto" Then
            autochk.Visible = True
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)
            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet()
            da.SelectCommand.CommandText = "Select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' order by displayname"
            da.Fill(ds, "data")
            chkautolist.DataSource = ds.Tables("data")
            chkautolist.DataTextField = "displayname"
            chkautolist.DataValueField = "fieldmapping"
            chkautolist.DataBind()
        Else
            autochk.Visible = False
        End If

    End Sub


    Protected Sub gvData_RowDeleted(sender As Object, e As GridViewDeletedEventArgs) Handles gvData.RowDeleted

    End Sub
    'Add Tally Sych by Mayank
    Public Function InsertDynamicForm(ByVal FormName As String, ByVal formcaption As String, ByVal formdesc As String, ByVal EID As Integer, ByVal FormType As String, ByVal FormSource As String, ByVal LayoutType As String, ByVal eventname As String, ByVal subevent As String, ByVal curstatus As String, ByVal cal As Integer, ByVal WF As Integer, ByVal His As Integer, ByVal isrole As Integer, ByVal docM As String, ByVal chkPbE As Integer, ByVal chkPbV As Integer, ByVal curDocNature As String, ByVal chkIsDef As Integer, ByVal uploadSize As Integer, ByVal childUploder As Integer, ByVal creation As Integer, ByVal WS As Integer, ByVal enableDraft As String, ByVal enableCRM As String, ByVal isinline As Integer, ByVal defaultrows As Integer, ByVal autosaveinterval As Integer, ByVal allowmultiuse As Integer, ByVal syncOrdering As Integer, ByVal enabletally As Integer, ByVal isCSV As Integer, ByVal isXML As Integer, ByVal childitemOnAction As String, ByVal isTallyRegistration As Integer, ByVal Show_Existing As String, ByVal EnabledAddRows As Integer, ByVal FieldSeperator As String) As Integer
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        'new procedure with two more parameter

        FormName = getSafeString_Names(FormName)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspInsertDynamicFormNewRole1", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("Formname", Trim(FormName))
        oda.SelectCommand.Parameters.AddWithValue("formcaption", Trim(formcaption))
        oda.SelectCommand.Parameters.AddWithValue("formdesc", Trim(formdesc))
        oda.SelectCommand.Parameters.AddWithValue("EID", EID)
        oda.SelectCommand.Parameters.AddWithValue("formtype", FormType)
        If (FormType.ToUpper.ToString() = "MASTER") Then
            oda.SelectCommand.Parameters.AddWithValue("EnableTally_Registration", isTallyRegistration)
        Else
            oda.SelectCommand.Parameters.AddWithValue("EnableTally_Registration", "0")
        End If
        oda.SelectCommand.Parameters.AddWithValue("formSource", FormSource)

        If (FormSource.ToUpper.Trim() = "ACTION DRIVEN") Then
            oda.SelectCommand.Parameters.AddWithValue("ChidFormforActionScreen", childitemOnAction)
        Else
            oda.SelectCommand.Parameters.AddWithValue("ChidFormforActionScreen", String.Empty)
        End If
        oda.SelectCommand.Parameters.AddWithValue("LayoutType", LayoutType)
        oda.SelectCommand.Parameters.AddWithValue("eventname", eventname)
        oda.SelectCommand.Parameters.AddWithValue("subevent", subevent)
        oda.SelectCommand.Parameters.AddWithValue("curstatus", curstatus)
        oda.SelectCommand.Parameters.AddWithValue("iscalendar", cal)
        oda.SelectCommand.Parameters.AddWithValue("isworkflow", WF)
        oda.SelectCommand.Parameters.AddWithValue("history", His)
        oda.SelectCommand.Parameters.AddWithValue("isrole", isrole)
        oda.SelectCommand.Parameters.AddWithValue("chkPbE", chkPbE)
        oda.SelectCommand.Parameters.AddWithValue("chkPbV", chkPbV)
        oda.SelectCommand.Parameters.AddWithValue("curDocNature", curDocNature)

        oda.SelectCommand.Parameters.AddWithValue("hasDefaultVal", chkIsDef)
        Dim C As String = defaultrows
        If C <> "" Then
            oda.SelectCommand.Parameters.AddWithValue("IsDefaultRows", C)
        Else
            oda.SelectCommand.Parameters.AddWithValue("IsDefaultRows", "")
        End If
        If docM <> "" Then
            oda.SelectCommand.Parameters.AddWithValue("docM", docM)
        End If
        If IsNothing(uploadSize) = False Then
            oda.SelectCommand.Parameters.AddWithValue("@FuploadSize", uploadSize)
        End If
        oda.SelectCommand.Parameters.AddWithValue("@ShowChildUploader", childUploder)
        If childUploder = 1 Then
            oda.SelectCommand.Parameters.AddWithValue("@isCSV", isCSV)
            oda.SelectCommand.Parameters.AddWithValue("@isXML", isXML)
            oda.SelectCommand.Parameters.AddWithValue("@FieldSeperator", FieldSeperator)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@isCSV", "0")
            oda.SelectCommand.Parameters.AddWithValue("@isXML", "0")
            oda.SelectCommand.Parameters.AddWithValue("@FieldSeperator", "")
        End If
        oda.SelectCommand.Parameters.AddWithValue("@isUserCreation", creation)
        oda.SelectCommand.Parameters.AddWithValue("@enableWS", WS)
        If enableDraft.Length > 0 Then
            oda.SelectCommand.Parameters.AddWithValue("@enableDraft", enableDraft)
        End If
        If enableCRM.Length > 0 Then
            oda.SelectCommand.Parameters.AddWithValue("enableCRM", enableCRM)
        End If

        oda.SelectCommand.Parameters.AddWithValue("@isinline", isinline)
        oda.SelectCommand.Parameters.AddWithValue("@autosaveinterval", autosaveinterval)
        oda.SelectCommand.Parameters.AddWithValue("@allowmultiuse", allowmultiuse)
        oda.SelectCommand.Parameters.AddWithValue("@syncTallyOrdering", syncOrdering)
        oda.SelectCommand.Parameters.AddWithValue("@enabletally", enabletally)
        oda.SelectCommand.Parameters.AddWithValue("@Show_Existing", Show_Existing)
        oda.SelectCommand.Parameters.AddWithValue("@EnableAddRow", EnabledAddRows)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim iSt As Integer = oda.SelectCommand.ExecuteScalar()
        con.Close()
        oda.Dispose()
        con.Dispose()
        Return iSt
    End Function

    'Add Tally Sych by Mayank
    Public Function UpdateDynamicForm(ByVal Formid As Integer, ByVal FormName As String, ByVal formcaption As String, ByVal formdesc As String, ByVal EID As Integer, ByVal FormType As String, ByVal FormSource As String, ByVal LayoutType As String, ByVal eventname As String, ByVal subevent As String, ByVal curstatus As String, ByVal cal As Integer, ByVal WF As Integer, ByVal His As Integer, ByVal isrole As Integer, ByVal docM As String, ByVal chkPbE As Integer, ByVal chkPbV As Integer, ByVal curDocNature As String, ByVal chkIsDef As Integer, ByVal uploadSize As Integer, ByVal childUploder As Integer, ByVal creation As Integer, ByVal WS As Integer, ByVal enableDraft As String, ByVal enableCRM As String, ByVal isinline As Integer, ByVal defaultrows As Integer, ByVal autosaveinterval As Integer, ByVal allowmultiuse As Integer, ByVal stringOrder As String, ByVal syncCheck As Integer, ByVal iscsv As Integer, isxml As Integer, ByVal childitemOnAction As String, ByVal isTallyRegistraton As Integer, ByVal Show_Existing As String, ByVal EnabledAddRows As Integer, ByVal FieldSeperator As String) As Integer
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspUpdateDynamicFormNewRole1", con)
        FormName = getSafeString_Names(FormName)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.Clear()
        oda.SelectCommand.Parameters.AddWithValue("Fid", Formid)
        oda.SelectCommand.Parameters.AddWithValue("Formname", FormName)
        oda.SelectCommand.Parameters.AddWithValue("formcaption", formcaption)
        oda.SelectCommand.Parameters.AddWithValue("formdesc", formdesc)
        oda.SelectCommand.Parameters.AddWithValue("EID", EID)
        oda.SelectCommand.Parameters.AddWithValue("formtype", FormType)
        oda.SelectCommand.Parameters.AddWithValue("formSource", FormSource)
        If (FormType.ToUpper.ToString() = "MASTER") Then
            oda.SelectCommand.Parameters.AddWithValue("EnableTally_Registration", isTallyRegistraton)
        Else
            oda.SelectCommand.Parameters.AddWithValue("EnableTally_Registration", "0")
        End If
        If (FormSource.ToUpper.Trim() = "ACTION DRIVEN") Then
            oda.SelectCommand.Parameters.AddWithValue("ChidFormforActionScreen", childitemOnAction)
        Else
            oda.SelectCommand.Parameters.AddWithValue("ChidFormforActionScreen", String.Empty)
        End If
        oda.SelectCommand.Parameters.AddWithValue("LayoutType", LayoutType)
        oda.SelectCommand.Parameters.AddWithValue("eventname", eventname)
        oda.SelectCommand.Parameters.AddWithValue("subevent", subevent)
        oda.SelectCommand.Parameters.AddWithValue("curstatus", curstatus)
        oda.SelectCommand.Parameters.AddWithValue("iscalendar", cal)
        oda.SelectCommand.Parameters.AddWithValue("isworkflow", WF)
        oda.SelectCommand.Parameters.AddWithValue("history", His)
        oda.SelectCommand.Parameters.AddWithValue("isrole", isrole)
        oda.SelectCommand.Parameters.AddWithValue("chkPbE", chkPbE)
        oda.SelectCommand.Parameters.AddWithValue("chkPbV", chkPbV)
        oda.SelectCommand.Parameters.AddWithValue("CurdocNature", curDocNature)

        oda.SelectCommand.Parameters.AddWithValue("hasDefaultVal", chkIsDef)

        Dim C As String = defaultrows
        If C <> "" Then
            oda.SelectCommand.Parameters.AddWithValue("IsDefaultRows", C)
        Else
            oda.SelectCommand.Parameters.AddWithValue("IsDefaultRows", "")
        End If

        If docM <> "" Then
            oda.SelectCommand.Parameters.AddWithValue("docM", docM)
        End If
        If IsNothing(uploadSize) = False Then
            oda.SelectCommand.Parameters.AddWithValue("@FuploadSize", uploadSize)
        End If
        oda.SelectCommand.Parameters.AddWithValue("@ShowChildUploader", childUploder)
        If childUploder = 1 Then
            oda.SelectCommand.Parameters.AddWithValue("@iscsv", iscsv)
            oda.SelectCommand.Parameters.AddWithValue("@isXML", isxml)
            oda.SelectCommand.Parameters.AddWithValue("@FieldSeperator", FieldSeperator)
        Else
            oda.SelectCommand.Parameters.AddWithValue("@iscsv", "0")
            oda.SelectCommand.Parameters.AddWithValue("@isXML", "0")
            oda.SelectCommand.Parameters.AddWithValue("@FieldSeperator", "")
        End If
        oda.SelectCommand.Parameters.AddWithValue("@isUserCreation", creation)
        oda.SelectCommand.Parameters.AddWithValue("@enableWS", WS)
        If enableDraft.Length > 0 Then
            oda.SelectCommand.Parameters.AddWithValue("@enableDraft", enableDraft)
        End If
        If enableCRM.Length > 0 Then
            oda.SelectCommand.Parameters.AddWithValue("enableCRM", enableCRM)
        End If
        oda.SelectCommand.Parameters.AddWithValue("@isinline", isinline)
        oda.SelectCommand.Parameters.AddWithValue("@autosaveinterval", autosaveinterval)
        oda.SelectCommand.Parameters.AddWithValue("@allowmultiuse", allowmultiuse)
        oda.SelectCommand.Parameters.AddWithValue("@syncTallyOrdering", stringOrder)
        oda.SelectCommand.Parameters.AddWithValue("@enabletally", syncCheck)
        oda.SelectCommand.Parameters.AddWithValue("@Show_Existing", Show_Existing)
        oda.SelectCommand.Parameters.AddWithValue("@EnableAddRow", EnabledAddRows)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim iSt As Integer = oda.SelectCommand.ExecuteScalar()
        con.Close()
        oda.Dispose()
        con.Dispose()
        Return iSt
    End Function

    Public Function getSafeString_Names(ByVal strVar As String) As String
        Trim(strVar)
        strVar = Replace(strVar, "'", "")
        strVar = Replace(strVar, ";", "")
        strVar = Replace(strVar, "--", "")
        strVar = Replace(strVar, "%", "Percent")
        strVar = Replace(strVar, "&", "and")
        strVar = Replace(strVar, "!", "")
        strVar = Replace(strVar, """", "")
        strVar = Replace(strVar, "#", "")
        strVar = Replace(strVar, "$", "")
        strVar = Replace(strVar, "*", "")
        strVar = Replace(strVar, ",", "")
        strVar = Replace(strVar, "/", "")
        strVar = Replace(strVar, ":", "")
        strVar = Replace(strVar, "?", "")
        strVar = Replace(strVar, "[", "(")
        strVar = Replace(strVar, "\", "")
        strVar = Replace(strVar, "]", ")")
        strVar = Replace(strVar, "^", "")
        strVar = Replace(strVar, "`", "")
        strVar = Replace(strVar, "{", "(")
        strVar = Replace(strVar, "|", "")
        strVar = Replace(strVar, "}", ")")
        strVar = Replace(strVar, "~", "")
        strVar = Replace(strVar, "+", "")
        strVar = Replace(strVar, "<", "")
        strVar = Replace(strVar, "=", "")
        strVar = Replace(strVar, ">", "")

        Return strVar
    End Function



    Protected Sub ddlchildF_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlchildF.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("select FIELDID, DISPLAYNAME from MMM_MST_FIELDS where EID=" & Session("EID") & " and DOCUMENTTYPE='" & ddlchildF.SelectedItem.Text & "' AND DATATYPE='NUMERIC'", con)
        Dim ds As New DataSet
        da.Fill(ds, "FieldName")
        ddlchildHFF.Items.Clear()
        If ds.Tables("FieldName").Rows.Count > 0 Then
            For i As Integer = 0 To ds.Tables("FieldName").Rows.Count - 1
                ddlchildHFF.Items.Add(ds.Tables("FieldName").Rows(i).Item("DISPLAYName").ToString())
                ddlchildHFF.Items(i).Value = ds.Tables("FieldName").Rows(i).Item("FIELDID").ToString()
            Next
            ddlchildHFF.Items.Insert(0, "Select Field")
        End If
        da.Dispose()
        con.Close()
    End Sub

    Protected Sub chkIsDef_CheckedChanged(sender As Object, e As EventArgs) Handles chkIsDef.CheckedChanged
        If chkIsDef.Checked = True Then
            txtdefblnk.Visible = True
            txtdefblnk.Enabled = False     'Shalini
            txtdefblnk.Text = "0"
            chkdefblnk.Checked = False
            Chkisinline.Checked = False
        Else
            txtdefblnk.Visible = False
            txtdefblnk.Text = ""
        End If

    End Sub

    Protected Sub chkdefblnk_CheckedChanged(sender As Object, e As EventArgs) Handles chkdefblnk.CheckedChanged
        If chkdefblnk.Checked = True Then
            txtdefblnk.Visible = True
            txtdefblnk.Enabled = True     'Shalini 
            txtdefblnk.Text = ""
            chkIsDef.Checked = False
            Chkisinline.Checked = False
        Else
            txtdefblnk.Visible = False
            txtdefblnk.Text = ""
        End If

    End Sub

    Protected Sub ddlDDlLookUpMasterField_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlDDlLookUpMasterField.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataTable()
        Dim query As String = ""

        If ddlDDlLookUpMasterField.SelectedItem.Text = "Select Field" Then
            lblDDlLookUP.Text = "Please select Field Type value "
            Exit Sub
        Else

            DA.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS WHERE DISPLAYNAME='" & ddlDDlLookUpMasterField.SelectedItem.Text & "' AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " "
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim ddt As String = DA.SelectCommand.ExecuteScalar()

            Dim arr As String() = ddt.Split("-")
            If arr(0) = "CHILD" Then
                Dim ITEM As String() = Split(arr(1), ":")
                query = "select FieldID,displayName,FieldMapping,MinLen,MaxLen from MMM_MST_FIELDS WHERE EID=" & Session("EID") & " AND documenttype='" & ITEM(1).ToString() & "' AND fieldtype='Drop Down' "
                DA.SelectCommand.CommandText = query
                DA.SelectCommand.CommandType = CommandType.Text
            Else
                query = "select  FieldID,displayName,FieldMapping,MinLen,MaxLen from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr(1).ToString() & "' AND fieldtype='Drop Down'"
                DA.SelectCommand.CommandText = query
                DA.SelectCommand.CommandType = CommandType.Text
            End If
            ViewState("fldIDChange") = ddlDDlLookUpMasterField.SelectedItem.Value
            DA.Fill(dt)
            ddlDDlLookUpField.Visible = True
            ddlDDlLookUpField.Items.Clear()
            updatepanelDDlLookUp.Update()

            If dt.Rows.Count > 0 Then
                For i As Integer = 0 To dt.Rows.Count - 1
                    ddlDDlLookUpField.Items.Add(dt.Rows(i).Item(1))
                    ddlDDlLookUpField.Items(i).Value = dt.Rows(i).Item(2)
                Next
                ddlDDlLookUpField.Items.Insert(0, "SELECT FIELD")
                ' adding static user field if selection is sessionvalued
                'If arr(1) = "USER" Then
                '    ddlDDlLookUpField.Items.Insert(1, "USERNAME")
                '    ddlDDlLookUpField.Items.Insert(2, "EMAILID")
                '    ddlDDlLookUpField.Items.Insert(3, "USERROLE")
                'End If
            End If
        End If

        updatepanelDDlLookUp.Update()
    End Sub


    Protected Sub ddlDDlLookUpField_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlDDlLookUpField.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataTable()
        Dim query As String = ""

        If ddlDDlLookUpMasterField.SelectedItem.Text = "Select Field" Then
            lblDDlLookUP.Text = "Please select Field Type value "
            Exit Sub
        Else

            DA.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS WHERE DISPLAYNAME='" & ddlDDlLookUpMasterField.SelectedItem.Text & "' AND DOCUMENTTYPE='" & ViewState("FORMNAME") & "' AND EID=" & Session("EID") & " "
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim ddt As String = DA.SelectCommand.ExecuteScalar()

            Dim arr As String() = ddt.Split("-")
            If arr(0) = "CHILD" Then
                Dim ITEM As String() = Split(arr(1), ":")
                query = "select FieldID,displayName,FieldMapping,MinLen,MaxLen from MMM_MST_FIELDS WHERE EID=" & Session("EID") & " AND documenttype='" & ITEM(1).ToString() & "'  AND fieldtype='Drop Down'"
                DA.SelectCommand.CommandText = query
                DA.SelectCommand.CommandType = CommandType.Text
            Else
                query = "select  FieldID,displayName,FieldMapping,MinLen,MaxLen from MMM_MST_FIELDS where EID=" & Session("EID") & " and documenttype='" & arr(1).ToString() & "' AND fieldtype='Drop Down'"
                DA.SelectCommand.CommandText = query
                DA.SelectCommand.CommandType = CommandType.Text
            End If

        End If
        DA.SelectCommand.CommandText = query & "and DISPLAYNAME='" & ddlDDlLookUpField.SelectedItem.Text & "'"
        DA.SelectCommand.CommandType = CommandType.Text
        DA.Fill(dt)
        If dt.Rows.Count > 0 Then
            DDllukup.Visible = True
            txtDDllukupmin.Text = dt.Rows(0).Item("MinLen").ToString()
            If dt.Rows(0).Item("MaxLen").ToString() = "0" Then
                txtDDllukupmax.Text = "500"
            Else
                txtDDllukupmax.Text = dt.Rows(0).Item("MaxLen").ToString()
            End If
            txtDDllukupmin.Enabled = False
            txtDDllukupmax.Enabled = False
        End If
    End Sub

    Protected Sub Chkisinline_CheckedChanged(sender As Object, e As EventArgs) Handles Chkisinline.CheckedChanged
        If Chkisinline.Checked = True Then
            txtdefblnk.Visible = False
            chkIsDef.Checked = False
            chkdefblnk.Checked = False
        End If
    End Sub

    Protected Sub ddlcatchmentdisplayfield_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlcatchmentdisplayfield.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim DA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataTable()
        DA.SelectCommand.CommandText = "Select displayName,FieldMapping from mmm_mst_fields WHERE EID = " & Session("EID").ToString() & " and documenttype='" & ddlcatchmentdisplayfield.SelectedItem.Text.ToString() & "' and fieldtype='Geo Fence' "
        DA.SelectCommand.CommandType = CommandType.Text
        DA.Fill(dt)
        ddlcatchmentgeofencefield.Items.Clear()
        ddlcatchmentgeofencefield.DataSource = dt
        ddlcatchmentgeofencefield.DataValueField = "FieldMapping"
        ddlcatchmentgeofencefield.DataTextField = "displayname"
        ddlcatchmentgeofencefield.DataBind()
        ddlcatchmentgeofencefield.Items.Insert(0, "SELECT")
        DA.Dispose()
    End Sub
#Region "Relation Ship Setting"
    <WebMethod()>
    Public Shared Function GetRelationDocType(DocumrntType As String) As String
        'ret 0 for Error -1 for session Expired
        Dim ret As String = "0"
        Dim objR As New Relation()
        Dim ds As New DataSet()
        Dim serializerSettings As New JsonSerializerSettings()
        Dim json_serializer As New JavaScriptSerializer()
        Try
            If Not HttpContext.Current.Session("eid") Is Nothing Then
                Dim EID As Integer = Convert.ToInt32(HttpContext.Current.Session("EID"))
                ds = objR.GetRelationDocType(EID, DocumrntType)
                Dim jsonData = JsonConvert.SerializeObject(ds.Tables(0), Newtonsoft.Json.Formatting.None, serializerSettings)
                Dim jsonData1 = JsonConvert.SerializeObject(ds.Tables(1), Newtonsoft.Json.Formatting.None, serializerSettings)
                ret = jsonData & "|" & jsonData1
            Else
                ret = "-1"
            End If
        Catch ex As Exception
            Return "0"
        End Try
        Return ret
    End Function

    <WebMethod()>
    Public Shared Function GetRelation(TDocType As String) As String
        'ret 0 for Error -1 for session Expired
        Dim ret As String = "0"
        Dim objR As New Relation()
        Dim ds As New DataSet()
        Dim serializerSettings As New JsonSerializerSettings()
        Dim json_serializer As New JavaScriptSerializer()
        Try
            If Not HttpContext.Current.Session("eid") Is Nothing Then
                Dim EID As Integer = Convert.ToInt32(HttpContext.Current.Session("EID"))
                ds = objR.GetRelation(EID, TDocType)
                Dim jsonData = JsonConvert.SerializeObject(ds.Tables(0), Newtonsoft.Json.Formatting.None, serializerSettings)
                ret = jsonData
                ret = ret & "|" & GetRelationDocType(TDocType)
            Else
                ret = "-1"
            End If
        Catch ex As Exception
            Return "0"
        End Try
        Return ret
    End Function
    <WebMethod()>
    Public Shared Function AddUpdateRelation(Name As String, Type As String, T_DOC As String, S_DOC1 As String, S_DOC2 As String, ShowExtend As String, TID As String, IsActive As String, RQ As String, BMODE As String) As String
        'RQ BMODE 
        '{"Name":"gdfgdfg","Type":"ONE TO ONE","T_DOCType":"MASTER","T_DOC":"Add Quotation Dom Movment","S_DOC1":"Booking Type","S_DOC2":"undefined","ShowExtend":"0","TID":"0","IsActive":"1"}
        '{"Name":"dsfsdf", "Type":"MANY TO MANY", "T_DOCType":"MASTER","T_DOC":"Add Quotation Dom Movment","S_DOC1":"Service List_MASTER","S_DOC2":"Booking Type","ShowExtend":"0","TID":"0","IsActive":"1"}
        Dim objR As New Relation()
        Dim ret = "0"
        Try
            If Not HttpContext.Current.Session("EID") Is Nothing Then
                Dim EID As Integer = Convert.ToInt32(HttpContext.Current.Session("EID"))
                ret = objR.AddUpdateRelation(EID, Name, Type, T_DOC, S_DOC1, S_DOC2, ShowExtend, TID, IsActive, RQ, BMODE)
            Else
                ret = "-2"
            End If
        Catch ex As Exception
            Return "0"
        End Try

        Return ret
    End Function
#End Region
    'Changes By Mayank 28-Jan-2015
    Protected Sub HituBalance(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim EID = Session("EID")
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("B_FormID") = Formid
        hdnFromName.Value = row.Cells(1).Text
        lblBalInfo.Text = String.Empty
        'Check Whether is document type or not allowed only document type
        Dim conStrss As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim queryrelTypes = "select FormType,FormSource from mmm_mst_forms where eid=" & EID & " and formid=" & Formid
        Dim DSS As New DataSet()
        Using con = New SqlConnection(conStrss)
            Using da = New SqlDataAdapter(queryrelTypes, con)
                da.Fill(DSS)
            End Using
        End Using
        If (DSS.Tables(0).Rows.Count > 0) Then
            If ((DSS.Tables(0).Rows(0).Item("FormType").ToString().ToUpper() = "DOCUMENT") And (DSS.Tables(0).Rows(0).Item("FormSource").ToString().ToUpper() = "MENU DRIVEN")) Then
            Else
                ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('You can Balance Maintenance Configuration only for document type forms');", True)
                Return
            End If
        End If
        Dim conStrs As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim queryrelType = "select T_doc,S_DOC1+'-'+S_DOC2 as DOCST from MMM_MST_Relation where eid=" & EID & ""
        Dim DS As New DataSet()
        Using con = New SqlConnection(conStrs)
            Using da = New SqlDataAdapter(queryrelType, con)
                da.Fill(DS)
            End Using
        End Using
        ddlRel_doc_type.DataSource = DS
        ddlRel_doc_type.DataTextField = "T_doc"
        ddlRel_doc_type.DataValueField = "DOCST"
        ddlRel_doc_type.DataBind()
        ddlRel_doc_type.Items.Insert(0, New ListItem("--Select--", "0"))
        If (ddlSource.Items.Count > 0) Then
            ddlSource.Items.Clear()
        End If
        If (ddlSTarget.Items.Count > 0) Then
            ddlSTarget.Items.Clear()
        End If
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim Query = "select F.FormName+'-'+FF.DisPlayName as DisplayName,'Master-'+F.FormName+'-'+FF.FieldMapping as FieldMapping,FF.FieldType,FF.DataType FROM MMM_MST_FIELDS FF INNER JOIN MMM_MST_FORMS F ON (F.EID=FF.EID AND F.FormName=FF.DocumentType)  WHERE FF.IsActive = 1 And FF.EID = " & EID & " And F.FormID =" & Formid & ";select ISnull(Effective_Date_Field,0)'Effective_Date_Field', isnull(Balance_Field, 0) 'Balance_Field',ISnull(Item_Number,0)'Item_Number',isnull(Relation_Doc_Type,0) 'Relation_Doc_Type',isnull(Balance_Type,0) 'Balance_Type',S_T_DDN,Relation_Type FROM MMM_MST_FORMS WHERE FormID=" & Formid
        Dim DSField As New DataSet()
        Using con = New SqlConnection(conStr)
            Using da = New SqlDataAdapter(Query, con)
                da.Fill(DSField)
            End Using
        End Using
        Dim onlyFiltered As DataView = DSField.Tables(0).DefaultView

        'Note: in the case of Action form "IsActive" do not play any role. 
        onlyFiltered.RowFilter = "DataType='Numeric'"
        Dim theFlds As DataTable = onlyFiltered.Table.DefaultView.ToTable()

        Dim onlyFiltered1 As DataView = DSField.Tables(0).DefaultView
        onlyFiltered1.RowFilter = "DataType='Datetime'"
        Dim theFlds1 As DataTable = onlyFiltered1.Table.DefaultView.ToTable()
        Dim li As New ListItem("--Select--", 0)
        Try
            ddlEDate.DataSource = theFlds1
            ddlEDate.DataValueField = "FieldMapping"
            ddlEDate.DataTextField = "DisplayName"
            ddlEDate.DataBind()
            ddlEDate.Items.Insert(0, li)
        Catch ex As Exception
        End Try
        Try
            ddlEAmountField.DataSource = theFlds
            ddlEAmountField.DataValueField = "FieldMapping"
            ddlEAmountField.DataTextField = "DisplayName"
            ddlEAmountField.DataBind()
            ddlEAmountField.Items.Insert(0, li)
        Catch ex As Exception

        End Try
        Try
            ddlItemN.DataSource = DSField
            ddlItemN.DataValueField = "FieldMapping"
            ddlItemN.DataTextField = "DisplayName"
            ddlItemN.DataBind()
            ddlItemN.Items.Insert(0, li)
        Catch ex As Exception

        End Try
        Try
            BindChild(True)
            If ((DSField.Tables(1).Rows(0).Item("Relation_Type").ToString() <> String.Empty)) Then
                ddlRelation_Type.SelectedValue = DSField.Tables(1).Rows(0).Item("Relation_Type")
            Else
                ddlRelation_Type.SelectedIndex = 0
                chld.Visible = False
            End If

            If (ddlRelation_Type.SelectedIndex = 0) Then
                chld.Visible = False
            Else
                chld.Visible = True
                ddlRelation_Type_SelectedIndexChanged(ddlRelation_Type, New EventArgs())
            End If
            ddlItemN.SelectedValue = DSField.Tables(1).Rows(0).Item("Item_Number")
            ddlEAmountField.SelectedValue = DSField.Tables(1).Rows(0).Item("Balance_Field")
            ddlEDate.SelectedValue = DSField.Tables(1).Rows(0).Item("Effective_Date_Field")
            ddlRel_doc_type.SelectedIndex = ddlRel_doc_type.Items.IndexOf(ddlRel_doc_type.Items.FindByText(DSField.Tables(1).Rows(0).Item("Relation_Doc_Type")))
            ddlRel_doc_type_SelectedIndexChanged(ddlRel_doc_type, New EventArgs())
            ddlAction.SelectedValue = DSField.Tables(1).Rows(0).Item("Balance_Type")
            Dim ar As String() = DSField.Tables(1).Rows(0).Item("S_T_DDN").ToString().Split("-")
            ddlSource.SelectedValue = Convert.ToString(ar(0))
            ddlSTarget.SelectedValue = Convert.ToString(ar(1))

            'ddlBMode.SelectedValue = DSField.Tables(1).Rows(0).Item("Balance_Maintenance_Mode")
        Catch ex As Exception

        End Try

        UPB.Update()
        Me.MdlBalance.Show()
    End Sub
    'Changes By Mayank 28-Jan-2015,30-Jan-2015
    Protected Sub UpDateBalInfo(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnBalSubmit.Click
        Dim ret As Integer = 0
        lblBalInfo.Text = ""
        Try
            Dim EID As String, FrmID As String, Effective_Date_Field As String, Balance_Field As String, Item_Number As String, Relation_Doc_Type As String, Action As String, S_T_DDN As String, Relation_Type As String
            EID = Session("EID")
            FrmID = ViewState("B_FormID")
            Balance_Field = ddlEAmountField.SelectedItem.Value.Trim
            ' Balance_Maintenance_Mode = ddlBMode.SelectedItem.Value.Trim
            'Balance_Maintenance_Mode = ""
            Effective_Date_Field = ddlEDate.SelectedItem.Value.Trim
            'Item_Number = ddlItemN.SelectedItem.Value.Substring(ddlItemN.SelectedValue.LastIndexOf(".") + 1)
            Item_Number = ddlItemN.SelectedValue.Trim()
            Relation_Doc_Type = ddlRel_doc_type.SelectedItem.Text.Trim()
            Action = ddlAction.SelectedValue.Trim()
            Relation_Type = ddlRelation_Type.SelectedItem.Text.Trim()
            S_T_DDN = ddlSource.SelectedValue.Trim() & "," & ddlSTarget.SelectedValue.Trim()
            Dim objR As New Relation()
            ret = objR.UpDateBalINFO(EID, FrmID, Effective_Date_Field, Balance_Field, Item_Number, Relation_Doc_Type, Action, S_T_DDN, Relation_Type)
            If ret > 0 Then
                lblBalInfo.Text = "Balance info updated successfully"
                UPB.Update()
            End If
        Catch ex As Exception
            lblBalInfo.Text = "Error occured at server"
            UPB.Update()
        End Try
    End Sub
    Sub hideBAlModal()
        Me.MdlBalance.Hide()
    End Sub

    Protected Sub ddltextBoxItem_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddltextBoxItem.SelectedIndexChanged

        If ddltextBoxItem.SelectedItem.Text = "Text" Then
            ddltextcase.Visible = True
            lblcasetxt.Visible = True
        End If

    End Sub

    Protected Sub chkddlismail_SelectedIndexChanged(sender As Object, e As EventArgs) Handles chkddlismail.SelectedIndexChanged
        Dim YrStrListtext As List(Of [String]) = New List(Of String)()
        Dim YrStrListVal As List(Of [String]) = New List(Of String)()

        For Each item As ListItem In chkddlismail.Items
            If item.Selected Then
                YrStrListVal.Add(item.Value)
                YrStrListtext.Add(item.Text)
            Else
            End If

        Next
        Dim YrStrval As [String] = [String].Join(",", YrStrListVal.ToArray())
        Dim YrStrtext As [String] = [String].Join(",", YrStrListtext.ToArray())

        txtmail.Text = YrStrtext.ToString()
        ViewState("chkismail") = YrStrval.ToString()
    End Sub

    Protected Sub bindxmlinward(ByVal doctype As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            da.SelectCommand.CommandText = "Select displayname,fieldmapping,InwardXMLTagname from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & doctype.ToString() & "' order by displayname "
            da.SelectCommand.CommandType = CommandType.Text
            da.Fill(ds, "data")

            If ds.Tables("data").Rows.Count > 0 Then
                gvdata_xmlinward.DataSource = ds.Tables("data")
                gvdata_xmlinward.DataBind()

                For i As Integer = 0 To ds.Tables("data").Rows.Count - 1
                    If Not IsDBNull(ds.Tables("data").Rows(i).Item("InwardXMLTagname")) Then
                        Dim chkRow As CheckBox = TryCast(gvdata_xmlinward.Rows(i).Cells(0).FindControl("chkxmlinward"), CheckBox)
                        Dim textxml As TextBox = TryCast(gvdata_xmlinward.Rows(i).Cells(2).FindControl("txtxmlinwardtags"), TextBox)
                        textxml.Text = ds.Tables("data").Rows(i).Item("InwardXMLTagname").ToString()
                        chkRow.Checked = True
                    End If


                Next



            End If


        Catch ex As Exception


        End Try

    End Sub
    Protected Sub clickxmlio(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Tid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        btnxmlinward.Text = "Update"
        ViewState("TID") = Tid
        lblxmlinwardmsg.Text = ""
        lblxmloutwardmsg.Text = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("Select formname,xmlinwardinputdoctype,xmlinwardinputentitycode,formtype,formsource,XMLOutWardDocType,XMLOutWardEntityCode,RowFilterXMLTag,RowFilterBPMField,ChildMasterField,TallyRegField from mmm_mst_forms where eid=" & Session("EID") & " and formid=" & Tid & "", con)
        Dim ds As New DataSet
        da.Fill(ds, "formname")

        If ds.Tables("formname").Rows.Count > 0 Then
            Dim doctype As String = ds.Tables("formname").Rows(0).Item("formname").ToString()
            Session("XMLMAINDOC") = doctype
            'code for xml inward

            lblheaderxmltagdoc.Text = "Selected Document : " & doctype.ToString()
            Call bindxmlinward(doctype)
            txttallyxmlregfield.Text = ds.Tables("formname").Rows(0).Item("TallyRegField").ToString()

            If Trim(ds.Tables("formname").Rows(0).Item("formsource")).ToString() = "DETAIL FORM" Then

                da.SelectCommand.CommandText = "Select formname,formid from mmm_mst_forms where eid=" & Session("EID") & " and isactive=1 and formtype='master' order by formname"
                da.Fill(ds, "forms")
                If ds.Tables("forms").Rows.Count > 0 Then
                    ddlchildmasterfield.DataSource = ds.Tables("forms")
                    ddlchildmasterfield.DataTextField = "Formname"
                    ddlchildmasterfield.DataValueField = "Formid"
                    ddlchildmasterfield.DataBind()
                    ddlchildmasterfield.Items.Insert(0, "Select")
                    ddlchildmasterfield.SelectedItem.Text = ds.Tables("formname").Rows(0).Item("ChildMasterField").ToString()
                End If
                gvxmloutward.Columns(3).Visible = False

                txtxmlentitycode.Text = ""
                txtxmlinward.Text = ""
                txtxmloutwardentitycode.Text = ""
                txtxmloutwarddoctype.Text = ""
                rowxmlhead.Visible = False
                rowxmloutward.Visible = False
                rowchild.Visible = True
            Else
                gvxmloutward.Columns(3).Visible = True
                rowxmlhead.Visible = True
                txtxmlinward.Text = ds.Tables("formname").Rows(0).Item("xmlinwardinputdoctype").ToString()
                txtxmlentitycode.Text = ds.Tables("formname").Rows(0).Item("xmlinwardinputentitycode").ToString()
                rowxmloutward.Visible = True
                txtxmloutwarddoctype.Text = ds.Tables("formname").Rows(0).Item("XMLOutWardDocType").ToString()
                txtxmloutwardentitycode.Text = ds.Tables("formname").Rows(0).Item("XMLOutWardEntityCode").ToString()
                txtrowfilterxmltag.Text = ds.Tables("formname").Rows(0).Item("RowFilterXMLTag").ToString()
                txtrowfilterbpmfield.Text = ds.Tables("formname").Rows(0).Item("RowFilterBPMField").ToString()
                rowchild.Visible = False
            End If

            If Trim(ds.Tables("formname").Rows(0).Item("Formtype").ToString()) = "MASTER" Then
                txtxmlentitycode.Text = ""
                txtxmlinward.Text = ""
                txtxmloutwardentitycode.Text = ""
                txtxmloutwarddoctype.Text = ""
                rowxmlhead.Visible = False
                rowxmloutward.Visible = False
                rowchild.Visible = False
                gvxmloutward.Columns(3).Visible = False
            End If


            'end here

            'Code for xml outward
            Call bindxmlOutward(doctype)
            ''If Trim(ds.Tables("formname").Rows(0).Item("formsource")).ToString() = "DETAIL FORM" Then
            ''    txtxmlentitycode.Text = ""
            ''    txtxmlinward.Text = ""
            ''    rowxmlhead.Visible = False
            ''Else
            ''    rowxmlhead.Visible = True
            ''    txtxmloutwarddoctype.Text = ds.Tables("formname").Rows(0).Item("xmlinwardinputdoctype").ToString()
            ''    txtxmloutwardentitycode.Text = ds.Tables("formname").Rows(0).Item("xmlinwardinputentitycode").ToString()
            ''    txtrowfilterxmltag.Text = ds.Tables("formname").Rows(0).Item("RowFilterXMLTag").ToString()
            ''End If
            'end
        End If

        Me.updatepanelxmlinwardoutward.Update()
        Me.modalpopupxmlinwardoutward.Show()
    End Sub

    Protected Sub btnxmlinward_Click(sender As Object, e As EventArgs) Handles btnxmlinward.Click
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            If rowxmlhead.Visible = True Then
                da.SelectCommand.CommandText = "Update mmm_mst_forms set XMLInwardInputDocType='" & txtxmlinward.Text.Trim() & "', XMLInwardInputEntityCode='" & txtxmlentitycode.Text.Trim() & "', TallyCancelXMlTag= '" & txtTallyCancelXMLTag.Text.Trim() & "' where formname='" & Session("XMLMAINDOC") & "'"
                da.SelectCommand.ExecuteNonQuery()
            End If
            For Each row As GridViewRow In gvdata_xmlinward.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkxmlinward"), CheckBox)
                    Dim textxml As TextBox = TryCast(row.Cells(2).FindControl("txtxmlinwardtags"), TextBox)
                    If chkRow.Checked Then
                        da.SelectCommand.CommandText = "Update mmm_mst_fields set InWardXMLTagName= '" & textxml.Text.Trim() & "' where documenttype='" & Session("XMLMAINDOC") & "' and displayname= '" & row.Cells(1).Text.Trim() & "'"
                        da.SelectCommand.ExecuteNonQuery()
                    Else
                        da.SelectCommand.CommandText = "Update mmm_mst_fields set InWardXMLTagName= NULL where documenttype='" & Session("XMLMAINDOC") & "' and displayname= '" & row.Cells(1).Text.Trim() & "'"
                        da.SelectCommand.ExecuteNonQuery()
                    End If
                End If
            Next
            lblxmlinwardmsg.Text = "Saved Successfully"

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If

        End Try
    End Sub
    Protected Sub bindxmlOutward(ByVal doctype As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            da.SelectCommand.CommandText = "Select displayname,fieldmapping,OutwardXMLTagname,RowFilterBPM from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & doctype.ToString() & "' order by displayname "
            da.SelectCommand.CommandType = CommandType.Text
            da.Fill(ds, "data")

            If ds.Tables("data").Rows.Count > 0 Then
                gvxmloutward.DataSource = ds.Tables("data")
                gvxmloutward.DataBind()

                For i As Integer = 0 To ds.Tables("data").Rows.Count - 1
                    If Not IsDBNull(ds.Tables("data").Rows(i).Item("OutwardXMLTagname")) Then
                        Dim chkRow As CheckBox = TryCast(gvxmloutward.Rows(i).Cells(0).FindControl("chkxmloutward"), CheckBox)
                        Dim textxml As TextBox = TryCast(gvxmloutward.Rows(i).Cells(2).FindControl("txtxmlOutwardtags"), TextBox)
                        Dim chkrowfilter As CheckBox = TryCast(gvxmloutward.Rows(i).Cells(3).FindControl("chkxmloutwardRowFilterBPM"), CheckBox)
                        textxml.Text = ds.Tables("data").Rows(i).Item("OutwardXMLTagname").ToString()
                        chkRow.Checked = True
                        If ds.Tables("data").Rows(i).Item("rowfilterbpm") = True Then
                            chkrowfilter.Checked = True
                        Else
                            chkrowfilter.Checked = False
                        End If
                    End If


                Next
            End If
        Catch ex As Exception
        End Try

    End Sub

    Protected Sub btnxmloutwardsave_Click(sender As Object, e As EventArgs) Handles btnxmloutwardsave.Click
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            If rowxmloutward.Visible = True Then
                da.SelectCommand.CommandText = "Update mmm_mst_forms set XMLOutwardDocType='" & txtxmloutwarddoctype.Text.Trim() & "', XMLOutwardEntityCode='" & txtxmloutwardentitycode.Text.Trim() & "',RowFilterXMlTag='" & txtrowfilterxmltag.Text.Trim() & "', RowFilterBPMField ='" & txtrowfilterbpmfield.Text.Trim() & "' where formname='" & Session("XMLMAINDOC") & "'"
                da.SelectCommand.ExecuteNonQuery()
            End If
            If rowchild.Visible = True Then
                da.SelectCommand.CommandText = "Update mmm_mst_forms set ChildMasterField='" & ddlchildmasterfield.SelectedItem.Text.Trim() & "' where formname='" & Session("XMLMAINDOC") & "' and eid=" & Session("EID") & ""
                da.SelectCommand.ExecuteNonQuery()
            End If
            For Each row As GridViewRow In gvxmloutward.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkxmloutward"), CheckBox)
                    Dim textxml As TextBox = TryCast(row.Cells(2).FindControl("txtxmlOutwardtags"), TextBox)
                    Dim chkrowfilter As CheckBox = TryCast(row.Cells(3).FindControl("chkxmloutwardRowFilterBPM"), CheckBox)
                    If chkRow.Checked = True Then
                        da.SelectCommand.CommandText = "Update mmm_mst_fields set OutWardXMLTagName= '" & textxml.Text.Trim() & "' where documenttype='" & Session("XMLMAINDOC") & "' and displayname= '" & row.Cells(1).Text.Trim() & "'"
                        da.SelectCommand.ExecuteNonQuery()
                    Else
                        da.SelectCommand.CommandText = "Update mmm_mst_fields set OutWardXMLTagName= NULL where documenttype='" & Session("XMLMAINDOC") & "' and displayname= '" & row.Cells(1).Text.Trim() & "'"
                        da.SelectCommand.ExecuteNonQuery()
                    End If

                    Dim ischk As Integer = 0
                    If chkrowfilter.Checked = True Then
                        ischk = 1
                    Else
                        ischk = 0
                    End If

                    If chkrowfilter.Checked = True Then
                        da.SelectCommand.CommandText = "Update mmm_mst_fields set RowFilterBPM= " & ischk & " where documenttype='" & Session("XMLMAINDOC") & "' and displayname= '" & row.Cells(1).Text.Trim() & "'"
                        da.SelectCommand.ExecuteNonQuery()
                    End If
                End If
            Next
            lblxmloutwardmsg.Text = "Saved Successfully"

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If

        End Try
    End Sub


    Protected Sub tvsource_SelectedNodeChanged(sender As Object, e As EventArgs) Handles tvadvform.SelectedNodeChanged
        Dim node As TreeNode = Me.tvsource.SelectedNode
        tvsource.SelectedNodeStyle.BackColor = Drawing.Color.Yellow

    End Sub
    'Code here starts for advance formula
    Private Sub LoadWorkGroupTree(ByVal doctype As String)

        ViewState("cnt") = 0
        Dim conStr As String = System.Configuration.ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = Nothing
        Dim cmd As SqlCommand = Nothing
        Dim da As SqlDataAdapter = Nothing
        Try
            Dim table As New DataTable()
            con = New SqlConnection(conStr)
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim sql As String = "select fieldid,displayname,fieldmapping,dropdowntype,dropdown from mmm_mst_fields where EID=" & Session("EID") & " and documenttype='" & doctype.ToString().Trim() & "' order by displayname"
            cmd = New SqlCommand(sql, con)
            da = New SqlDataAdapter(cmd)
            Dim ds As New DataSet
            da.Fill(ds, "table")

            Dim masterNode As New TreeNode(doctype.Trim.ToString())

            masterNode.Value = doctype.Trim.ToString()
            masterNode.ImageUrl = "images/Redp.png"
            masterNode.SelectAction = TreeNodeSelectAction.Expand
            'masterNode.NavigateUrl = "javascript:setCaret('" & masterNode.Text.ToString() & "')"
            masterNode.NavigateUrl = "javascript:setCaret('" & "Form." & masterNode.Text.ToString() & "')"
            tvadvform.Nodes.Add(masterNode)


            'tv.Attributes.Add("onclick", "return setCaret(" & masterNode.Text.ToString() & ");")
            Dim view As New DataView(ds.Tables("table"))
            For Each row As DataRowView In view
                ViewState("cnt") = 0
                If UCase(row.Item("dropdowntype").ToString) = "MASTER VALUED" Then
                    Dim n As New TreeNode()
                    n.Text = row.Item("displayname").ToString()
                    n.Value = row.Item("fieldmapping")
                    n.ImageUrl = "+"
                    n.ImageUrl = "images/redp.png"
                    n.NavigateUrl = "javascript:setCaret('" & "Form." & masterNode.Text.ToString() & "." & n.Text.ToString() & "')"
                    masterNode.ChildNodes.Add(n)
                    'tv.Attributes.Add("onclick", "return setCaret(" & n.Text.ToString() & ");")
                    LoadDocTree(row.Item("dropdown").ToString, n)
                Else
                    Dim n As New TreeNode()
                    n.Text = row.Item("displayname").ToString()
                    n.Value = row.Item("fieldmapping")
                    n.ImageUrl = "images/bluep.png"
                    n.NavigateUrl = "javascript:setCaret('" & "Form." & masterNode.Text.ToString() & "." & n.Text.ToString() & "')"
                    masterNode.ChildNodes.Add(n)
                    ' tv.Attributes.Add("onclick", "return setCaret(" & n.Text.ToString() & ");")
                End If

            Next

        Catch ex As Exception
            lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
            If Not cmd Is Nothing Then
                cmd.Dispose()
            End If

        End Try
    End Sub


    Private Sub LoadDocTree(ByVal dropdown As String, ByRef node As TreeNode)
        If dropdown.Contains("-") Then
            Dim str As String() = dropdown.ToString.Split("-")
            If str.Length > 1 Then
                If ViewState("cnt") < 2 Then


                    Dim ddtype As String = str(1).ToString
                    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                    Dim con As New SqlConnection(conStr)
                    Dim da As New SqlDataAdapter("", con)
                    Dim ds As New DataSet
                    Try
                        da.SelectCommand.CommandText = "select fieldid,displayname,fieldmapping,dropdown,dropdowntype from mmm_mst_fields where EID=" & Session("EID") & " and documenttype='" & ddtype.ToString().Trim() & "' order by displayname"
                        da.Fill(ds, "child")
                        If ds.Tables("child").Rows.Count > 0 Then

                            Dim view As New DataView(ds.Tables("child"))
                            For Each row As DataRowView In view
                                Dim n As New TreeNode()
                                If UCase(row("dropdowntype")).ToString = "MASTER VALUED" Then
                                    n.Text = row("displayname").ToString()
                                    n.Value = row("fieldmapping").ToString()
                                    n.ImageUrl = "images/redp.png"

                                    n.NavigateUrl = "javascript:setCaret('" & node.Text.ToString() & "." & n.Text.ToString() & "')"

                                    node.ChildNodes.Add(n)
                                    If UCase(str(1)).ToString = "USER" Then
                                        ViewState("cnt") = ViewState("cnt") + 1
                                    End If
                                    '   LoadDocTree(row.Item("dropdown").ToString, n)
                                Else
                                    n.Text = row("displayname").ToString()
                                    n.Value = row("fieldmapping").ToString()
                                    n.ImageUrl = "images/bluep.png"
                                    n.NavigateUrl = "javascript:setCaret('" & node.Text.ToString() & "." & n.Text.ToString() & "')"
                                    node.ChildNodes.Add(n)
                                End If
                            Next
                        End If
                    Catch ex As Exception
                        lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
                    Finally
                        If Not con Is Nothing Then
                            con.Close()
                        End If
                        If Not da Is Nothing Then
                            da.Dispose()
                        End If

                    End Try

                End If
            End If
        End If

    End Sub
    Protected Sub tvadvform_TreeNodeExpanded(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.TreeNodeEventArgs) Handles tvadvform.TreeNodeExpanded
        If e.Node.Parent Is Nothing Then
            Return
        End If
        Dim strNodeValue As String = e.Node.Value
        For Each node As TreeNode In e.Node.Parent.ChildNodes
            If node.Value <> strNodeValue Then
                node.Collapse()
            End If
        Next
    End Sub

    'end code

    ''tv source
    ' binding source Treeview

    Private Sub LoadWorkGroupTreeSource(ByVal doctype As String)
        ViewState("cnt") = 0
        Dim conStr As String = System.Configuration.ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = Nothing
        Dim cmd As SqlCommand = Nothing
        Dim da As SqlDataAdapter = Nothing
        Try
            Dim table As New DataTable()
            con = New SqlConnection(conStr)
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim sql As String = "select * from mmm_mst_fields where EID=" & Session("EID") & " and documenttype='" & doctype.ToString().Trim() & "' order by displayname"
            cmd = New SqlCommand(sql, con)
            da = New SqlDataAdapter(cmd)
            Dim ds As New DataSet
            da.Fill(ds, "table")

            Dim masterNode As New TreeNode(doctype.Trim.ToString())

            masterNode.Value = doctype.Trim.ToString()
            masterNode.ImageUrl = "images/Redp.png"
            masterNode.SelectAction = TreeNodeSelectAction.Expand
            tvsource.Nodes.Add(masterNode)

            Dim view As New DataView(ds.Tables("table"))
            For Each row As DataRowView In view
                ViewState("cnt") = 0
                If UCase(row.Item("dropdowntype").ToString) = "MASTER VALUED" Then
                    Dim n As New TreeNode()
                    n.Text = row.Item("displayname").ToString()
                    n.Value = row.Item("fieldmapping")
                    n.ImageUrl = "+"
                    n.ImageUrl = "images/redp.png"
                    n.NavigateUrl = "javascript:setCaret('" & "Ds." & masterNode.Text.ToString() & "." & n.Text.ToString() & "')"
                    masterNode.ChildNodes.Add(n)
                    LoadDocTree(row.Item("dropdown").ToString, n)
                Else
                    Dim n As New TreeNode()
                    n.Text = row.Item("displayname").ToString()
                    n.Value = row.Item("fieldmapping")
                    n.ImageUrl = "images/bluep.png"
                    n.NavigateUrl = "javascript:setCaret('" & "DS." & masterNode.Text.ToString() & "." & n.Text.ToString() & "')"
                    masterNode.ChildNodes.Add(n)

                End If

            Next

        Catch ex As Exception
            lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
            If Not cmd Is Nothing Then
                cmd.Dispose()
            End If

        End Try
    End Sub


    Protected Sub ddladvfoftype_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddladvfoftype.SelectedIndexChanged
        lblMsg.Text = String.Empty
        If UCase(ddladvfoftype.SelectedItem.Text) = "MASTER" Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)

            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet

            Try
                da.SelectCommand.CommandText = "Select  upper(formname)[Formname],formid from mmm_mst_forms where eid=" & Session("EID") & " and formtype='master' order by formname"
                da.Fill(ds, "master")

                If ds.Tables("master").Rows.Count > 0 Then
                    ddladvfodoctype.DataSource = ds.Tables("master")
                    ddladvfodoctype.DataTextField = "formname"
                    ddladvfodoctype.DataValueField = "formid"
                    ddladvfodoctype.DataBind()
                    ddladvfodoctype.Items.Insert(0, "SELECT")
                End If
            Catch ex As Exception
                lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
            Finally
                If Not con Is Nothing Then
                    con.Close()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try

        ElseIf UCase(ddladvfoftype.SelectedItem.Text) = "DOCUMENT" Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)

            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet

            Try
                da.SelectCommand.CommandText = "Select upper(formname)[Formname],formid from mmm_mst_forms where eid=" & Session("EID") & " and formtype='DOCUMENT' and formsource='menu driven' order by formname"
                da.Fill(ds, "document")

                If ds.Tables("document").Rows.Count > 0 Then
                    ddladvfodoctype.DataSource = ds.Tables("document")
                    ddladvfodoctype.DataTextField = "formname"
                    ddladvfodoctype.DataValueField = "formid"
                    ddladvfodoctype.DataBind()
                    ddladvfodoctype.Items.Insert(0, "SELECT")
                End If
            Catch ex As Exception
                lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
            Finally
                If Not con Is Nothing Then
                    con.Close()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try
        ElseIf UCase(ddladvfoftype.SelectedItem.Text) = "ACTION DRIVEN" Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)

            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet

            Try
                da.SelectCommand.CommandText = "Select  upper(formname)[Formname],formid from mmm_mst_forms where eid=" & Session("EID") & " and formsource='ACTION DRIVEN' order by formname"
                da.Fill(ds, "actiondriven")

                If ds.Tables("actiondriven").Rows.Count > 0 Then
                    ddladvfodoctype.DataSource = ds.Tables("actiondriven")
                    ddladvfodoctype.DataTextField = "formname"
                    ddladvfodoctype.DataValueField = "formid"
                    ddladvfodoctype.DataBind()
                    ddladvfodoctype.Items.Insert(0, "SELECT")
                End If
            Catch ex As Exception
                lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
            Finally
                If Not con Is Nothing Then
                    con.Close()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try
        ElseIf UCase(ddladvfoftype.SelectedItem.Text) = "DETAIL FORM" Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)

            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet

            Try
                da.SelectCommand.CommandText = "Select upper(formname)[Formname],formid from mmm_mst_forms where eid=" & Session("EID") & " and formsource='DETAIL FORM ' order by formname"
                da.Fill(ds, "detailform")

                If ds.Tables("detailform").Rows.Count > 0 Then
                    ddladvfodoctype.DataSource = ds.Tables("detailform")
                    ddladvfodoctype.DataTextField = "formname"
                    ddladvfodoctype.DataValueField = "formid"
                    ddladvfodoctype.DataBind()
                    ddladvfodoctype.Items.Insert(0, "SELECT")
                End If
            Catch ex As Exception
                lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
            Finally
                If Not con Is Nothing Then
                    con.Close()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try
        Else
            lblMsg.Text = "Please Select Form Source!!"
            ddladvfodoctype.Items.Clear()
            Exit Sub
        End If
    End Sub

    Protected Sub ddladvfodoctype_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddladvfodoctype.SelectedIndexChanged

        Call LoadWorkGroupTree(ddladvfodoctype.SelectedItem.Text.Trim().ToString())
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try

            da.SelectCommand.CommandText = "select upper(displayname)[formname],upper(fieldmapping)[fieldmapping] from mmm_mst_fields where eid=" & Session("Eid") & " and documenttype='" & Trim(ddladvfodoctype.SelectedItem.Text) & "' order by displayname"
            da.Fill(ds, "fields")
            If ds.Tables("fields").Rows.Count > 0 Then
                ddlsdf.DataSource = ds.Tables("fields")
                ddlsdf.DataTextField = "formname"
                ddlsdf.DataValueField = "fieldmapping"
                ddlsdf.DataBind()
                ddlsdf.Items.Insert(0, "SELECT")
            End If

        Catch ex As Exception
            lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
        Finally
            If Not con Is Nothing Then
                con.Close()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If

        End Try
    End Sub

    Protected Sub AddRelation(ByVal sender As Object, ByVal e As System.EventArgs)
        lblmsgFrelation.Text = ""
        btnsavefrelation.Text = "Save"
        lblsd.Text = ddladvfodoctype.SelectedItem.Text.ToString().Trim
        UpdatePanelFormulaRelation.Update()
        Me.modalpopupformularelation.Show()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try

            da.SelectCommand.CommandText = "select upper(displayname)[formname],upper(fieldmapping)[fieldmapping] from mmm_mst_fields where eid=" & Session("Eid") & " and documenttype='" & Trim(ddladvfodoctype.SelectedItem.Text) & "' order by displayname"
            da.Fill(ds, "fields")
            If ds.Tables("fields").Rows.Count > 0 Then
                ddlsdf.DataSource = ds.Tables("fields")
                ddlsdf.DataTextField = "formname"
                ddlsdf.DataValueField = "fieldmapping"
                ddlsdf.DataBind()
                ddlsdf.Items.Insert(0, "SELECT")
            End If

        Catch ex As Exception
            lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
        Finally
            If Not con Is Nothing Then
                con.Close()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If

        End Try
    End Sub
    Protected Sub DeleteHitFRelation(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)

        Dim frid As Integer = Convert.ToString(Me.gvmap.DataKeys(row.RowIndex).Value)

        ViewState("FRid") = frid
        Me.UpdatepanelFRelDel.Update()
        Me.modalpopupfreldel.Show()
    End Sub

    Protected Sub ddlsourcedoc_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlsourcedoc.SelectedIndexChanged
        bindfieldsRelation()
    End Sub
    Private Sub bindfieldsRelation()
        Dim conStr As String = System.Configuration.ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = Nothing
        Dim cmd As SqlCommand = Nothing
        Dim da As SqlDataAdapter = Nothing
        Try
            Dim table As New DataTable()
            con = New SqlConnection(conStr)
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim sql As String = "select displayname,fieldid,fieldmapping from mmm_mst_fields where EID=" & Session("EID") & " and documenttype='" & ddlsourcedoc.SelectedItem.Text.ToString().Trim() & "' order by displayname"
            cmd = New SqlCommand(sql, con)
            da = New SqlDataAdapter(cmd)
            Dim ds As New DataSet
            da.Fill(ds, "table")

            If ds.Tables("table").Rows.Count > 0 Then
                ddltf.DataSource = ds.Tables("table")
                ddltf.DataTextField = "displayname"
                ddltf.DataValueField = "fieldid"
                ddltf.DataBind()
                ddltf.Items.Insert(0, "Select")

                ddlsortingfields.DataSource = ds.Tables("table")
                ddlsortingfields.DataTextField = "displayname"
                ddlsortingfields.DataValueField = "fieldid"
                ddlsortingfields.DataBind()
                ddlsortingfields.Items.Insert(0, "Select")
            End If


        Catch ex As Exception
            lblMsg.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
            If Not cmd Is Nothing Then
                cmd.Dispose()
            End If

        End Try
    End Sub

    Protected Sub gvmapOnRowDataBound(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            Dim item As String = e.Row.Cells(3).Text
            For Each button As ImageButton In e.Row.Cells(0).Controls.OfType(Of ImageButton)()
                If button.CommandName = "Delete" Then
                    button.Attributes("onclick") = "if(!confirm('Do you want to delete " + item + "?')){ return false; };"
                End If
            Next
        End If
    End Sub
    Protected Sub gvmapOnRowDeleting(sender As Object, e As GridViewDeleteEventArgs)

        Dim index As Integer = Convert.ToInt32(e.RowIndex)
        ' Dim dt As DataTable = TryCast(Session("datat"), DataTable)
        Dim dt As DataTable = TryCast(ViewState("datat"), DataTable)

        'dt.Rows(index).Delete()
        dt.Rows.RemoveAt(index)

        ViewState("datat") = String.Empty

        Session("datat") = dt
        ViewState("datat") = dt
        bindgridrelation()
    End Sub
    Protected Sub bindgridrelation()
        Dim ds As New DataTable
        If Not ViewState("datat") Is Nothing Then
            ds = DirectCast(ViewState("datat"), DataTable)
        End If


        Dim dr As DataRow = ds.NewRow()

        dr(0) = ddladvfoftype.SelectedItem.Text.Trim()
        dr(1) = ddladvfodoctype.SelectedItem.Text.Trim()
        dr(2) = ddlsourcetype.SelectedItem.Text.Trim()
        dr(3) = ddlsourcedoc.SelectedItem.Text.Trim()
        dr(4) = ddlsdf.SelectedItem.Text.Trim()
        dr(5) = ddltf.SelectedItem.Text.Trim()
        dr(6) = ddlsortingfields.SelectedItem.Text.Trim()
        ds.Rows.Add(dr)
        gvmap.DataSource = Nothing
        gvmap.DataBind()
        Session("dsszz") = ds
        ViewState("datat") = ds
        gvmap.DataSource = ds
        gvmap.DataBind()
        updpaneladvanceformula.Update()
    End Sub

    Protected Sub ddlsourcetype_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlsourcetype.SelectedIndexChanged
        lblmsgFrelation.Text = String.Empty
        If UCase(ddlsourcetype.SelectedItem.Text) = "MASTER" Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)

            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet

            Try
                da.SelectCommand.CommandText = "Select  upper(formname)[Formname],formid from mmm_mst_forms where eid=" & Session("EID") & " and formtype='master' order by formname"
                da.Fill(ds, "master")

                If ds.Tables("master").Rows.Count > 0 Then
                    ddlsourcedoc.DataSource = ds.Tables("master")
                    ddlsourcedoc.DataTextField = "formname"
                    ddlsourcedoc.DataValueField = "formid"
                    ddlsourcedoc.DataBind()
                    ddlsourcedoc.Items.Insert(0, "SELECT")
                End If
            Catch ex As Exception
                lblmsgFrelation.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
            Finally
                If Not con Is Nothing Then
                    con.Close()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try

        ElseIf UCase(ddlsourcetype.SelectedItem.Text) = "DOCUMENT" Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)

            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet

            Try
                da.SelectCommand.CommandText = "Select upper(formname)[Formname],formid from mmm_mst_forms where eid=" & Session("EID") & " and formtype='DOCUMENT' and formsource='menu driven' order by formname"
                da.Fill(ds, "document")

                If ds.Tables("document").Rows.Count > 0 Then
                    ddlsourcedoc.DataSource = ds.Tables("document")
                    ddlsourcedoc.DataTextField = "formname"
                    ddlsourcedoc.DataValueField = "formid"
                    ddlsourcedoc.DataBind()
                    ddlsourcedoc.Items.Insert(0, "SELECT")
                End If
            Catch ex As Exception
                lblmsgFrelation.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
            Finally
                If Not con Is Nothing Then
                    con.Close()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try
        ElseIf UCase(ddlsourcetype.SelectedItem.Text) = "ACTION DRIVEN" Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)

            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet

            Try
                da.SelectCommand.CommandText = "Select  upper(formname)[Formname],formid from mmm_mst_forms where eid=" & Session("EID") & " and formsource='ACTION DRIVEN' order by formname"
                da.Fill(ds, "actiondriven")

                If ds.Tables("actiondriven").Rows.Count > 0 Then
                    ddlsourcedoc.DataSource = ds.Tables("actiondriven")
                    ddlsourcedoc.DataTextField = "formname"
                    ddlsourcedoc.DataValueField = "formid"
                    ddlsourcedoc.DataBind()
                    ddlsourcedoc.Items.Insert(0, "SELECT")
                End If
            Catch ex As Exception
                lblmsgFrelation.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
            Finally
                If Not con Is Nothing Then
                    con.Close()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try
        ElseIf UCase(ddlsourcetype.SelectedItem.Text) = "DETAIL FORM" Then
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)

            Dim da As New SqlDataAdapter("", con)
            Dim ds As New DataSet

            Try
                da.SelectCommand.CommandText = "Select upper(formname)[Formname],formid from mmm_mst_forms where eid=" & Session("EID") & " and formsource='DETAIL FORM ' order by formname"
                da.Fill(ds, "detailform")

                If ds.Tables("detailform").Rows.Count > 0 Then
                    ddlsourcedoc.DataSource = ds.Tables("detailform")
                    ddlsourcedoc.DataTextField = "formname"
                    ddlsourcedoc.DataValueField = "formid"
                    ddlsourcedoc.DataBind()
                    ddlsourcedoc.Items.Insert(0, "SELECT")
                End If
            Catch ex As Exception
                lblmsgFrelation.Text = "SERVER ERROR: PLEASE TRY AFTER SOME TIME"
            Finally
                If Not con Is Nothing Then
                    con.Close()
                End If
                If Not da Is Nothing Then
                    da.Dispose()
                End If

            End Try
        Else

            lblmsgFrelation.Text = "Please Select Source Type!!"
            ddlsourcedoc.Items.Clear()
            Exit Sub
        End If
    End Sub
    Protected Sub EditRecordFormulaRelation(sender As Object, e As EventArgs)
        Me.modalpopupformularelation.Hide()
        bindgridrelation()

        'CreateTreeView(ddlsourcedoc.SelectedItem.Text.ToString())
        LoadWorkGroupTreeSource(ddlsourcedoc.SelectedItem.Text.ToString())
        updpaneladvanceformula.Update()
    End Sub
    'Added For Multi LookupDDL
    Protected Sub ddlmlddlft_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlmlddlft.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            If Trim(ddlmlddlft.SelectedItem.Text) = "USER" Then
                da.SelectCommand.CommandText = "Select formname,formid from mmm_mst_forms where eid=" & Session("EID") & " and formname='user'   order by Formname "
                da.Fill(ds, "forms")
                If ds.Tables("forms").Rows.Count > 0 Then
                    ddlmlddlcf.DataSource = ds.Tables("forms")
                    ddlmlddlcf.DataTextField = "formname"
                    ddlmlddlcf.DataValueField = "formid"
                    ddlmlddlcf.DataBind()

                    ddlmlddlcf.Items.Insert(0, "Select")
                End If
            Else
                da.SelectCommand.CommandText = "Select formname,formid from mmm_mst_forms where eid=" & Session("EID") & " and formtype='" & Trim(ddlmlddlft.SelectedItem.Text.ToString()) & "' and isactive=1   order by Formname "
                da.Fill(ds, "forms")
                If ds.Tables("forms").Rows.Count > 0 Then
                    ddlmlddlcf.DataSource = ds.Tables("forms")
                    ddlmlddlcf.DataTextField = "formname"
                    ddlmlddlcf.DataValueField = "formid"
                    ddlmlddlcf.DataBind()
                    ddlmlddlcf.Items.Insert(0, "Select")
                End If
            End If


        Catch ex As Exception
            msg_mlddl.Text = "Error Occured: Please Try After sometime!"
        Finally
            If Not con Is Nothing Then
                con.Close()
            End If
            If Not ds Is Nothing Then
                ds.Dispose()
            End If

        End Try
    End Sub

    'Protected Sub ddlMLDDLType_SeletectedIndexChanged(sender As Object, e As EventArgs) Handles ddlMLDDLType.SelectedIndexChanged
    '    ddlmlddlcf_SelectedIndexChanged(ddlmlddlcf, New EventArgs())
    'End Sub
    Protected Sub ddlmlddlcf_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlmlddlcf.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            da.SelectCommand.CommandText = "SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype in ('MASTER VALUED','CHILD VALUED','SESSION VALUED') AND fieldtype in ('Drop Down','AutoComplete')  AND  DOCUMENTTYPE='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' AND EID=" & Session("EID") & " order by displayname"
            da.Fill(ds, "fields")
            If ds.Tables("fields").Rows.Count > 0 Then
                ddlmlddlf.Items.Clear()
                For i As Integer = 0 To ds.Tables("fields").Rows.Count - 1
                    ddlmlddlf.Items.Add(ds.Tables("fields").Rows(i).Item("displayName").ToString())
                    ddlmlddlf.Items(i).Value = ds.Tables("fields").Rows(i).Item("FieldMapping").ToString()
                Next
                ddlmlddlf.Items.Insert(0, "Select Field")
            End If

            'code below for binding checkbox list with common fields in selected Dropdown's Document and the one you are adding the field for the main document
            'If ddlMLDDLType.SelectedIndex = 1 Then
            If ViewState("FS").ToString().Trim().ToUpper <> "DETAIL FORM" Then
                'da.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by f.displayname;"
                da.SelectCommand.CommandText = "select distinct f.fieldid,(f.displayname+'(DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;"
                da.Fill(ds, "mlfields")
                Dim dt As New DataTable()
                dt = ds.Tables("mlfields").Clone()

                'If ds.Tables("mlfields1").Rows.Count > 0 Then
                '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                '                Dim drs As DataRow
                '                drs = dt.NewRow()
                '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                '                dt.Rows.Add(drs)
                '            End If
                '        Next
                '    Next
                '    If (dt.Rows.Count > 0) Then
                '        For Each dr As DataRow In dt.Rows
                '            Dim drs1 As DataRow
                '            drs1 = ds.Tables("mlfields").NewRow()
                '            drs1("fieldid") = dr("fieldid")
                '            drs1("displayname") = dr("displayname")
                '            drs1("fieldmapping") = dr("fieldmapping")
                '            drs1("dropdown") = dr("dropdown")
                '            ds.Tables("mlfields").Rows.Add(drs1)
                '        Next
                '    End If
                'End If
                If ds.Tables("mlfields1").Rows.Count > 0 Then
                    For Each dr As DataRow In ds.Tables("mlfields1").Rows
                        Dim drs1 As DataRow
                        drs1 = ds.Tables("mlfields").NewRow()
                        drs1("fieldid") = dr("fieldid")
                        drs1("displayname") = dr("displayname")
                        drs1("fieldmapping") = dr("fieldmapping")
                        drs1("dropdown") = dr("dropdown")
                        ds.Tables("mlfields").Rows.Add(drs1)
                    Next
                End If
                If ds.Tables("mlfields").Rows.Count > 0 Then
                    chkmlddl.Items.Clear()
                    For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        chkmlddl.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                        chkmlddl.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                    Next
                    'ddlfieldsMLC.Items.Insert(0, "Select Field")
                Else
                    If (chkmlddl.Items.Count > 0) Then
                        chkmlddl.Items.Clear()
                    End If
                End If
                'ElseIf ddlMLDDLType.SelectedIndex = 2 Then
                '    da.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by f.displayname"
                '    da.Fill(ds, "mlfields")
                '    Dim dt As New DataTable()
                '    dt = ds.Tables("mlfields").Clone()

                '    'If ds.Tables("mlfields1").Rows.Count > 0 Then
                '    '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                '    '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                '    '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                '    '                Dim drs As DataRow
                '    '                drs = dt.NewRow()
                '    '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                '    '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                '    '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                '    '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                '    '                dt.Rows.Add(drs)
                '    '            End If
                '    '        Next
                '    '    Next
                '    '    If (dt.Rows.Count > 0) Then
                '    '        For Each dr As DataRow In dt.Rows
                '    '            Dim drs1 As DataRow
                '    '            drs1 = ds.Tables("mlfields").NewRow()
                '    '            drs1("fieldid") = dr("fieldid")
                '    '            drs1("displayname") = dr("displayname")
                '    '            drs1("fieldmapping") = dr("fieldmapping")
                '    '            drs1("dropdown") = dr("dropdown")
                '    '            ds.Tables("mlfields").Rows.Add(drs1)
                '    '        Next
                '    '    End If
                '    'End If
                '    If ds.Tables("mlfields").Rows.Count > 0 Then
                '        chkmlddl.Items.Clear()
                '        For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                '            chkmlddl.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                '            chkmlddl.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                '        Next
                '        'ddlfieldsMLC.Items.Insert(0, "Select Field")
                '    Else
                '        If (chkmlddl.Items.Count > 0) Then
                '            chkmlddl.Items.Clear()
                '        End If
                '    End If
            Else

                da.SelectCommand.CommandText = "select distinct f.fieldid,(f.displayname+'(CHILD DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (CHILD LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;select distinct f.fieldid,(f.displayname+'(DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in (select top(1) documenttype from MMM_MST_FIELDS where dropdown='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & ") and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in (select top(1) documenttype from MMM_MST_FIELDS where dropdown='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & ") and a.DocumentType='" & ddlmlddlcf.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;"
                da.Fill(ds, "mlfields")
                Dim dt As New DataTable()
                dt = ds.Tables("mlfields").Clone()

                'If ds.Tables("mlfields1").Rows.Count > 0 Then
                '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                '                Dim drs As DataRow
                '                drs = dt.NewRow()
                '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                '                dt.Rows.Add(drs)
                '            End If
                '        Next
                '    Next
                '    If (dt.Rows.Count > 0) Then
                '        For Each dr As DataRow In dt.Rows
                '            Dim drs1 As DataRow
                '            drs1 = ds.Tables("mlfields").NewRow()
                '            drs1("fieldid") = dr("fieldid")
                '            drs1("displayname") = dr("displayname")
                '            drs1("fieldmapping") = dr("fieldmapping")
                '            drs1("dropdown") = dr("dropdown")
                '            ds.Tables("mlfields").Rows.Add(drs1)
                '        Next
                '    End If
                'End If
                If ds.Tables("mlfields1").Rows.Count > 0 Then
                    For Each dr As DataRow In ds.Tables("mlfields1").Rows
                        Dim drs1 As DataRow
                        drs1 = ds.Tables("mlfields").NewRow()
                        drs1("fieldid") = dr("fieldid")
                        drs1("displayname") = dr("displayname")
                        drs1("fieldmapping") = dr("fieldmapping")
                        drs1("dropdown") = dr("dropdown")
                        ds.Tables("mlfields").Rows.Add(drs1)
                    Next
                End If
                If ds.Tables("mlfields2").Rows.Count > 0 Then
                    For Each dr As DataRow In ds.Tables("mlfields2").Rows
                        Dim drs1 As DataRow
                        drs1 = ds.Tables("mlfields").NewRow()
                        drs1("fieldid") = dr("fieldid")
                        drs1("displayname") = dr("displayname")
                        drs1("fieldmapping") = dr("fieldmapping")
                        drs1("dropdown") = dr("dropdown")
                        ds.Tables("mlfields").Rows.Add(drs1)
                    Next
                End If
                If ds.Tables("mlfields3").Rows.Count > 0 Then
                    For Each dr As DataRow In ds.Tables("mlfields3").Rows
                        Dim drs1 As DataRow
                        drs1 = ds.Tables("mlfields").NewRow()
                        drs1("fieldid") = dr("fieldid")
                        drs1("displayname") = dr("displayname")
                        drs1("fieldmapping") = dr("fieldmapping")
                        drs1("dropdown") = dr("dropdown")
                        ds.Tables("mlfields").Rows.Add(drs1)
                    Next
                End If

                If ds.Tables("mlfields").Rows.Count > 0 Then
                    chkmlddl.Items.Clear()
                    For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        chkmlddl.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                        chkmlddl.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                    Next
                    'ddlfieldsMLC.Items.Insert(0, "Select Field")
                Else
                    If (chkmlddl.Items.Count > 0) Then
                        chkmlddl.Items.Clear()
                    End If
                End If
            End If






        Catch ex As Exception
            lbldispmsgML.Text = "Error Occured: Please Try After sometime!"
        Finally
            If Not con Is Nothing Then
                con.Close()
            End If
            If Not ds Is Nothing Then
                ds.Dispose()
            End If

        End Try

    End Sub
    Protected Sub ddlFtypeMultiL_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlFtypeMultiL.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            If Trim(ddlFtypeMultiL.SelectedItem.Text) = "USER" Then
                da.SelectCommand.CommandText = "Select formname,formid from mmm_mst_forms where eid=" & Session("EID") & " and formname='user' order by Formname "
                da.Fill(ds, "forms")
                If ds.Tables("forms").Rows.Count > 0 Then
                    ddlcompositeForm.DataSource = ds.Tables("forms")
                    ddlcompositeForm.DataTextField = "formname"
                    ddlcompositeForm.DataValueField = "formid"
                    ddlcompositeForm.DataBind()

                    ddlcompositeForm.Items.Insert(0, "Select")
                End If
            Else
                da.SelectCommand.CommandText = "Select formname,formid from mmm_mst_forms where eid=" & Session("EID") & " and formtype='" & Trim(ddlFtypeMultiL.SelectedItem.Text.ToString()) & "' and isactive=1 order by Formname "
                da.Fill(ds, "forms")
                If ds.Tables("forms").Rows.Count > 0 Then
                    ddlcompositeForm.DataSource = ds.Tables("forms")
                    ddlcompositeForm.DataTextField = "formname"
                    ddlcompositeForm.DataValueField = "formid"
                    ddlcompositeForm.DataBind()
                    ddlcompositeForm.Items.Insert(0, "Select")
                End If
            End If


        Catch ex As Exception
            lbldispmsgML.Text = "Error Occured: Please Try After sometime!"
        Finally
            If Not con Is Nothing Then
                con.Close()
            End If
            If Not ds Is Nothing Then
                ds.Dispose()
            End If

        End Try

    End Sub
    'Protected Sub ddlFieldType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlFieldType.SelectedIndexChanged
    '    ddlcompositeForm_SelectedIndexChanged(ddlcompositeForm, New EventArgs())
    'End Sub
    Protected Sub ddlcompositeForm_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlcompositeForm.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try
            'If (ddlFieldType.SelectedIndex = 1) Then
            If (ViewState("FS").ToString().ToUpper().Trim() <> "DETAIL FORM") Then


                da.SelectCommand.CommandText = "SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype not in ('MASTER VALUED') AND  DOCUMENTTYPE='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' AND EID=" & Session("EID") & " order by displayname"
                da.Fill(ds, "fields")
                If ds.Tables("fields").Rows.Count > 0 Then
                    ddlfieldsMLC.Items.Clear()
                    For i As Integer = 0 To ds.Tables("fields").Rows.Count - 1
                        ddlfieldsMLC.Items.Add(ds.Tables("fields").Rows(i).Item("displayName").ToString())
                        ddlfieldsMLC.Items(i).Value = ds.Tables("fields").Rows(i).Item("FieldMapping").ToString()
                    Next
                    ddlfieldsMLC.Items.Insert(0, "Select Field")
                End If

                'code below for binding checkbox list with common fields in selected Dropdown's Document and the one you are adding the field for the main document

                da.SelectCommand.CommandText = "select distinct f.fieldid,(f.displayname+'(DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;"
                da.Fill(ds, "mlfields")
                Dim dt As New DataTable()
                dt = ds.Tables("mlfields").Clone()

                'If ds.Tables("mlfields1").Rows.Count > 0 Then
                '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                '                Dim drs As DataRow
                '                drs = dt.NewRow()
                '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                '                dt.Rows.Add(drs)
                '            End If
                '        Next
                '    Next
                '    If (dt.Rows.Count > 0) Then
                '        For Each dr As DataRow In dt.Rows
                '            Dim drs1 As DataRow
                '            drs1 = ds.Tables("mlfields").NewRow()
                '            drs1("fieldid") = dr("fieldid")
                '            drs1("displayname") = dr("displayname")
                '            drs1("fieldmapping") = dr("fieldmapping")
                '            drs1("dropdown") = dr("dropdown")
                '            ds.Tables("mlfields").Rows.Add(drs1)
                '        Next
                '    End If
                'End If
                If ds.Tables("mlfields1").Rows.Count > 0 Then
                    For Each dr As DataRow In ds.Tables("mlfields1").Rows
                        Dim drs1 As DataRow
                        drs1 = ds.Tables("mlfields").NewRow()
                        drs1("fieldid") = dr("fieldid")
                        drs1("displayname") = dr("displayname")
                        drs1("fieldmapping") = dr("fieldmapping")
                        drs1("dropdown") = dr("dropdown")
                        ds.Tables("mlfields").Rows.Add(drs1)
                    Next
                End If
                If ds.Tables("mlfields").Rows.Count > 0 Then
                    chklistMultiLookup.Items.Clear()
                    For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        chklistMultiLookup.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                        chklistMultiLookup.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                    Next
                    'ddlfieldsMLC.Items.Insert(0, "Select Field")
                Else
                    If (chklistMultiLookup.Items.Count > 0) Then
                        chklistMultiLookup.Items.Clear()
                    End If
                End If
            Else
                da.SelectCommand.CommandText = "SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype not in ('MASTER VALUED') AND  DOCUMENTTYPE='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' AND EID=" & Session("EID") & " order by displayname"
                da.Fill(ds, "fields")
                If ds.Tables("fields").Rows.Count > 0 Then
                    ddlfieldsMLC.Items.Clear()
                    For i As Integer = 0 To ds.Tables("fields").Rows.Count - 1
                        ddlfieldsMLC.Items.Add(ds.Tables("fields").Rows(i).Item("displayName").ToString())
                        ddlfieldsMLC.Items(i).Value = ds.Tables("fields").Rows(i).Item("FieldMapping").ToString()
                    Next
                    ddlfieldsMLC.Items.Insert(0, "Select Field")
                End If


                da.SelectCommand.CommandText = "select distinct f.fieldid,(f.displayname+'(CHILD DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (CHILD LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down'  and a.DropDownType='Master Valued' and f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " where f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "'  order by displayname;select distinct f.fieldid,(f.displayname+'(DROPDOWN)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in (select top(1) documenttype from MMM_MST_FIELDS where dropdown='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & ") and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.dropdowntype='master valued' order by displayname;select distinct f.fieldid,(f.displayname+' (LOOKUPDDL)') as displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype in (select top(1) documenttype from MMM_MST_FIELDS where dropdown='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & ") and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by displayname;"
                da.Fill(ds, "mlfields")
                Dim dt As New DataTable()
                dt = ds.Tables("mlfields").Clone()

                'If ds.Tables("mlfields1").Rows.Count > 0 Then
                '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
                '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
                '                Dim drs As DataRow
                '                drs = dt.NewRow()
                '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
                '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
                '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
                '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
                '                dt.Rows.Add(drs)
                '            End If
                '        Next
                '    Next
                '    If (dt.Rows.Count > 0) Then
                '        For Each dr As DataRow In dt.Rows
                '            Dim drs1 As DataRow
                '            drs1 = ds.Tables("mlfields").NewRow()
                '            drs1("fieldid") = dr("fieldid")
                '            drs1("displayname") = dr("displayname")
                '            drs1("fieldmapping") = dr("fieldmapping")
                '            drs1("dropdown") = dr("dropdown")
                '            ds.Tables("mlfields").Rows.Add(drs1)
                '        Next
                '    End If
                'End If
                If ds.Tables("mlfields1").Rows.Count > 0 Then
                    For Each dr As DataRow In ds.Tables("mlfields1").Rows
                        Dim drs1 As DataRow
                        drs1 = ds.Tables("mlfields").NewRow()
                        drs1("fieldid") = dr("fieldid")
                        drs1("displayname") = dr("displayname")
                        drs1("fieldmapping") = dr("fieldmapping")
                        drs1("dropdown") = dr("dropdown")
                        ds.Tables("mlfields").Rows.Add(drs1)
                    Next
                End If
                If ds.Tables("mlfields2").Rows.Count > 0 Then
                    For Each dr As DataRow In ds.Tables("mlfields2").Rows
                        Dim drs1 As DataRow
                        drs1 = ds.Tables("mlfields").NewRow()
                        drs1("fieldid") = dr("fieldid")
                        drs1("displayname") = dr("displayname")
                        drs1("fieldmapping") = dr("fieldmapping")
                        drs1("dropdown") = dr("dropdown")
                        ds.Tables("mlfields").Rows.Add(drs1)
                    Next
                End If
                If ds.Tables("mlfields3").Rows.Count > 0 Then
                    For Each dr As DataRow In ds.Tables("mlfields3").Rows
                        Dim drs1 As DataRow
                        drs1 = ds.Tables("mlfields").NewRow()
                        drs1("fieldid") = dr("fieldid")
                        drs1("displayname") = dr("displayname")
                        drs1("fieldmapping") = dr("fieldmapping")
                        drs1("dropdown") = dr("dropdown")
                        ds.Tables("mlfields").Rows.Add(drs1)
                    Next
                End If
                If ds.Tables("mlfields").Rows.Count > 0 Then
                    chklistMultiLookup.Items.Clear()
                    For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
                        chklistMultiLookup.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
                        chklistMultiLookup.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
                    Next
                    'ddlfieldsMLC.Items.Insert(0, "Select Field")
                Else
                    If (chklistMultiLookup.Items.Count > 0) Then
                        chklistMultiLookup.Items.Clear()
                    End If
                End If
            End If
            'ElseIf (ddlFieldType.SelectedIndex = 2) Then
            '    da.SelectCommand.CommandText = "SELECT fieldid,displayName,FieldMapping FROM MMM_MST_FIELDS WHERE dropdowntype not in ('MASTER VALUED') AND  DOCUMENTTYPE='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' AND EID=" & Session("EID") & " order by displayname"
            '    da.Fill(ds, "fields")
            '    If ds.Tables("fields").Rows.Count > 0 Then
            '        ddlfieldsMLC.Items.Clear()
            '        For i As Integer = 0 To ds.Tables("fields").Rows.Count - 1
            '            ddlfieldsMLC.Items.Add(ds.Tables("fields").Rows(i).Item("displayName").ToString())
            '            ddlfieldsMLC.Items(i).Value = ds.Tables("fields").Rows(i).Item("FieldMapping").ToString()
            '        Next
            '        ddlfieldsMLC.Items.Insert(0, "Select Field")
            '    End If

            '    'code below for binding checkbox list with common fields in selected Dropdown's Document and the one you are adding the field for the main document

            '    da.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype,f.dropdown from mmm_mst_fields f inner join mmm_mst_fields a on f.DDLlookupValueSource=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & Session("EID") & " and a.eid=" & Session("EID") & " and f.documenttype='" & ViewState("FORMNAME").ToString() & "' and a.DocumentType='" & ddlcompositeForm.SelectedItem.Text.Trim() & "' and f.DDLlookupValueSource is not null and a.fieldtype='Drop Down' order by f.displayname;"
            '    da.Fill(ds, "mlfields")
            '    Dim dt As New DataTable()
            '    dt = ds.Tables("mlfields").Clone()

            '    'If ds.Tables("mlfields1").Rows.Count > 0 Then
            '    '    For i As Integer = 0 To ds.Tables("mlfields1").Rows.Count - 1
            '    '        For j As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
            '    '            If ds.Tables("mlfields").Rows(j).Item("dropdown").ToString().Contains("-" & ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString() & "-") Then
            '    '                Dim drs As DataRow
            '    '                drs = dt.NewRow()
            '    '                drs("fieldid") = ds.Tables("mlfields1").Rows(i).Item("fieldid").ToString()
            '    '                drs("displayname") = ds.Tables("mlfields1").Rows(i).Item("displayname").ToString()
            '    '                drs("fieldmapping") = ds.Tables("mlfields1").Rows(i).Item("fieldmapping").ToString()
            '    '                drs("dropdown") = ds.Tables("mlfields1").Rows(i).Item("DDLlookupValueSource").ToString()
            '    '                dt.Rows.Add(drs)
            '    '            End If
            '    '        Next
            '    '    Next
            '    '    If (dt.Rows.Count > 0) Then
            '    '        For Each dr As DataRow In dt.Rows
            '    '            Dim drs1 As DataRow
            '    '            drs1 = ds.Tables("mlfields").NewRow()
            '    '            drs1("fieldid") = dr("fieldid")
            '    '            drs1("displayname") = dr("displayname")
            '    '            drs1("fieldmapping") = dr("fieldmapping")
            '    '            drs1("dropdown") = dr("dropdown")
            '    '            ds.Tables("mlfields").Rows.Add(drs1)
            '    '        Next
            '    '    End If
            '    'End If
            '    If ds.Tables("mlfields").Rows.Count > 0 Then
            '        chklistMultiLookup.Items.Clear()
            '        For i As Integer = 0 To ds.Tables("mlfields").Rows.Count - 1
            '            chklistMultiLookup.Items.Add(ds.Tables("mlfields").Rows(i).Item("displayName").ToString())
            '            chklistMultiLookup.Items(i).Value = ds.Tables("mlfields").Rows(i).Item("fieldid").ToString()
            '        Next
            '        'ddlfieldsMLC.Items.Insert(0, "Select Field")
            '    Else
            '        If (chklistMultiLookup.Items.Count > 0) Then
            '            chklistMultiLookup.Items.Clear()
            '        End If
            '    End If

            'Else
            '    If (chklistMultiLookup.Items.Count > 0) Then
            '        chklistMultiLookup.Items.Clear()
            '    End If
            '    If (ddlfieldsMLC.Items.Count > 0) Then
            '        ddlfieldsMLC.Items.Clear()
            '    End If
            'End If






        Catch ex As Exception
            lbldispmsgML.Text = "Error Occured: Please Try After sometime!"
        Finally
            If Not con Is Nothing Then
                con.Close()
            End If
            If Not ds Is Nothing Then
                ds.Dispose()
            End If

        End Try
    End Sub

    'Change By Mayank for Field Mapping Start Here 2
    Protected Sub ddlRel_doc_type_SelectedIndexChanged(sender As Object, e As EventArgs)
        Try
            If (ddlRel_doc_type.SelectedIndex <> 0) Then
                Dim ar As String() = ddlRel_doc_type.SelectedValue.Trim().Split("-")
                Dim EID = Session("EID")
                Dim conStrs As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                Dim queryrelType As String
                If (ddlRelation_Type.SelectedIndex = 0) Then
                    'old Query
                    'queryrelType = "select top(1) fieldid,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(0).ToString() & "-%' and isactive=1;select top(1) fieldid,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(1).ToString() & "-%' and isactive=1"
                    queryrelType = "select top(1) 'Main.Self.'+(select fieldMapping from mmm_mst_fields where isactive=1 and documenttype='" & hdnFromName.Value & "' and eid=" & EID & " and '-'+dropdown+'-' like '%" & ar(0).ToString() & "-%')+':R.'+(select fieldMapping from mmm_mst_fields where documenttype in(select T_Doc from mmm_mst_relation where eid=" & EID & ") and '-'+dropdown+'-' like '%-" & ar(0).ToString() & "-%' AND eid=" & EID & ") as val,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(0).ToString() & "-%' and isactive=1;Select top(1) 'Main.Self.'+(select fieldMapping from mmm_mst_fields where isactive=1 and documenttype='" & hdnFromName.Value & "' and eid=" & EID & " and '-'+dropdown+'-' like '%-" & ar(1).ToString() & "-%')+':R.'+(select fieldMapping from mmm_mst_fields where documenttype in(select T_Doc from mmm_mst_relation where eid=" & EID & ") and '-'+dropdown+'-' like '%-" & ar(1).ToString() & "-%' and eid=" & EID & ") as val,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(1).ToString() & "-%' and isactive=1;"
                Else
                    If (ddlChild.Items.Count > 0) Then
                        'old Value
                        'queryrelType = "select top(1) fieldid,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(0).ToString() & "-%' and isactive=1;select top(1) fieldid,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(1).ToString() & "-%' and isactive=1;select top(1) fieldid,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(0).ToString() & "-%' and isactive=1;select top(1) fieldid,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & ddlChild.SelectedValue.Trim() & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(1).ToString() & "-%' and isactive=1;select top(1) fieldid,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & ddlChild.SelectedValue.Trim() & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(0).ToString() & "-%' and isactive=1;select top(1) fieldid,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & ddlChild.SelectedValue.Trim() & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(1).ToString() & "-%' and isactive=1"
                        queryrelType = "select top(1) 'Main.Self.'+(select fieldMapping from mmm_mst_fields where isactive=1 and documenttype='" & hdnFromName.Value & "' and eid=" & EID & " and '-'+dropdown+'-' like '%" & ar(0).ToString() & "-%')+':R.'+(select fieldMapping from mmm_mst_fields where documenttype in(select T_Doc from mmm_mst_relation where eid=" & EID & ") and '-'+dropdown+'-' like '%-" & ar(0).ToString() & "-%' and eid=" & EID & ") as val,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(0).ToString() & "-%' and isactive=1;Select top(1) 'Main.Self.'+(select fieldMapping from mmm_mst_fields where isactive=1 and documenttype='" & hdnFromName.Value & "' and eid=" & EID & " and '-'+dropdown+'-' like '%-" & ar(1).ToString() & "-%')+':R.'+(select fieldMapping from mmm_mst_fields where documenttype in(select T_Doc from mmm_mst_relation where eid=" & EID & ") and '-'+dropdown+'-' like '%-" & ar(1).ToString() & "-%' and eid=" & EID & ") as val,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & hdnFromName.Value & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(1).ToString() & "-%' and isactive=1;select top(1) 'CHILD.'+'" & ddlChild.SelectedValue.Trim() & "'+'.'+(select fieldMapping from mmm_mst_fields where isactive=1 and documenttype='" & ddlChild.SelectedValue.Trim() & "' and eid=" & EID & " and '-'+dropdown+'-' like '%-" & ar(1).ToString().Trim() & "-%')+':R.'+(select fieldMapping from mmm_mst_fields where documenttype in(select T_Doc from mmm_mst_relation where eid=" & EID & ") and '-'+dropdown+'-' like '%-" & ar(1).ToString() & "-%' and eid=" & EID & ") as val,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & ddlChild.SelectedValue.Trim() & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(1).ToString() & "-%' and isactive=1;Select top(1) 'CHILD.'+'" & ddlChild.SelectedValue.Trim() & "'+'.'+(select fieldMapping from mmm_mst_fields where isactive=1 and documenttype='" & ddlChild.SelectedValue.Trim() & "' and eid=" & EID & " and '-'+dropdown+'-' like '%-" & ar(0).ToString() & "-%')+':R.'+(select fieldMapping from mmm_mst_fields where documenttype in(select T_Doc from mmm_mst_relation where eid=" & EID & ") and '-'+dropdown+'-' like '%-" & ar(0).ToString() & "-%' and eid=" & EID & ") as val,displayname from mmm_mst_fields where eid=" & EID & " and documenttype='" & ddlChild.SelectedValue.Trim() & "' and fieldtype ='Drop Down' and '-'+ dropdown+'-' like'%-" & ar(0).ToString() & "-%' and isactive=1"
                    Else
                        Exit Sub
                    End If
                End If

                Dim DS As New DataSet()
                Using con = New SqlConnection(conStrs)
                    Using da = New SqlDataAdapter(queryrelType, con)
                        da.Fill(DS)
                    End Using
                End Using

                If (ddlSource.Items.Count > 0) Then
                    ddlSource.Items.Clear()
                End If
                If (ddlSTarget.Items.Count > 0) Then
                    ddlSTarget.Items.Clear()
                End If
                If (DS.Tables(0).Rows.Count > 0) Then
                    ddlSource.DataSource = DS.Tables(0)
                    ddlSource.DataTextField = "displayname"
                    ddlSource.DataValueField = "val"
                    ddlSource.DataBind()
                Else
                    ddlSource.Items.Clear()
                End If
                If (DS.Tables(1).Rows.Count > 0) Then
                    ddlSTarget.DataSource = DS.Tables(1)
                    ddlSTarget.DataTextField = "displayname"
                    ddlSTarget.DataValueField = "val"
                    ddlSTarget.DataBind()
                End If
                If (ddlSource.Items.Count = 0) Then
                    If (DS.Tables(3).Rows.Count > 0) Then
                        ddlSource.DataSource = DS.Tables(3)
                        ddlSource.DataTextField = "displayname"
                        ddlSource.DataValueField = "val"
                        ddlSource.DataBind()
                        'Else
                        '    If (DS.Tables(4).Rows.Count > 0) Then
                        '        ddlSource.DataSource = DS.Tables(4)
                        '        ddlSource.DataTextField = "displayname"
                        '        ddlSource.DataValueField = "fieldid"
                        '        ddlSource.DataBind()
                        '    End If
                    End If
                End If
                If (ddlSTarget.Items.Count = 0) Then
                    If (DS.Tables(2).Rows.Count > 0) Then
                        ddlSTarget.DataSource = DS.Tables(2)
                        ddlSTarget.DataTextField = "displayname"
                        ddlSTarget.DataValueField = "val"
                        ddlSTarget.DataBind()
                        'Else
                        '    If (DS.Tables(5).Rows.Count > 0) Then
                        '        ddlSTarget.DataSource = DS.Tables(5)
                        '        ddlSTarget.DataTextField = "displayname"
                        '        ddlSTarget.DataValueField = "fieldid"
                        '        ddlSTarget.DataBind()
                        '    End If
                    End If
                End If
            Else
                If (ddlSource.Items.Count > 0) Then
                    ddlSource.Items.Clear()
                End If
                If (ddlSTarget.Items.Count > 0) Then
                    ddlSTarget.Items.Clear()
                End If
            End If

            'If (ddlSTarget.Items.Count > 0) Then
            'Else
            '    If (ddlSource.Items.Count > 0) Then
            '        ddlSource.Items.Clear()
            '    End If
            '    If (ddlSTarget.Items.Count > 0) Then
            '        ddlSTarget.Items.Clear()
            '    End If
            'End If
        Catch ex As Exception

        End Try
        UPB.Update()

    End Sub

    Protected Sub ddlRelation_Type_SelectedIndexChanged(sender As Object, e As EventArgs)
        Dim EID = Session("EID")
        If (ddlRelation_Type.SelectedIndex = 0) Then
            chld.Visible = False
            MainBind()
        Else
            chld.Visible = True
            If (ddlChild.Items.Count > 0) Then
                BindBasedOnChild()
            Else
                MainBind()
            End If

        End If
        ddlRel_doc_type_SelectedIndexChanged(ddlRel_doc_type, New EventArgs())
        UPB.Update()
    End Sub
    Protected Sub BindChild(type As Boolean)
        Dim EID = Session("EID")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim Query = "select displayname,dropdown from mmm_mst_fields where documenttype='" & hdnFromName.Value.Trim() & "' and FieldType='Child Item' and isactive=1 and Eid=" & EID
        Dim DSField As New DataSet()
        Using con = New SqlConnection(conStr)
            Using da = New SqlDataAdapter(Query, con)
                da.Fill(DSField)
            End Using
        End Using
        ddlChild.DataSource = DSField.Tables(0)
        ddlChild.DataTextField = "displayname"
        ddlChild.DataValueField = "dropdown"
        ddlChild.DataBind()
        If (type = True) Then
        Else
            ddlRelation_Type_SelectedIndexChanged(ddlRelation_Type, New EventArgs())
        End If

    End Sub

    Protected Sub MainBind()
        Dim EID = Session("EID")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim Query = "select F.FormName+'-'+FF.DisPlayName as DisplayName,'Master-'+F.FormName+'-'+FF.FieldMapping as FieldMapping,FF.FieldType,FF.DataType FROM MMM_MST_FIELDS FF INNER JOIN MMM_MST_FORMS F ON (F.EID=FF.EID AND F.FormName=FF.DocumentType)  WHERE FF.IsActive = 1 And FF.EID = " & EID & " And  FF.documenttype='" & hdnFromName.Value.Trim() & "';select isnull(Balance_Maintenance_Mode,0)'Balance_Maintenance_Mode',ISnull(Effective_Date_Field,0)'Effective_Date_Field', isnull(Balance_Field, 0) 'Balance_Field',ISnull(Item_Number,0)'Item_Number' FROM MMM_MST_FORMS WHERE FormName='" & hdnFromName.Value.Trim() & "'"
        Dim DSField As New DataSet()
        Using con = New SqlConnection(conStr)
            Using da = New SqlDataAdapter(Query, con)
                da.Fill(DSField)
            End Using
        End Using

        Dim onlyFiltered As DataView = DSField.Tables(0).DefaultView

        'Note: in the case of Action form "IsActive" do not play any role. 
        onlyFiltered.RowFilter = "DataType='Numeric'"
        Dim theFlds As DataTable = onlyFiltered.Table.DefaultView.ToTable()

        Dim onlyFiltered1 As DataView = DSField.Tables(0).DefaultView
        onlyFiltered1.RowFilter = "DataType='Datetime'"
        Dim theFlds1 As DataTable = onlyFiltered1.Table.DefaultView.ToTable()
        Dim li As New ListItem("--Select--", 0)
        Try
            ddlEDate.DataSource = theFlds1
            ddlEDate.DataValueField = "FieldMapping"
            ddlEDate.DataTextField = "DisplayName"
            ddlEDate.DataBind()
            ddlEDate.Items.Insert(0, li)
        Catch ex As Exception
        End Try
        Try
            ddlEAmountField.DataSource = theFlds
            ddlEAmountField.DataValueField = "FieldMapping"
            ddlEAmountField.DataTextField = "DisplayName"
            ddlEAmountField.DataBind()
            ddlEAmountField.Items.Insert(0, li)
        Catch ex As Exception

        End Try
        Try
            ddlItemN.DataSource = DSField
            ddlItemN.DataValueField = "FieldMapping"
            ddlItemN.DataTextField = "DisplayName"
            ddlItemN.DataBind()
            ddlItemN.Items.Insert(0, li)
        Catch ex As Exception

        End Try
        Try
            ddlItemN.SelectedValue = DSField.Tables(1).Rows(0).Item("Item_Number")
            ddlEAmountField.SelectedValue = DSField.Tables(1).Rows(0).Item("Balance_Field")
            ddlEDate.SelectedValue = DSField.Tables(1).Rows(0).Item("Effective_Date_Field")
            'ddlBMode.SelectedValue = DSField.Tables(1).Rows(0).Item("Balance_Maintenance_Mode")
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub BindBasedOnChild()
        Dim EID = Session("EID")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim Query = "select F.FormName+'-'+FF.DisPlayName as DisplayName,'Master-'+F.FormName+'-'+FF.FieldMapping as FieldMapping,FF.FieldType,FF.DataType FROM MMM_MST_FIELDS FF INNER JOIN MMM_MST_FORMS F ON (F.EID=FF.EID AND F.FormName=FF.DocumentType)  WHERE FF.IsActive = 1 And FF.EID = " & EID & " And  FF.documenttype='" & hdnFromName.Value.Trim() & "' union all select DocumentType+'-'+displayName,'Child-'+documenttype+'-'+FieldMapping,FieldType,DataType from mmm_mst_fields where DocumentType='" & ddlChild.SelectedValue.Trim() & "' and eid=" & EID
        Dim DSFields As New DataSet()
        Using con = New SqlConnection(conStr)
            Using da = New SqlDataAdapter(Query, con)
                da.Fill(DSFields)
            End Using
        End Using

        Dim onlyFiltered As DataView = DSFields.Tables(0).DefaultView

        'Note: in the case of Action form "IsActive" do not play any role. 
        onlyFiltered.RowFilter = "DataType='Numeric'"
        Dim theFlds As DataTable = onlyFiltered.Table.DefaultView.ToTable()

        Dim onlyFiltered1 As DataView = DSFields.Tables(0).DefaultView
        onlyFiltered1.RowFilter = "DataType='Datetime'"
        Dim theFlds1 As DataTable = onlyFiltered1.Table.DefaultView.ToTable()
        Dim li As New ListItem("--Select--", 0)
        Try
            ddlEDate.DataSource = theFlds1
            ddlEDate.DataValueField = "FieldMapping"
            ddlEDate.DataTextField = "DisplayName"
            ddlEDate.DataBind()
            ddlEDate.Items.Insert(0, li)
        Catch ex As Exception
        End Try
        Try
            ddlEAmountField.DataSource = theFlds
            ddlEAmountField.DataValueField = "FieldMapping"
            ddlEAmountField.DataTextField = "DisplayName"
            ddlEAmountField.DataBind()
            ddlEAmountField.Items.Insert(0, li)
        Catch ex As Exception

        End Try
        Try
            ddlItemN.DataSource = DSFields
            ddlItemN.DataValueField = "FieldMapping"
            ddlItemN.DataTextField = "DisplayName"
            ddlItemN.DataBind()
            ddlItemN.Items.Insert(0, li)
        Catch ex As Exception

        End Try
    End Sub
    Protected Sub ddlChild_SelectedIndexChanged(sender As Object, e As EventArgs)
        BindBasedOnChild()
        UPB.Update()
    End Sub
    'Change By Mayank for field Mapping Here 2


    Protected Sub imgChkBoxClose()         'Mayank  Added For Check Box
        Me.mdl_chkbox.Hide()
    End Sub
    'Added For Primary Key by Mayank 31-Jan-2015
    Protected Sub chkDocID_CheckedChanged(sender As Object, e As EventArgs)

        For i As Integer = 0 To chkfldPrimarykey.Items.Count() - 1
            chkfldPrimarykey.Items(i).Selected = False
        Next
        txtPrimaryKey.Text = ""
        If (chkDocID.Checked = True) Then
            txtPrimaryKey.Text = "DocID"
            ViewState("primaryfields") = "DocID"
        Else
            txtPrimaryKey.Text = ""
            ViewState("primaryfields") = String.Empty
        End If

    End Sub
    '27 jan 2015
    Public Sub btnDetailRuleEngine(ByVal sender As Object, e As System.EventArgs)
        txtDetailRuleCalC.Text = ""

        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim tid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("CTID") = tid

        Dim strFields As String = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet

        Try
            If row.Cells(4).Text.Trim <> "DETAIL FORM" Then
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('form source shoul be only DETAIL FORM!!');", True)
                Exit Sub
            End If
            da.SelectCommand.CommandText = "SELECT * FROM MMM_MST_fields WHERE  documenttype='" & row.Cells(1).Text & "' AND  EID = " & Session("EID").ToString() & " and datatype='numeric'"
            da.Fill(ds, "DETAIL")
            If ds.Tables("DETAIL").Rows.Count > 0 Then
                For Each dr As DataRow In ds.Tables("DETAIL").Rows
                    strFields &= dr.Item("displayname").ToString()
                    strFields &= Environment.NewLine
                Next
                txtDetailRuleFields.Text = strFields.ToString()
            End If
            ' for filling the filtering formula in text area
            da.SelectCommand.CommandText = "SELECT childfilterrule FROM MMM_MST_forms WHERE  formid='" & ViewState("CTID") & "' AND  EID = " & Session("EID").ToString() & ""
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim filtersrt As String = da.SelectCommand.ExecuteScalar().ToString()
            If filtersrt.Length > 1 Then
                txtDetailRuleCalC.Text = filtersrt
            End If
            con.Dispose()
            ds.Dispose()
            upd_detailRule.Update()
            MP_DetailRule.Show()

        Catch ex As Exception

        Finally
            con.Dispose()
            ds.Dispose()
        End Try
    End Sub

    'Add Tally Config
    Public Sub btnMasterConfiguraiton(ByVal sender As Object, e As System.EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataSet()
        Try
            da.SelectCommand.CommandText = "select formname,FormID from mmm_mst_forms where eid=" & Session("EID").ToString() & " and enablesync_tally=1;select distinct formname from MMM_MST_TallyRegInfo where eid=" & Session("EID").ToString() & ";;with EM (displayname,fieldmapping,dropdown) as(select displayname,fieldmapping,dropdown from MMM_MST_FIELDS where eid=" & Session("EID").ToString() & " and documenttype in(select formname from mmm_mst_forms where eid=" & Session("EID".ToString()) & " and enablesync_tally=1) and fieldType='Drop Down' and dropdown like'Master-%'),            CM(displayname, fieldmapping, DropDown) as (select displayname,fieldmapping,dropdown from mmm_mst_fields where eid=" & Session("EID").ToString() & " and documenttype in(select formname from mmm_mst_forms where eid=" & Session("EID").ToString() & " and EanbleRegistration_Tally=1)and fieldType='Drop Down' and dropdown like'Master-%')select EM.displayname as EMDisplayname,EM.fieldmapping+'|'+EM.dropdown as EMDropdown, CM.displayname as CMdisplayname,CM.fieldmapping+'|'+CM.dropdown as CMdropdown from CM inner join EM on EM.dropdown=CM.dropdown;select tid,eid,doctype,TargetForm, (select displayName from mmm_mst_fields where documenttype=TargetForm and eid=" & Session("EID") & "  and FieldMapping=TargetFields) as TargetFields,case Operands when '=' then 'EQUALS' else 'CONTAINS' end as Operands, SourceForm,(select displayName from mmm_mst_fields where documenttype=SourceForm and eid=" & Session("EID") & "  and FieldMapping=SourceFields)  as SourceFields,case isactive when 1 then'YES' else 'NO' end as  IsActive,isnull(TargetDepFields,'') as TargetDepFields  from mmm_TallySync_filter where eid=" & Session("EID")
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.Fill(dt, "TallyFields")
            If (dt.Tables("TallyFields").Rows.Count > 0) Then
                ddlEnabledMaster.DataSource = dt.Tables("TallyFields")
                ddlEnabledMaster.DataTextField = "formname"
                ddlEnabledMaster.DataValueField = "FormID"
                ddlEnabledMaster.DataBind()
                ddlEnabledMaster.Items.Insert("0", New ListItem("SELECT"))
            Else
                If (ddlEnabledMaster.Items.Count > 0) Then
                    ddlEnabledMaster.Items.Clear()
                End If
                ddlEnabledMaster.Items.Insert("0", New ListItem("SELECT"))
                ddlEnabledMaster.DataBind()
            End If
            If (dt.Tables("TallyFields1").Rows.Count > 0) Then
                ddltallyRegisteredForms.DataSource = dt.Tables("TallyFields1")
                ddltallyRegisteredForms.DataTextField = "formname"
                ddltallyRegisteredForms.DataValueField = "formname"
                ddltallyRegisteredForms.DataBind()
                ddltallyRegisteredForms.Items.Insert("0", New ListItem("SELECT"))
            Else
                If (ddltallyRegisteredForms.Items.Count > 0) Then
                    ddltallyRegisteredForms.Items.Clear()
                End If
                ddltallyRegisteredForms.Items.Insert("0", New ListItem("SELECT"))
                ddltallyRegisteredForms.DataBind()
            End If
            If (dt.Tables("TallyFields2").Rows.Count > 0) Then
                ddlSyncMaster.DataSource = dt.Tables("TallyFields2")
                ddlSyncMaster.DataTextField = "EMDisplayname"
                ddlSyncMaster.DataValueField = "EMDropdown"
                ddlSyncMaster.DataBind()
                ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))

                ddlTallyRegisteredFileds.DataSource = dt.Tables("TallyFields2")
                ddlTallyRegisteredFileds.DataTextField = "CMdisplayname"
                ddlTallyRegisteredFileds.DataValueField = "CMdropdown"
                ddlTallyRegisteredFileds.DataBind()
                ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
            Else
                If (ddlSyncMaster.Items.Count > 0) Then
                    ddlSyncMaster.Items.Clear()
                End If
                If (ddlTallyRegisteredFileds.Items.Count > 0) Then
                    ddlTallyRegisteredFileds.Items.Clear()
                End If
                ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))
                ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
            End If
            If (dt.Tables("TallyFields3").Rows.Count > 0) Then
                grdmasterconfig.DataSource = dt.Tables("TallyFields3")
                grdmasterconfig.DataBind()
            End If
        Catch ex As Exception

        End Try
        UpMasterConfig.Update()
        MP_MasterConfig.Show()
    End Sub

    'Add Auto Config
    'Add for  Existing Value
    Protected Sub btnshowexisting_Click(sender As Object, e As ImageClickEventArgs)

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataSet()
        Try
            Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
            Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
            lblFormname.Text = row.Cells(1).Text.ToString().Trim()
            da.SelectCommand.CommandText = "select Show_Existing,FiledsForShowExisting,FiledsForShowExistingEX from mmm_mst_forms where formname='" & row.Cells(1).Text.ToString().Trim() & "' and eid=" & Session("EID").ToString() & ";select displayname,fieldmapping from mmm_mst_fields where documenttype='" & row.Cells(1).Text.ToString().Trim() & "' and eid=" & Session("EID") & " and isactive=1;"
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.Fill(dt, "ShowExistingvalues")
            If (dt.Tables("ShowExistingvalues").Rows.Count > 0) Then
                If dt.Tables("ShowExistingvalues").Rows(0)("Show_Existing") <> String.Empty Then
                    If Not IsDBNull(dt.Tables("ShowExistingvalues").Rows(0)("FiledsForShowExisting")) Then
                        If Not String.IsNullOrEmpty(dt.Tables("ShowExistingvalues").Rows(0)("FiledsForShowExisting")) Then


                            Dim val As String() = dt.Tables("ShowExistingvalues").Rows(0)("FiledsForShowExisting").ToString().Split(",")
                            Dim list As New ArrayList
                            For i As Integer = 0 To val.Length - 1
                                If Not IsNothing(val(i)) Then
                                    list.Add("'" & val(i).ToString() & "'")
                                End If

                            Next
                            da.SelectCommand.CommandText = "select fieldmapping,displayname from mmm_mst_fields where eid=" & Session("EID") & " and fieldmapping in (" & String.Join(",", list.ToArray) & ") and documenttype='" & row.Cells(1).Text.ToString().Trim() & "'"
                            Dim dts As New DataTable
                            da.Fill(dts)
                            If dt.Tables("ShowExistingvalues1").Rows.Count > 0 Then
                                chkexistingval.DataSource = dt.Tables("ShowExistingvalues1")
                                chkexistingval.DataTextField = "displayname"
                                chkexistingval.DataValueField = "fieldmapping"
                                chkexistingval.DataBind()
                            End If
                            If dts.Rows.Count > 0 Then
                                For Each li As ListItem In chkexistingval.Items
                                    If list.ToArray.Contains("'" & li.Value.ToString() & "'") Then
                                        li.Selected = True
                                    Else
                                        li.Selected = False
                                    End If
                                Next
                            End If

                        Else
                            If dt.Tables("ShowExistingvalues1").Rows.Count > 0 Then
                                chkexistingval.DataSource = dt.Tables("ShowExistingvalues1")
                                chkexistingval.DataTextField = "displayname"
                                chkexistingval.DataValueField = "fieldmapping"
                                chkexistingval.DataBind()
                            End If
                        End If
                    Else
                        If dt.Tables("ShowExistingvalues1").Rows.Count > 0 Then
                            chkexistingval.DataSource = dt.Tables("ShowExistingvalues1")
                            chkexistingval.DataTextField = "displayname"
                            chkexistingval.DataValueField = "fieldmapping"
                            chkexistingval.DataBind()
                        End If
                    End If

                    If Not IsDBNull(dt.Tables("ShowExistingvalues").Rows(0)("FiledsForShowExistingEX")) Then
                        If Not String.IsNullOrEmpty(dt.Tables("ShowExistingvalues").Rows(0)("FiledsForShowExistingEX")) Then


                            Dim val As String() = dt.Tables("ShowExistingvalues").Rows(0)("FiledsForShowExistingEX").ToString().Split(",")
                            Dim list As New ArrayList
                            For i As Integer = 0 To val.Length - 1
                                If Not IsNothing(val(i)) Then
                                    list.Add("'" & val(i).ToString() & "'")
                                End If

                            Next
                            da.SelectCommand.CommandText = "select fieldmapping,displayname from mmm_mst_fields where eid=" & Session("EID") & " and fieldmapping in (" & String.Join(",", list.ToArray) & ") and documenttype='" & row.Cells(1).Text.ToString().Trim() & "'"
                            Dim dts As New DataTable
                            da.Fill(dts)
                            If dt.Tables("ShowExistingvalues1").Rows.Count > 0 Then
                                chkexistingtravalEX.DataSource = dt.Tables("ShowExistingvalues1")
                                chkexistingtravalEX.DataTextField = "displayname"
                                chkexistingtravalEX.DataValueField = "fieldmapping"
                                chkexistingtravalEX.DataBind()
                            End If
                            If dts.Rows.Count > 0 Then
                                For Each li As ListItem In chkexistingtravalEX.Items
                                    If list.ToArray.Contains("'" & li.Value.ToString() & "'") Then
                                        li.Selected = True
                                    Else
                                        li.Selected = False
                                    End If
                                Next
                            End If

                        Else
                            If dt.Tables("ShowExistingvalues1").Rows.Count > 0 Then
                                chkexistingtravalEX.DataSource = dt.Tables("ShowExistingvalues1")
                                chkexistingtravalEX.DataTextField = "displayname"
                                chkexistingtravalEX.DataValueField = "fieldmapping"
                                chkexistingtravalEX.DataBind()
                            End If
                        End If
                    Else
                        If dt.Tables("ShowExistingvalues1").Rows.Count > 0 Then
                            chkexistingtravalEX.DataSource = dt.Tables("ShowExistingvalues1")
                            chkexistingtravalEX.DataTextField = "displayname"
                            chkexistingtravalEX.DataValueField = "fieldmapping"
                            chkexistingtravalEX.DataBind()
                        End If
                    End If

                End If
                'ddlEnabledMaster.DataSource = dt.Tables("TallyFields")
                'ddlEnabledMaster.DataTextField = "formname"
                'ddlEnabledMaster.DataValueField = "FormID"
                'ddlEnabledMaster.DataBind()
                'ddlEnabledMaster.Items.Insert("0", New ListItem("SELECT"))
            Else
                If (ddlEnabledMaster.Items.Count > 0) Then
                    ddlEnabledMaster.Items.Clear()
                End If
                ddlEnabledMaster.Items.Insert("0", New ListItem("SELECT"))
                ddlEnabledMaster.DataBind()
            End If

        Catch ex As Exception

        End Try
        up_showexisting.Update()
        MP_ShowWixistingValues.Show()
    End Sub

    'Added functionality for Accordian Doc detail 05-Mar-2017
    Protected Sub imgAccordian_Click(sender As Object, e As ImageClickEventArgs)
        Dim btnAccordianDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnAccordianDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        labAccordianPanel.Text = row.Cells(1).Text.Trim()
        Dim ht As New Hashtable()
        Dim objDC As New DataClass()
        Dim objDT As New DataTable()
        ht.Add("documenttype", labAccordianPanel.Text)
        ht.Add("EID", Session("EID"))
        objDT = objDC.ExecuteProDT("sp_getPendingAccordianDocFields", ht)
        If objDT.Rows.Count > 0 Then
            chkAccFields.DataSource = objDT
            chkAccFields.DataTextField = "displayName"
            chkAccFields.DataValueField = "FieldID"
            chkAccFields.DataBind()
        End If
        ClearDocAccordian("SAVE", labAccordianPanel.Text)
        UpdatePanelAccordianHeader.Update()
        UpdatePanelAccordian.Update()
        btnAccordianEdit_ModalPopupExtende.Show()
    End Sub

    'Added functionality for Accordian Doc detail

    'Added functionality for Tab configuration document 03-mar-2017
    Protected Sub imgButtonTab_Click(sender As Object, e As ImageClickEventArgs)

        Dim btnTabDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnTabDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        labTabPanel.Text = row.Cells(1).Text.Trim()
        ClearTabPanel("SAVE", labTabPanel.Text)
        UpdatePanelTabHeader.Update()
        UpdatePanelTab.Update()
        btnTabEdit_ModalPopupExtende.Show()

    End Sub
    'Added functionality for Tab configuration document 03-mar-2017

    'Added for Sorting for Doc Details order
    Protected Sub btndocdtlsorting_Click(sender As Object, e As ImageClickEventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        Dim Formid As Integer = Convert.ToString(Me.gvData.DataKeys(row.RowIndex).Value)
        ViewState("Formid") = Formid
        Dim FrmSrc As String = ""
        Dim Eventname As String = ""
        Dim FN As String = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        da.SelectCommand.CommandText = "Select FormName , FormSource, EventName, FORMTYPE, hasDefaultValue, ChidFormforActionScreen, ChidFormforActionScreen_Rights  from MMM_MST_FORMS where FormID=" & Formid & ""
        da.Fill(ds, "FormDetail")
        If ds.Tables("FormDetail").Rows(0).Item("FormSource") = "MENU DRIVEN" And Val(ds.Tables("FormDetail").Rows(0).Item("hasDefaultValue").ToString) = 1 Then
            Dim arra As String() = Split(ds.Tables("FormDetail").Rows(0).Item("Formname").ToString(), "_")
            If arra(1) = "MASTER" Then
                lblblockform.Text = "This form can't be ADD fields because it is dependent on other form "
                btnblocksave.Visible = False
                updBlockform.Update()
                MPblockForm.Show()
                Exit Sub
            End If

        End If
        ViewState("FS") = ds.Tables("FormDetail").Rows(0).Item("FormSource").ToString()
        FrmSrc = ds.Tables("FormDetail").Rows(0).Item("FormSource").ToString()

        If Not (FrmSrc.Trim().ToUpper() = "DETAIL FORM") Then
            ddlType.Items.Remove("Parent Value")
        End If

        Eventname = ds.Tables("FormDetail").Rows(0).Item("EventName").ToString()
        FN = ds.Tables("FormDetail").Rows(0).Item("FormName").ToString()
        ViewState("FORMNAME") = FN
        fnames()
        updatefname.Update()
        ViewState("EN") = Eventname
        ViewState("FORMTYPE") = ds.Tables("FormDetail").Rows(0).Item("FORMTYPE").ToString()
        If UCase(FrmSrc) = "ACTION DRIVEN" Then
            txtEnblCRM.Enabled = True
            Session("FORMNAME") = FN
            Session("EVENTNAME") = Eventname
            Session("CHILDACTIONSCREEN") = ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen").ToString()
            Dim strs As String()
            If (ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen").ToString() <> String.Empty) Then
                strs = ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen").ToString().Split(",")
                If (strs.Length > 0) Then
                Else
                    strs(0) = ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen").ToString()
                End If
            End If
            BindFielddataGrid1(Eventname, FN, Convert.ToString(ds.Tables("FormDetail").Rows(0).Item("ChidFormforActionScreen_Rights")))
            lbMsgField.Text = ""
            btnF_ModalPopupExtender.Show()
            updatePanel2.Update()
        Else
            BindDocDetailSortingDataGrid()
            ClearFields()
            UpdatepanelSorting.Update()
            btnSortingEdit_ModalPopupExtende.Show()
        End If
        con.Dispose()
        Clear()
    End Sub

    Public Sub btnAutoConfig_click(ByVal sender As Object, e As System.EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataSet()
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If ddlSourceForm.Items.Count > 0 Then
            ddlSourceForm.Items.Clear()
        End If
        If ddlFormSourceType.Items.Count > 0 Then
            ddlFormSourceType.Items.Clear()
        End If
        ddlSourceForm.Items.Add(row.Cells(1).Text.Trim)
        ddlFormSourceType.Items.Add(row.Cells(3).Text.Trim)
        Try

            da.SelectCommand.CommandText = "select formname from mmm_mst_forms where eid=" & Session("EID") & " and formtype='DOCUMENT' and formsource='Menu Driven' and isactive=1 and formname not in ('" & row.Cells(1).Text.Trim & "');select statusname from MMM_MST_WORKFLOW_STATUS where eid=" & Session("EID") & " and documenttype='" & row.Cells(1).Text.Trim & "'"

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.Fill(dt, "AllForms")
            If dt.Tables("AllForms").Rows.Count > 0 Then
                ddlTargetDoc.DataSource = dt.Tables("AllForms")
                ddlTargetDoc.DataTextField = "formname"
                ddlTargetDoc.DataValueField = "formname"
                ddlTargetDoc.DataBind()
            End If
            If dt.Tables("AllForms1").Rows.Count > 0 Then
                ddlWFStatus.DataSource = dt.Tables("AllForms1")
                ddlWFStatus.DataTextField = ""
                ddlWFStatus.DataValueField = ""
                ddlWFStatus.DataBind()
            Else
                ddlWFStatus.DataSource = Nothing
                ddlWFStatus.DataBind()
            End If

        Catch ex As Exception

        End Try

        Up_pnlAutoConfig.Update()
        MP_AutoConfig.Show()
    End Sub

    Protected Sub btnDeletemasterconfig_Click(sender As Object, e As ImageClickEventArgs)
        Try
            Label16.Text = ""
            Label16.ForeColor = Drawing.Color.Red
            Label16.Text = "You have successfully Deleted this Configuration!!"
            Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
            Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
            'Dim Tid As Integer = Convert.ToInt32(row.RowIndex)
            Dim Tid As Integer = Convert.ToString(Me.grdmasterconfig.DataKeys(row.RowIndex).Value)

            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)
            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
            Dim dt As New DataTable()
            da.SelectCommand.CommandText = "delete from mmm_TallySync_filter where tid=" & Tid & " and eid=" & Session("EID") & ";select tid,eid,doctype,TargetForm, (select displayName from mmm_mst_fields where documenttype=TargetForm and eid=" & Session("EID") & "  and FieldMapping=TargetFields) as TargetFields,SourceForm,(select displayName from mmm_mst_fields where documenttype=SourceForm and eid=" & Session("EID") & "  and FieldMapping=SourceFields)  as SourceFields,case isactive when 1 then'YES' else 'NO' end  as IsActive from mmm_TallySync_filter where eid=" & Session("EID")
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If

            da.Fill(dt)
            If (dt.Rows.Count > 0) Then
                grdmasterconfig.DataSource = dt
                grdmasterconfig.DataBind()
            Else
                grdmasterconfig.DataSource = Nothing
                grdmasterconfig.DataBind()
            End If
            UpMasterConfig.Update()
            MP_MasterConfig.Show()
        Catch ex As Exception

        End Try
    End Sub


    Protected Sub OnConfirm(sender As Object, e As EventArgs)
        Dim confirmValue As String = Request.Form("confirm_value")
        If confirmValue = "Yes" Then
            ClientScript.RegisterStartupScript(Me.[GetType](), "alert", "alert('You clicked YES!')", True)
        Else
            ClientScript.RegisterStartupScript(Me.[GetType](), "alert", "alert('You clicked NO!')", True)
        End If
    End Sub


    Protected Sub ddltallyRegisteredForms_SelectedIndexChanged(sender As Object, e As EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataSet()

        If (ddltallyRegisteredForms.SelectedIndex = 0) Then

        Else
            If (ddlEnabledMaster.SelectedIndex = 0) Then

            Else
                Try
                    If ddlFillOperation.SelectedIndex = 1 Then
                        da.SelectCommand.CommandText = ";with EM (displayname,fieldmapping,dropdown) as(select displayname,fieldmapping,dropdown from MMM_MST_FIELDS where eid=" & Session("EID").ToString() & " and documenttype ='" & ddlEnabledMaster.SelectedItem.Text & "'and fieldType='Drop Down' and dropdown like'Master-%'), CM(displayname, fieldmapping, DropDown) as (select displayname,fieldmapping,dropdown from mmm_mst_fields where eid=" & Session("EID").ToString() & " and documenttype ='" & ddltallyRegisteredForms.SelectedItem.Text & "' and fieldType='Drop Down' and dropdown like'Master-%')select EM.displayname as EMDisplayname,EM.fieldmapping+'|'+EM.dropdown as EMDropdown, CM.displayname as CMdisplayname,CM.fieldmapping+'|'+CM.dropdown as CMdropdown from CM inner join EM on EM.dropdown=CM.dropdown"
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        da.Fill(dt, "Tally")
                        If (dt.Tables("Tally").Rows.Count > 0) Then
                            ddlSyncMaster.DataSource = dt.Tables("Tally")
                            ddlSyncMaster.DataTextField = "EMDisplayname"
                            ddlSyncMaster.DataValueField = "EMDropdown"
                            ddlSyncMaster.DataBind()
                            ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))

                            ddlTallyRegisteredFileds.DataSource = dt.Tables("Tally")
                            ddlTallyRegisteredFileds.DataTextField = "CMdisplayname"
                            ddlTallyRegisteredFileds.DataValueField = "CMdropdown"
                            ddlTallyRegisteredFileds.DataBind()
                            ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
                        Else
                            If (ddlSyncMaster.Items.Count > 0) Then
                                ddlSyncMaster.Items.Clear()
                            End If
                            If (ddlTallyRegisteredFileds.Items.Count > 0) Then
                                ddlTallyRegisteredFileds.Items.Clear()
                            End If
                            ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))
                            ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
                        End If
                    ElseIf ddlFillOperation.SelectedIndex = 2 Then
                        da.SelectCommand.CommandText = ";with EM (displayname,fieldmapping,dropdown) as(select displayname,fieldmapping,dropdown from MMM_MST_FIELDS where eid=" & Session("EID").ToString() & " and documenttype ='" & ddlFilterOperation.SelectedValue.Trim() & "'and  dropdown like'Master-%'), CM(displayname, fieldmapping, DropDown) as (select displayname,fieldmapping,dropdown from mmm_mst_fields where eid=" & Session("EID").ToString() & " and documenttype ='" & ddltallyRegisteredForms.SelectedItem.Text & "'  and dropdown like'Master-%')select EM.displayname as EMDisplayname,EM.fieldmapping+'|'+EM.dropdown as EMDropdown, CM.displayname as CMdisplayname,CM.fieldmapping+'|'+CM.dropdown as CMdropdown from CM inner join EM on EM.dropdown=CM.dropdown"
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        da.Fill(dt, "Tally")
                        If (dt.Tables("Tally").Rows.Count > 0) Then
                            ddlSyncMaster.DataSource = dt.Tables("Tally")
                            ddlSyncMaster.DataTextField = "EMDisplayname"
                            ddlSyncMaster.DataValueField = "EMDropdown"
                            ddlSyncMaster.DataBind()
                            ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))

                            ddlTallyRegisteredFileds.DataSource = dt.Tables("Tally")
                            ddlTallyRegisteredFileds.DataTextField = "CMdisplayname"
                            ddlTallyRegisteredFileds.DataValueField = "CMdropdown"
                            ddlTallyRegisteredFileds.DataBind()
                            ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
                        Else
                            If (ddlSyncMaster.Items.Count > 0) Then
                                ddlSyncMaster.Items.Clear()
                            End If
                            If (ddlTallyRegisteredFileds.Items.Count > 0) Then
                                ddlTallyRegisteredFileds.Items.Clear()
                            End If
                            ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))
                            ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
                        End If
                    End If

                Catch ex As Exception

                End Try

            End If
        End If
    End Sub
    Protected Sub ddlEnabledMaster_SelectedIndexChanged(sender As Object, e As EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dt As New DataSet()

        If (ddlEnabledMaster.SelectedIndex = 0) Then

        Else
            If (ddltallyRegisteredForms.SelectedIndex = 0) Then

            Else
                Try
                    If ddlFillOperation.SelectedIndex = 0 Then
                        da.SelectCommand.CommandText = ";with EM (displayname,fieldmapping,dropdown) as(select displayname,fieldmapping,dropdown from MMM_MST_FIELDS where eid=" & Session("EID").ToString() & " and documenttype ='" & ddlEnabledMaster.SelectedItem.Text & "'and fieldType='Drop Down' and dropdown like'Master-%'), CM(displayname, fieldmapping, DropDown) as (select displayname,fieldmapping,dropdown from mmm_mst_fields where eid=" & Session("EID").ToString() & " and documenttype ='" & ddltallyRegisteredForms.SelectedItem.Text & "' and fieldType='Drop Down' and dropdown like'Master-%')select EM.displayname as EMDisplayname,EM.fieldmapping+'|'+EM.dropdown as EMDropdown, CM.displayname as CMdisplayname,CM.fieldmapping+'|'+CM.dropdown as CMdropdown from CM inner join EM on EM.dropdown=CM.dropdown"
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        da.Fill(dt, "Tally")
                        If (dt.Tables("Tally").Rows.Count > 0) Then
                            ddlSyncMaster.DataSource = dt.Tables("Tally")
                            ddlSyncMaster.DataTextField = "EMDisplayname"
                            ddlSyncMaster.DataValueField = "EMDropdown"
                            ddlSyncMaster.DataBind()
                            ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))

                            ddlTallyRegisteredFileds.DataSource = dt.Tables("Tally")
                            ddlTallyRegisteredFileds.DataTextField = "CMdisplayname"
                            ddlTallyRegisteredFileds.DataValueField = "CMdropdown"
                            ddlTallyRegisteredFileds.DataBind()
                            ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
                        Else
                            If (ddlSyncMaster.Items.Count > 0) Then
                                ddlSyncMaster.Items.Clear()
                            End If
                            If (ddlTallyRegisteredFileds.Items.Count > 0) Then
                                ddlTallyRegisteredFileds.Items.Clear()
                            End If
                            ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))
                            ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
                        End If
                    ElseIf ddlFillOperation.SelectedIndex = 2 Then
                        da.SelectCommand.CommandText = ";with EM (displayname,fieldmapping,dropdown) as(select displayname,fieldmapping,dropdown from MMM_MST_FIELDS where eid=" & Session("EID").ToString() & " and documenttype ='" & ddlFilterOperation.SelectedValue.Trim() & "'and fieldType='Drop Down' and dropdown like'Master-%'), CM(displayname, fieldmapping, DropDown) as (select displayname,fieldmapping,dropdown from mmm_mst_fields where eid=" & Session("EID").ToString() & " and documenttype ='" & ddltallyRegisteredForms.SelectedItem.Text & "' and fieldType='Drop Down' and dropdown like'Master-%')select EM.displayname as EMDisplayname,EM.fieldmapping+'|'+EM.dropdown as EMDropdown, CM.displayname as CMdisplayname,CM.fieldmapping+'|'+CM.dropdown as CMdropdown from CM inner join EM on EM.dropdown=CM.dropdown"
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        da.Fill(dt, "Tally")
                        If (dt.Tables("Tally").Rows.Count > 0) Then
                            ddlSyncMaster.DataSource = dt.Tables("Tally")
                            ddlSyncMaster.DataTextField = "EMDisplayname"
                            ddlSyncMaster.DataValueField = "EMDropdown"
                            ddlSyncMaster.DataBind()
                            ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))

                            ddlTallyRegisteredFileds.DataSource = dt.Tables("Tally")
                            ddlTallyRegisteredFileds.DataTextField = "CMdisplayname"
                            ddlTallyRegisteredFileds.DataValueField = "CMdropdown"
                            ddlTallyRegisteredFileds.DataBind()
                            ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
                        Else
                            If (ddlSyncMaster.Items.Count > 0) Then
                                ddlSyncMaster.Items.Clear()
                            End If
                            If (ddlTallyRegisteredFileds.Items.Count > 0) Then
                                ddlTallyRegisteredFileds.Items.Clear()
                            End If
                            ddlSyncMaster.Items.Insert("0", New ListItem("SELECT"))
                            ddlTallyRegisteredFileds.Items.Insert("0", New ListItem("SELECT"))
                        End If
                    End If


                Catch ex As Exception

                End Try

            End If
        End If
    End Sub
    Protected Sub btnMaster_Configuration_Click(sender As Object, e As EventArgs)
        Label16.Text = ""
        If (ddlEnabledMaster.SelectedIndex = 0) Then
            Label16.Text = "Please Select Sync Eanbled Forms"
            Exit Sub
        End If
        If (ddltallyRegisteredForms.SelectedIndex = 0) Then
            Label16.Text = "Please Select Tally Registration Forms"
            Exit Sub
        End If
        If (ddlSyncMaster.SelectedIndex = 0) Then
            Label16.Text = "Please Select Tally Registration Forms"
            Exit Sub
        End If
        If (ddlTallyRegisteredFileds.SelectedIndex = 0) Then
            Label16.Text = "Please Select Tally Registration Filter Fields"
            Exit Sub
        End If
        If (ddlIsActive.SelectedIndex = 0) Then
            Label16.Text = "Please Select Status Fields"
            Exit Sub
        End If
        Dim targetvalue As String() = ddlTallyRegisteredFileds.SelectedValue.Trim().Split("|")
        Dim sourcevalue As String() = ddlSyncMaster.SelectedValue.Trim().Split("|")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim dt As New DataTable()
        Dim cmd As New SqlCommand()
        cmd.Connection = con
        cmd.CommandType = CommandType.StoredProcedure
        cmd.CommandText = "usp_insert_update_mmm_TallySync_filter"
        cmd.Parameters.AddWithValue("@tid", "")
        cmd.Parameters.AddWithValue("@Eid", Session("EID"))
        cmd.Parameters.AddWithValue("@DocType", ddltallyRegisteredForms.SelectedItem.Text)
        cmd.Parameters.AddWithValue("@TargetForm", ddlEnabledMaster.SelectedItem.Text)
        cmd.Parameters.AddWithValue("@TargetFields", sourcevalue(0).ToString())
        cmd.Parameters.AddWithValue("@SourceForm", ddltallyRegisteredForms.SelectedItem.Text)
        cmd.Parameters.AddWithValue("@SourceFields", targetvalue(0).ToString())
        cmd.Parameters.AddWithValue("@Operands", ddlFillOperation.SelectedValue.Trim())
        cmd.Parameters.AddWithValue("@isActive", ddlIsActive.SelectedValue)
        cmd.Parameters.AddWithValue("@Type", "SAVE")
        If synfileter.Visible = True Then
            cmd.Parameters.AddWithValue("@TargetDepFields", ddlFilterOperation.SelectedValue.Trim())
        Else
            cmd.Parameters.AddWithValue("@TargetDepFields", String.Empty)
        End If
        If tagetdependentfld.Visible = True Then
            cmd.Parameters.AddWithValue("@TargetDepFldMapping", ddlTargetDependentFld.SelectedValue.Trim())
        Else
            cmd.Parameters.AddWithValue("@TargetDepFldMapping", String.Empty)
        End If

        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim da As New SqlDataAdapter(cmd)
        da.Fill(dt)
        If (dt.Rows.Count > 0) Then
            grdmasterconfig.DataSource = dt
            grdmasterconfig.DataBind()
        End If
        Label16.Text = "You have Successfully Saved record(s) against this configurtion"
    End Sub
    Public Sub DetailRuleSave(sender As Object, e As EventArgs)

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Try
            da.SelectCommand.CommandText = "update MMM_MST_Forms set ChildFilterRule='" & txtDetailRuleCalC.Text & "' where formid='" & ViewState("CTID") & "'"
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteNonQuery()
            MP_DetailRule.Hide()
        Catch ex As Exception
            lblDetailMess.Text = "filteration formula applied is not correct"
            upd_detailRule.Update()
        Finally
            con.Close()
            da.Dispose()
        End Try

    End Sub

    'Added By Mayank For Child Specific Text
    Protected Sub CSTClick(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If (row.Cells(2).Text <> "Drop Down") Then
            ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('You can apply setting only for Master valued dropdown');", True)
            Exit Sub
        End If
        Dim tid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex).Value)
        ViewState("Deltid") = tid
        Dim constr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(constr)
        Dim sda As New SqlDataAdapter("", con)
        Dim ds As New DataSet

        Try
            sda.SelectCommand.CommandText = "select convert(varchar(100),fieldid)+','+dropdown as FieldID,displayname from mmm_mst_fields where eid=" & Session("eid") & " and documenttype='" & Fname.Text.Trim() & "' and displayname='" & row.Cells(1).Text & "';select child_specific_text from MMM_MST_FIELDS where Child_Specific_text is not null and EID=" & Session("Eid") & " and fieldid=" & tid & ";Select count(*) from mmm_mst_fields where eid=" & Session("EID") & " and dropdown like'Master-%' and fieldid=" & tid & ""
            ' sda.SelectCommand.CommandText = "select count(dropdown)  from mmm_mst_fields where eid=" & Session("eid") & " and dropdown like'Master-%' and documenttype='" & Fname.Text.Trim() & "' and displayname='" & row.Cells(1).Text & "'"
            sda.SelectCommand.CommandType = CommandType.Text
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            sda.Fill(ds, "check")
            If (ds.Tables("check2").Rows(0).Item(0).ToString() = "0") Then
                ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('You can apply setting only for Master valued dropdown');", True)
                Exit Sub
            End If
            If (ds.Tables("check").Rows.Count() > 0) Then
                ddlchldvalue.Items.Clear()
                ddlchldvalue.DataSource = ds.Tables("Check")
                ddlchldvalue.DataTextField = "displayname"
                ddlchldvalue.DataValueField = "Fieldid"
                ddlchldvalue.DataBind()
                'hdnDDNVALUE.Value = row.Cells(1).Text
                lblmsgCHLDST.Text = String.Empty
                txtCHLDSTD.Text = ""
                ddlCHLDSTC.Items.Clear()
                ddlCHLDSTCommanChld.Items.Clear()
                ddlCHLDCommanVal.Items.Clear()
                Dim da As New SqlDataAdapter("select Formid, formname from MMM_MST_Forms where EID=" & Session("EID") & " and formsource='DETAIL FORM' and formname in(select dropdown from mmm_mst_fields where documenttype='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & " and fieldtype='Child Item')", con)
                Dim dsnew As New DataSet
                da.Fill(dsnew, "FieldName")
                If dsnew.Tables("FieldName").Rows.Count > 0 Then
                    ddlCHLDSTC.DataSource = dsnew.Tables("FieldName")
                    ddlCHLDSTC.DataTextField = "formname"
                    ddlCHLDSTC.DataValueField = "Formid"
                    ddlCHLDSTC.DataBind()
                    ddlCHLDSTC.Items.Insert("0", New ListItem("Select Field"))
                End If
                lblCHLDST.Text = row.Cells(1).Text
                If (ds.Tables("check1").Rows.Count > 0) Then
                    If (ds.Tables("check1").Rows(0).Item("child_specific_text").ToString() <> String.Empty) Then
                        Dim val As String() = ds.Tables("check1").Rows(0).Item("child_specific_text").ToString().Split(":")
                        hdnDDNVALUE.Value = val(0).ToString()
                        hdnTempval.Value = val(1).ToString()
                        value = False
                        ddlCHLDSTC_SelectedIndexChanged(ddlCHLDSTC, New System.EventArgs())
                    End If
                End If
                upCHLDST.Update()
                mod_CHLDST.Show()
            Else
                ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('You can apply only for Master valued dropdown');", True)
                Exit Sub
            End If
        Catch ex As Exception
        End Try

    End Sub
    'Added Child Specific Text After Changing
    Protected Sub btnAddFiedsForUserMapping_Click(sender As Object, e As EventArgs)
        If (ddlTargetDocumentFields.SelectedIndex <> 0 Or ddlTargetDocumentFields.SelectedIndex - 1) And (ddlDocumentFields.SelectedIndex <> 0 Or ddlDocumentFields.SelectedIndex <> -1) Then
            If Not String.IsNullOrEmpty(txtMappingDisplayText.Text) Then
                txtMappingDisplayText.Text = txtMappingDisplayText.Text & "," & "{" & ddlTargetDocumentFields.SelectedItem.Text.Trim() & "}|{" & ddlDocumentFields.SelectedItem.Text.Trim() & "}"
            Else
                txtMappingDisplayText.Text = "{" & ddlTargetDocumentFields.SelectedItem.Text.Trim() & "}|{" & ddlDocumentFields.SelectedItem.Text & "}"
            End If
        Else
            ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('Please select target and source fields');", True)
        End If
        upUserMapping.Update()
        modUserMapping.Show()
    End Sub
    'Added By Maaynk for  Mapping with User Master
    Public Function GetMasterMapping(ByVal tid As Integer, ByVal Doucmenttype As String) As DataSet
        Dim constr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(constr)
        Dim sda As New SqlDataAdapter("", con)
        Dim ds As New DataSet
        sda.SelectCommand.CommandText = "Declare @DropDown nvarchar(100)='' select @DropDown=SUBSTRING(dropdown,CHARINDEX('-',dropdown) + 1,CHARINDEX('-',dropdown,CHARINDEX('-',dropdown) + 1) - (CHARINDEX('-',dropdown) + 1))  from mmm_mst_fields where FieldID=" & tid & " and dropdown like 'STATIC-%' if len(@DropDown)>0 begin         if rtrim(ltrim(upper(@DropDown)))='USER'             Begin                                                 SELECT  name as FieldMapping,upper(Name) as DisplayName FROM sys.columns WHERE object_id = OBJECT_ID('mmm_mst_user') and name not like 'fld%'    union  select fieldmapping as FieldMapping,displayName as DisplayName from mmm_mst_fields where documenttype='User' and eid=" & Session("EID") & " order by displayname;select fieldMapping,upper(DisplayName) as DisplayName from mmm_mst_fields where documenttype='" & Doucmenttype & "' and eid=" & Session("EID") & ";select isnull(OnflyFieldmapping,'') as OnflyFieldmapping from mmm_mst_fields where fieldid=" & tid & " and eid=" & Session("EID") & "   End   End"
        sda.SelectCommand.CommandType = CommandType.Text
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        sda.Fill(ds, "UserMapping")
        Return ds
    End Function
    Protected Sub MasterMapping(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim btnDetails As ImageButton = TryCast(sender, ImageButton)
        Dim DisplayText As String = ""
        Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        If (row.Cells(2).Text <> "Drop Down") Then
            ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('You can apply setting only for Master valued dropdown');", True)
            Exit Sub
        End If
        Dim tid As Integer = Convert.ToString(Me.gvUsers.DataKeys(row.RowIndex).Value)
        lbltid.Text = tid
        Dim ds As New DataSet
        ds = GetMasterMapping(tid, ViewState("FORMNAME"))
        Try
            'sda.SelectCommand.CommandText = "Declare @DropDown nvarchar(100)='' select @DropDown=SUBSTRING(dropdown,CHARINDEX('-',dropdown) + 1,CHARINDEX('-',dropdown,CHARINDEX('-',dropdown) + 1) - (CHARINDEX('-',dropdown) + 1))  from mmm_mst_fields where FieldID=" & tid & " and dropdown like 'STATIC-%' if len(@DropDown)>0 begin         if rtrim(ltrim(upper(@DropDown)))='USER'             Begin                                                 SELECT  name as FieldMapping,upper(Name) as DisplayName FROM sys.columns WHERE object_id = OBJECT_ID('mmm_mst_user') and name not like 'fld%'    union  select fieldmapping as FieldMapping,displayName as DisplayName from mmm_mst_fields where documenttype='User' and eid=" & Session("EID") & " order by displayname;select fieldMapping,upper(DisplayName) as DisplayName from mmm_mst_fields where documenttype='" & ViewState("FORMNAME") & "' and eid=" & Session("EID") & "   End   End"
            'sda.SelectCommand.CommandType = CommandType.Text
            'If con.State <> ConnectionState.Open Then
            '    con.Open()
            'End If
            'sda.Fill(ds, "UserMapping")
            If ds.Tables.Count > 0 Then
                lblDocumentType.Text = ViewState("FORMNAME")
                lblTargetDocumentType.Text = "USER"
                If ds.Tables(1).Rows.Count > 0 Then
                    ddlDocumentFields.DataSource = ds.Tables(1)
                    ddlDocumentFields.DataTextField = "DisplayName"
                    ddlDocumentFields.DataValueField = "FieldMapping"
                    ddlDocumentFields.DataBind()
                    ddlDocumentFields.Items.Insert(0, New ListItem("SELECT", "0"))
                End If
                If ds.Tables(0).Rows.Count > 0 Then
                    ddlTargetDocumentFields.DataSource = ds.Tables(0)
                    ddlTargetDocumentFields.DataTextField = "DisplayName"
                    ddlTargetDocumentFields.DataValueField = "FieldMapping"
                    ddlTargetDocumentFields.DataBind()
                    ddlTargetDocumentFields.Items.Insert(0, New ListItem("SELECT", "0"))
                End If
                If ds.Tables(2).Rows.Count > 0 Then
                    DisplayText = ds.Tables(2).Rows(0)(0)
                    DisplayText = DisplayText.Replace("-", "}|{").Replace(",", "},{")
                    If DisplayText.Length > 0 Then
                        DisplayText = "{" & DisplayText & "}"
                        If ds.Tables(0).Rows.Count > 0 Then
                            For Each dr As DataRow In ds.Tables(0).Rows
                                If DisplayText.ToString().Contains("{" & dr(0).ToString() & "}|") Then
                                    DisplayText = DisplayText.Replace("{" & dr(0).ToString() & "}|", "{" & dr(1).ToString() & "}|")
                                End If
                            Next
                        End If
                        If ds.Tables(1).Rows.Count > 0 Then
                            For Each dr As DataRow In ds.Tables(1).Rows
                                If DisplayText.ToString().Contains("|{" & dr(0).ToString() & "}") Then
                                    DisplayText = DisplayText.Replace("|{" & dr(0).ToString() & "}", "|{" & dr(1).ToString() & "}")
                                End If
                            Next
                        End If
                    End If
                End If
                txtMappingDisplayText.Text = DisplayText
                upUserMapping.Update()
                modUserMapping.Show()
            Else
                ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('You can apply setting only for User Master valued dropdown');", True)
                Exit Sub
            End If
        Catch ex As Exception

        End Try
    End Sub
    'Added By Maaynk for  Mapping with User Master
    Public Sub ChldEditRecord(ByVal sender As Object, e As System.EventArgs)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim a As String() = ddlCHLDSTCommanChld.SelectedValue.ToString().Trim().Split(",")
        Try

            If (ddlCHLDSTC.SelectedIndex = 0 And ddlCHLDSTCommanChld.SelectedIndex = 0 And ddlCHLDCommanVal.SelectedIndex = 0) Then
                da.SelectCommand.CommandText = "update mmm_mst_fields set Child_Specific_text='" & DBNull.Value & "' where FieldID='" & ViewState("Deltid") & "' and eid=" & Session("eid") & ""
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                da.SelectCommand.ExecuteNonQuery()
                lblMsgEdit.Text = "Field Updated"
                updatePanelEdit.Update()
                mod_CHLDST.Hide()
                Exit Sub
            ElseIf (ddlCHLDSTC.SelectedIndex = 0 And ddlCHLDSTCommanChld.SelectedIndex = 0 And ddlCHLDCommanVal.SelectedIndex = -1) Then
                da.SelectCommand.CommandText = "update mmm_mst_fields set Child_Specific_text='" & DBNull.Value & "' where FieldID='" & ViewState("Deltid") & "' and eid=" & Session("eid") & ""
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                da.SelectCommand.ExecuteNonQuery()
                lblMsgEdit.Text = "Field Updated"
                updatePanelEdit.Update()
                mod_CHLDST.Hide()
                Exit Sub
            ElseIf (ddlCHLDSTC.SelectedIndex = 0 And ddlCHLDSTCommanChld.SelectedIndex = -1 And ddlCHLDCommanVal.SelectedIndex = 0) Then
                da.SelectCommand.CommandText = "update mmm_mst_fields set Child_Specific_text='" & DBNull.Value & "' where FieldID='" & ViewState("Deltid") & "' and eid=" & Session("eid") & ""
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                da.SelectCommand.ExecuteNonQuery()
                lblMsgEdit.Text = "Field Updated"
                updatePanelEdit.Update()
                mod_CHLDST.Hide()
                Exit Sub
            ElseIf (ddlCHLDSTC.SelectedIndex = 0 And ddlCHLDSTCommanChld.SelectedIndex = -1 And ddlCHLDCommanVal.SelectedIndex = -1) Then
                da.SelectCommand.CommandText = "update mmm_mst_fields set Child_Specific_text='" & DBNull.Value & "' where FieldID='" & ViewState("Deltid") & "' and eid=" & Session("eid") & ""
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                da.SelectCommand.ExecuteNonQuery()
                lblMsgEdit.Text = "Field Updated"
                updatePanelEdit.Update()
                mod_CHLDST.Hide()
                Exit Sub
            ElseIf (ddlCHLDSTC.SelectedItem.Text <> "Select Field" And ddlCHLDSTCommanChld.SelectedItem.Text <> "Select Field" And ddlCHLDCommanVal.SelectedItem.Text <> "Select Field") Then
                da.SelectCommand.CommandText = "update mmm_mst_fields set Child_Specific_text='" & a(1).ToString() & ":" & ddlCHLDCommanVal.SelectedValue & "' where FieldID='" & ViewState("Deltid") & "' and eid=" & Session("eid") & ""
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                da.SelectCommand.ExecuteNonQuery()
                lblMsgEdit.Text = "Field Updated"
                updatePanelEdit.Update()
                mod_CHLDST.Hide()
            Else
                lblmsgCHLDST.Text = "Please Fill Required Filed"
                Exit Sub
            End If
            'If (ddlCHLDSTCommanChld.Items.Count = 0 Or ddlCHLDCommanVal.Items.Count = 0) Then
            '    If (ddlCHLDSTC.SelectedItem.Text = "Select Field") Then
            '        da.SelectCommand.CommandText = "update mmm_mst_fields set Child_Specific_text='" & DBNull.Value & "' where FieldID='" & ViewState("Deltid") & "' and eid=" & Session("eid") & ""
            '        If con.State <> ConnectionState.Open Then
            '            con.Open()
            '        End If
            '        da.SelectCommand.ExecuteNonQuery()
            '        lblMsgEdit.Text = "Field Updated"
            '        updatePanelEdit.Update()
            '        mod_CHLDST.Hide()
            '        Exit Sub
            '    Else
            '        lblmsgCHLDST.Text = "Please Fill Required Filed"
            '        Exit Sub
            '    End If
            'End If
            'If (ddlCHLDSTC.SelectedItem.Text = "Select Field" And ddlCHLDSTCommanChld.SelectedItem.Text = "Select Field" And ddlCHLDCommanVal.SelectedItem.Text = "Select Field") Then
            '    lblmsgCHLDST.Text = "Please Fill Required Filed"
            'Else
            '    da.SelectCommand.CommandText = "update mmm_mst_fields set Child_Specific_text='" & a(1).ToString() & ":" & ddlCHLDCommanVal.SelectedValue & "' where FieldID='" & ViewState("Deltid") & "' and eid=" & Session("eid") & ""
            '    If con.State <> ConnectionState.Open Then
            '        con.Open()
            '    End If
            '    da.SelectCommand.ExecuteNonQuery()
            '    lblMsgEdit.Text = "Field Updated"
            '    updatePanelEdit.Update()
            '    mod_CHLDST.Hide()
            'End If
        Catch ex As Exception
            lblmsgCHLDST.Text = "Please Fill Required Filed"
            Exit Sub
        End Try


    End Sub

    Protected Sub btnsavexmltallyregfield_Click(sender As Object, e As EventArgs) Handles btnsavexmltallyregfield.Click
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Try
            da.SelectCommand.CommandText = "Update mmm_mst_forms set TallyRegField='" & txttallyxmlregfield.Text.Trim() & "' where eid=" & Session("EID") & " and formname='" & Session("XMLMAINDOC") & "' "
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteNonQuery()
            lbldispxmlregfield.Text = "Updated Successfully!!!!!!"
        Catch ex As Exception
            lbldispxmlregfield.Text = "Please Try after some time"
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Sub
    'Added By Mayank
    Protected Sub ddlfieldss_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlfieldss.SelectedIndexChanged
        Try
            Dim conStrgs As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim consg As New SqlConnection(conStrgs)
            Dim da As SqlDataAdapter = New SqlDataAdapter("", consg)
            Dim dsfld As New DataTable
            If (ddlfieldss.SelectedIndex <> 0) Then
                da.SelectCommand.CommandText = "Select dropdown from mmm_mst_fields where fieldid=" & ddlfieldss.SelectedValue & " and eid=" & Session("EID") & ""
                da.Fill(dsfld)
                If (dsfld.Rows.Count > 0) Then
                    Dim a As String() = dsfld.Rows(0)(0).ToString().Split("-")
                    If (a.Length > 1) Then
                        Dim dsfinalfld As New DataTable
                        da.SelectCommand.CommandText = "select displayname,fieldmapping from mmm_mst_fields where documenttype='" & a(1).ToString() & "' and eid=" & Session("EID") & " and fieldtype in('lookup','Text Box')"
                        da.Fill(dsfinalfld)
                        If (dsfinalfld.Rows.Count > 0) Then
                            ddlAutoFieldName.DataSource = dsfinalfld
                            ddlAutoFieldName.DataTextField = "displayname"
                            ddlAutoFieldName.DataValueField = "fieldmapping"
                            ddlAutoFieldName.DataBind()
                        End If
                        ddlAutoFieldName.Items.Insert("0", New ListItem("SELECT"))
                    End If
                Else
                    If (ddlAutoFieldName.Items.Count > 0) Then
                        ddlAutoFieldName.Items.Clear()
                        ddlAutoFieldName.Items.Insert("0", New ListItem("SELECT"))
                    End If
                End If
            Else
                If (ddlAutoFieldName.Items.Count > 0) Then
                    ddlAutoFieldName.Items.Clear()
                    ddlAutoFieldName.Items.Insert("0", New ListItem("SELECT"))
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    'added For Inline Editing By Mayank 02-Mar-2015
    Protected Sub ddlInlineEdit_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlInlineEdit.SelectedIndexChanged
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Try


            'ddlcurdoc.Items.Clear()
            'lastrow.Visible = False
            If (ddlInlineEdit.SelectedIndex = 1) Then

                'da.SelectCommand.CommandText = "select FormName ,FormSource ,EventName,FORMTYPE,hasDefaultValue  from MMM_MST_FORMS where FormID=" & Convert.ToInt32(ViewState("grdFormid")) & ""
                'da.Fill(ds, "FormDetail")
                'If ds.Tables("FormDetail").Rows.Count > 0 Then
                '    da.SelectCommand.CommandText = "Select displayname,convert(nvarchar,FIELDID)[fieldid] from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ds.Tables("FormDetail").Rows(0).Item("Formname").ToString() & "' order by displayname "
                '    da.Fill(ds, "fields")

                '    ddlcurdoc.DataSource = ds.Tables("fields")
                '    ddlcurdoc.DataTextField = "displayname"
                '    ddlcurdoc.DataValueField = "fieldid"
                '    ddlcurdoc.DataBind()

                '    ViewState("currentchild") = ds.Tables("FormDetail").Rows(0).Item("Formname").ToString()
                '    Call bindgrid()
                '    bindgridfilter()
                da.SelectCommand.CommandText = "Update MMM_MST_FORMS set isinlineediting=1 where FormID=" & Convert.ToInt32(ViewState("grdFormid")) & ""
                da.Fill(ds, "fieldsa")
                Lblinlineeditmsg.Text = ""
                ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('You have Successfully Enabled Inline Editing Configuration ');", True)

            ElseIf (ddlInlineEdit.SelectedIndex = 2) Then
                da.SelectCommand.CommandText = "Update MMM_MST_FORMS set isinlineediting=0 where FormID=" & Convert.ToInt32(ViewState("grdFormid")) & ""
                da.Fill(ds, "fieldsa")
                ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('You have Successfully disabled Inline Editing Configuration ');", True)

            Else
                Lblinlineeditmsg.Text = "Please Enable Isinline Configuration"
            End If
            'ddlcurdoc.Items.Insert(0, "SELECT")
            'Lblinlineeditmsg.Text = "Please Enable Isinline Configuration"
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub chkshowCUploder_CheckedChanged(sender As Object, e As EventArgs)
        If (chkshowCUploder.Checked = True) Then
            uploader.Visible = True
        Else
            uploader.Visible = False
        End If
    End Sub
    'Add Tally Config
    Protected Sub ddlSyncMaster_SelectedIndexChanged(sender As Object, e As EventArgs)

        If (ddlSyncMaster.SelectedIndex = 0) Then
            ddlTallyRegisteredFileds.SelectedIndex = 0
        Else
            Dim str As String() = ddlSyncMaster.SelectedValue.Trim().Split("|")
            If (Not IsNothing(str)) Then
                For Each Li As ListItem In ddlTallyRegisteredFileds.Items
                    If (Li.Value.ToString.Contains("|" & str(1))) Then
                        Li.Selected = True
                    Else
                        Li.Selected = False
                    End If
                Next
            End If

            '  ddlTallyRegisteredFileds.SelectedIndex = ddlTallyRegisteredFileds.Items.IndexOf(ddlTallyRegisteredFileds.Items.FindByValue(ddlSyncMaster.SelectedValue))
        End If

    End Sub


    Protected Sub btnCloseF_Click()
        Session("FORMNAME") = Nothing
        Me.btnF_ModalPopupExtender.Hide()
    End Sub

    Protected Sub ddlParentVal_Parentdoc_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlParentVal_Parentdoc.SelectedIndexChanged
        If (ddlParentVal_Parentdoc.SelectedIndex > 0) Then

            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select DisplayName,FieldID from mmm_mst_fields where eid =" & Session("EID") & " and" &
    " Documenttype ='" & ddlParentVal_Parentdoc.SelectedValue & "' and fieldtype not like 'child item%'"
            da.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable()
            da.Fill(dt)
            ddlParentVal_ParentFields.DataSource = dt
            ddlParentVal_ParentFields.DataTextField = "DisplayName"
            ddlParentVal_ParentFields.DataValueField = "FieldID"
            ddlParentVal_ParentFields.DataBind()
            ddlParentVal_ParentFields.Items.Insert(0, "Select Field")

        End If

    End Sub



    'Protected Sub btnParentVal_Save_Click(sender As Object, e As EventArgs)


    'End Sub

    Protected Sub ddlFUDataTypes_SelectedIndexChanged(sender As Object, e As EventArgs)
        If (ddlFUDataTypes.SelectedIndex <> 0 And ddlFUDataTypes.SelectedIndex <> 2) Then
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select displayname,fieldtype,datatype,documenttype from mmm_mst_fields where documenttype='" & FileUploaderF.Text & "'  and FieldType not in ('FILE UPLOADER','Child Item') and eid=" & Session("EID")
            da.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable()
            da.Fill(dt)
            chklFUL.DataSource = dt
            chklFUL.DataTextField = "displayname"
            chklFUL.DataValueField = "displayname"
            chklFUL.DataBind()
            ImgType.Visible = True
            txtDPFU.Text = ""
        Else
            If chklFUL.Items.Count > 0 Then
                chklFUL.Items.Clear()
                ImgType.Visible = False
                txtDPFU.Text = ""
            End If

        End If
    End Sub


    'Add For Creator 
    Protected Sub ddlCreator_SelectedIndexChanged(sender As Object, e As EventArgs)

        Dim da As New SqlDataAdapter("", con)

        Dim dt As New DataTable()

        If ddlCreator.SelectedIndex = 0 Then
            If ddlCreatorValue.Items.Count > 0 Then
                ddlCreatorValue.Items.Clear()
            End If
        ElseIf ddlCreator.SelectedIndex = 1 Then

            If dt.Rows.Count > 0 Then
                If ddlCreatorValue.Items.Count > 0 Then
                    ddlCreatorValue.Items.Clear()
                End If
                ddlCreatorValue.Items.Insert("0", New ListItem("OUID"))
            Else
                If ddlCreatorValue.Items.Count > 0 Then
                    ddlCreatorValue.Items.Clear()
                End If
                ddlCreatorValue.Items.Insert("0", New ListItem("OUID"))
            End If
        ElseIf ddlCreator.SelectedIndex = 2 Then
            da.SelectCommand.CommandText = "select RoleName from mmm_mst_role where eid=" & Session("EID")
            da.SelectCommand.CommandType = CommandType.Text
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                ddlCreatorValue.DataSource = dt
                ddlCreatorValue.DataTextField = "RoleName"
                ddlCreatorValue.DataValueField = "RoleName"
                ddlCreatorValue.DataBind()
                ddlCreatorValue.Items.Insert("0", New ListItem("SELECT"))
            Else
                ddlCreatorValue.DataSource = Nothing
                ddlCreatorValue.DataBind()
            End If
        ElseIf ddlCreator.SelectedIndex = 3 Then
            da.SelectCommand.CommandText = "select displayname,fieldmapping from mmm_mst_fields where documenttype='" & ddlSourceForm.SelectedItem.Text & "' and eid=" & Session("EID") & " and isactive=1 and invisible=0 and (fieldtype ='Drop down' or fieldtype ='LookupDDL' or fieldtype ='Multi LookupDDL')"
            da.SelectCommand.CommandType = CommandType.Text
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                ddlCreatorValue.DataSource = dt
                ddlCreatorValue.DataTextField = "displayname"
                ddlCreatorValue.DataValueField = "fieldmapping"
                ddlCreatorValue.DataBind()
                ddlCreatorValue.Items.Insert("0", New ListItem("SELECT"))
            Else
                ddlCreatorValue.DataSource = Nothing
                ddlCreatorValue.DataBind()
            End If
        End If

    End Sub


    Protected Sub btnSaveExistingval_Click(sender As Object, e As EventArgs)
        Try
            Dim da As New SqlDataAdapter("", con)
            Dim lis As New ArrayList
            For Each li As ListItem In chkexistingval.Items
                If li.Selected = True Then
                    lis.Add(li.Value.ToString())
                End If
            Next
            Dim lisEX As New ArrayList
            For Each li As ListItem In chkexistingtravalEX.Items
                If li.Selected = True Then
                    lisEX.Add(li.Value.ToString())
                End If
            Next
            da.SelectCommand.CommandText = "Update mmm_mst_forms set FiledsForShowExisting='" & String.Join(",", lis.ToArray) & "',FiledsForShowExistingEX='" & String.Join(",", lisEX.ToArray) & "' where eid=" & Session("EID") & " and formname='" & lblFormname.Text & "'"
            If con.State = ConnectionState.Closed Then
                con.Open()
            End If
            da.SelectCommand.ExecuteNonQuery()

        Catch ex As Exception
            ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('There is some error please try again');", True)
        End Try
        ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('Your Show existing values has been successfully saved');", True)
        MP_ShowWixistingValues.Hide()
        up_showexisting.Update()
    End Sub
    'Added for operaton Byfercation
    Protected Sub ddlFilOperation_SelectedIndexChanged(sender As Object, e As EventArgs)
        If ddlFillOperation.SelectedIndex = 0 Then
            synfileter.Visible = False
            tagetdependentfld.Visible = False
            ddlFillOperation.Focus()
            ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('Kindly Select Sync  Filter Operation ');", True)
        ElseIf ddlFillOperation.SelectedIndex = 1 Then
            synfileter.Visible = False
            tagetdependentfld.Visible = False
            ddlEnabledMaster_SelectedIndexChanged(ddlEnabledMaster, New EventArgs())
            ddltallyRegisteredForms_SelectedIndexChanged(ddlTallyRegisteredFileds, New EventArgs())
        ElseIf ddlFillOperation.SelectedIndex = 2 Then
            synfileter.Visible = True
            tagetdependentfld.Visible = True
            BindFileterOperation()
            'ddlEnabledMaster_SelectedIndexChanged(ddlEnabledMaster, New EventArgs())
            'ddltallyRegisteredForms_SelectedIndexChanged(ddlTallyRegisteredFileds, New EventArgs())
        End If

    End Sub

    Protected Sub ddlFilterOperation_SelectedIndexChanged(sender As Object, e As EventArgs)
        ddltallyRegisteredForms_SelectedIndexChanged(ddlTallyRegisteredFileds, New EventArgs())
    End Sub
    Protected Sub BindFileterOperation()
        Dim da As New SqlDataAdapter("", con)
        da.SelectCommand.CommandText = ";with EM (displayname,fieldmapping,dropdown)  as ( select displayname,fieldmapping,SUBSTRING(dropdown,CHARINDEX('-',dropdown) + 1,CHARINDEX('-',dropdown,CHARINDEX('-',dropdown) + 1) - (CHARINDEX('-',dropdown) + 1)) from MMM_MST_FIELDS where eid=" & Session("EID") & " and documenttype ='" & ddlEnabledMaster.SelectedItem.Text & "'and fieldType='Drop Down' and dropdown like'Master-%' ) select * from EM"
        Dim dt As New DataTable()
        da.Fill(dt)
        If dt.Rows.Count > 0 Then
            ddlFilterOperation.DataSource = dt
            ddlFilterOperation.DataTextField = "displayname"
            ddlFilterOperation.DataValueField = "dropdown"
            ddlFilterOperation.DataBind()
            ddlFilterOperation.Items.Insert(0, New ListItem("SELECT"))
        Else
            ddlFilterOperation.DataSource = Nothing
            ddlFilterOperation.DataBind()
            ddlFilterOperation.Items.Insert(0, New ListItem("SELECT"))
        End If
        da.SelectCommand.CommandText = "select displayname,fieldmapping from mmm_mst_fields where eid=" & Session("EID") & " and documenttype='" & ddlEnabledMaster.SelectedItem.Text & "'and fieldType in('Lookup','CheckBox List') "
        Dim dt1 As New DataTable()
        da.Fill(dt1)
        If dt1.Rows.Count > 0 Then
            ddlTargetDependentFld.DataSource = dt1
            ddlTargetDependentFld.DataTextField = "displayname"
            ddlTargetDependentFld.DataValueField = "fieldmapping"
            ddlTargetDependentFld.DataBind()
            ddlTargetDependentFld.Items.Insert(0, New ListItem("SELECT"))
        Else
            ddlTargetDependentFld.DataSource = Nothing
            ddlTargetDependentFld.DataBind()
            ddlTargetDependentFld.Items.Insert(0, New ListItem("SELECT"))
        End If
    End Sub


    'Protected Sub chkfldsep_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    For Each li As ListItem In chkfldsep.Items
    '        Dim chk As Boolean = False
    '        If li.Selected = True Then

    '        End If
    '    Next
    'End Sub

    Protected Sub ddlLLTFS_SelectedIndexChanged(sender As Object, e As EventArgs)
        If ddlLLMF.Items.Count > 0 Then
            ddlLLMF.Items.Clear()
        End If
        If ddlLLTFS.SelectedIndex = 1 Then
            TDF.Visible = False
            If ddlLLTS.SelectedIndex = 0 Then
                Label21.Text = "Please Select Target Doc to find child item"
                OtherSource.Visible = False
                ddlLLTS.Focus()
                Exit Sub
            Else
                OtherSource.Visible = True
                Dim da As New SqlDataAdapter("", con)
                da.SelectCommand.CommandText = "select formname,formid from MMM_MST_FORMS where FormName in( select dropdown from mmm_mst_fields where documenttype='" & ddlLLTS.SelectedItem.Text.Trim() & "' and eid=" & Session("EID") & " and fieldType='Child Item') and eid=" & Session("EID") & " and IsActive=1"
                Dim dt As New DataTable()
                da.Fill(dt)
                If dt.Rows.Count > 0 Then
                    ddlLLCTD.DataSource = dt
                    ddlLLCTD.DataTextField = "formname"
                    ddlLLCTD.DataValueField = "formid"
                    ddlLLCTD.DataBind()
                    ddlLLCTD.Items.Insert("0", New ListItem("Select"))
                End If
            End If
        Else
            OtherSource.Visible = False
            TCF.Visible = False
            TDF.Visible = True
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "declare @val nvarchar(200)=null select @val=dropdown from mmm_mst_fields where fieldmapping='" & ddlLLSF.SelectedValue.Trim() & "' and eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' select * from mmm_mst_fields where documenttype='" & ddlLLTS.SelectedItem.Text.Trim() & "' and eid=" & Session("EID") & " and dropdown=''+@val+''"
            Dim dt As New DataTable()
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                ddlLLTFLDS.DataSource = dt
                ddlLLTFLDS.DataTextField = "displayname"
                ddlLLTFLDS.DataValueField = "FieldMapping"
                ddlLLTFLDS.DataBind()
                ddlLLTFLDS.Items.Insert("0", New ListItem("Select"))
            Else
                If ddlLLTFLDS.Items.Count > 0 Then
                    ddlLLTFLDS.Items.Clear()
                End If
                ddlLLTFLDS.Items.Insert("0", New ListItem("Select"))
            End If
        End If

    End Sub

    Protected Sub ddlLLTS_SelectedIndexChanged(sender As Object, e As EventArgs)
        ddlLLTFS_SelectedIndexChanged(ddlLLTFS, New EventArgs())
    End Sub

    Protected Sub ddlLLCTD_SelectedIndexChanged(sender As Object, e As EventArgs)
        If ddlLLSF.SelectedIndex = 0 Then
            Label21.Text = "Please Select Source Fields"
            Exit Sub
        ElseIf ddlLLTS.SelectedIndex = 0 Then
            Label21.Text = "Please Select  Target Doc"
            Exit Sub
        ElseIf ddlLLCTD.SelectedIndex = 0 Then
            Label21.Text = "Please Select  Target Child Doc"
            Exit Sub
        End If
        Dim da As New SqlDataAdapter("", con)
        da.SelectCommand.CommandText = "declare @val nvarchar(200)=null select @val=dropdown from mmm_mst_fields where fieldmapping='" & ddlLLSF.SelectedValue.Trim() & "' and eid=" & Session("EID") & " and documenttype='" & ViewState("FORMNAME") & "' Select displayName,FieldMapping from mmm_mst_fields where DocumentType='" & ddlLLCTD.SelectedItem.Text.Trim() & "' and eid=" & Session("EID") & " and dropdown=''+@val+''"
        Dim dt As New DataTable()
        da.Fill(dt)
        If dt.Rows.Count > 0 Then
            ddlLLTCRF.DataSource = dt
            ddlLLTCRF.DataTextField = "displayName"
            ddlLLTCRF.DataValueField = "FieldMapping"
            ddlLLTCRF.DataBind()
            ddlLLTCRF.Items.Insert("0", New ListItem("Select"))
        Else
            If ddlLLTCRF.Items.Count > 0 Then
                ddlLLTCRF.Items.Clear()
            End If
            ddlLLTCRF.Items.Insert("0", New ListItem("Select"))
        End If
        TCF.Visible = True
    End Sub

    Protected Sub ddlLLTCRF_SelectedIndexChanged(sender As Object, e As EventArgs)
        If ddlLLTCRF.SelectedIndex = 0 Then
            Label21.Text = "Please Select  Target Child Fields"
            Exit Sub
        Else
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select displayname,fieldMapping from mmm_mst_fields where documenttype='" & ddlLLCTD.SelectedItem.Text.Trim() & "' and eid=" & Session("EID") & " and fieldmapping not in ('" & ddlLLTCRF.SelectedValue.Trim() & "') "
            Dim dt As New DataTable()
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                ddlLLMF.DataSource = dt
                ddlLLMF.DataTextField = "displayname"
                ddlLLMF.DataValueField = "fieldMapping"
                ddlLLMF.DataBind()
                ddlLLMF.Items.Insert("0", New ListItem("Select"))
            End If
        End If

    End Sub

    Protected Sub ddlLLSF_SelectedIndexChanged(sender As Object, e As EventArgs)
        If ddlLLTFS.SelectedIndex = 0 Then
            OtherSource.Visible = False
            TDF.Visible = True
            TCF.Visible = False
        Else
            OtherSource.Visible = True
            TDF.Visible = False
            TCF.Visible = True
        End If
        If ddlLLTS.SelectedIndex <> 0 Then
            ddlLLTS_SelectedIndexChanged(ddlLLTS, New EventArgs())
        End If
    End Sub

    Protected Sub ddlLLTFLDS_SelectedIndexChanged(sender As Object, e As EventArgs)
        If ddlLLTFLDS.SelectedIndex <> 0 Then
            Dim da As New SqlDataAdapter("", con)
            da.SelectCommand.CommandText = "select displayname,fieldmapping from MMM_MST_FIELDS where DocumentType='" & ddlLLTS.SelectedItem.Text.Trim() & "' and eid=" & Session("EID") & " and  fieldmapping not in('" & ddlLLTFLDS.SelectedValue & "') and isActive=1"
            Dim dt As New DataTable()
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                ddlLLMF.DataSource = dt
                ddlLLMF.DataTextField = "displayname"
                ddlLLMF.DataValueField = "fieldmapping"
                ddlLLMF.DataBind()
                ddlLLMF.Items.Insert("0", New ListItem("Select"))
            Else
                If ddlLLMF.Items.Count > 0 Then
                    ddlLLMF.Items.Clear()
                End If
                ddlLLMF.Items.Insert("0", New ListItem("Select"))
            End If
        End If

    End Sub

    Protected Sub IsRoundOff_CheckedChanged(sender As Object, e As EventArgs)
        If IsRoundOff.Checked = True Then
            txtRoundOffVal.Text = "0"
            txtRoundOffVal.Visible = True

        Else
            txtRoundOffVal.Text = "-1"
            txtRoundOffVal.Visible = False
        End If
    End Sub

    Protected Sub ddlSessionFieldVal_SelectedIndexChanged(sender As Object, e As EventArgs)
        Dim da As New SqlDataAdapter("", con)
        If ddlDropDownMasteValSelect.SelectedIndex = 0 Then
            lbldropdown.Text = "Please Select Master from Master valued Field Type"
            Exit Sub
        Else
            lbldropdown.Text = ""
        End If
        If ddlSessionFieldVal.SelectedIndex <> 0 Then

            da.SelectCommand.CommandText = "select displayname,fieldmapping from mmm_mst_fields where documenttype='" & ddlDropDownMasteValSelect.SelectedItem.Text.Trim() & "' and eid=" & Session("EID") & " and fieldType in ('Drop down','AutoComplete')"
            Dim dt As New DataTable()
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                ddldependent.DataSource = dt
                ddldependent.DataTextField = "displayname"
                ddldependent.DataValueField = "fieldmapping"
                ddldependent.DataBind()
            End If
        Else
            If ddldependent.Items.Count > 0 Then
                ddldependent.Items.Clear()
            End If
        End If
        ddldependent.Items.Insert("0", New ListItem("SELECT FIELD"))
    End Sub


    Protected Sub btnSaveUserMapping_Click(sender As Object, e As EventArgs)
        Dim ds As New DataSet()
        ds = GetMasterMapping(lbltid.Text, ViewState("FORMNAME"))
        If ds.Tables.Count > 0 Then
            Dim DisplayText As String = txtMappingDisplayText.Text
            If ds.Tables(0).Rows.Count > 0 Then
                For Each dr As DataRow In ds.Tables(0).Rows
                    If DisplayText.ToString().Contains("{" & dr(1).ToString() & "}|") Then
                        DisplayText = DisplayText.Replace("{" & dr(1).ToString() & "}|", "{" & dr(0).ToString() & "}|")
                    End If
                Next
            End If
            If ds.Tables(1).Rows.Count > 0 Then
                For Each dr As DataRow In ds.Tables(1).Rows
                    If DisplayText.ToString().Contains("|{" & dr(1).ToString() & "}") Then
                        DisplayText = DisplayText.Replace("|{" & dr(1).ToString() & "}", "|{" & dr(0).ToString() & "}")
                    End If
                Next
            End If
            DisplayText = DisplayText.Replace("|", "-").Replace("{", "").Replace("}", "")
            Dim AllowCreateRecord_onfly As Integer
            If DisplayText.Length = 0 Then
                AllowCreateRecord_onfly = 0
            Else
                AllowCreateRecord_onfly = 1
            End If
            Try
                Dim dynamicQuery As String = "Update mmm_mst_fields set AllowCreateRecord_onfly=" & AllowCreateRecord_onfly & ",OnflyFieldmapping='" & DisplayText.ToString() & "' where fieldid=" & lbltid.Text & " and eid=" & Session("EID")
                Dim constr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                Dim con As New SqlConnection(constr)
                Dim sda As New SqlDataAdapter(dynamicQuery, con)
                If con.State = ConnectionState.Closed Then
                    con.Open()
                End If
                sda.SelectCommand.ExecuteNonQuery()
                con.Close()
                txtMappingDisplayText.Text = ""
                lbltid.Text = ""
                If ddlTargetDocumentFields.Items.Count > 0 Then
                    ddlTargetDocumentFields.Items.Clear()
                End If
                If ddlDocumentFields.Items.Count > 0 Then
                    ddlDocumentFields.Items.Clear()
                End If
                modUserMapping.Hide()
            Catch ex As Exception

            End Try

        End If

    End Sub
    Protected Sub btnDeleteAccordian_Click(sender As Object, e As ImageClickEventArgs)
        Dim objDC As New DataClass()
        Dim btnTabDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnTabDetails.NamingContainer, GridViewRow)
        Dim docPanelID As Integer = Convert.ToString(Me.grdDocDetailPanel.DataKeys(row.RowIndex).Value)
        Dim documenttype As String = row.Cells(5).Text.ToString()
        objDC.ExecuteQryDT("delete from mmm_doc_dtl_panel where panel_id=" & docPanelID & " and eid=" & Session("EID") & " and documenttype='" & documenttype.ToString() & "'")
        ClearDocAccordian("SAVE", documenttype)
        ShowMessage("Your Record(s) has been successfully deleted !")
    End Sub
    Protected Sub btnDeleteTab_Click(sender As Object, e As ImageClickEventArgs)
        Dim objDC As New DataClass()
        Dim btnTabDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnTabDetails.NamingContainer, GridViewRow)
        Dim docPanelID As Integer = Convert.ToString(Me.grdTabConfugureData.DataKeys(row.RowIndex).Value)
        Dim documenttype As String = row.Cells(5).Text.ToString()
        objDC.ExecuteQryDT("update MMM_MST_FIELDS set displaypanelid=null,displaypanelorder=null where documenttype='" & documenttype.ToString() & "' and eid=" & Session("EID") & " and displaypanelid=" & docPanelID & "")
        objDC.ExecuteQryDT("delete from docPanel where docPanelID=" & docPanelID & " and eid=" & Session("EID") & " and documenttype='" & documenttype.ToString() & "'")
        ClearTabPanel("SAVE", documenttype)
        ShowMessage("Your Record(s) has been successfully deleted !")
    End Sub

    Protected Sub btnEditDocDetail_Click(sender As Object, e As ImageClickEventArgs)
        btnDocPanelConfiguration.Text = "Update Doc Panel Configuration"
        Dim btnTabDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnTabDetails.NamingContainer, GridViewRow)
        Dim docPanelID As Integer = Convert.ToString(Me.grdDocDetailPanel.DataKeys(row.RowIndex).Value)

        Dim flds As String = row.Cells(4).Text.ToString()
        Dim documenttype As String = row.Cells(5).Text.ToString()
        Dim objDT As New DataTable()
        Dim objDC As New DataClass()
        objDT = objDC.ExecuteQryDT("Select fieldid, displayName from mmm_mst_fields where documenttype='" & documenttype.ToString().Trim() & "' and eid=" & Session("EID") & " and fieldtype<>'Child Item'")
        If objDT.Rows.Count > 0 Then
            chkAccFields.DataSource = objDT
            chkAccFields.DataTextField = "displayName"
            chkAccFields.DataValueField = "fieldid"
            chkAccFields.DataBind()
            For Each li As ListItem In chkAccFields.Items
                If ("," & flds & ",").ToString().Contains("," & li.Value & ",") Then
                    li.Selected = True
                Else
                    li.Selected = False
                End If
            Next

        End If
        hdnAccordian_PanelID.Value = row.Cells(1).Text.Trim()
        txtAcc_PanelName.Text = row.Cells(2).Text.Trim()
        txtAcc_DisplayOrder.Text = row.Cells(6).Text.Trim()
        chkIsActive.Checked = IIf(row.Cells(8).Text.Trim = "True", True, False)
        chkIsHeadInclude.Checked = IIf(row.Cells(9).Text.Trim = "True", True, False)
        txtResRoles.Text = row.Cells(10).Text.Trim()
        UpdatePanelAccordian.Update()
    End Sub

    Protected Sub imgEdit_Click(sender As Object, e As ImageClickEventArgs)
        btnSubmitConfigure.Text = "Update Panel Configuration"
        Dim btnTabDetails As ImageButton = TryCast(sender, ImageButton)
        Dim row As GridViewRow = DirectCast(btnTabDetails.NamingContainer, GridViewRow)
        Dim docPanelID As Integer = Convert.ToString(Me.grdTabConfugureData.DataKeys(row.RowIndex).Value)

        Dim flds As String = row.Cells(4).Text.ToString()
        Dim documenttype As String = row.Cells(5).Text.ToString()
        Dim objDT As New DataTable()
        Dim objDC As New DataClass()
        If flds <> "" Then
            objDT = objDC.ExecuteQryDT("Select fieldid, displayName from mmm_mst_fields where documenttype='" & documenttype.ToString().Trim() & "' and eid=" & Session("EID") & " and fieldtype<>'Child Item' and (displaypanelid is null or fieldid in(" & flds & "))")
        Else
            objDT = objDC.ExecuteQryDT("select fieldid,displayName from mmm_mst_fields where documenttype='" & documenttype.ToString().Trim() & "' and eid=" & Session("EID") & " and fieldtype<>'Child Item' and (displaypanelid is null)")
        End If
        If objDT.Rows.Count > 0 Then
            chkFields.DataSource = objDT
            chkFields.DataTextField = "displayName"
            chkFields.DataValueField = "fieldid"
            chkFields.DataBind()
            For Each li As ListItem In chkFields.Items
                If ("," & flds & ",").ToString().Contains("," & li.Value & ",") Then
                    li.Selected = True
                Else
                    li.Selected = False
                End If
            Next
        End If
        lblPanelID.Text = row.Cells(1).Text.Trim()
        txtTabpanelName.Text = row.Cells(2).Text.Trim()
        txtDisplayOrder.Text = row.Cells(6).Text.Trim()
        UpdatePanelTab.Update()

    End Sub
    Protected Sub btnDocPanelConfiguration_Click(sender As Object, e As EventArgs)
        Dim objDC As New DataClass()
        Dim arr As New ArrayList()
        If txtAcc_PanelName.Text = "" Then
            ShowMessage("Please type panel Name")
            txtAcc_PanelName.Focus()
            Exit Sub
        ElseIf txtAcc_DisplayOrder.Text = "" Then
            ShowMessage("Please type panel display order")
            txtAcc_DisplayOrder.Focus()
            Exit Sub
        End If
        Dim arlist As New ArrayList()
        For Each li As ListItem In chkAccFields.Items
            If li.Selected = True Then
                arlist.Add(li.Value)
            End If
        Next
        If arlist.Count = 0 And chkIsHeadInclude.Checked = False Then
            ShowMessage("Please select at least one fields or Is Head Include functionality")
            Exit Sub
        End If
        Dim ht As New Hashtable()
        Try
            If btnDocPanelConfiguration.Text = "Save Doc Panel Configuration" Then
                ht.Add("@Panel_Name", txtAcc_PanelName.Text)
                ht.Add("@AccessFieldId", String.Join(",", arlist.ToArray()))
                ht.Add("@Panel_displayOrder", txtAcc_DisplayOrder.Text)
                ht.Add("@uid", Session("UID"))
                ht.Add("@documenttype", labAccordianPanel.Text)
                ht.Add("@IsActive", chkIsActive.Checked)
                ht.Add("@IsHeadInclude", chkIsHeadInclude.Checked)
                ht.Add("@panel_id", 0)
                ht.Add("@Eid", Session("EID"))
                ht.Add("@RestrictedRoles", txtResRoles.Text) '' new by sp
                objDC.ExecuteProDT("Sp_SaveUpdateDocPanelFields", ht)
                ClearDocAccordian("SAVE", labAccordianPanel.Text)
                ShowMessage("Your record(s) has been successfully saved.")
            ElseIf btnDocPanelConfiguration.Text = "Update Doc Panel Configuration" Then
                ht.Add("@Panel_Name", txtAcc_PanelName.Text)
                ht.Add("@AccessFieldId", String.Join(",", arlist.ToArray()))
                ht.Add("@Panel_displayOrder", txtAcc_DisplayOrder.Text)
                ht.Add("@uid", Session("UID"))
                ht.Add("@documenttype", labAccordianPanel.Text)
                ht.Add("@IsActive", chkIsActive.Checked)
                ht.Add("@IsHeadInclude", chkIsHeadInclude.Checked)
                ht.Add("@panel_id", hdnAccordian_PanelID.Value)
                ht.Add("@Eid", Session("EID"))
                ht.Add("@RestrictedRoles", txtResRoles.Text) '' new by sp
                objDC.ExecuteProDT("Sp_SaveUpdateDocPanelFields", ht)
                ClearDocAccordian("UPDATE", labAccordianPanel.Text)
                ShowMessage("Your record has been successfully updated.")
            End If
        Catch ex As Exception

        End Try

    End Sub

    Protected Sub btnSubmitConfigure_Click(sender As Object, e As EventArgs)
        Dim objDC As New DataClass()
        Dim arr As New ArrayList()
        If txtTabpanelName.Text = "" Then
            ShowMessage("Please Type panel Name")
            txtTabpanelName.Focus()
            Exit Sub
        ElseIf txtDisplayOrder.Text = "" Then
            ShowMessage("Please Type display order")
            txtTabpanelName.Focus()
            Exit Sub
        End If
        If btnSubmitConfigure.Text = "Save Panel Configuration" Then
            For Each li As ListItem In chkFields.Items
                If li.Selected = True Then
                    arr.Add(li.Value)
                End If
            Next
            Dim panelID As Integer = objDC.ExecuteQryScaller("insert into docPanel(PanelName,displayOrder,documenttype,eid) values ('" & txtTabpanelName.Text & "'," & txtDisplayOrder.Text & ",'" & labTabPanel.Text & "'," & Session("EID") & ")  select scope_identity()")
            If arr.Count() > 0 Then
                objDC.ExecuteQryDT(" update MMM_MST_FIELDS set displaypanelid=" & panelID.ToString() & ",displaypanelorder=" & txtDisplayOrder.Text & " where documenttype='" & labTabPanel.Text.Trim() & "' and eid=" & Session("EID") & " and fieldid in (" & String.Join(",", arr.ToArray()) & ") ")
            End If
            ClearTabPanel("SAVE", labTabPanel.Text.Trim())
            ShowMessage("Your Record(s) has been sucessfully saved !")
        ElseIf btnSubmitConfigure.Text = "Update Panel Configuration" Then
            For Each li As ListItem In chkFields.Items
                If li.Selected = True Then
                    arr.Add(li.Value)
                End If
            Next
            objDC.ExecuteQryDT(" update MMM_MST_FIELDS set displaypanelid=null,displaypanelorder=null where documenttype='" & labTabPanel.Text.Trim() & "' and eid=" & Session("EID") & " and displaypanelid=" & lblPanelID.Text)
            If arr.Count() > 0 Then
                objDC.ExecuteQryDT(" update MMM_MST_FIELDS set displaypanelid=" & lblPanelID.Text & ",displaypanelorder=" & txtDisplayOrder.Text & " where documenttype='" & labTabPanel.Text.Trim() & "' and eid=" & Session("EID") & " and fieldid in (" & String.Join(",", arr.ToArray()) & ") ")
            End If
            ClearTabPanel("UPDATE", labTabPanel.Text.Trim())
            ShowMessage("Your Record(s) has been sucessfully updated !")
        End If

    End Sub

    Protected Sub ClearDocAccordian(ByVal operation As String, ByVal documenttype As String)
        If operation.ToUpper = "UPDATE" Then
            btnDocPanelConfiguration.Text = "Save Doc Panel Configuration"
        Else
            btnDocPanelConfiguration.Text = "Save Doc Panel Configuration"
        End If
        hdnAccordian_PanelID.Value = ""
        txtAcc_PanelName.Text = ""
        txtAcc_DisplayOrder.Text = ""
        chkIsActive.Checked = False
        chkIsHeadInclude.Checked = False
        txtResRoles.Text = ""
        If chkAccFields.Items.Count > 0 Then
            chkAccFields.Items.Clear()
        End If
        Dim ht As New Hashtable()
        ht.Add("documenttype", documenttype.ToString())
        ht.Add("eid", Session("EID"))
        Dim objDC As New DataClass()
        Dim objDT As New DataTable()
        objDT = objDC.ExecuteProDT("sp_getdisplaynamebyfieldids", ht)
        If objDT.Rows.Count > 0 Then
            grdDocDetailPanel.DataSource = objDT
            grdDocDetailPanel.DataBind()
        End If
        ht.Clear()
        ht.Add("documenttype", labAccordianPanel.Text)
        ht.Add("EID", Session("EID"))
        objDT = objDC.ExecuteProDT("sp_getPendingAccordianDocFields", ht)
        If objDT.Rows.Count > 0 Then
            chkAccFields.DataSource = objDT
            chkAccFields.DataTextField = "displayName"
            chkAccFields.DataValueField = "FieldID"
            chkAccFields.DataBind()
        End If
    End Sub
    Protected Sub ClearTabPanel(ByVal operation As String, ByVal documenttype As String)
        If operation.ToUpper = "UPDATE" Then
            btnSubmitConfigure.Text = "Save Panel Configuration"
        Else
            btnSubmitConfigure.Text = "Save Panel Configuration"
        End If
        lblPanelID.Text = ""
        txtTabpanelName.Text = ""
        txtDisplayOrder.Text = ""
        Dim ht As New Hashtable()
        ht.Add("documenttype", documenttype.ToString())
        ht.Add("eid", Session("EID"))
        Dim objDC As New DataClass()
        Dim objDT As New DataTable()
        objDT = objDC.ExecuteProDT("sp_getpanelDetails", ht)
        If chkFields.Items.Count > 0 Then
            chkFields.Items.Clear()
        End If
        If objDT.Rows.Count > 0 Then
            grdTabConfugureData.DataSource = objDT
            grdTabConfugureData.DataBind()
        End If
        objDT.Dispose()
        objDT = objDC.ExecuteQryDT("select fieldid,displayName from mmm_mst_fields where documenttype='" & documenttype.ToString() & "' and eid=" & Session("EID") & " and fieldtype<>'Child Item' and displaypanelid is null")
        If objDT.Rows.Count > 0 Then
            chkFields.DataSource = objDT
            chkFields.DataTextField = "displayName"
            chkFields.DataValueField = "fieldid"
            chkFields.DataBind()
        End If
    End Sub

    Protected Sub ShowMessage(ByVal msg As String)
        ScriptManager.RegisterStartupScript(Page, Page.GetType, "MyScript", "alert('" & msg.ToString() & "');", True)
    End Sub

End Class