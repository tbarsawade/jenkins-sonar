Imports System.Data
Imports System.Data.SqlClient
Imports System.IO
Imports iTextSharp.text.pdf
Imports System.Web.Services

Partial Class MailApproval
    Inherits System.Web.UI.Page

    Protected Sub Page_PreInit1(ByVal sender As Object, ByVal e As EventArgs) Handles Me.PreInit
        Try
            If Not Session("CTheme") Is Nothing And Not Session("CTheme") = String.Empty Then
                Page.Theme = Convert.ToString(Session("CTheme"))
            Else
                Page.Theme = "Default"
            End If
        Catch ex As Exception
        End Try

    End Sub

    Protected Sub TextBoxRule_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt As Control = TryCast(sender, Control)
            Dim id As String = Right(txt.ID, txt.ID.Length - 3)
            Dim id1 As Integer = CInt(id)
            Dim screenname = Convert.ToString(Session("actionform"))
            Dim dt As DataTable = Session("pfieldsdata")
            ExecuteControllevelRule(id1, pnlFields, Nothing, screenname, dt, Nothing, Nothing, False)
        Catch ex As Exception
            Throw
        End Try
    End Sub
    Public Sub ExecuteControllevelRule(ctrlID As String, pnlP As Panel, pnlC As Panel, screenname As String, dtparent As DataTable, dtChild As DataTable, Optional ErrorLbl As Label = Nothing, Optional IsChildForm As Boolean = False)
        Try
            'Code For Rule Engine Execution
            'Ajeet'
            Dim ObjRet As New RuleResponse()
            Dim objD As New DynamicForm()
            Dim ActionPanel As Panel = pnlP
            Dim lstData As New List(Of UserData)
            Dim lstDataC As List(Of UserData) = Nothing
            'in case of child item create collection of both panel
            If IsChildForm Then
                ActionPanel = pnlC
                lstDataC = New List(Of UserData)
                lstDataC = objD.CreateCollection(pnlP, dtChild)
            End If
            'Initialising rule Object
            Dim ObjRule As New RuleEngin(Session("EID"), screenname, "CREATED", "CONTROL", ctrlID.ToString)
            'Getting 
            Dim dt As DataTable = dtparent
            lstData = objD.CreateCollection(pnlP, dt)
            Dim dsrule As DataSet = ObjRule.GetRules()
            Dim dtrule As New DataTable
            dtrule = dsrule.Tables(1)
            For Each dr As DataRow In dsrule.Tables(0).Rows
                ObjRet = ObjRule.ExecuteRule(lstData, lstDataC, IsChildForm, "", dr, dtrule)
                If Not ObjRet.Success Then
                    If Convert.ToString(ObjRet.FailActionType).ToUpper = "ALERT" Then
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('" + ObjRet.ErrorMessage + "');", True)
                        Exit Sub
                    End If
                End If
                If Not String.IsNullOrEmpty(ObjRet.TargetField.Trim) And ObjRet.HasRule = True Then
                    'code for displaying rule message
                    'changes by himank on 11th september 2015
                    Dim lbmsg = TryCast(Session("lbl"), Label)
                    'If Not lbmsg Is Nothing Then
                    '    If Not ObjRet.Success Then
                    '        lbmsg.Text = ObjRet.ErrorMessage
                    '        lbmsg.ForeColor = System.Drawing.Color.Red
                    '        lbmsg.Visible = True
                    '    Else
                    '        lbmsg.Text = ObjRet.SucessMessage
                    '    End If

                    'End If
                    'ErrorLbl.Text = ObjRet.Message
                    'ErrorLbl.Text = ObjRet.ErrorMessage
                    'Spliting it with "," because there can be more than one target controls
                    Dim arr = ObjRet.TargetField.Split(",")
                    Dim trgCtrl = Nothing
                    Dim lbl As New Label()
                    'Dim ActionType As String = ObjRet.ActionType.Trim.ToUpper
                    For i As Integer = 0 To arr.Length - 1
                        trgCtrl = Nothing
                        If (arr(i).Trim <> "") Then
                            Dim ctrl = ActionPanel.FindControl("fld" & arr(i))

                            If Not ctrl Is Nothing Then

                                lbl = ActionPanel.FindControl("lbl" & arr(i))

                                If ctrl.GetType() Is GetType(System.Web.UI.WebControls.DropDownList) Then
                                    trgCtrl = CType(ctrl, DropDownList)

                                Else
                                    trgCtrl = CType(ctrl, TextBox)
                                End If
                                'changes on controls according to configured rule
                                'changes by Himank on 11th september
                                If ObjRet.Success Then
                                    Select Case ObjRet.SuccActionType.ToUpper

                                        Case "CHANGE DROPDOWN COLOR"
                                            Dim df As New DynamicForm()
                                            Dim style As String = df.ExecuteScalervalue("mmm_mst_fields", "isnull(style,'')", " fieldid=" & arr(i) & " and eid=" & Session("EID") & "")
                                            If style <> "" Then
                                                Dim txt As String() = style.Split(",")
                                                trgCtrl.CssClass = ""
                                                lbl.CssClass = ""
                                            Else
                                                trgCtrl.CssClass = "txtBox"
                                            End If
                                        Case "DISABLE"
                                            trgCtrl.Enabled = False
                                        Case "INVISIBLE"
                                            trgCtrl.CssClass = "invisible"
                                            lbl.CssClass = "invisible"
                                        Case "ENABLE"
                                            trgCtrl.Enabled = True
                                        Case "VISIBLE"
                                            Dim df As New DynamicForm()
                                            Dim style As String = df.ExecuteScalervalue("mmm_mst_fields", "isnull(style,'')", " fieldid=" & arr(i) & " and eid=" & Session("EID") & "")
                                            If style <> "" Then
                                                Dim txt As String() = style.Split(",")
                                                trgCtrl.CssClass = ""
                                                lbl.CssClass = ""
                                            Else
                                                trgCtrl.CssClass = "txtBox"
                                            End If
                                        Case "NO ACTION"
                                    End Select
                                Else
                                    Select Case ObjRet.FailActionType.ToUpper
                                        Case "CHANGE DROPDOWN COLOR"
                                            trgCtrl.CssClass = "Heiglight"
                                            lbl.CssClass = "Heiglight"
                                        Case "DISABLE"
                                            trgCtrl.Enabled = False
                                        Case "ENABLE"
                                            trgCtrl.Enabled = True
                                        Case "INVISIBLE"
                                            trgCtrl.CssClass = "invisible"
                                            lbl.CssClass = "invisible"
                                        Case "VISIBLE"
                                            Dim df As New DynamicForm()
                                            Dim style As String = df.ExecuteScalervalue("mmm_mst_fields", "isnull(style,'')", " fieldid=" & arr(i) & " and eid=" & Session("EID") & "")
                                            If style <> "" Then
                                                Dim txt As String() = style.Split(",")
                                                trgCtrl.CssClass = ""
                                                lbl.CssClass = ""

                                            Else
                                                trgCtrl.CssClass = "txtBox"
                                            End If
                                    End Select
                                End If
                            End If
                        End If
                    Next
                    Exit Sub
                End If
            Next
        Catch ex As Exception
            Throw New Exception("Exception in control level Rule Ececution")
        End Try
    End Sub

    Public Sub AddHandlerOnControl(dt As DataTable, pnl As Panel, Optional errlbl As Label = Nothing)
        Try
            Session("lbl") = errlbl
            Dim RuleRow() As DataRow = dt.Select("HasRule='1'")
            If RuleRow.Length > 0 Then
                For r As Integer = 0 To RuleRow.Length - 1
                    Dim FieldType = RuleRow(r).Item("FieldType").ToString()
                    Select Case FieldType.ToUpper
                        Case "TEXT BOX"
                            Dim TextBox As TextBox = TryCast(pnlPerReject.FindControl("fld" & RuleRow(r).Item("FieldID").ToString()), TextBox)
                            If Not TextBox Is Nothing Then
                                Dim id As String = Right(TextBox.ID, TextBox.ID.Length - 3)
                                TextBox.AutoPostBack = True
                                AddHandler TextBox.TextChanged, AddressOf TextBoxRule_TextChanged
                            End If
                        Case "CHECK BOX"
                            Dim CheckBox As CheckBox = TryCast(pnl.FindControl("fld" & RuleRow(r).Item("FieldID").ToString()), CheckBox)
                            Dim id As String = Right(CheckBox.ID, CheckBox.ID.Length - 3)
                            CheckBox.AutoPostBack = True
                            AddHandler CheckBox.CheckedChanged, AddressOf TextBoxRule_TextChanged
                    End Select
                Next
            End If
        Catch ex As Exception

        End Try
    End Sub
    Public Function DecryptTripleDES(ByVal sOut As String, ByVal sKey As String) As String
        Dim DES As New System.Security.Cryptography.TripleDESCryptoServiceProvider
        Dim hashMD5 As New System.Security.Cryptography.MD5CryptoServiceProvider

        ' scramble the key
        sKey = ScrambleKey(sKey)
        ' Compute the MD5 hash.
        DES.Key = hashMD5.ComputeHash(System.Text.ASCIIEncoding.ASCII.GetBytes(sKey))
        ' Set the cipher mode.
        DES.Mode = System.Security.Cryptography.CipherMode.ECB
        ' Create the decryptor.
        Dim DESDecrypt As System.Security.Cryptography.ICryptoTransform = DES.CreateDecryptor()
        Dim Buffer As Byte() = Convert.FromBase64String(sOut)
        ' Transform and return the string.
        Return System.Text.ASCIIEncoding.ASCII.GetString(DESDecrypt.TransformFinalBlock(Buffer, 0, Buffer.Length))
    End Function
    Private Function ScrambleKey(ByVal v_strKey As String) As String
        Dim sbKey As New System.Text.StringBuilder
        Dim intPtr As Integer
        For intPtr = 1 To v_strKey.Length
            Dim intIn As Integer = v_strKey.Length - intPtr + 1
            sbKey.Append(Mid(v_strKey, intIn, 1))
        Next
        Dim strKey As String = sbKey.ToString
        Return sbKey.ToString
    End Function
    Protected Function RetDocId(ByVal EID As String) As String
        Dim DOCID As String = ""
        Dim result As String = ""
        Dim Q1 As String = Request.QueryString("Q1").ToString().Trim()
        Q1 = Q1.Replace(" ", "+")
        result = DecryptTripleDES(Q1, EID)
        Dim TempDOCID As String() = result.Split("=")
        DOCID = Convert.ToString(TempDOCID(1)).Trim()
        Return DOCID
    End Function
    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init
        Dim conF As New SqlConnection(ConfigurationManager.ConnectionStrings("conStr").ConnectionString)
        Session("ALLCHILD") = Nothing
        Session("FNS") = Nothing
        If Not IsPostBack Then
            Dim Ecode As String()
            Dim strPathAndQuery As String = HttpContext.Current.Request.Url.PathAndQuery
            Dim strUrl As String = HttpContext.Current.Request.Url.AbsoluteUri.Replace(strPathAndQuery, "/")
            If strUrl.Contains("localhost") Then
                strUrl = " http://hcl.myndsaas.com/"
                strUrl = strUrl.ToUpper.Trim()
                strUrl = Replace(strUrl, "HTTP://", "")
                strUrl = Replace(strUrl, "HTTPS://", "")
                Ecode = strUrl.Split(".")
            Else
                strUrl = strUrl.ToUpper.Trim()
                strUrl = Replace(strUrl, "HTTP://", "")
                strUrl = Replace(strUrl, "HTTPS://", "")
                Ecode = strUrl.Split(".")
            End If
            'Dim FECode As String() = Ecode(0).ToString().Split("//")
            Dim da As New SqlDataAdapter("", conF)
            da.SelectCommand.CommandText = "select EID from mmm_mst_entity where code ='" & Ecode(0).ToString().Trim() & "'"
            If conF.State = ConnectionState.Closed Then
                conF.Open()
            End If

            Session("EID") = Convert.ToString(da.SelectCommand.ExecuteScalar())
            Dim querystring As String() = strPathAndQuery.Split("?")
            If querystring.Length > 1 Then
                Dim Q1 As String = Request.QueryString("Q1").ToString().Trim()
                Q1 = Q1.Replace(" ", "+")
                Dim Q2 As String = Request.QueryString("Q2").ToString().Trim()
                Q2 = Q2.Replace(" ", "+")
                Dim Q3 As String = Request.QueryString("Q3").ToString().Trim()
                Q3 = Q3.Replace(" ", "+")
                Dim result As String = DecryptTripleDES(Q1, Session("EID"))
                Dim userid As String = DecryptTripleDES(Q2, Session("EID"))
                Dim Curstatus As String = DecryptTripleDES(Q3, Session("EID"))
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.CommandText = ";with A(curstatus,Lasttid)  as(select curstatus, lasttid from mmm_mst_doc where tid=" & RetDocId(Session("EID")) & ")select    upper(rtrim(ltrim('USERID='+ convert(nvarchar(max),a.userid)+','+'CURSTATUS='+b.curstatus)))  from  mmm_doc_dtl as a inner join A as b  on a.tid=b.Lasttid"
                If (userid.ToString().ToUpper.Trim() & "," & Curstatus.ToString().ToUpper.Trim()) = Convert.ToString(da.SelectCommand.ExecuteScalar()).ToUpper().Trim() Then
                    Dim UID As String() = userid.ToString().Split("=")
                    Session("UID") = Convert.ToString(UID(1))
                    lblMAILMSG.Text = ""
                Else
                    Dim UID As String() = userid.ToString().Split("=")
                    Session("UID") = Convert.ToString(UID(1))
                    lblMAILMSG.Text = "You have already performed action against this record and status"
                End If
                da.SelectCommand.CommandText = "select userrole from MMM_MST_USER where  uid =" & Session("UID")
                If conF.State = ConnectionState.Closed Then
                    conF.Open()
                End If
                Session("USERROLE") = Convert.ToString(da.SelectCommand.ExecuteScalar())
            End If
        End If
        
        If Not Session("EID") Is Nothing Then

            If Not Session("ACTION") Is Nothing Then
                'Code For getting action screen fields
                'Added By Himank Singh:09-September-2015

                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim odaField As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F   WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID   where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName ='" & Convert.ToString(Session("ActionForm")) & "' and eventname in(select documenttype from MMM_MST_DOC where eid=" & Session("EID") & " and tid=" & RetDocId(Session("EID")) & ")   order by DocDtlDisplayOrder", conF)
                Dim dtFileds As New DataTable()
                odaField.Fill(dtFileds)
                Session("pfieldsdata") = dtFileds
                Dim dt As DataTable
                dt = CType(Session("FIELDS"), DataTable)
                If dt.Rows.Count > 0 Then
                    Select Case Session("ACTION").ToString()
                        Case "APPROVAL"
                            'lblHeaderPopUp.Text = dt.Rows(0).Item("Formcaption").ToString()
                            pnlApprove.Width = 500
                            pnlApprove.Height = 300

                            Dim ob As New DynamicForm()
                            ob.CreateControlsOnPanel(dt, pnlApprove, updatePanelApprove, btnApprove, 1)
                            Dim xx As Integer = Val(pnlApprove.Width.ToString())
                            Dim ww As Integer = Val(pnlApprove.Height.ToString())
                            pnlApprove.CssClass = "approve"
                            pnlPopupApprove.Width = xx + 20
                            pnlPopupApprove.Height = ww + 70 'panel height + button height + header height
                            Me.updatePanelApprove.Update()
                            Dim ROW1() As DataRow = dt.Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and lookupvalue is not null")
                            If ROW1.Length > 0 Then
                                For i As Integer = 0 To ROW1.Length - 1
                                    Dim DDL As DropDownList = TryCast(pnlApprove.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                                    DDL.AutoPostBack = True
                                    AddHandler DDL.TextChanged, AddressOf bindvalue2
                                Next
                            End If
                            'Code For Rule Post back handler for  controls
                            'Added By Himank Singh:09-September-2015
                            AddHandlerOnControl(dtFileds, pnlApprove, lblMsgRule1)

                            'Code by Ajeet For CRM
                            'Add for Child Action Screen
                            If (Not IsDBNull(Session("CHILDACTIONSCREEN"))) Then
                                If Convert.ToString(Session("CHILDACTIONSCREEN")) <> "" Then
                                    If (Not IsNothing(Session("ActionForm"))) Then
                                        Dim conStrs As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim cons As SqlConnection = New SqlConnection(conStrs)
                                        Dim actionform As String = Session("ActionForm")
                                        Dim childActionvalueRights As String = String.Empty
                                        Dim childActionvalue = Nothing
                                        childActionvalue = Session("CHILDACTIONSCREEN")
                                        childActionvalueRights = Session("CHILDACTIONSCREENRIGHTS")

                                        If (Not IsNothing(Session("ActionForm"))) Then
                                            pnlApprove.Controls.Add(New LiteralControl("<tr>"))
                                            pnlApprove.Controls.Add(New LiteralControl("<td colspan='4'>"))
                                            pnlApprove.Controls.Add(New LiteralControl("&nbsp;</td>"))
                                            pnlApprove.Controls.Add(New LiteralControl("<tr>"))
                                            pnlApprove.Controls.Add(New LiteralControl("<td colspan='4'>"))
                                            pnlApprove.Controls.Add(New LiteralControl("<div id=""tabs"" ><ul>"))
                                            Dim strs As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")
                                            If (Not IsNothing(strs)) Then
                                                For j As Integer = 1 To strs.Length
                                                    If Convert.ToString(strs(j - 1)) <> "" Then
                                                        Dim childvalue As String() = strs(j - 1).ToString().Split(".")
                                                        pnlApprove.Controls.Add(New LiteralControl("<li><a href=""#tabPending" & j.ToString() & """>" & childvalue(1).ToString() & "<asp:Label ID=""lblpending" & j & " "" runat=""server""></asp:Label></a></li>"))
                                                    End If
                                                Next
                                            End If

                                            pnlApprove.Controls.Add(New LiteralControl("</ul>"))
                                            Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                            Dim con1 As New SqlConnection(conStr1)
                                            Dim oda1 As New SqlDataAdapter("", con1)
                                            Dim ds1 As New DataSet

                                            If (Not IsNothing(strs)) Then
                                                For i As Integer = 1 To strs.Length
                                                    Dim childvalue As String() = strs(i - 1).ToString().Split(".")
                                                    Dim conStrsS As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                                    Dim consS As New SqlConnection(conStrsS)
                                                    Dim dasS As SqlDataAdapter = New SqlDataAdapter("", consS)
                                                    Dim odaN As SqlDataAdapter = New SqlDataAdapter("", consS)
                                                    Dim dtChildS As New DataTable()
                                                    Dim create As Boolean = False, delete As Boolean = False, Edit As Boolean = False
                                                    'dasS.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='CAS." & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & childvalue(1).ToString() & "' and  F.EID = " & Session("EID").ToString() & "   Order By Displayorder"
                                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                    dasS.SelectCommand.CommandText = "select fieldid,displayname,fieldtype from mmm_mst_fields WITH(NOLOCK) where documenttype='" & strs(i - 1).ToString() & "' and eid=" & Session("EID")
                                                    dasS.Fill(dtChildS)
                                                    'pnlApprove.Controls.Add(New LiteralControl("<tr><td colspan=""4"">"))
                                                    If (dtChildS.Rows.Count > 0) Then

                                                        pnlApprove.Controls.Add(New LiteralControl("<div id=""tabPending" & i.ToString() & """style=""max-height:200px;overflow-x:scroll;overflow-y:scroll;margin-left:50px; max-width:720px;"">"))


                                                        'Dim conStrss As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                                        'Dim conss As SqlConnection = New SqlConnection(conStrss)
                                                        'Dim actionform As String = Session("ActionForm")

                                                        odaN.SelectCommand.CommandType = CommandType.StoredProcedure
                                                        odaN.SelectCommand.Parameters.Clear()
                                                        odaN.SelectCommand.CommandText = "uspGetDetailITEMByDocidonAction"
                                                        odaN.SelectCommand.Parameters.AddWithValue("docid", RetDocId(Session("EID")))
                                                        odaN.SelectCommand.Parameters.AddWithValue("FN", strs(i - 1).ToString())
                                                        odaN.SelectCommand.Parameters.AddWithValue("NFN", childvalue(1))
                                                        odaN.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
                                                        Dim dtItem As New DataTable()
                                                        odaN.Fill(dtItem)
                                                        'Added By Mayank For Child Item values from doc Item Start Here 
                                                        odaN.SelectCommand.CommandType = CommandType.StoredProcedure
                                                        odaN.SelectCommand.Parameters.Clear()
                                                        odaN.SelectCommand.CommandText = "uspGetValuesFromChildonEditonAction"
                                                        odaN.SelectCommand.Parameters.AddWithValue("DOcid", RetDocId(Session("EID")))
                                                        odaN.SelectCommand.Parameters.AddWithValue("FN", strs(i - 1).ToString())
                                                        odaN.SelectCommand.Parameters.AddWithValue("NFN", childvalue(1))
                                                        odaN.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
                                                        Dim dtITemVal As New DataTable()
                                                        odaN.Fill(dtITemVal)
                                                        Dim GRDCHLDVIEW As New GridView
                                                        GRDCHLDVIEW.AutoGenerateColumns = "TRUE"
                                                        GRDCHLDVIEW.ID = "GRD_" & strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_")
                                                        GRDCHLDVIEW.Width = "600"
                                                        GRDCHLDVIEW.CssClass = "mGrid"
                                                        GRDCHLDVIEW.AlternatingRowStyle.CssClass = "alt"
                                                        'dtItem.Columns.Add("Action")
                                                        AddHandler GRDCHLDVIEW.RowDataBound, AddressOf GRDCHLDVIEW_InlineEdit
                                                        If (Not IsNothing(childActionvalueRights)) Then
                                                            If (Not childActionvalueRights = String.Empty) Then
                                                                Dim rights As String() = childActionvalueRights.ToString().Split(",")
                                                                For a As Integer = 0 To rights.Length - 1
                                                                    If (rights(a).ToString().Contains(strs(i - 1).ToString() & "-")) Then
                                                                        Dim finalval As String() = rights(a).ToString().Split(New String() {strs(i - 1).ToString() & "-"}, StringSplitOptions.None)
                                                                        If (finalval.Length > 1) Then
                                                                            Dim rightval = finalval(1)

                                                                            If (Convert.ToInt32(rightval) = 14) Then
                                                                                create = True
                                                                                delete = True
                                                                                Edit = True
                                                                            ElseIf (Convert.ToInt32(rightval) = 12) Then
                                                                                create = False
                                                                                Edit = True
                                                                                delete = True
                                                                            ElseIf (Convert.ToInt32(rightval) = 10) Then
                                                                                create = True
                                                                                Edit = False
                                                                                delete = True
                                                                            ElseIf (Convert.ToInt32(rightval) = 8) Then
                                                                                create = False
                                                                                Edit = False
                                                                                delete = True
                                                                            ElseIf (Convert.ToInt32(rightval) = 6) Then
                                                                                create = True
                                                                                Edit = True
                                                                                delete = False
                                                                            ElseIf (Convert.ToInt32(rightval) = 4) Then
                                                                                create = False
                                                                                Edit = True
                                                                                delete = False
                                                                            ElseIf (Convert.ToInt32(rightval) = 2) Then
                                                                                create = True
                                                                                Edit = False
                                                                                delete = False
                                                                            End If

                                                                        End If
                                                                    End If
                                                                Next
                                                            End If
                                                        End If
                                                        If (delete = True) Then
                                                            AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                                            AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
                                                            Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Delete") = "YES"
                                                        Else
                                                            Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Delete") = Nothing
                                                        End If
                                                        'If (create = True) Then
                                                        '    Dim dr As DataRow = dtITemVal.NewRow()
                                                        '    dtITemVal.Rows.Add(dr)
                                                        'End If
                                                        GRDCHLDVIEW.DataKeyNames = New String() {"tid"}
                                                        If (Not IsNothing(Session(strs(i - 1).ToString()))) Then
                                                            Dim grd As GridView = TryCast(pnlApprove.FindControl("GRD_" & strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_")), GridView)
                                                            If (Not IsNothing(grd)) Then
                                                                Dim t As DataTable = grd.DataSource
                                                            End If

                                                            GRDCHLDVIEW.DataSource = Session(strs(i - 1).ToString())
                                                        Else
                                                            GRDCHLDVIEW.DataSource = dtItem
                                                        End If

                                                        GRDCHLDVIEW.DataBind()
                                                        'Session(strs(i - 1).ToString()) = dtItem
                                                        Session(strs(i - 1).ToString() & "VAL") = dtITemVal
                                                        Session("ChildDoctypeAction") = strs(i - 1).ToString()
                                                        pnlApprove.Controls.Add(GRDCHLDVIEW)
                                                        If (create = True) Then
                                                            Session(Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_")) & "ADD") = "YES"
                                                            Dim btn As New Button
                                                            btn.ID = strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "ADD"
                                                            btn.Text = "ADD ROW"
                                                            btn.CssClass = "btnDyn"
                                                            btn.EnableViewState = False
                                                            AddHandler btn.Click, AddressOf btnAddRow_Click
                                                            pnlApprove.Controls.Add(btn)
                                                        Else
                                                            Session(Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_")) & "ADD") = Nothing
                                                        End If
                                                        pnlApprove.Controls.Add(New LiteralControl("</div>"))

                                                    End If

                                                Next
                                                pnlApprove.Controls.Add(New LiteralControl("</td></tr>"))
                                            End If
                                            pnlApprove.Controls.Add(New LiteralControl("</div>"))
                                        End If

                                    End If
                                End If
                            End If
                        Case "CRMAPPROVAL"
                            'lblHeaderPopUp.Text = dt.Rows(0).Item("Formcaption").ToString()
                            pnlCRMFields.Width = 500
                            pnlCRMFields.Height = 10

                            Dim ob As New DynamicForm()
                            'ob.CreateControlsOnPanel(ds.Tables("fields"), pnlCRMFields, UpCRMACtion, btnCRMAction, 1) CRMAPPROVAL pnlCRMFields
                            ob.CreateControlsOnPanel(dt, pnlCRMFields, UpCRMACtion, btnCRMAction, 1)
                            Dim xx As Integer = Val(pnlCRMFields.Width.ToString())
                            Dim ww As Integer = Val(pnlCRMFields.Height.ToString())

                            pnlCRMAction.Width = xx + 20
                            pnlCRMAction.Height = ww + 70 'panel height + button height + header height
                            Me.UpCRMACtion.Update()



                            Dim ROW1() As DataRow = dt.Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and lookupvalue is not null")
                            If ROW1.Length > 0 Then
                                For i As Integer = 0 To ROW1.Length - 1
                                    Dim DDL As DropDownList = TryCast(pnlCRMFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                                    DDL.AutoPostBack = True
                                    AddHandler DDL.TextChanged, AddressOf bindvalue2
                                Next
                            End If
                        Case "EDIT"
                            pnlApprove.Controls.Clear()
                            Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
                            Dim ob As New DynamicForm
                            ob._CallerPage = 1
                            Session("ACTION") = "EDIT"
                            If Session("AMENDMENT") = "AMENDMENT" Or Session("AMENDMENT") = "COPYHIT" Then
                                ob.CreateControlsOnPanel(dt, pnlFields, updatePanelEdit, btnActEdit, 0, , "AMENDMENT")
                            Else
                                ob.CreateControlsOnPanel(dt, pnlFields, updatePanelEdit, btnActEdit, 0)
                            End If
                            Dim ROW1() As DataRow = dt.Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                            If ROW1.Length > 0 Then
                                For i As Integer = 0 To ROW1.Length - 1
                                    Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                                    DDL.AutoPostBack = True
                                    DDL.EnableViewState = True
                                    AddHandler DDL.TextChanged, AddressOf bindvalue
                                Next
                            End If


                            '' for inline grid ddl filter from main ddl by sunil 31_july_14
                            Dim ROWC() As DataRow = dt.Select("fieldtype='Child Item' and len(isnull(KC_LOGIC,''))>2")
                            If ROWC.Length > 0 Then
                                For i As Integer = 0 To ROWC.Length - 1
                                    Dim st() As String = ROWC(i).Item("kc_logic").ToString().Split("-")

                                    Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & st(0).ToString), DropDownList)
                                    Dim id As String = Right(DDL.ID, DDL.ID.Length - 3)
                                    DDL.AutoPostBack = True
                                    AddHandler DDL.TextChanged, AddressOf bindvalue_ILFilter
                                Next
                            End If
                            '' for inline grid ddl filter from main ddl by sunil 31_july_14


                            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                            Dim con As SqlConnection = New SqlConnection(conStr)
                            Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
                            Dim ds As New DataSet()
                            Dim dtchild As DataTable = dt
                            'If dt.Rows(0).Item("Iscalendar").ToString() = "1" Then
                            '    Dim btncldr As Button = TryCast(pnlFields.FindControl("BTNCLNDR"), Button)
                            '    AddHandler btncldr.Click, AddressOf ADDTASK
                            '    Dim Grd1 As GridView = TryCast(pnlFields.FindControl("GRDCLNDR"), GridView)
                            '    AddHandler Grd1.RowDataBound, AddressOf addTemplateField
                            '    AddHandler Grd1.RowCommand, AddressOf DeleteTask
                            '    AddHandler Grd1.RowDeleting, AddressOf DeletedTask
                            '    Grd1.DataSource = Session("dtNew")
                            '    Grd1.DataBind()
                            'End If
                            Dim row() As DataRow = dtchild.Select("FieldType='CHILD ITEM'")
                            If Session("ALLCHILD") Is Nothing Then  ' new by sp 22_Jan_14
                                Session("ALLCHILD") = row
                            End If
                            If row.Length > 0 Then
                                Dim BTN1 As New Button
                                For i As Integer = 0 To row.Length - 1
                                    '' removed frm here by sp 22-jan-14
                                    ' BTN1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                                    ' AddHandler BTN1.Click, AddressOf ShowChildForm
                                    Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                                    If PRitem.Length > 1 Then
                                        Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
                                        AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
                                    End If

                                    Session("FNS") = Session("FNS") & PRitem(0).ToString() & ":" & row(i).Item("Fieldid").ToString() & ":"

                                    Dim ColHEAD() As String = {}
                                    Dim DDLTXT() As String = {}
                                    Dim DDLVAL() As String = {}

                                    Session("COLHEAD") = ColHEAD
                                    Session("DDLTXT") = DDLTXT
                                    Session("DDLVAL") = DDLVAL
                                    '' by sunil for def value 22-jan-14 - ends

                                    Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
                                    ''AddHandler GRD.RowDataBound, AddressOf totalrow  '' moved frm here to below
                                    AddHandler GRD.RowCommand, AddressOf Delete
                                    AddHandler GRD.RowDeleting, AddressOf Deleting

                                    '' by sunil for def value insert for Aggrawal  16-dec-13 - starts
                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                    Dim strDF As String = "select * from mmm_mst_forms WITH (NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and ( isnull(HasDefaultValue,0)=1 or isnull(IsDefaultRows,0)>0 or isnull(isinlineediting,0)=1) "
                                    'Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
                                    Dim dtIsdv As New DataTable

                                    ODA.SelectCommand.CommandType = CommandType.Text
                                    ODA.SelectCommand.CommandText = strDF
                                    ODA.Fill(dtIsdv)

                                    'Prashant_30_7
                                    Dim dtIsDef As New DataTable
                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                    Dim str As String = "select * from mmm_mst_forms WITH (NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(IsDefaultRows,0)>0"
                                    ODA.SelectCommand.CommandText = str
                                    ODA.Fill(dtIsDef)


                                    'Prashant_30_7

                                    If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                                        ' Dim btnIDV As New Button
                                        ' btnIDV = pnlFields.FindControl("BTN_" & row(i).Item("FieldID").ToString())  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
                                        AddHandler GRD.RowDataBound, AddressOf gvData_InlineEdit

                                    Else
                                        AddHandler GRD.RowDataBound, AddressOf totalrow
                                        BTN1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                                        AddHandler BTN1.Click, AddressOf ShowChildForm
                                    End If
                                    ' oda.Dispose()
                                    'dtIsdv.Dispose()
                                    Dim str1 = "BTNFLTER" & row(i).Item("FIELDID").ToString() & "_" & row(i).Item("DROPDOWN").ToString().Replace(" ", "_")
                                    BTN1 = pnlFields.FindControl(str1)
                                    If Not BTN1 Is Nothing Then
                                        AddHandler BTN1.Click, AddressOf Filter ' use for dynamic filter  
                                        BTN1.Visible = True
                                        If Session("filterDropdown") = 1 Then
                                            ob.FillControlsOnPanel(dt, pnlFields, "DOCUMENT", pid, , , True) ' 24 dec 2014 by balli
                                            'ob.CreateControlsOnPanel(dt, pnlFields, updatePanelEdit, btnActEdit, 0)
                                        End If
                                    End If

                                    Dim BTNUpload As New Button
                                    BTNUpload = pnlFields.FindControl("BTNUpload" & row(i).Item("FIELDID").ToString())
                                    If Not BTNUpload Is Nothing Then
                                        BTNUpload.Visible = False
                                    End If

                                    If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 

                                        'INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsdv)
                                        If dtIsdv.Rows(0).Item("isinlineediting") = 1 Then
                                            ShowDefaultValuesinGrid()
                                        Else
                                            INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsdv)
                                        End If

                                    ElseIf dtIsDef.Rows.Count = 1 Then
                                        INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsDef)
                                    Else
                                        ODA.SelectCommand.Parameters.Clear()
                                        ODA.SelectCommand.CommandType = CommandType.StoredProcedure
                                        ODA.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
                                        ODA.SelectCommand.CommandType = CommandType.StoredProcedure
                                        ODA.SelectCommand.Parameters.AddWithValue("DOCID", pid)
                                        ODA.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
                                        ODA.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                                        ds.Tables.Clear()
                                        ODA.Fill(ds, "ITEM")
                                        ODA.SelectCommand.CommandType = CommandType.Text

                                        ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType,F1.Child_specific_text  FROM MMM_MST_FIELDS F1 WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2 WITH (NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & " union all select fieldId,displayname,fieldtype,Child_specific_text from MMM_MST_FIELDS where eid=" & Session("EID") & " and DocumentType in (select documenttype from MMM_MST_DOC where eid=" & Session("EID") & " and tid=" & pid & ") and Child_Specific_text is not null"
                                        ODA.Fill(ds, "TOTAL")
                                        'Added By Mayank For Child Specific Text Value Start Here
                                        ODA.SelectCommand.CommandType = CommandType.StoredProcedure
                                        ODA.SelectCommand.Parameters.Clear()
                                        ODA.SelectCommand.CommandText = "uspGetValuesFromChildonEdit"
                                        ODA.SelectCommand.Parameters.AddWithValue("DOcid", pid)
                                        ODA.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
                                        ODA.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
                                        Dim dtITemVal As New DataTable()
                                        ODA.Fill(dtITemVal)
                                        Session(PRitem(0).ToString() & "VAL") = dtITemVal
                                        Session("ChildDoctype") = PRitem(0).ToString()
                                        'ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, BTN1.ID, updatePanelEdit, ds.Tables("TOTAL"))
                                        ob.BINDITEMGRID1(ds.Tables("ITEM"), pnlFields, row(i).Item("FIELDID"), updatePanelEdit, ds.Tables("TOTAL"), -1, -1, Session("Doctype"), Session("ChildDoctype"), Session("EID"))

                                        'Added By Mayank For Child Specific Text Value End Here
                                    End If

                                    dtIsdv.Dispose()

                                    Dim btn As Button
                                    btn = pnlFields.FindControl("bntCalFromGrid_" & row(i).Item("FIELDID").ToString())
                                    If Not btn Is Nothing Then
                                        AddHandler btn.Click, AddressOf CalculateFromGrid
                                    End If

                                    Dim btn3 As Button
                                    btn3 = pnlFields.FindControl("BtnAddRow_" & row(i).Item("FIELDID").ToString())
                                    If Not btn3 Is Nothing Then
                                        AddHandler btn3.Click, AddressOf AddRow
                                    End If
                                    '      
                                    'ODA.SelectCommand.Parameters.Clear()
                                    'ODA.SelectCommand.CommandType = CommandType.StoredProcedure
                                    'ODA.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
                                    'ODA.SelectCommand.CommandType = CommandType.StoredProcedure
                                    'ODA.SelectCommand.Parameters.AddWithValue("DOCID", pid)
                                    'ODA.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
                                    'ODA.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                                    'ds.Tables.Clear()
                                    'ODA.Fill(ds, "ITEM")
                                    'ODA.SelectCommand.CommandType = CommandType.Text
                                    'ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName FROM MMM_MST_FIELDS F1 INNER JOIN MMM_MST_FIELDS F2 ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & ""
                                    'ODA.Fill(ds, "TOTAL")
                                    'ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields1, BTN1.ID, updatePanelEdit, ds.Tables("TOTAL"))
                                Next


                                If Not Session("CHILD") Is Nothing Then
                                    ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
                                    Dim ROW2() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                                    If ROW2.Length > 0 Then
                                        For i As Integer = 0 To ROW2.Length - 1
                                            Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW2(i).Item("FieldID").ToString()), DropDownList)
                                            DDL.AutoPostBack = True
                                            AddHandler DDL.TextChanged, AddressOf bindvalue1
                                        Next
                                    End If
                                    ChildFormddlRendering(row, 2)
                                End If
                            End If
                        Case "AMENDMENT"
                            ' not in use
                        Case "REJECTION"
                            'lblHeaderPopUp.Text = dt.Rows(0).Item("Formcaption").ToString()

                            pnlFieldsRej.Width = 500
                            pnlFieldsRej.Height = 10
                            Dim ob As New DynamicForm()
                            ob.CreateControlsOnPanel(dt, pnlFieldsRej, updatePanelReject, btnReject, 1)
                            Dim xx As Integer = Val(pnlFieldsRej.Width.ToString())
                            Dim ww As Integer = Val(pnlFieldsRej.Height.ToString())
                            pnlPopupReject.Width = xx + 20
                            pnlPopupReject.Height = ww + 70 'panel height + button height + header height

                            'Code For Rule Post back handler for  controls
                            'Added By Himank Singh:09-September-2015
                            AddHandlerOnControl(dtFileds, pnlPopupReject, lblRuleMsg3)

                            Dim ROW1() As DataRow = dt.Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                            If ROW1.Length > 0 Then
                                For i As Integer = 0 To ROW1.Length - 1
                                    Dim DDL As DropDownList = TryCast(pnlFieldsRej.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                                    DDL.AutoPostBack = True
                                    AddHandler DDL.TextChanged, AddressOf bindvalueRejection
                                Next
                            End If
                        Case "P_REJECTION"
                            PanelPerReject.Width = 500
                            PanelPerReject.Height = 10
                            Dim ob As New DynamicForm()
                            ob.CreateControlsOnPanel(dt, PanelPerReject, updPerReject, btnPerReject, 1)
                            Dim xx As Integer = Val(PanelPerReject.Width.ToString())
                            Dim ww As Integer = Val(PanelPerReject.Height.ToString())
                            pnlPerReject.Width = xx + 20
                            pnlPerReject.Height = ww + 70 'panel height + button height + header height

                            'Code For Rule Post back handler for  controls
                            'Added By Himank Singh:09-September-2015
                            AddHandlerOnControl(dtFileds, pnlPerReject, lblMsgRule1)

                            Dim ROW1() As DataRow = dt.Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                            If ROW1.Length > 0 Then
                                For i As Integer = 0 To ROW1.Length - 1
                                    Dim DDL As DropDownList = TryCast(PanelPerReject.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                                    DDL.AutoPostBack = True
                                    AddHandler DDL.TextChanged, AddressOf bindvalue1
                                Next
                            End If
                        Case "CANCEL"
                            pnlDocCancel.Width = 500
                            pnlDocCancel.Height = 10
                            Dim ob As New DynamicForm()
                            ob.CreateControlsOnPanel(dt, pnlDocCancel, UpdDocCancel, btnCancelSave, 1)
                            Dim xx As Integer = Val(pnlDocCancel.Width.ToString())
                            Dim ww As Integer = Val(pnlDocCancel.Height.ToString())
                            pnlDocCancel.Width = xx + 20
                            pnlDocCancel.Height = ww + 70 'panel height + button height + header height

                            'Code For Rule Post back handler for  controls
                            'Added By Himank Singh:09-September-2015
                            AddHandlerOnControl(dtFileds, pnlCancel)

                            Dim ROW1() As DataRow = dt.Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                            If ROW1.Length > 0 Then
                                For i As Integer = 0 To ROW1.Length - 1
                                    Dim DDL As DropDownList = TryCast(pnlDocCancel.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                                    DDL.AutoPostBack = True
                                    AddHandler DDL.TextChanged, AddressOf bindvalue1
                                Next
                            End If
                    End Select
                End If
            End If
            'By Ajeet :Code For Draft
            Try
                Dim DOCID As Integer = 0
                Dim DocumentType As String = ""
                Dim CRMName As String = ""
                Dim DS As New DataSet()
                If ViewState("CRMName") Is Nothing Then
                    If Request.QueryString.HasKeys Then
                        If Not RetDocId(Session("EID")) Is Nothing Or Request.QueryString.HasKeys Then
                            DOCID = RetDocId(Session("EID"))
                            'DOCID = Convert.ToInt32(RetDocId(Session("EID")))
                            DS = GetActionForm(DOCID)
                            If (Not DS.Tables(0) Is Nothing) And DS.Tables(0).Rows.Count > 0 Then
                                DocumentType = Convert.ToString(DS.Tables(0).Rows(0).Item("Documenttype"))
                                CRMName = Convert.ToString(DS.Tables(0).Rows(0).Item("enableCRM")).Trim()
                                ViewState("CRMName") = CRMName
                                ViewState("CRMDocType") = DocumentType
                            End If
                        End If
                    End If
                Else
                    CRMName = ViewState("CRMName")
                End If
                If Not String.IsNullOrEmpty(CRMName.Trim) Then
                    lblCRM.Text = "<a href=""#divCRM"">" & CRMName & "</a>"
                    divCRM.Attributes.Add("Style", "display:block;")
                    lblCRMHeader.Text = CRMName & " Details"
                Else
                    divCRM.Attributes.Add("Style", "display:none;")
                End If
                'GetActionForm()
                System.Web.UI.ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "Script", "bindDateTime();", True) ' code for dattime  invoking javascript
            Catch ex As Exception
                Response.Redirect("SessionOut.aspx")
            End Try

            If Page.IsPostBack Then
                If IsNothing(Session("GRDID")) = False Then
                    Dim grdname As String = Session("GRDID")
                    Dim GRD As GridView = pnlFields.FindControl("GRD" & grdname)
                    Session("Grid") = GRD

                    Dim FileuploadList = New List(Of FileUpload)()

                    For Each c In Me.Page.Controls
                        If c.GetType() Is GetType(FileUpload) Then
                            FileuploadList.Add(c)
                        End If
                    Next
                    'Session("FileUploads") = FileuploadList
                End If
            End If
        End If

    End Sub

    '' commented on 24 dec 2014

    'Protected Sub gvData_InlineEdit(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs)
    '    Try
    '        Dim fn As String = ""
    '        'Dim dtFld1 As DataTable = ViewState(fn) ' Session(fn)
    '        Dim dtfld1 As DataTable '= ViewState(fn)

    '        Dim row As GridViewRow = e.Row

    '        Dim fns() As String = Session("FNS").ToString.Split(":")
    '        'Dim GV As GridView = 
    '        Dim GID As String = row.Parent.Parent.ID
    '        GID = Right(GID, GID.Length - 3)

    '        Session("GRDID") = GID

    '        '' new added for hiding tid - on 27 dec 8.30 pm by sp
    '        e.Row.Cells(e.Row.Cells.Count - 1).Visible = False


    '        Dim grd As GridView = DirectCast(sender, GridView)


    '        If e.Row.RowType = DataControlRowType.Header Then
    '            If e.Row.Cells(0).Text.ToUpper() = "ALL" Then
    '                e.Row.Cells(0).Text = ""
    '                'e.Row.Cells(0).Visible = False
    '            End If
    '        End If

    '        For I As Integer = 0 To fns.Length - 1
    '            If fns(I).ToString = GID.ToString Then
    '                fn = fns(I - 1).ToString
    '                Exit For
    '            End If
    '        Next
    '        dtfld1 = Session("D" & fn)

    '        For m As Integer = 0 To row.Cells.Count - 1
    '            row.Cells(m).HorizontalAlign = HorizontalAlign.Center
    '            row.Cells(m).Width = 15
    '        Next

    '        If row.RowType = DataControlRowType.Header Then  ' for header bind checkbox to check all in grid 
    '            If row.Cells(0).Text = "All" Then
    '                Dim chk As New CheckBox
    '                chk.Text = "All"

    '                chk.Attributes.Add("onclick", "javascript:checkAll('" & GID & "');")
    '                row.Cells(0).Controls.Add(chk)
    '                ViewState("chkadd") = 1
    '            End If
    '        End If

    '        If row.RowType = DataControlRowType.DataRow Then
    '            ' For j As Integer = 0 To row.Cells.Count - 1

    '            If row.Cells(0).Text.ToUpper <> "TOTAL" Then

    '                If ViewState("chkadd") = 1 Then  'this is for adding child check box 
    '                    Dim chk As New CheckBox
    '                    chk.ID = "fld" & row.RowIndex

    '                    row.Cells(0).Controls.Add(chk)
    '                End If


    '                If grd.HeaderRow.Cells(0).Text.ToUpper() = "ALL" Then
    '                    row.Cells(0).Visible = False
    '                End If

    '                For j As Integer = 0 To dtfld1.Rows.Count - 1
    '                    '  Dim strVal As String = CType(e.Row.DataItem, DataRowView)(dtfld1.Columns(j).ColumnName).ToString
    '                    Dim ftype As String = dtfld1.Rows(j).Item("fieldtype").ToString()
    '                    Dim ilEdit As Integer = dtfld1.Rows(j).Item("inlineEditing").ToString()
    '                    Dim FldID As String = dtfld1.Rows(j).Item("fieldid").ToString()
    '                    Dim Formula = Convert.ToString(dtfld1.Rows(j).Item("cal_text"))
    '                    Dim DisplayName = Convert.ToString(dtfld1.Rows(j).Item("DisplayName"))

    '                    Dim datatype As String = dtfld1.Rows(j).Item("datatype").ToString() 'Prashant_10_7
    '                    Dim controlWdth As Integer = 100

    '                    If ilEdit = 1 Then
    '                        If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Then
    '                            Dim cb As New TextBox
    '                            'cb.ID = "fld" & j.ToString() & "_" & row.RowIndex
    '                            'cb.Width = 55
    '                            cb.ID = "fld" & FldID & row.RowIndex
    '                            Dim colValue As String = row.DataItem(j).ToString()

    '                            'Prashant_10_7
    '                            If dtfld1.Rows(j).Item("defaultfieldval").ToString().Length > 0 Then
    '                                cb.Text = dtfld1.Rows(j).Item("defaultfieldval").ToString()
    '                            Else
    '                                If datatype.ToUpper() = "NUMERIC" Then
    '                                    cb.Text = "0"
    '                                End If
    '                            End If
    '                            If Val(dtfld1.Rows(j).Item("isDescription").ToString()) = 1 Then
    '                                cb.ToolTip = dtfld1.Rows(j).Item("Description").ToString()
    '                            End If
    '                            If dtfld1.Rows(j).Item("iseditable") = 1 Then
    '                                cb.Enabled = True
    '                            Else
    '                                cb.Enabled = False
    '                            End If
    '                            If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
    '                                cb.Enabled = True
    '                            Else
    '                                cb.Enabled = False
    '                            End If
    '                            cb.Width = controlWdth
    '                            cb.Text = colValue
    '                            'Code For calculative field
    '                            'Code End Here !!!!!!
    '                            If ftype = "Calculative Field" Then
    '                                cb.Attributes.Add("READONLY", "READONLY")
    '                                cb.Attributes.Add("COLOR", "GRAY")
    '                                If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
    '                                    cb.Enabled = True
    '                                Else
    '                                    cb.Enabled = False
    '                                End If
    '                                ' cb.ReadOnly = True
    '                            End If

    '                            row.Cells(j).Controls.Add(cb)

    '                            If datatype.ToUpper.Trim = "DATETIME" Then
    '                                Dim CLNDR As New AjaxControlToolkit.CalendarExtender
    '                                CLNDR.Controls.Clear()
    '                                CLNDR.ID = "CLNDR" & dtfld1.Rows(j).Item("FieldID").ToString()
    '                                CLNDR.Format = "dd/MM/yy"
    '                                CLNDR.TargetControlID = cb.ID
    '                                cb.Enabled = True
    '                                If row.Cells(j).Text <> "" And row.Cells(j).Text <> "&nbsp;" Then
    '                                    cb.Text = String.Format("{0:dd/MM/yy}", row.Cells(j).Text)
    '                                Else
    '                                    cb.Text = String.Format("{0:dd/MM/yy}", Date.Now())
    '                                End If
    '                                row.Cells(j).Controls.Add(CLNDR) '
    '                                If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
    '                                    cb.Enabled = True
    '                                Else
    '                                    cb.Enabled = False
    '                                End If
    '                            End If


    '                            If Val(colValue) = 0 Then
    '                                If ftype.ToUpper() = "TEXT BOX" And dtfld1.Rows(j).Item("datatype").ToString().ToUpper() = "NUMERIC" Then
    '                                    cb.Text = "0"
    '                                End If
    '                            End If

    '                            If Not Formula Is Nothing And Formula <> "" Then
    '                                'Dim arrFor As String() = Formula.Split(",")
    '                                Dim jScript = GenerateJQueryScript(dtfld1, GID, row.RowIndex, Formula, FldID)
    '                                If jScript <> "" Then
    '                                    cb.Attributes.Add("onblur", jScript)
    '                                End If
    '                            End If

    '                        ElseIf ftype.ToUpper() = "DROP DOWN" Then
    '                            Dim ddl As New DropDownList
    '                            ddl.ID = "fld" & FldID & "_" & row.RowIndex
    '                            ddl.CssClass = "txtBox"
    '                            If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
    '                                ddl.Enabled = True
    '                            Else
    '                                ddl.Enabled = False
    '                            End If
    '                            ddl.Width = 70
    '                            Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
    '                            Dim dropdowntype As String = dtfld1.Rows(j).Item("dropdowntype").ToString()
    '                            Dim arr() As String
    '                            'Dim arrMid() As String
    '                            If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
    '                                Dim cb As New DropDownList
    '                                cb.ID = "fld" & FldID & "_" & row.RowIndex
    '                                Dim ARR1() As String = dtfld1.Rows(j).Item("dropdown").ToString().Split(",")
    '                                cb.Items.Insert(0, "Select")
    '                                cb.Items(0).Value = 0
    '                                For K As Integer = 0 To ARR1.Length - 1
    '                                    cb.Items.Add(ARR1(K).ToString)
    '                                Next

    '                                If cb.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
    '                                    cb.Items.FindByText(row.Cells(j).Text).Selected = True
    '                                End If

    '                                row.Cells(j).Controls.Add(cb)
    '                                'Prashant_30_7
    '                                If dtfld1.Rows(j).Item("iseditable") = 1 Then
    '                                    ddl.Enabled = True
    '                                Else
    '                                    ddl.Enabled = False
    '                                End If

    '                            ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
    '                                '' code for getting master valued 
    '                                Dim ob As New DynamicForm
    '                                arr = ddlText.Split("-")
    '                                Dim TID As String = "TID"
    '                                Dim TABLENAME As String = ""
    '                                If UCase(arr(0).ToString()) = "MASTER" Then
    '                                    TABLENAME = "MMM_MST_MASTER"
    '                                ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
    '                                    TABLENAME = "MMM_MST_DOC"
    '                                ElseIf UCase(arr(0).ToString()) = "CHILD" Then
    '                                    TABLENAME = "MMM_MST_DOC_ITEM"
    '                                ElseIf UCase(arr(0).ToString) = "STATIC" Then
    '                                    If arr(1).ToString.ToUpper = "USER" Then
    '                                        TABLENAME = "MMM_MST_USER"
    '                                        TID = "UID"
    '                                    ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
    '                                        TABLENAME = "MMM_MST_LOCATION"
    '                                        TID = "LOCID"
    '                                    End If
    '                                End If
    '                                Dim lookUpqry As String = ""
    '                                Dim str As String = ""
    '                                If arr(0).ToUpper() = "CHILD" Then
    '                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
    '                                ElseIf arr(0).ToUpper() <> "STATIC" Then
    '                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
    '                                Else
    '                                    If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
    '                                        str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
    '                                    Else
    '                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
    '                                    End If
    '                                End If

    '                                Dim xwhr As String = ""
    '                                Dim tids As String = ""
    '                                'Dim tidarr() As String

    '                                ''FILTER THE DATA ACCORDING TO USER 
    '                                tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())

    '                                If tids.Length >= 2 Then
    '                                    'tidarr = tids.Split("-")
    '                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
    '                                ElseIf tids = "0" Then
    '                                    pnlFields.Visible = False
    '                                    btnActEdit.Visible = False
    '                                    updMain.Update()
    '                                    xwhr = ""
    '                                End If
    '                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
    '                                Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
    '                                If AutoFilter.Length > 0 Then
    '                                    If arr(0).ToUpper() = "CHILD" Then
    '                                        If AutoFilter.ToUpper = "DOCID" Then
    '                                            str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
    '                                        Else
    '                                            str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
    '                                        End If
    '                                    ElseIf arr(0).ToUpper() <> "STATIC" Then
    '                                        str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
    '                                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
    '                                    Else
    '                                        str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & Session("EID") & " "
    '                                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
    '                                    End If
    '                                End If

    '                                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '                                Dim con As SqlConnection = New SqlConnection(conStr)
    '                                Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
    '                                Dim dss As New DataSet

    '                                If str.Length > 0 Then
    '                                    oda.SelectCommand.CommandText = str
    '                                    oda.Fill(dss, "FV")
    '                                    Dim isAddJquery As Integer = 0
    '                                    ddl.Items.Add("Select")
    '                                    ddl.Items(0).Value = "0"
    '                                    For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
    '                                        ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
    '                                        Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
    '                                        ddl.Items(J1 + 1).Value = lookddlVal
    '                                    Next
    '                                    oda.Dispose()
    '                                    dss.Dispose()


    '                                    Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()
    '                                    If lookupvalue.Length > 0 Then
    '                                        ddl.AutoPostBack = True
    '                                        AddHandler ddl.TextChanged, AddressOf GridDdl_TextChanged
    '                                    End If

    '                                    If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
    '                                        ddl.Items.FindByText(row.Cells(j).Text).Selected = True
    '                                    End If
    '                                    row.Cells(j).Controls.Add(ddl)



    '                                    If isAddJquery = 1 Then
    '                                        Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
    '                                    End If
    '                                End If
    '                                con.Dispose()
    '                                oda.Dispose()
    '                                dss.Dispose()
    '                                '' ends here for getting master valued 
    '                            End If

    '                        ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
    '                            Dim txtBox As New FileUpload

    '                            Dim txtBox1 As New HiddenField

    '                            Dim lbl1 As New Label
    '                            lbl1.ID = "lblf_" & FldID
    '                            lbl1.Text = ""
    '                            lbl1.ClientIDMode = ClientIDMode.Static

    '                            txtBox1.ID = "hdn_" & FldID
    '                            txtBox1.Value = ""
    '                            txtBox1.ClientIDMode = ClientIDMode.Static
    '                            txtBox.Attributes.Add("onchange", "UtilJs.UploadFile1(this,'" & txtBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")

    '                            Dim hdnflag As New HiddenField
    '                            hdnflag.ID = "hdnf_" & FldID
    '                            hdnflag.Value = "0"

    '                            'txtBox.Visible = False
    '                            txtBox.ID = "fld_" & FldID & "_" & row.RowIndex
    '                            txtBox.CssClass = "txtBox"

    '                            txtBox.Width = 180

    '                            If ViewState("chkadd") = 1 Then
    '                                j = j + 1
    '                            End If

    '                            Dim str As String = row.Cells(j).Text

    '                            str = After(str, "/")

    '                            txtBox1.Value = str 'row.Cells(j).Text
    '                            lbl1.Text = str ' row.Cells(j).Text
    '                            row.Cells(j).Text = str

    '                            row.Cells(j).Controls.Add(txtBox)

    '                            row.Cells(j).Controls.Add(txtBox1)
    '                            row.Cells(j).Controls.Add(lbl1)
    '                            row.Cells(j).Controls.Add(hdnflag)

    '                            Dim pstback As New PostBackTrigger
    '                            pstback.ControlID = btnActEdit.ID
    '                            updMain.Triggers.Add(pstback)

    '                            If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
    '                                txtBox.Enabled = True
    '                            Else
    '                                txtBox.Enabled = False
    '                            End If
    '                        End If
    '                    Else '  not inline editng
    '                        ' If ftype.ToUpper() = "DROP DOWN" And dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
    '                        '' holding
    '                        'ColHEAD(0) = dtfld1.Rows(j).Item("displayname").ToString()

    '                        'End If
    '                    End If
    '                Next
    '            End If
    '        Else

    '        End If
    '    Catch ex As Exception
    '        Throw ex
    '    End Try
    'End Sub

    Protected Sub gvData_InlineEdit(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs)
        Try
            Dim fn As String = ""
            'Dim dtFld1 As DataTable = ViewState(fn) ' Session(fn)
            Dim dtfld1 As DataTable '= ViewState(fn)

            Dim row As GridViewRow = e.Row

            Dim fns() As String = Session("FNS").ToString.Split(":")
            'Dim GV As GridView = 
            Dim GID As String = row.Parent.Parent.ID
            GID = Right(GID, GID.Length - 3)

            Session("GRDID") = GID

            '' new added for hiding tid - on 27 dec 8.30 pm by sp
            e.Row.Cells(e.Row.Cells.Count - 1).Visible = False


            Dim grd As GridView = DirectCast(sender, GridView)

            ' changed on 23 dec 14 by balli  , applying check box in grid
            If e.Row.RowType = DataControlRowType.Header Then
                If e.Row.Cells(1).Text.ToUpper() = "CMASTERTID" Then
                    'e.Row.Cells(0).Text = ""
                    e.Row.Cells(1).Visible = False
                End If
                If e.Row.Cells(2).Text.ToUpper() = "TID" Then
                    'e.Row.Cells(0).Text = ""
                    e.Row.Cells(2).Visible = False
                End If
            End If

            For I As Integer = 0 To fns.Length - 1
                If fns(I).ToString = GID.ToString Then
                    fn = fns(I - 1).ToString
                    Exit For
                End If
            Next
            dtfld1 = Session("D" & fn)
            Dim DtNew As DataTable = Session("D" & fn)
            ' dtfld1.Rows.Add() ' by balli to make equal length of data
            For m As Integer = 0 To row.Cells.Count - 1
                row.Cells(m).HorizontalAlign = HorizontalAlign.Center
                row.Cells(m).Width = 15
            Next

            If row.RowType = DataControlRowType.Header Then  ' for header bind checkbox to check all in grid 
                If row.Cells(0).Text = "All" Then
                    Dim chk As New CheckBox
                    chk.Text = "All"

                    chk.Attributes.Add("onclick", "javascript:checkAll('" & GID & "');")
                    row.Cells(0).Controls.Add(chk)
                    ViewState("chkadd") = 1
                End If
                If row.Cells(e.Row.Cells.Count - 2).Text = "cmasterTid" Then 'by neha thakar
                    ViewState("cmasterId") = 1
                    row.Cells(e.Row.Cells.Count - 2).Visible = False

                End If
            End If

            If row.RowType = DataControlRowType.DataRow Then
                ' For j As Integer = 0 To row.Cells.Count - 1
                If ViewState("cmasterId") = 1 Then 'by neha thakar to hide CmasterId  
                    row.Cells(row.Cells.Count - 2).Visible = False
                End If
                If row.Cells(0).Text.ToUpper <> "TOTAL" Then

                    If ViewState("chkadd") = 1 Then  'this is for adding child check box 
                        Dim chk As New CheckBox
                        chk.ID = "fld" & row.RowIndex
                        row.Cells(0).Controls.Add(chk)
                    End If


                    'changed on 23 dec 14 by balli
                    If grd.HeaderRow.Cells(1).Text.ToUpper() = "CMASTERTID" Then
                        row.Cells(1).Visible = False
                    End If
                    If grd.HeaderRow.Cells(2).Text.ToUpper() = "TID" Then
                        row.Cells(2).Visible = False
                    End If


                    'By Neha Thakar 06-02-15
                    ' To add new row when add Data Button is clicked in Child item
                    If Not IsNothing(Session("FilterAddedRow")) Then
                        Session("AddedRow") = Session("FilterAddedRow")
                    End If
                    Dim DICT As New Dictionary(Of Integer, Integer)
                    DICT = CType(Session("AddedRow"), Dictionary(Of Integer, Integer))


                    If Not IsNothing(DICT) Then

                        If Not IsNothing(Session("AddedRow")) And DICT.ContainsKey(row.RowIndex) Then

                            Dim filterRows() As DataRow
                            Dim filterRows1() As DataRow
                            filterRows = dtfld1.Select("inlinemapping is not null and inlinemapping <>''", "DisplayOrder")
                            filterRows1 = dtfld1.Select("InLineEditing=1", "DisplayOrder")
                            If filterRows.Length > 0 Then
                                dtfld1 = filterRows.CopyToDataTable()
                                dtfld1.Merge(filterRows1.CopyToDataTable())
                            Else
                                dtfld1 = filterRows1.CopyToDataTable()
                            End If

                            Dim UniqueRows = dtfld1.AsEnumerable().Distinct(DataRowComparer.[Default])
                            dtfld1 = UniqueRows.CopyToDataTable()

                            For j As Integer = 0 To dtfld1.Rows.Count - 1
                                '  Dim strVal As String = CType(e.Row.DataItem, DataRowView)(dtfld1.Columns(j).ColumnName).ToString
                                Dim ftype As String = dtfld1.Rows(j).Item("fieldtype").ToString()
                                Dim ilEdit As Integer = dtfld1.Rows(j).Item("inlineEditing").ToString()
                                Dim FldID As String = dtfld1.Rows(j).Item("fieldid").ToString()
                                Dim Formula = Convert.ToString(dtfld1.Rows(j).Item("cal_text"))
                                Dim DisplayName = Convert.ToString(dtfld1.Rows(j).Item("DisplayName"))
                                '  Dim colValue As String = row.DataItem(j).ToString()
                                Dim datatype As String = dtfld1.Rows(j).Item("datatype").ToString() 'Prashant_10_7
                                Dim controlWdth As Integer = 100

                                If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Then
                                    Dim cb As New TextBox
                                    'cb.ID = "fld" & j.ToString() & "_" & row.RowIndex
                                    'cb.Width = 55
                                    cb.ID = "fld" & FldID & row.RowIndex
                                    'Prashant_10_7
                                    If dtfld1.Rows(j).Item("defaultfieldval").ToString().Length > 0 Then
                                        cb.Text = dtfld1.Rows(j).Item("defaultfieldval").ToString()
                                    Else
                                        If datatype.ToUpper() = "NUMERIC" Then
                                            cb.Text = "0"
                                        End If
                                    End If
                                    If Val(dtfld1.Rows(j).Item("isDescription").ToString()) = 1 Then
                                        cb.ToolTip = dtfld1.Rows(j).Item("Description").ToString()
                                    End If

                                    If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                        cb.Enabled = True
                                    Else
                                        If dtfld1.Rows(j).Item("iseditable") = 1 Then
                                            cb.Enabled = True
                                        Else
                                            cb.Enabled = False
                                        End If
                                    End If

                                    cb.Width = controlWdth
                                    Dim colValue As String
                                    'Code For calculative field
                                    'Code End Here !!!!!!
                                    If ftype = "Calculative Field" Then
                                        colValue = "0"
                                        cb.Attributes.Add("READONLY", "READONLY")
                                        cb.Attributes.Add("COLOR", "GRAY")
                                        If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                            cb.Enabled = True
                                        Else
                                            cb.Enabled = False
                                        End If
                                        ' cb.ReadOnly = True
                                    End If
                                    If ViewState("chkadd") = 1 Then
                                        j = j + 1
                                    End If
                                    colValue = row.DataItem(j).ToString()
                                    If ftype.ToUpper() = "LOOKUP" Then
                                        If datatype.ToUpper() = "NUMERIC" Then
                                            colValue = "0"
                                        End If
                                    Else
                                        If Val(colValue) = 0 Then
                                            If ftype.ToUpper() = "TEXT BOX" And datatype.ToUpper() = "NUMERIC" Then
                                                colValue = "0"
                                            End If
                                        End If
                                    End If
                                    If Not row.Cells(j).Text.Trim = "&nbsp;" And Not row.Cells(j).Text.Trim = "" Then
                                        colValue = row.Cells(j).Text.Trim
                                    End If

                                    cb.Text = colValue
                                    row.Cells(j).Controls.Add(cb)

                                    If datatype.ToUpper.Trim = "DATETIME" Then
                                        Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                        CLNDR.Controls.Clear()
                                        CLNDR.ID = "CLNDR" & dtfld1.Rows(j).Item("FieldID").ToString()
                                        CLNDR.Format = "dd/MM/yy"
                                        CLNDR.TargetControlID = cb.ID
                                        cb.Enabled = True
                                        If row.Cells(j).Text <> "" And row.Cells(j).Text <> "&nbsp;" Then
                                            cb.Text = String.Format("{0:dd/MM/yy}", row.Cells(j).Text)
                                        Else
                                            cb.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                        End If
                                        row.Cells(j).Controls.Add(CLNDR) '
                                        If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                            cb.Enabled = True
                                        Else
                                            cb.Enabled = False
                                        End If
                                    End If
                                    If Not Formula Is Nothing And Formula <> "" Then
                                        'Dim arrFor As String() = Formula.Split(",")
                                        Dim jScript = GenerateJQueryScript(dtfld1, GID, row.RowIndex, Formula, FldID)
                                        If jScript <> "" Then
                                            cb.Attributes.Add("onblur", jScript)
                                        End If
                                    End If


                                ElseIf ftype.ToUpper() = "AUTOCOMPLETE" Then

                                    Dim txtbox As New TextBox
                                    txtbox.ID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                    txtbox.Width = controlWdth - 10
                                    txtbox.CssClass = "txtBox"
                                    txtbox.Attributes.Add("placeholder", "Please begin typing a " & DisplayName)

                                    txtbox.AutoPostBack = True
                                    AddHandler txtbox.TextChanged, AddressOf txtbox_TextChanged
                                    ' adding handler for binding lookup or other dropdown or filter

                                    Dim autofilExtender As New AjaxControlToolkit.AutoCompleteExtender
                                    autofilExtender.ID = "extenderID" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex

                                    autofilExtender.TargetControlID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                    autofilExtender.ServiceMethod = "GetCompletionList" ' THIS SERVICE METHOD IS WRITTEN ON DOCUMENT PAGE 
                                    autofilExtender.DelimiterCharacters = ""
                                    autofilExtender.ContextKey = dtfld1.Rows(j).Item("DROPDOWN").ToString() & "-" & dtfld1.Rows(j).Item("FieldID").ToString() & "-" & dtfld1.Rows(j).Item("DROPDOWNTYPE").ToString() & "-" & dtfld1.Rows(j).Item("AUTOFILTER").ToString() & "-" & dtfld1.Rows(j).Item("InitialFilter").ToString()
                                    'context key contain  : dropdown-fieldid-dropdowntype-autofilter-InitialFilter' adding the fieldid in context key because later on we need id of field in web method 
                                    autofilExtender.Enabled = True
                                    autofilExtender.CompletionSetCount = 5
                                    autofilExtender.OnClientShown = "onDataShown"  ' by sunil
                                    '   autofilExtender.CompletionListElementID = "ACsugestlist"
                                    autofilExtender.MinimumPrefixLength = 1  ' start searching when entered one characters
                                    'autofilExtender.OnClientItemSelected = "ace_itemSelected('" & ds.Rows(i).Item("FieldID").ToString() & "')"
                                    autofilExtender.OnClientItemSelected = "ace_itemSelected"


                                    Dim hdnfld As New HiddenField
                                    hdnfld.ID = "HDN" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                    row.Cells(j).Controls.Add(hdnfld)
                                    row.Cells(j).Controls.Add(autofilExtender)

                                    '' finding the record data from master and add to its cell

                                    If row.Cells(j).Text.Length > 0 And row.Cells(j).Text.ToString <> "&nbsp;" Then    'row.Cells(j).Text'&nbsp;'
                                        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim con As SqlConnection = New SqlConnection(conStr)
                                        Dim fldmapData As String() = Split(dtfld1.Rows(j).Item("dropdown").ToString(), "-")
                                        Dim od As SqlDataAdapter = New SqlDataAdapter("", con)

                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        od.SelectCommand.CommandText = "select " & fldmapData(2) & " from MMM_MST_master WITH (NOLOCK) where tid='" & row.Cells(j).Text & " '"  ' fldmapdata "master-documenttype-fieldmapping" 
                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        Dim mdata As String = od.SelectCommand.ExecuteScalar()
                                        txtbox.Text = mdata
                                        hdnfld.Value = row.Cells(j).Text
                                        con.Close()
                                        od.Dispose()
                                    End If
                                    row.Cells(j).Controls.Add(txtbox)
                                    'pnlFields.Controls.Add(txtbox)


                                ElseIf ftype.ToUpper() = "CHECKBOX LIST" Then
                                    Dim CHKlIST As New CheckBoxList()
                                    Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                                    dynmdiv.ID = "div_" & FldID
                                    Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                    CHKlIST.ID = "fld" & FldID & "_" & row.RowIndex
                                    If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                        Dim arr = ddlText.Split(",")
                                        For ii As Integer = 0 To arr.Count - 1
                                            CHKlIST.Items.Add(arr(ii).ToUpper())
                                        Next

                                    ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                        Dim arr = ddlText.Split("-")
                                        Dim TID As String = "TID"
                                        Dim TABLENAME As String = ""
                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                            If arr(1).ToString.ToUpper = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                TID = "LOCID"
                                            End If
                                        End If
                                        Dim lookUpqry As String = ""
                                        Dim str As String = ""

                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        If arr(0).ToUpper() = "CHILD" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        Else
                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) "
                                            Else
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            End If
                                        End If
                                        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim con As SqlConnection = New SqlConnection(conStr)
                                        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                        oda = New SqlDataAdapter("", con)
                                        Dim dss As New DataSet
                                        oda.SelectCommand.CommandText = str
                                        oda.Fill(dss, "FV")
                                        For JJ As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                            CHKlIST.Items.Add(dss.Tables("FV").Rows(JJ).Item(0))
                                            CHKlIST.Items(JJ).Value = dss.Tables("FV").Rows(JJ).Item(1)
                                        Next
                                        oda.Dispose()
                                        dss.Dispose()
                                    End If

                                    dynmdiv.Style.Add(HtmlTextWriterStyle.Width, "200px")
                                    dynmdiv.Style.Add(HtmlTextWriterStyle.Height, "100px")
                                    dynmdiv.Style.Add(HtmlTextWriterStyle.Overflow, "Scroll")
                                    dynmdiv.Controls.Add(CHKlIST)
                                    row.Cells(j).Controls.Add(dynmdiv)


                                ElseIf ftype.ToUpper() = "MULTI LOOKUP" Then
                                    Dim txtBox As New TextBox
                                    txtBox.ID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                    txtBox.Width = controlWdth - 10
                                    txtBox.CssClass = "txtBox"
                                    If dtfld1.Rows(j).Item("isEditable").ToString() = "1" Then
                                        txtBox.Enabled = True
                                    Else
                                        txtBox.Enabled = False
                                    End If
                                    If ViewState("chkadd") = 1 Then
                                        j = j + 1
                                    End If

                                    row.Cells(j).Controls.Add(txtBox)

                                ElseIf ftype.ToUpper() = "MULTI LOOKUPDDL" Then

                                    Dim ddl As New DropDownList
                                    ddl.ID = "fld" & FldID & "_" & row.RowIndex
                                    ddl.CssClass = "txtBox"
                                    ddl.Width = 150

                                    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                    Dim con As SqlConnection = New SqlConnection(conStr)
                                    Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                    Dim od As SqlDataAdapter = New SqlDataAdapter("", con)
                                    Dim dt As New DataTable
                                    Dim dtval As New DataTable
                                    Dim fieldid As String()
                                    Dim ddlval As String()
                                    If (ddlText.ToString() <> String.Empty) Then
                                        fieldid = ddlText.ToString().Split(",")
                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        od.SelectCommand.CommandText = "select ddlMultilookupval from mmm_mst_fields WITH (NOLOCK) where fieldid = " & fieldid(0).ToString() & ""
                                        od.Fill(dtval)
                                        If (dtval.Rows.Count > 0) Then
                                            ddlval = dtval.Rows(0)("ddlMultilookupval").ToString().Split(",")
                                            For q As Integer = 0 To ddlval.Length - 1
                                                If (ddlval(q).ToString().Contains("-" & dtfld1.Rows(j).Item("FieldID").ToString())) Then
                                                    Dim temp() As String = ddlval(q).ToString().Split("-")
                                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                    od.SelectCommand.CommandText = "select * from MMM_MST_FIELDS WITH (NOLOCK) where DOCUMENTTYPE='" & temp(0).ToString() & "' and eid=" & HttpContext.Current.Session("EID") & " and fieldmapping in('" & temp(1).ToString() & "')"
                                                    Dim checkval As New DataTable
                                                    od.Fill(checkval)
                                                    Dim ddlText1 As String = checkval.Rows(0).Item("dropdown").ToString()
                                                    Dim dropdowntype As String = checkval.Rows(0).Item("dropdowntype").ToString()
                                                    Dim arr() As String
                                                    If UCase(dropdowntype) = "MASTER VALUED" Then
                                                        Dim ob As New DynamicForm
                                                        arr = ddlText1.Split("-")
                                                        Dim TID As String = "TID"
                                                        Dim TABLENAME As String = ""
                                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                                            TABLENAME = "MMM_MST_MASTER"
                                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                            TABLENAME = "MMM_MST_DOC"
                                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                            If arr(1).ToString.ToUpper = "USER" Then
                                                                TABLENAME = "MMM_MST_USER"
                                                                TID = "UID"
                                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                                TABLENAME = "MMM_MST_LOCATION"
                                                                TID = "LOCID"
                                                            End If
                                                        End If
                                                        Dim lookUpqry As String = ""
                                                        Dim str As String = ""
                                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                        If arr(0).ToUpper() = "CHILD" Then
                                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        Else
                                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) "
                                                            Else
                                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                            End If
                                                        End If

                                                        Dim xwhr As String = ""
                                                        Dim tids As String = ""
                                                        'Dim tidarr() As String

                                                        ''FILTER THE DATA ACCORDING TO USER 
                                                        tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())

                                                        If tids.Length >= 2 Then
                                                            'tidarr = tids.Split("-")
                                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                                        ElseIf tids = "0" Then
                                                            pnlFields.Visible = False
                                                            btnActEdit.Visible = False
                                                            updMain.Update()
                                                            xwhr = ""
                                                        End If
                                                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                        Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
                                                        If AutoFilter.Length > 0 Then
                                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                            If arr(0).ToUpper() = "CHILD" Then
                                                                If AutoFilter.ToUpper = "DOCID" Then
                                                                    str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                                                Else
                                                                    str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                                                End If
                                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                            Else
                                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & Session("EID") & " "
                                                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                            End If
                                                        End If


                                                        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                                        Dim dss As New DataSet
                                                        If str.Length > 0 Then
                                                            oda.SelectCommand.CommandText = str
                                                            oda.Fill(dss, "FV")
                                                            Dim isAddJquery As Integer = 0
                                                            ddl.Items.Add("Select")
                                                            ddl.Items(0).Value = "0"
                                                            For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                                ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
                                                                Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
                                                                ddl.Items(J1 + 1).Value = lookddlVal
                                                            Next
                                                            oda.Dispose()
                                                            dss.Dispose()
                                                            'prashant_2_7

                                                            Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()
                                                            Dim multilookup As String = dtfld1.Rows(j).Item("multilookUpVal").ToString()

                                                            If lookupvalue.Length > 0 Or multilookup.Length > 0 Then
                                                                ddl.AutoPostBack = True
                                                                AddHandler ddl.TextChanged, AddressOf GridDdl_TextChanged
                                                            End If


                                                            If ViewState("chkadd") = 1 Then
                                                                j = j + 1
                                                            End If
                                                            If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                                ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                                            End If

                                                            If ddl.Items.FindByValue(row.Cells(j).Text) IsNot Nothing Then
                                                                ddl.Items.FindByValue(row.Cells(j).Text).Selected = True
                                                            End If

                                                            row.Cells(j).Controls.Add(ddl)
                                                            If isAddJquery = 1 Then
                                                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                                            End If
                                                        End If
                                                        con.Dispose()
                                                        oda.Dispose()
                                                        dss.Dispose()
                                                    ElseIf UCase(dropdowntype) = "SESSION VALUED" Then

                                                    End If
                                                End If
                                            Next
                                        End If
                                    End If


                                ElseIf ftype.ToUpper() = "DROP DOWN" Then
                                    Dim ddl As New DropDownList
                                    ddl.ID = "fld" & FldID & "_" & row.RowIndex
                                    ddl.CssClass = "txtBox"
                                    If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                        ddl.Enabled = True
                                    Else
                                        If dtfld1.Rows(j).Item("isEditable") = 1 Then
                                            ddl.Enabled = True
                                        Else
                                            ddl.Enabled = False
                                        End If
                                    End If

                                    ddl.Width = 70
                                    Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                    Dim dropdowntype As String = dtfld1.Rows(j).Item("dropdowntype").ToString()
                                    Dim arr() As String
                                    'Dim arrMid() As String
                                    If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                        Dim cb As New DropDownList
                                        cb.ID = "fld" & FldID & "_" & row.RowIndex
                                        Dim ARR1() As String = dtfld1.Rows(j).Item("dropdown").ToString().Split(",")
                                        cb.Items.Insert(0, "Select")
                                        cb.Items(0).Value = 0
                                        For K As Integer = 0 To ARR1.Length - 1
                                            cb.Items.Add(ARR1(K).ToString)
                                        Next



                                        'Prashant_30_7
                                        If dtfld1.Rows(j).Item("iseditable") = 1 Then
                                            ddl.Enabled = True
                                        Else
                                            ddl.Enabled = False
                                        End If
                                        If ViewState("chkadd") = 1 Then
                                            j = j + 1
                                        End If

                                        If cb.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                            cb.Items.FindByText(row.Cells(j).Text).Selected = True
                                        End If

                                        row.Cells(j).Controls.Add(cb)

                                    ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                        '' code for getting master valued 
                                        Dim ob As New DynamicForm
                                        arr = ddlText.Split("-")
                                        Dim TID As String = "TID"
                                        Dim TABLENAME As String = ""
                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                            If arr(1).ToString.ToUpper = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                TID = "LOCID"
                                            End If
                                        End If
                                        Dim lookUpqry As String = ""
                                        Dim str As String = ""
                                        If arr(0).ToUpper() = "CHILD" Then
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        Else
                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) "
                                            Else
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            End If
                                        End If
                                        Dim xwhr As String = ""
                                        Dim tids As String = ""
                                        'Dim tidarr() As String
                                        ''FILTER THE DATA ACCORDING TO USER 
                                        tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())
                                        If tids.Length >= 2 Then
                                            'tidarr = tids.Split("-")
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                        ElseIf tids = "0" Then
                                            pnlFields.Visible = False
                                            btnActEdit.Visible = False
                                            updMain.Update()
                                            xwhr = ""
                                        End If
                                        str = str & "  AND M.isauth=1 " & xwhr
                                        Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
                                        If AutoFilter.Length > 0 Then
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            If arr(0).ToUpper() = "CHILD" Then
                                                If AutoFilter.ToUpper = "DOCID" Then
                                                    str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                                Else
                                                    str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                                End If
                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                str = str & "  AND M.isauth=1 " & xwhr
                                            Else
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & Session("EID") & " "
                                                str = str & "  AND M.isauth=1 " & xwhr
                                            End If
                                        End If
                                        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim con As SqlConnection = New SqlConnection(conStr)
                                        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                        Dim dss As New DataSet
                                        If str.Length > 0 Then
                                            If dtfld1.Rows(j).Item("fillwithexistingonEdit").ToString().ToUpper = "TRUE" Then
                                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                str = str & " AND TID IN (select distinct " & dtfld1.Rows(j).Item("fieldmapping").ToString() & " from mmm_mst_doc_item WITH (NOLOCK) where docid=" & Convert.ToInt32(RetDocId(Session("EID"))) & ") order by " & arr(2).ToString()
                                            Else
                                                str = str & "order by " & arr(2).ToString()
                                            End If

                                            oda.SelectCommand.CommandText = str
                                            oda.Fill(dss, "FV")
                                            Dim isAddJquery As Integer = 0
                                            ddl.Items.Add("Select")
                                            ddl.Items(0).Value = "0"
                                            For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
                                                Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
                                                ddl.Items(J1 + 1).Value = lookddlVal
                                            Next
                                            oda.Dispose()
                                            dss.Dispose()


                                            Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()

                                            Dim multilookup As String = dtfld1.Rows(j).Item("multilookUpVal").ToString()
                                            Dim ddlmultilookup As String = dtfld1.Rows(j).Item("ddlmultilookUpVal").ToString()
                                            If lookupvalue.Length > 0 Or multilookup.Length > 0 Or ddlmultilookup.Length > 0 Then
                                                ddl.AutoPostBack = True
                                                AddHandler ddl.TextChanged, AddressOf GridDdl_TextChanged
                                            End If



                                            If ViewState("chkadd") = 1 Then
                                                j = j + 1
                                            End If

                                            If ddl.Items.FindByValue(row.Cells(j).Text) IsNot Nothing Then
                                                ddl.Items.FindByValue(row.Cells(j).Text).Selected = True
                                            End If
                                            If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                            End If

                                            row.Cells(j).Controls.Add(ddl)
                                            If isAddJquery = 1 Then
                                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                            End If
                                        End If
                                        con.Dispose()
                                        oda.Dispose()
                                        dss.Dispose()
                                        '' ends here for getting master valued 
                                    End If
                                ElseIf ftype.ToUpper = "LOOKUPDDL" Then

                                    datatype = dtfld1.Rows(j).Item("datatype").ToString().ToUpper()
                                    Dim fieldtypee As String = dtfld1.Rows(j).Item("FieldType").ToString().ToUpper()
                                    Dim ddl As New DropDownList
                                    ddl.ID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & "_" & row.RowIndex
                                    ddl.Width = controlWdth - 10
                                    ddl.CssClass = "txtBox"
                                    Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                    Dim dropdowntype As String = dtfld1.Rows(j).Item("dropdowntype").ToString()
                                    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                    Dim con As SqlConnection = New SqlConnection(conStr)
                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                    Dim od As SqlDataAdapter = New SqlDataAdapter("select dropdown,DDllookupvalue from MMM_MST_FIELDS WITH (NOLOCK) where FieldID='" & ddlText & "'", con)
                                    ' Dim dsMonth As New DataSet
                                    Dim dt As New DataTable
                                    od.Fill(dt)
                                    Dim arr() As String
                                    Dim darr() As String
                                    Dim type As String = dt.Rows(0).Item("dropdown").ToString()
                                    arr = type.Split("-")
                                    Dim documenttype As String = arr(1).ToString()
                                    Dim field As String = dt.Rows(0).Item("DDllookupvalue").ToString()
                                    field = field.Substring(0, field.Length - 1)
                                    darr = field.Split(",")
                                    For k As Integer = 0 To darr.Count - 1
                                        Dim fieldmping As String
                                        Dim str As String = ""
                                        Dim feild As String
                                        Dim s = darr(k).Split("-")
                                        feild = s(0).ToString()
                                        fieldmping = s(1).ToString()

                                        Dim TID As String = "TID"
                                        Dim TABLENAME As String = ""
                                        Dim str1 As String = ""
                                        Dim lookUpqry As String = ""

                                        Dim xwhr As String = ""
                                        Dim tids As String = ""
                                        Dim Rtids As String = ""   ' for prerole data filter


                                        If feild = dtfld1.Rows(j).Item("FieldID").ToString() Then
                                            'If arr(0) = "SESSION" And Not (fieldmping.Contains("fld")) Then
                                            '    If arr(1).ToString.ToUpper = "USER" Then
                                            '        TABLENAME = "MMM_MST_USER"
                                            '        TID = "UID"
                                            '    End If
                                            '    ' str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            '    str1 = "select " & fieldmping.ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            'Else
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            od.SelectCommand.CommandText = "select dropdown from MMM_MST_FIELDS WITH (NOLOCK) where EID=" & HttpContext.Current.Session("EID") & " and documenttype='" & documenttype & "' and FieldMapping in('" & fieldmping & "')"
                                            Dim dt1 As New DataTable
                                            od.Fill(dt1)
                                            Dim dropdown As String = dt1.Rows(0).Item("dropdown").ToString()
                                            arr = dropdown.Split("-")

                                            If UCase(arr(0).ToString()) = "MASTER" Then
                                                TABLENAME = "MMM_MST_MASTER"
                                            ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                TABLENAME = "MMM_MST_DOC"
                                            ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                TABLENAME = "MMM_MST_DOC_ITEM"
                                            ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                If arr(1).ToString.ToUpper = "USER" Then
                                                    TABLENAME = "MMM_MST_USER"
                                                    TID = "UID"
                                                ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                    TABLENAME = "MMM_MST_LOCATION"
                                                    TID = "LOCID"
                                                End If
                                            End If
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            If arr(0).ToUpper() = "CHILD" Then
                                                str1 = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            Else
                                                If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                    str1 = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) "
                                                Else
                                                    str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                End If
                                            End If
                                            '  End If

                                            'Dim tidarr() As String

                                            ''FILTER THE DATA ACCORDING TO USER 
                                            Dim ob = New DynamicForm()
                                            tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())
                                            Rtids = ob.UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                                            '' for multiuse of document by sp on 08_apr_15
                                            Dim Sdtype As String = arr(1).ToString
                                            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                            da.SelectCommand.CommandType = CommandType.Text
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            da.SelectCommand.CommandText = "select isnull(Allowmultiuse,0) from mmm_mst_forms WITH (NOLOCK) where eid='" & HttpContext.Current.Session("EID").ToString & "' AND FORMNAME='" & Sdtype & "'"
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If
                                            Dim isMultiUse As Integer = Convert.ToInt32(da.SelectCommand.ExecuteScalar())

                                            Dim CurrDoctype As String = dtfld1.Rows(j).Item("documenttype").ToString()
                                            Dim CurrFieldMapping As String = dtfld1.Rows(j).Item("fieldmapping").ToString()

                                            Dim qry As String = ""
                                            Dim MTids As String = ""
                                            If UCase(arr(0).ToString()) <> "CHILD" And UCase(arr(0).ToString) <> "STATIC" Then
                                                da.SelectCommand.CommandType = CommandType.Text
                                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR," & CurrFieldMapping & ")  FROM " & TABLENAME & " WITH (NOLOCK) where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & CurrDoctype & "'" & " FOR XML PATH('')),2,1000) AS CSV"
                                                MTids = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                            End If
                                            ''ends  for multiuse of document by sp on 08_apr_15


                                            If tids.Length >= 2 Then
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                            ElseIf tids = "0" Then
                                                pnlFields.Visible = False
                                                btnActEdit.Visible = False
                                                updMain.Update()
                                                xwhr = ""
                                            End If
                                            '' new by sunil for pre role data filter 22-feb
                                            If Rtids <> "" Then
                                                If xwhr.ToString = "" Then
                                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                                Else
                                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                                End If
                                            End If

                                            '' new by sunil for multiuse of docs
                                            If MTids.Length > 2 And isMultiUse = 1 Then
                                                If Right(MTids, 1) = "," Then
                                                    MTids = Left(MTids, Len(MTids) - 1)
                                                End If
                                                xwhr = xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") "
                                            End If
                                            '' new by sunil for multiuse of docs

                                            str1 = str1 & "  AND M.isauth>0 " & xwhr & " order by " & arr(2).ToString()
                                            'Dim documenttype2 As String = arr1(1).ToString()
                                            'Dim fieldmping2 As String = arr1(2).ToString()
                                            'pnlFields.Controls.Add(ddl)
                                            Dim dt2 As New DataTable
                                            'oda.SelectCommand.CommandText = "select " & fieldmping2 & " from " & TABLENAME & " where EID=" & HttpContext.Current.Session("EID") & " and documenttype = '" & documenttype2 & "'"

                                            If str1.Length > 0 Then
                                                pnlFields.Controls.Add(ddl)
                                                od.SelectCommand.CommandText = str1
                                                od.Fill(dt2)
                                                Dim isAddJquery As Integer = 0
                                                ddl.Items.Add("Select")
                                                ddl.Items(0).Value = "0"
                                                For JK As Integer = 0 To dt2.Rows.Count - 1
                                                    ddl.Items.Add(dt2.Rows(JK).Item(0).ToString())
                                                    Dim lookddlVal As String = dt2.Rows(JK).Item(1).ToString()
                                                    ddl.Items(JK + 1).Value = lookddlVal
                                                Next
                                                dt2.Dispose()
                                            End If
                                            If dtfld1.Rows(j).Item("isEditable").ToString() = "1" Then
                                                ddl.Enabled = True
                                            Else
                                                ddl.Enabled = False
                                            End If
                                        End If
                                    Next

                                    If Not IsNothing(ddl.Items.FindByValue(row.Cells(j).Text)) Then
                                        ddl.Items.FindByValue(row.Cells(j).Text).Selected = True
                                    End If

                                    row.Cells(j).Controls.Add(ddl)

                                ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
                                    Dim txtBox As New FileUpload

                                    Dim txtBox1 As New HiddenField

                                    Dim lbl1 As New Label
                                    lbl1.ID = "lblf_" & FldID
                                    lbl1.Text = ""
                                    lbl1.ClientIDMode = ClientIDMode.Static

                                    txtBox1.ID = "hdn_" & FldID
                                    txtBox1.Value = ""
                                    txtBox1.ClientIDMode = ClientIDMode.Static
                                    txtBox.Attributes.Add("onchange", "UtilJs.UploadFile1(this,'" & txtBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")

                                    Dim hdnflag As New HiddenField
                                    hdnflag.ID = "hdnf_" & FldID
                                    hdnflag.Value = "0"

                                    'txtBox.Visible = False
                                    txtBox.ID = "fld_" & FldID & "_" & row.RowIndex
                                    txtBox.CssClass = "txtBox"

                                    txtBox.Width = 180

                                    If ViewState("chkadd") = 1 Then
                                        j = j + 1
                                    End If
                                    Dim str As String = row.Cells(j).Text
                                    str = After(str, "/")
                                    txtBox1.Value = str 'row.Cells(j).Text
                                    lbl1.Text = str ' row.Cells(j).Text
                                    row.Cells(j).Text = str
                                    row.Cells(j).Controls.Add(txtBox)
                                    row.Cells(j).Controls.Add(txtBox1)
                                    row.Cells(j).Controls.Add(lbl1)
                                    row.Cells(j).Controls.Add(hdnflag)
                                    Dim pstback As New PostBackTrigger
                                    pstback.ControlID = btnActEdit.ID
                                    updMain.Triggers.Add(pstback)

                                    If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                        txtBox.Enabled = True
                                    Else
                                        txtBox.Enabled = False
                                    End If
                                End If
                                If ViewState("chkadd") = 1 Then
                                    j = j - 1
                                End If
                            Next
                        Else
                            ' Code For Rows Which Are Allready Added

                            'Dim filterRows() As DataRow
                            'filterRows = dtfld1.Select("inlineEditing=1 or inlinemapping is not null and inlinemapping <>''", "InLineEditing,DisplayOrder")
                            'dtfld1 = filterRows.CopyToDataTable()
                            'Prashant 15-04-2015
                            Dim filterRows() As DataRow
                            Dim filterRows1() As DataRow
                            filterRows = DtNew.Select("inlinemapping is not null and inlinemapping <>''", "DisplayOrder")
                            filterRows1 = DtNew.Select("InLineEditing=1", "DisplayOrder")
                            If filterRows.Length > 0 Then
                                dtfld1 = filterRows.CopyToDataTable()
                                dtfld1.Merge(filterRows1.CopyToDataTable())
                            Else
                                dtfld1 = filterRows1.CopyToDataTable()
                            End If

                            Dim UniqueRows = dtfld1.AsEnumerable().Distinct(DataRowComparer.[Default])
                            dtfld1 = UniqueRows.CopyToDataTable()

                            For j As Integer = 0 To dtfld1.Rows.Count - 1
                                '  Dim strVal As String = CType(e.Row.DataItem, DataRowView)(dtfld1.Columns(j).ColumnName).ToString
                                Dim ftype As String = dtfld1.Rows(j).Item("fieldtype").ToString()
                                Dim ilEdit As Integer = dtfld1.Rows(j).Item("inlineEditing").ToString()
                                Dim FldID As String = dtfld1.Rows(j).Item("fieldid").ToString()
                                Dim Formula = Convert.ToString(dtfld1.Rows(j).Item("cal_text"))
                                Dim DisplayName = Convert.ToString(dtfld1.Rows(j).Item("DisplayName"))

                                Dim datatype As String = dtfld1.Rows(j).Item("datatype").ToString() 'Prashant_10_7
                                Dim controlWdth As Integer = 100

                                If ilEdit = 1 Then
                                    If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Or ftype.ToUpper() = "PARENT VALUE" Then
                                        Dim cb As New TextBox
                                        'cb.ID = "fld" & j.ToString() & "_" & row.RowIndex
                                        'cb.Width = 55
                                        cb.ID = "fld" & FldID & row.RowIndex
                                        'Prashant_10_7
                                        If dtfld1.Rows(j).Item("defaultfieldval").ToString().Length > 0 Then
                                            cb.Text = dtfld1.Rows(j).Item("defaultfieldval").ToString()
                                        Else
                                            If datatype.ToUpper() = "NUMERIC" Then
                                                cb.Text = "0"
                                            End If
                                        End If
                                        If Val(dtfld1.Rows(j).Item("isDescription").ToString()) = 1 Then
                                            cb.ToolTip = dtfld1.Rows(j).Item("Description").ToString()
                                        End If

                                        If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                            cb.Enabled = True
                                        Else
                                            If dtfld1.Rows(j).Item("iseditable") = 1 Then
                                                cb.Enabled = True
                                            Else
                                                cb.Enabled = False
                                            End If
                                        End If
                                        cb.Width = controlWdth
                                        Dim colValue As String
                                        'Code For calculative field
                                        'Code End Here !!!!!!
                                        If ftype = "Calculative Field" Then
                                            colValue = "0"
                                            cb.Attributes.Add("READONLY", "READONLY")
                                            cb.Attributes.Add("COLOR", "GRAY")
                                            If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                                cb.Enabled = True
                                            Else
                                                cb.Enabled = False
                                            End If
                                            ' cb.ReadOnly = True
                                        End If

                                        If ViewState("chkadd") = 1 Then
                                            j = j + 1
                                        End If
                                        colValue = row.DataItem(j).ToString()
                                        If ftype.ToUpper() = "LOOKUP" Then
                                            If datatype.ToUpper() = "NUMERIC" Then
                                                colValue = "0"
                                            End If
                                        Else
                                            If Val(colValue) = 0 Then
                                                If ftype.ToUpper() = "TEXT BOX" And datatype.ToUpper() = "NUMERIC" Then
                                                    colValue = "0"
                                                End If
                                            End If
                                        End If
                                        If Not row.Cells(j).Text.Trim = "&nbsp;" And Not row.Cells(j).Text.Trim = "" Then
                                            colValue = row.Cells(j).Text.Trim
                                        End If

                                        cb.Text = colValue
                                        row.Cells(j).Controls.Add(cb)

                                        If datatype.ToUpper.Trim = "DATETIME" Then
                                            Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                            CLNDR.Controls.Clear()
                                            CLNDR.ID = "CLNDR" & dtfld1.Rows(j).Item("FieldID").ToString()
                                            CLNDR.Format = "dd/MM/yy"
                                            CLNDR.TargetControlID = cb.ID
                                            cb.Enabled = True
                                            If row.Cells(j).Text <> "" And row.Cells(j).Text <> "&nbsp;" Then
                                                cb.Text = String.Format("{0:dd/MM/yy}", row.Cells(j).Text)
                                            Else
                                                cb.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                            End If
                                            row.Cells(j).Controls.Add(CLNDR) '
                                            If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                                cb.Enabled = True
                                            Else
                                                cb.Enabled = False
                                            End If
                                        End If

                                        'If Val(colValue) = 0 Then
                                        '    If ViewState("chkadd") = 1 Then  'added by balli in case of checkboxes
                                        '        If ftype.ToUpper() = "TEXT BOX" And dtfld1.Rows(j - 1).Item("datatype").ToString().ToUpper() = "NUMERIC" Then
                                        '            cb.Text = "0"
                                        '        End If
                                        '    Else
                                        '        If ftype.ToUpper() = "TEXT BOX" And dtfld1.Rows(j).Item("datatype").ToString().ToUpper() = "NUMERIC" Then
                                        '            cb.Text = "0"
                                        '        End If
                                        '    End If
                                        'End If

                                        If Not Formula Is Nothing And Formula <> "" Then
                                            'Dim arrFor As String() = Formula.Split(",")
                                            Dim jScript = GenerateJQueryScript(dtfld1, GID, row.RowIndex, Formula, FldID)
                                            If jScript <> "" Then
                                                cb.Attributes.Add("onblur", jScript)
                                            End If
                                        End If


                                    ElseIf ftype.ToUpper() = "AUTOCOMPLETE" Then

                                        Dim txtbox As New TextBox
                                        txtbox.ID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                        txtbox.Width = controlWdth - 10
                                        txtbox.CssClass = "txtBox"
                                        txtbox.Attributes.Add("placeholder", "Please begin typing a " & DisplayName)

                                        txtbox.AutoPostBack = True
                                        AddHandler txtbox.TextChanged, AddressOf txtbox_TextChanged
                                        ' adding handler for binding lookup or other dropdown or filter

                                        Dim autofilExtender As New AjaxControlToolkit.AutoCompleteExtender
                                        autofilExtender.ID = "extenderID" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex

                                        autofilExtender.TargetControlID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                        autofilExtender.ServiceMethod = "GetCompletionList" ' THIS SERVICE METHOD IS WRITTEN ON DOCUMENT PAGE 
                                        autofilExtender.DelimiterCharacters = ""
                                        autofilExtender.ContextKey = dtfld1.Rows(j).Item("DROPDOWN").ToString() & "-" & dtfld1.Rows(j).Item("FieldID").ToString() & "-" & dtfld1.Rows(j).Item("DROPDOWNTYPE").ToString() & "-" & dtfld1.Rows(j).Item("AUTOFILTER").ToString() & "-" & dtfld1.Rows(j).Item("InitialFilter").ToString()
                                        'context key contain  : dropdown-fieldid-dropdowntype-autofilter-InitialFilter' adding the fieldid in context key because later on we need id of field in web method 
                                        autofilExtender.Enabled = True
                                        autofilExtender.CompletionSetCount = 5
                                        autofilExtender.OnClientShown = "onDataShown"  ' by sunil
                                        '   autofilExtender.CompletionListElementID = "ACsugestlist"
                                        autofilExtender.MinimumPrefixLength = 1  ' start searching when entered one characters
                                        'autofilExtender.OnClientItemSelected = "ace_itemSelected('" & ds.Rows(i).Item("FieldID").ToString() & "')"
                                        autofilExtender.OnClientItemSelected = "ace_itemSelected"


                                        Dim hdnfld As New HiddenField
                                        hdnfld.ID = "HDN" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                        row.Cells(j).Controls.Add(hdnfld)
                                        row.Cells(j).Controls.Add(autofilExtender)

                                        '' finding the record data from master and add to its cell

                                        If row.Cells(j).Text.Length > 0 And row.Cells(j).Text.ToString <> "&nbsp;" Then    'row.Cells(j).Text'&nbsp;'
                                            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                            Dim con As SqlConnection = New SqlConnection(conStr)
                                            Dim fldmapData As String() = Split(dtfld1.Rows(j).Item("dropdown").ToString(), "-")
                                            Dim od As SqlDataAdapter = New SqlDataAdapter("", con)
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            od.SelectCommand.CommandText = "select " & fldmapData(2) & " from MMM_MST_master WITH (NOLOCK) where tid='" & row.Cells(j).Text & " '"  ' fldmapdata "master-documenttype-fieldmapping" 
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If
                                            Dim mdata As String = od.SelectCommand.ExecuteScalar()
                                            txtbox.Text = mdata
                                            hdnfld.Value = row.Cells(j).Text
                                            con.Close()
                                            od.Dispose()
                                        End If
                                        row.Cells(j).Controls.Add(txtbox)
                                        'pnlFields.Controls.Add(txtbox)

                                    ElseIf ftype.ToUpper() = "CHECKBOX LIST" Then
                                        Dim CHKlIST As New CheckBoxList()
                                        Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                                        dynmdiv.ID = "div_" & FldID
                                        Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                        CHKlIST.ID = "fld" & FldID & "_" & row.RowIndex
                                        If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                            Dim arr = ddlText.Split(",")
                                            For ii As Integer = 0 To arr.Count - 1
                                                CHKlIST.Items.Add(arr(ii).ToUpper())
                                            Next

                                        ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                            Dim arr = ddlText.Split("-")
                                            Dim TID As String = "TID"
                                            Dim TABLENAME As String = ""
                                            If UCase(arr(0).ToString()) = "MASTER" Then
                                                TABLENAME = "MMM_MST_MASTER"
                                            ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                TABLENAME = "MMM_MST_DOC"
                                            ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                TABLENAME = "MMM_MST_DOC_ITEM"
                                            ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                If arr(1).ToString.ToUpper = "USER" Then
                                                    TABLENAME = "MMM_MST_USER"
                                                    TID = "UID"
                                                ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                    TABLENAME = "MMM_MST_LOCATION"
                                                    TID = "LOCID"
                                                End If
                                            End If
                                            Dim lookUpqry As String = ""
                                            Dim str As String = ""
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            If arr(0).ToUpper() = "CHILD" Then
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            Else
                                                If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                    str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) "
                                                Else
                                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                End If
                                            End If
                                            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                            Dim con As SqlConnection = New SqlConnection(conStr)
                                            Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                            oda = New SqlDataAdapter("", con)
                                            Dim dss As New DataSet
                                            oda.SelectCommand.CommandText = str
                                            oda.Fill(dss, "FV")

                                            If ViewState("chkadd") = 1 Then
                                                j = j + 1
                                            End If

                                            For JJ As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                CHKlIST.Items.Add(dss.Tables("FV").Rows(JJ).Item(0))
                                                CHKlIST.Items(JJ).Value = dss.Tables("FV").Rows(JJ).Item(1)
                                                If Convert.ToString(row.Cells(j).Text).Contains(CHKlIST.Items(JJ).Value) Then
                                                    CHKlIST.Items(JJ).Selected = True
                                                End If
                                            Next
                                            oda.Dispose()
                                            dss.Dispose()
                                        End If

                                        dynmdiv.Style.Add(HtmlTextWriterStyle.Width, "200px")
                                        dynmdiv.Style.Add(HtmlTextWriterStyle.Height, "100px")
                                        dynmdiv.Style.Add(HtmlTextWriterStyle.Overflow, "Scroll")
                                        dynmdiv.Controls.Add(CHKlIST)
                                        row.Cells(j).Controls.Add(dynmdiv)


                                    ElseIf ftype.ToUpper() = "MULTI LOOKUP" Then
                                        Dim txtBox As New TextBox
                                        txtBox.ID = "fld" & FldID & row.RowIndex
                                        txtBox.Width = controlWdth - 10
                                        txtBox.CssClass = "txtBox"
                                        If dtfld1.Rows(j).Item("isEditable").ToString() = "1" Then
                                            txtBox.Enabled = True
                                        Else
                                            txtBox.Enabled = False
                                        End If

                                        If ViewState("chkadd") = 1 Then
                                            j = j + 1
                                        End If

                                        row.Cells(j).Controls.Add(txtBox)

                                    ElseIf ftype.ToUpper() = "MULTI LOOKUPDDL" Then

                                        Dim ddl As New DropDownList
                                        ddl.ID = "fld" & FldID & "_" & row.RowIndex
                                        ddl.CssClass = "txtBox"
                                        ddl.Width = 150

                                        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim con As SqlConnection = New SqlConnection(conStr)
                                        Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                        Dim od As SqlDataAdapter = New SqlDataAdapter("", con)
                                        Dim dt As New DataTable
                                        Dim dtval As New DataTable
                                        Dim fieldid As String()
                                        Dim ddlval As String()
                                        If (ddlText.ToString() <> String.Empty) Then
                                            fieldid = ddlText.ToString().Split(",")
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            od.SelectCommand.CommandText = "select ddlMultilookupval from mmm_mst_fields WITH (NOLOCK) where fieldid = " & fieldid(0).ToString() & ""
                                            od.Fill(dtval)
                                            If (dtval.Rows.Count > 0) Then
                                                ddlval = dtval.Rows(0)("ddlMultilookupval").ToString().Split(",")
                                                For q As Integer = 0 To ddlval.Length - 1
                                                    If (ddlval(q).ToString().Contains("-" & dtfld1.Rows(j).Item("FieldID").ToString())) Then
                                                        Dim temp() As String = ddlval(q).ToString().Split("-")
                                                        od.SelectCommand.CommandText = "select * from MMM_MST_FIELDS WITH (NOLOCK) where DOCUMENTTYPE='" & temp(0).ToString() & "' and eid=" & HttpContext.Current.Session("EID") & " and fieldmapping in('" & temp(1).ToString() & "')"
                                                        Dim checkval As New DataTable
                                                        od.Fill(checkval)
                                                        Dim ddlText1 As String = checkval.Rows(0).Item("dropdown").ToString()
                                                        Dim dropdowntype As String = checkval.Rows(0).Item("dropdowntype").ToString()
                                                        Dim arr() As String
                                                        If UCase(dropdowntype) = "MASTER VALUED" Then
                                                            Dim ob As New DynamicForm
                                                            arr = ddlText1.Split("-")
                                                            Dim TID As String = "TID"
                                                            Dim TABLENAME As String = ""
                                                            If UCase(arr(0).ToString()) = "MASTER" Then
                                                                TABLENAME = "MMM_MST_MASTER"
                                                            ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                                TABLENAME = "MMM_MST_DOC"
                                                            ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                                TABLENAME = "MMM_MST_DOC_ITEM"
                                                            ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                                If arr(1).ToString.ToUpper = "USER" Then
                                                                    TABLENAME = "MMM_MST_USER"
                                                                    TID = "UID"
                                                                ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                                    TABLENAME = "MMM_MST_LOCATION"
                                                                    TID = "LOCID"
                                                                End If
                                                            End If
                                                            Dim lookUpqry As String = ""
                                                            Dim str As String = ""
                                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                            If arr(0).ToUpper() = "CHILD" Then
                                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                            Else
                                                                If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                                    str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK) "
                                                                Else
                                                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                                End If
                                                            End If

                                                            Dim xwhr As String = ""
                                                            Dim tids As String = ""
                                                            'Dim tidarr() As String

                                                            ''FILTER THE DATA ACCORDING TO USER 
                                                            tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())

                                                            If tids.Length >= 2 Then
                                                                'tidarr = tids.Split("-")
                                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                                            ElseIf tids = "0" Then
                                                                pnlFields.Visible = False
                                                                btnActEdit.Visible = False
                                                                updMain.Update()
                                                                xwhr = ""
                                                            End If
                                                            str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                            Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
                                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                            If AutoFilter.Length > 0 Then
                                                                If arr(0).ToUpper() = "CHILD" Then
                                                                    If AutoFilter.ToUpper = "DOCID" Then
                                                                        str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                                                    Else
                                                                        str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                                                    End If
                                                                ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                                    str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                                    str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                                Else
                                                                    str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & Session("EID") & " "
                                                                    str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                                End If
                                                            End If


                                                            Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                                            Dim dss As New DataSet
                                                            If str.Length > 0 Then
                                                                oda.SelectCommand.CommandText = str
                                                                oda.Fill(dss, "FV")
                                                                Dim isAddJquery As Integer = 0
                                                                ddl.Items.Add("Select")
                                                                ddl.Items(0).Value = "0"
                                                                For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                                    ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
                                                                    Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
                                                                    ddl.Items(J1 + 1).Value = lookddlVal
                                                                Next
                                                                oda.Dispose()
                                                                dss.Dispose()
                                                                'prashant_2_7

                                                                Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()
                                                                Dim multilookup As String = dtfld1.Rows(j).Item("multilookUpVal").ToString()
                                                                Dim ddlmultilookup As String = dtfld1.Rows(j).Item("ddlmultilookUpVal").ToString()

                                                                If lookupvalue.Length > 0 Or multilookup.Length > 0 Or ddlmultilookup.Length > 0 Then
                                                                    ddl.AutoPostBack = True
                                                                    AddHandler ddl.TextChanged, AddressOf GridDdl_TextChanged
                                                                End If

                                                                If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                                    ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                                                End If
                                                                If ViewState("chkadd") = 1 Then
                                                                    j = j + 1
                                                                End If

                                                                If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                                    'ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                                                    ddl.SelectedValue = ddl.Items.FindByText(row.Cells(j).Text).Value
                                                                End If

                                                                row.Cells(j).Controls.Add(ddl)

                                                                If isAddJquery = 1 Then
                                                                    Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                                                End If
                                                            End If
                                                            con.Dispose()
                                                            oda.Dispose()
                                                            dss.Dispose()
                                                        ElseIf UCase(dropdowntype) = "SESSION VALUED" Then

                                                        End If
                                                    End If
                                                Next
                                            End If
                                        End If

                                    ElseIf ftype.ToUpper() = "DROP DOWN" Then
                                        Dim ddl As New DropDownList
                                        ddl.ID = "fld" & FldID & "_" & row.RowIndex
                                        ddl.CssClass = "txtBox"
                                        If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                            ddl.Enabled = True
                                        Else
                                            If dtfld1.Rows(j).Item("isEditable") = 1 Then
                                                ddl.Enabled = True
                                            Else
                                                ddl.Enabled = False
                                            End If
                                        End If

                                        ddl.Width = 70
                                        Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                        Dim dropdowntype As String = dtfld1.Rows(j).Item("dropdowntype").ToString()
                                        Dim arr() As String
                                        'Dim arrMid() As String
                                        If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                            Dim cb As New DropDownList
                                            cb.ID = "fld" & FldID & "_" & row.RowIndex
                                            Dim ARR1() As String = dtfld1.Rows(j).Item("dropdown").ToString().Split(",")
                                            cb.Items.Insert(0, "Select")
                                            cb.Items(0).Value = 0
                                            For K As Integer = 0 To ARR1.Length - 1
                                                cb.Items.Add(ARR1(K).ToString)
                                            Next

                                            If cb.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                cb.Items.FindByText(row.Cells(j).Text).Selected = True
                                            End If

                                            'Prashant_30_7
                                            If dtfld1.Rows(j).Item("iseditable") = 1 Then
                                                ddl.Enabled = True
                                            Else
                                                ddl.Enabled = False
                                            End If
                                            If ViewState("chkadd") = 1 Then
                                                j = j + 1
                                            End If
                                            cb.SelectedValue = row.Cells(j).Text
                                            row.Cells(j).Controls.Add(cb)


                                        ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                            '' code for getting master valued 
                                            Dim ob As New DynamicForm
                                            arr = ddlText.Split("-")
                                            Dim TID As String = "TID"
                                            Dim TABLENAME As String = ""
                                            If UCase(arr(0).ToString()) = "MASTER" Then
                                                TABLENAME = "MMM_MST_MASTER"
                                            ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                TABLENAME = "MMM_MST_DOC"
                                            ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                TABLENAME = "MMM_MST_DOC_ITEM"
                                            ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                If arr(1).ToString.ToUpper = "USER" Then
                                                    TABLENAME = "MMM_MST_USER"
                                                    TID = "UID"
                                                ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                    TABLENAME = "MMM_MST_LOCATION"
                                                    TID = "LOCID"
                                                End If
                                            End If
                                            Dim lookUpqry As String = ""
                                            Dim str As String = ""
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            If arr(0).ToUpper() = "CHILD" Then
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK)  WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            Else
                                                If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                    str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  "
                                                Else
                                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                End If
                                            End If

                                            Dim xwhr As String = ""
                                            Dim tids As String = ""
                                            'Dim tidarr() As String

                                            ''FILTER THE DATA ACCORDING TO USER 
                                            tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())

                                            If tids.Length >= 2 Then
                                                'tidarr = tids.Split("-")
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                            ElseIf tids = "0" Then
                                                pnlFields.Visible = False
                                                btnActEdit.Visible = False
                                                updMain.Update()
                                                xwhr = ""
                                            End If
                                            str = str & "  AND M.isauth=1 " & xwhr
                                            Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            If AutoFilter.Length > 0 Then
                                                If arr(0).ToUpper() = "CHILD" Then
                                                    If AutoFilter.ToUpper = "DOCID" Then
                                                        str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                                    Else
                                                        str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                                    End If
                                                ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                    str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK)  WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                    str = str & "  AND M.isauth=1 " & xwhr
                                                Else
                                                    str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & Session("EID") & " "
                                                    str = str & "  AND M.isauth=1 " & xwhr
                                                End If
                                            End If

                                            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                            Dim con As SqlConnection = New SqlConnection(conStr)
                                            Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                            Dim dss As New DataSet
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            If str.Length > 0 Then
                                                If dtfld1.Rows(j).Item("fillwithexistingonEdit").ToString().ToUpper = "TRUE" Then
                                                    str = str & " AND TID IN (select distinct " & dtfld1.Rows(j).Item("fieldmapping").ToString() & " from mmm_mst_doc_item WITH (NOLOCK)  where docid=" & Convert.ToInt32(RetDocId(Session("EID"))) & ") order by " & arr(2).ToString()
                                                Else
                                                    str = str & "order by " & arr(2).ToString()
                                                End If

                                                oda.SelectCommand.CommandText = str
                                                oda.Fill(dss, "FV")
                                                Dim isAddJquery As Integer = 0
                                                ddl.Items.Add("Select")
                                                ddl.Items(0).Value = "0"
                                                For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                    ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
                                                    Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
                                                    ddl.Items(J1 + 1).Value = lookddlVal
                                                Next
                                                oda.Dispose()
                                                dss.Dispose()


                                                Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()
                                                Dim multilookup As String = dtfld1.Rows(j).Item("multilookUpVal").ToString()
                                                Dim ddlmultilookup As String = dtfld1.Rows(j).Item("ddlmultilookUpVal").ToString()

                                                If lookupvalue.Length > 0 Or multilookup.Length > 0 Or ddlmultilookup.Length > 0 Then
                                                    ddl.AutoPostBack = True
                                                    AddHandler ddl.TextChanged, AddressOf GridDdl_TextChanged
                                                End If

                                                If ViewState("chkadd") = 1 Then
                                                    j = j + 1
                                                End If

                                                If ddl.Items.FindByValue(row.Cells(j).Text) IsNot Nothing Then
                                                    ddl.Items.FindByValue(row.Cells(j).Text).Selected = True
                                                End If

                                                row.Cells(j).Controls.Add(ddl)
                                                If isAddJquery = 1 Then
                                                    Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                                End If
                                            End If
                                            con.Dispose()
                                            oda.Dispose()
                                            dss.Dispose()
                                            '' ends here for getting master valued 
                                        End If

                                    ElseIf ftype.ToUpper = "LOOKUPDDL" Then

                                        datatype = dtfld1.Rows(j).Item("datatype").ToString().ToUpper()
                                        Dim fieldtypee As String = dtfld1.Rows(j).Item("FieldType").ToString().ToUpper()
                                        Dim ddl As New DropDownList
                                        ddl.ID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & "_" & row.RowIndex
                                        ddl.Width = controlWdth - 10
                                        ddl.CssClass = "txtBox"
                                        Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                        Dim dropdowntype As String = dtfld1.Rows(j).Item("dropdowntype").ToString()
                                        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim con As SqlConnection = New SqlConnection(conStr)
                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        Dim od As SqlDataAdapter = New SqlDataAdapter("select dropdown,DDllookupvalue from MMM_MST_FIELDS WITH (NOLOCK)  where FieldID='" & ddlText & "'", con)
                                        ' Dim dsMonth As New DataSet
                                        Dim dt As New DataTable
                                        od.Fill(dt)
                                        Dim arr() As String
                                        Dim darr() As String
                                        Dim type As String = dt.Rows(0).Item("dropdown").ToString()
                                        arr = type.Split("-")
                                        Dim documenttype As String = arr(1).ToString()
                                        Dim field As String = dt.Rows(0).Item("DDllookupvalue").ToString()
                                        field = field.Substring(0, field.Length - 1)
                                        darr = field.Split(",")
                                        For k As Integer = 0 To darr.Count - 1
                                            Dim fieldmping As String
                                            Dim str As String = ""
                                            Dim feild As String
                                            Dim s = darr(k).Split("-")
                                            feild = s(0).ToString()
                                            fieldmping = s(1).ToString()

                                            Dim TID As String = "TID"
                                            Dim TABLENAME As String = ""
                                            Dim str1 As String = ""
                                            Dim lookUpqry As String = ""

                                            Dim xwhr As String = ""
                                            Dim tids As String = ""
                                            Dim Rtids As String = ""   ' for prerole data filter


                                            If feild = dtfld1.Rows(j).Item("FieldID").ToString() Then
                                                'If arr(0) = "SESSION" And Not (fieldmping.Contains("fld")) Then
                                                '    If arr(1).ToString.ToUpper = "USER" Then
                                                '        TABLENAME = "MMM_MST_USER"
                                                '        TID = "UID"
                                                '    End If
                                                '    ' str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                '    str1 = "select " & fieldmping.ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                'Else

                                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                od.SelectCommand.CommandText = "select dropdown from MMM_MST_FIELDS WITH (NOLOCK)  where EID=" & HttpContext.Current.Session("EID") & " and documenttype='" & documenttype & "' and FieldMapping in('" & fieldmping & "')"
                                                Dim dt1 As New DataTable
                                                od.Fill(dt1)
                                                Dim dropdown As String = dt1.Rows(0).Item("dropdown").ToString()
                                                arr = dropdown.Split("-")

                                                If UCase(arr(0).ToString()) = "MASTER" Then
                                                    TABLENAME = "MMM_MST_MASTER"
                                                ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                    TABLENAME = "MMM_MST_DOC"
                                                ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                    TABLENAME = "MMM_MST_DOC_ITEM"
                                                ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                    If arr(1).ToString.ToUpper = "USER" Then
                                                        TABLENAME = "MMM_MST_USER"
                                                        TID = "UID"
                                                    ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                        TABLENAME = "MMM_MST_LOCATION"
                                                        TID = "LOCID"
                                                    End If
                                                End If
                                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                If arr(0).ToUpper() = "CHILD" Then
                                                    str1 = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK)  WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                    str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                Else
                                                    If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                        str1 = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  "
                                                    Else
                                                        str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                    End If
                                                End If
                                                '  End If

                                                'Dim tidarr() As String

                                                ''FILTER THE DATA ACCORDING TO USER 
                                                Dim ob = New DynamicForm()
                                                tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())
                                                Rtids = ob.UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                                                '' for multiuse of document by sp on 08_apr_15
                                                Dim Sdtype As String = arr(1).ToString
                                                Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                                da.SelectCommand.CommandType = CommandType.Text
                                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                da.SelectCommand.CommandText = "select isnull(Allowmultiuse,0) from mmm_mst_forms WITH (NOLOCK)  where eid='" & HttpContext.Current.Session("EID").ToString & "' AND FORMNAME='" & Sdtype & "'"
                                                If con.State <> ConnectionState.Open Then
                                                    con.Open()
                                                End If
                                                Dim isMultiUse As Integer = Convert.ToInt32(da.SelectCommand.ExecuteScalar())

                                                Dim CurrDoctype As String = dtfld1.Rows(j).Item("documenttype").ToString()
                                                Dim CurrFieldMapping As String = dtfld1.Rows(j).Item("fieldmapping").ToString()

                                                Dim qry As String = ""
                                                Dim MTids As String = ""
                                                If UCase(arr(0).ToString()) <> "CHILD" And UCase(arr(0).ToString) <> "STATIC" Then
                                                    da.SelectCommand.CommandType = CommandType.Text
                                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                    da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR," & CurrFieldMapping & ")  FROM " & TABLENAME & " WITH (NOLOCK)  where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & CurrDoctype & "'" & " FOR XML PATH('')),2,1000) AS CSV"
                                                    MTids = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                                End If
                                                ''ends  for multiuse of document by sp on 08_apr_15


                                                If tids.Length >= 2 Then
                                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                                ElseIf tids = "0" Then
                                                    pnlFields.Visible = False
                                                    btnActEdit.Visible = False
                                                    updMain.Update()
                                                    xwhr = ""
                                                End If
                                                '' new by sunil for pre role data filter 22-feb
                                                If Rtids <> "" Then
                                                    If xwhr.ToString = "" Then
                                                        xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                                    Else
                                                        xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                                    End If
                                                End If

                                                '' new by sunil for multiuse of docs
                                                If MTids.Length > 2 And isMultiUse = 1 Then
                                                    If Right(MTids, 1) = "," Then
                                                        MTids = Left(MTids, Len(MTids) - 1)
                                                    End If
                                                    xwhr = xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") "
                                                End If
                                                '' new by sunil for multiuse of docs

                                                str1 = str1 & "  AND M.isauth>0 " & xwhr & " order by " & arr(2).ToString()
                                                'Dim documenttype2 As String = arr1(1).ToString()
                                                'Dim fieldmping2 As String = arr1(2).ToString()
                                                'pnlFields.Controls.Add(ddl)
                                                Dim dt2 As New DataTable
                                                'oda.SelectCommand.CommandText = "select " & fieldmping2 & " from " & TABLENAME & " where EID=" & HttpContext.Current.Session("EID") & " and documenttype = '" & documenttype2 & "'"

                                                If str1.Length > 0 Then
                                                    pnlFields.Controls.Add(ddl)
                                                    od.SelectCommand.CommandText = str1
                                                    od.Fill(dt2)
                                                    Dim isAddJquery As Integer = 0
                                                    ddl.Items.Add("Select")
                                                    ddl.Items(0).Value = "0"
                                                    For JK As Integer = 0 To dt2.Rows.Count - 1
                                                        ddl.Items.Add(dt2.Rows(JK).Item(0).ToString())
                                                        Dim lookddlVal As String = dt2.Rows(JK).Item(1).ToString()
                                                        ddl.Items(JK + 1).Value = lookddlVal
                                                    Next
                                                    dt2.Dispose()
                                                End If
                                                If dtfld1.Rows(j).Item("isEditable").ToString() = "1" Then
                                                    ddl.Enabled = True
                                                Else
                                                    ddl.Enabled = False
                                                End If
                                            End If
                                        Next
                                        If ViewState("chkadd") = 1 Then
                                            j = j + 1
                                        End If
                                        If Not IsNothing(ddl.Items.FindByValue(row.Cells(j).Text)) Then
                                            ddl.Items.FindByValue(row.Cells(j).Text).Selected = True
                                        End If

                                        row.Cells(j).Controls.Add(ddl)

                                    ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
                                        Dim txtBox As New FileUpload

                                        Dim txtBox1 As New HiddenField

                                        Dim lbl1 As New Label
                                        lbl1.ID = "lblf_" & FldID
                                        lbl1.Text = ""
                                        lbl1.ClientIDMode = ClientIDMode.Static

                                        txtBox1.ID = "hdn_" & FldID
                                        txtBox1.Value = ""
                                        txtBox1.ClientIDMode = ClientIDMode.Static
                                        txtBox.Attributes.Add("onchange", "UtilJs.UploadFile1(this,'" & txtBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")

                                        Dim hdnflag As New HiddenField
                                        hdnflag.ID = "hdnf_" & FldID
                                        hdnflag.Value = "0"

                                        'txtBox.Visible = False
                                        txtBox.ID = "fld_" & FldID & "_" & row.RowIndex
                                        txtBox.CssClass = "txtBox"

                                        txtBox.Width = 180

                                        If ViewState("chkadd") = 1 Then
                                            j = j + 1
                                        End If
                                        Dim str As String = row.Cells(j).Text
                                        str = After(str, "/")
                                        txtBox1.Value = str 'row.Cells(j).Text
                                        lbl1.Text = str ' row.Cells(j).Text
                                        row.Cells(j).Text = str
                                        row.Cells(j).Controls.Add(txtBox)
                                        row.Cells(j).Controls.Add(txtBox1)
                                        row.Cells(j).Controls.Add(lbl1)
                                        row.Cells(j).Controls.Add(hdnflag)
                                        Dim pstback As New PostBackTrigger
                                        pstback.ControlID = btnActEdit.ID
                                        updMain.Triggers.Add(pstback)

                                        If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                            txtBox.Enabled = True
                                        Else
                                            txtBox.Enabled = False
                                        End If
                                    End If
                                    If ViewState("chkadd") = 1 Then
                                        j = j - 1
                                    End If

                                End If
                            Next
                        End If
                    Else
                        'First Time Edit Code 
                        Dim filterRows() As DataRow
                        filterRows = dtfld1.Select("HasDefaultValue=1")
                        If filterRows.Length > 0 Then
                            dtfld1 = filterRows.CopyToDataTable()
                        Else
                            'filterRows = dtfld1.Select("inlineEditing=1 or inlinemapping is not null and inlinemapping <>''", "InLineEditing,DisplayOrder")
                            'Prashant 15-04-2015
                            Dim filterRows1() As DataRow
                            filterRows = DtNew.Select("inlinemapping is not null and inlinemapping <>'' and IsActive=1", "DisplayOrder")
                            filterRows1 = DtNew.Select("InLineEditing=1 and IsActive=1", "DisplayOrder")
                            If filterRows.Length > 0 Then
                                dtfld1 = filterRows.CopyToDataTable()
                                dtfld1.Merge(filterRows1.CopyToDataTable())
                            Else
                                dtfld1 = filterRows1.CopyToDataTable()
                            End If

                            Dim UniqueRows = dtfld1.AsEnumerable().Distinct(DataRowComparer.[Default])

                            dtfld1 = UniqueRows.CopyToDataTable()

                        End If

                        For j As Integer = 0 To dtfld1.Rows.Count - 1
                            '  Dim strVal As String = CType(e.Row.DataItem, DataRowView)(dtfld1.Columns(j).ColumnName).ToString
                            Dim ftype As String = dtfld1.Rows(j).Item("fieldtype").ToString()
                            Dim ilEdit As Integer = dtfld1.Rows(j).Item("inlineEditing").ToString()
                            Dim FldID As String = dtfld1.Rows(j).Item("fieldid").ToString()
                            Dim Formula = Convert.ToString(dtfld1.Rows(j).Item("cal_text"))
                            Dim DisplayName = Convert.ToString(dtfld1.Rows(j).Item("DisplayName"))

                            Dim datatype As String = dtfld1.Rows(j).Item("datatype").ToString() 'Prashant_10_7
                            Dim controlWdth As Integer = 100

                            If ilEdit = 1 Then
                                If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Then
                                    Dim cb As New TextBox
                                    'cb.ID = "fld" & j.ToString() & "_" & row.RowIndex
                                    'cb.Width = 55
                                    cb.ID = "fld" & FldID & row.RowIndex
                                    'Prashant_10_7
                                    If dtfld1.Rows(j).Item("defaultfieldval").ToString().Length > 0 Then
                                        cb.Text = dtfld1.Rows(j).Item("defaultfieldval").ToString()
                                    Else
                                        If datatype.ToUpper() = "NUMERIC" Then
                                            cb.Text = "0"
                                        End If
                                    End If
                                    If Val(dtfld1.Rows(j).Item("isDescription").ToString()) = 1 Then
                                        cb.ToolTip = dtfld1.Rows(j).Item("Description").ToString()
                                    End If

                                    If dtfld1.Rows(j).Item("iseditable") = 1 Then
                                        cb.Enabled = True
                                    Else
                                        cb.Enabled = False
                                    End If
                                    If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                        cb.Enabled = True
                                    Else
                                        cb.Enabled = False
                                    End If

                                    cb.Width = controlWdth

                                    Dim colValue As String

                                    If ViewState("chkadd") = 1 Then
                                        j = j + 1
                                    End If
                                    colValue = row.DataItem(j).ToString()
                                    If ftype.ToUpper() = "LOOKUP" Then
                                        If datatype.ToUpper() = "NUMERIC" Then
                                            colValue = "0"
                                        End If
                                    Else
                                        If Val(colValue) = 0 Then
                                            If ftype.ToUpper() = "TEXT BOX" And datatype.ToUpper() = "NUMERIC" Then
                                                colValue = "0"
                                            ElseIf ftype.ToUpper() = "CALCULATIVE FIELD" And datatype.ToUpper() = "NUMERIC" Then
                                                colValue = "0"
                                            End If

                                        End If
                                    End If

                                    If Not row.Cells(j).Text.Trim = "&nbsp;" And Not row.Cells(j).Text.Trim = "" Then
                                        colValue = row.Cells(j).Text.Trim
                                    End If

                                    cb.Text = colValue
                                    row.Cells(j).Controls.Add(cb)

                                    If datatype.ToUpper.Trim = "DATETIME" Then
                                        Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                        CLNDR.Controls.Clear()
                                        CLNDR.ID = "CLNDR" & dtfld1.Rows(j).Item("FieldID").ToString()
                                        CLNDR.Format = "dd/MM/yy"
                                        CLNDR.TargetControlID = cb.ID
                                        cb.Enabled = True
                                        If row.Cells(j).Text <> "" And row.Cells(j).Text <> "&nbsp;" Then
                                            cb.Text = String.Format("{0:dd/MM/yy}", row.Cells(j).Text)
                                        Else
                                            cb.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                        End If
                                        row.Cells(j).Controls.Add(CLNDR) '
                                        If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                            cb.Enabled = True
                                        Else
                                            cb.Enabled = False
                                        End If
                                    End If

                                    'If Val(colValue) = 0 Then
                                    '    If ViewState("chkadd") = 1 Then  'added by balli in case of checkboxes
                                    '        If ftype.ToUpper() = "TEXT BOX" And dtfld1.Rows(j - 1).Item("datatype").ToString().ToUpper() = "NUMERIC" Then
                                    '            cb.Text = "0"
                                    '        End If
                                    '    Else
                                    '        If ftype.ToUpper() = "TEXT BOX" And dtfld1.Rows(j).Item("datatype").ToString().ToUpper() = "NUMERIC" Then
                                    '            cb.Text = "0"
                                    '        End If
                                    '    End If
                                    'End If

                                    If Not Formula Is Nothing And Formula <> "" Then
                                        'Dim arrFor As String() = Formula.Split(",")
                                        Dim jScript = GenerateJQueryScript(dtfld1, GID, row.RowIndex, Formula, FldID)
                                        If jScript <> "" Then
                                            cb.Attributes.Add("onblur", jScript)
                                        End If
                                    End If


                                ElseIf ftype.ToUpper() = "AUTOCOMPLETE" Then

                                    Dim txtbox As New TextBox
                                    txtbox.ID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                    txtbox.Width = controlWdth - 10
                                    txtbox.CssClass = "txtBox"
                                    txtbox.Attributes.Add("placeholder", "Please begin typing a " & DisplayName)

                                    txtbox.AutoPostBack = True
                                    AddHandler txtbox.TextChanged, AddressOf txtbox_TextChanged
                                    ' adding handler for binding lookup or other dropdown or filter

                                    Dim autofilExtender As New AjaxControlToolkit.AutoCompleteExtender
                                    autofilExtender.ID = "extenderID" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex

                                    autofilExtender.TargetControlID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                    autofilExtender.ServiceMethod = "GetCompletionList" ' THIS SERVICE METHOD IS WRITTEN ON DOCUMENT PAGE 
                                    autofilExtender.DelimiterCharacters = ""
                                    autofilExtender.ContextKey = dtfld1.Rows(j).Item("DROPDOWN").ToString() & "-" & dtfld1.Rows(j).Item("FieldID").ToString() & "-" & dtfld1.Rows(j).Item("DROPDOWNTYPE").ToString() & "-" & dtfld1.Rows(j).Item("AUTOFILTER").ToString() & "-" & dtfld1.Rows(j).Item("InitialFilter").ToString()
                                    'context key contain  : dropdown-fieldid-dropdowntype-autofilter-InitialFilter' adding the fieldid in context key because later on we need id of field in web method 
                                    autofilExtender.Enabled = True
                                    autofilExtender.CompletionSetCount = 5
                                    autofilExtender.OnClientShown = "onDataShown"  ' by sunil
                                    '   autofilExtender.CompletionListElementID = "ACsugestlist"
                                    autofilExtender.MinimumPrefixLength = 1  ' start searching when entered one characters
                                    'autofilExtender.OnClientItemSelected = "ace_itemSelected('" & ds.Rows(i).Item("FieldID").ToString() & "')"
                                    autofilExtender.OnClientItemSelected = "ace_itemSelected"


                                    Dim hdnfld As New HiddenField
                                    hdnfld.ID = "HDN" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                                    row.Cells(j).Controls.Add(hdnfld)
                                    row.Cells(j).Controls.Add(autofilExtender)

                                    '' finding the record data from master and add to its cell

                                    If row.Cells(j).Text.Length > 0 And row.Cells(j).Text.ToString <> "&nbsp;" Then    'row.Cells(j).Text'&nbsp;'
                                        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim con As SqlConnection = New SqlConnection(conStr)
                                        Dim fldmapData As String() = Split(dtfld1.Rows(j).Item("dropdown").ToString(), "-")
                                        Dim od As SqlDataAdapter = New SqlDataAdapter("", con)
                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        od.SelectCommand.CommandText = "select " & fldmapData(2) & " from MMM_MST_master WITH (NOLOCK)  where tid='" & row.Cells(j).Text & " '"  ' fldmapdata "master-documenttype-fieldmapping" 
                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        Dim mdata As String = od.SelectCommand.ExecuteScalar()
                                        txtbox.Text = mdata
                                        hdnfld.Value = row.Cells(j).Text
                                        con.Close()
                                        od.Dispose()
                                    End If
                                    row.Cells(j).Controls.Add(txtbox)
                                    'pnlFields.Controls.Add(txtbox)



                                ElseIf ftype.ToUpper() = "MULTI LOOKUP" Then

                                    Dim txtBox As New TextBox
                                    txtBox.ID = "fld" & FldID & row.RowIndex
                                    txtBox.Width = controlWdth - 10
                                    txtBox.CssClass = "txtBox"
                                    If dtfld1.Rows(j).Item("isEditable").ToString() = "1" Then
                                        txtBox.Enabled = True
                                    Else
                                        txtBox.Enabled = False
                                    End If

                                    If ViewState("chkadd") = 1 Then
                                        j = j + 1
                                    End If
                                    txtBox.Text = row.DataItem(j).ToString()

                                    row.Cells(j).Controls.Add(txtBox)
                                ElseIf ftype.ToUpper() = "MULTI LOOKUPDDL" Then
                                    Dim ddl As New DropDownList
                                    ddl.ID = "fld" & FldID & "_" & row.RowIndex
                                    ddl.CssClass = "txtBox"
                                    ddl.Width = 150

                                    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                    Dim con As SqlConnection = New SqlConnection(conStr)
                                    Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                    Dim od As SqlDataAdapter = New SqlDataAdapter("", con)
                                    Dim dt As New DataTable
                                    Dim dtval As New DataTable
                                    Dim fieldid As String()
                                    Dim ddlval As String()
                                    If (ddlText.ToString() <> String.Empty) Then
                                        fieldid = ddlText.ToString().Split(",")
                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        od.SelectCommand.CommandText = "select ddlMultilookupval from mmm_mst_fields WITH (NOLOCK)  where fieldid = " & fieldid(0).ToString() & ""
                                        od.Fill(dtval)
                                        If (dtval.Rows.Count > 0) Then
                                            ddlval = dtval.Rows(0)("ddlMultilookupval").ToString().Split(",")
                                            For q As Integer = 0 To ddlval.Length - 1
                                                If (ddlval(q).ToString().Contains("-" & dtfld1.Rows(j).Item("FieldID").ToString())) Then
                                                    Dim temp() As String = ddlval(q).ToString().Split("-")
                                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                    od.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where WITH (NOLOCK)  DOCUMENTTYPE='" & temp(0).ToString() & "' and eid=" & HttpContext.Current.Session("EID") & " and fieldmapping in('" & temp(1).ToString() & "')"
                                                    Dim checkval As New DataTable
                                                    od.Fill(checkval)
                                                    Dim ddlText1 As String = checkval.Rows(0).Item("dropdown").ToString()
                                                    Dim dropdowntype As String = checkval.Rows(0).Item("dropdowntype").ToString()
                                                    Dim arr() As String
                                                    If UCase(dropdowntype) = "MASTER VALUED" Then
                                                        Dim ob As New DynamicForm
                                                        arr = ddlText1.Split("-")
                                                        Dim TID As String = "TID"
                                                        Dim TABLENAME As String = ""
                                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                                            TABLENAME = "MMM_MST_MASTER"
                                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                            TABLENAME = "MMM_MST_DOC"
                                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                            If arr(1).ToString.ToUpper = "USER" Then
                                                                TABLENAME = "MMM_MST_USER"
                                                                TID = "UID"
                                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                                TABLENAME = "MMM_MST_LOCATION"
                                                                TID = "LOCID"
                                                            End If
                                                        End If
                                                        Dim lookUpqry As String = ""
                                                        Dim str As String = ""
                                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                        If arr(0).ToUpper() = "CHILD" Then
                                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK)  WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        Else
                                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) "
                                                            Else
                                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                            End If
                                                        End If

                                                        Dim xwhr As String = ""
                                                        Dim tids As String = ""
                                                        'Dim tidarr() As String

                                                        ''FILTER THE DATA ACCORDING TO USER 
                                                        tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())

                                                        If tids.Length >= 2 Then
                                                            'tidarr = tids.Split("-")
                                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                                        ElseIf tids = "0" Then
                                                            pnlFields.Visible = False
                                                            btnActEdit.Visible = False
                                                            updMain.Update()
                                                            xwhr = ""
                                                        End If
                                                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                        Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
                                                        If AutoFilter.Length > 0 Then
                                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                            If arr(0).ToUpper() = "CHILD" Then
                                                                If AutoFilter.ToUpper = "DOCID" Then
                                                                    str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                                                Else
                                                                    str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                                                End If
                                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                            Else
                                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & Session("EID") & " "
                                                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                            End If
                                                        End If


                                                        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                                        Dim dss As New DataSet
                                                        If str.Length > 0 Then
                                                            oda.SelectCommand.CommandText = str
                                                            oda.Fill(dss, "FV")
                                                            Dim isAddJquery As Integer = 0
                                                            ddl.Items.Add("Select")
                                                            ddl.Items(0).Value = "0"
                                                            For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                                ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
                                                                Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
                                                                ddl.Items(J1 + 1).Value = lookddlVal
                                                            Next
                                                            oda.Dispose()
                                                            dss.Dispose()
                                                            'prashant_2_7

                                                            Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()
                                                            Dim multilookup As String = dtfld1.Rows(j).Item("multilookUpVal").ToString()
                                                            Dim ddlmultilookup As String = dtfld1.Rows(j).Item("ddlmultilookUpVal").ToString()

                                                            If lookupvalue.Length > 0 Or multilookup.Length > 0 Or ddlmultilookup.Length > 0 Then
                                                                ddl.AutoPostBack = True
                                                                AddHandler ddl.TextChanged, AddressOf GridDdl_TextChanged
                                                            End If

                                                            If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                                ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                                            End If
                                                            If ViewState("chkadd") = 1 Then
                                                                j = j + 1
                                                            End If

                                                            If ddl.Items.FindByValue(row.Cells(j).Text) IsNot Nothing Then
                                                                'ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                                                ddl.SelectedValue = ddl.Items.FindByValue(row.Cells(j).Text).Value
                                                            End If

                                                            row.Cells(j).Controls.Add(ddl)

                                                            If isAddJquery = 1 Then
                                                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                                            End If
                                                        End If
                                                        con.Dispose()
                                                        oda.Dispose()
                                                        dss.Dispose()
                                                    ElseIf UCase(dropdowntype) = "SESSION VALUED" Then

                                                    End If
                                                End If
                                            Next
                                        End If
                                    End If

                                ElseIf ftype.ToUpper = "LOOKUPDDL" Then

                                    datatype = dtfld1.Rows(j).Item("datatype").ToString().ToUpper()
                                    Dim fieldtypee As String = dtfld1.Rows(j).Item("FieldType").ToString().ToUpper()
                                    Dim ddl As New DropDownList
                                    ddl.ID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & "_" & row.RowIndex
                                    ddl.Width = controlWdth - 10
                                    ddl.CssClass = "txtBox"
                                    Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                    Dim dropdowntype As String = dtfld1.Rows(j).Item("dropdowntype").ToString()
                                    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                    Dim con As SqlConnection = New SqlConnection(conStr)
                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                    Dim od As SqlDataAdapter = New SqlDataAdapter("select dropdown,DDllookupvalue from MMM_MST_FIELDS WITH (NOLOCK)  where FieldID='" & ddlText & "'", con)
                                    ' Dim dsMonth As New DataSet
                                    Dim dt As New DataTable
                                    od.Fill(dt)
                                    Dim arr() As String
                                    Dim darr() As String
                                    Dim type As String = dt.Rows(0).Item("dropdown").ToString()
                                    arr = type.Split("-")
                                    Dim documenttype As String = arr(1).ToString()
                                    Dim field As String = dt.Rows(0).Item("DDllookupvalue").ToString()
                                    field = field.Substring(0, field.Length - 1)
                                    darr = field.Split(",")
                                    For k As Integer = 0 To darr.Count - 1
                                        Dim fieldmping As String
                                        Dim str As String = ""
                                        Dim feild As String
                                        Dim s = darr(k).Split("-")
                                        feild = s(0).ToString()
                                        fieldmping = s(1).ToString()

                                        Dim TID As String = "TID"
                                        Dim TABLENAME As String = ""
                                        Dim str1 As String = ""
                                        Dim lookUpqry As String = ""

                                        Dim xwhr As String = ""
                                        Dim tids As String = ""
                                        Dim Rtids As String = ""   ' for prerole data filter


                                        If feild = dtfld1.Rows(j).Item("FieldID").ToString() Then
                                            'If arr(0) = "SESSION" And Not (fieldmping.Contains("fld")) Then
                                            '    If arr(1).ToString.ToUpper = "USER" Then
                                            '        TABLENAME = "MMM_MST_USER"
                                            '        TID = "UID"
                                            '    End If
                                            '    ' str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            '    str1 = "select " & fieldmping.ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            'Else

                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            od.SelectCommand.CommandText = "select dropdown from MMM_MST_FIELDS WITH (NOLOCK)  where EID=" & HttpContext.Current.Session("EID") & " and documenttype='" & documenttype & "' and FieldMapping in('" & fieldmping & "')"
                                            Dim dt1 As New DataTable
                                            od.Fill(dt1)
                                            Dim dropdown As String = dt1.Rows(0).Item("dropdown").ToString()
                                            arr = dropdown.Split("-")

                                            If UCase(arr(0).ToString()) = "MASTER" Then
                                                TABLENAME = "MMM_MST_MASTER"
                                            ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                TABLENAME = "MMM_MST_DOC"
                                            ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                TABLENAME = "MMM_MST_DOC_ITEM"
                                            ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                If arr(1).ToString.ToUpper = "USER" Then
                                                    TABLENAME = "MMM_MST_USER"
                                                    TID = "UID"
                                                ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                    TABLENAME = "MMM_MST_LOCATION"
                                                    TID = "LOCID"
                                                End If
                                            End If
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            If arr(0).ToUpper() = "CHILD" Then
                                                str1 = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK)  WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            Else
                                                If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                    str1 = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) "
                                                Else
                                                    str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                End If
                                            End If
                                            '  End If

                                            'Dim tidarr() As String

                                            ''FILTER THE DATA ACCORDING TO USER 
                                            Dim ob = New DynamicForm()
                                            tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())
                                            Rtids = ob.UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                                            '' for multiuse of document by sp on 08_apr_15
                                            Dim Sdtype As String = arr(1).ToString
                                            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                            da.SelectCommand.CommandType = CommandType.Text
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            da.SelectCommand.CommandText = "select isnull(Allowmultiuse,0) from mmm_mst_forms  WITH (NOLOCK) where eid='" & HttpContext.Current.Session("EID").ToString & "' AND FORMNAME='" & Sdtype & "'"
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If
                                            Dim isMultiUse As Integer = Convert.ToInt32(da.SelectCommand.ExecuteScalar())

                                            Dim CurrDoctype As String = dtfld1.Rows(j).Item("documenttype").ToString()
                                            Dim CurrFieldMapping As String = dtfld1.Rows(j).Item("fieldmapping").ToString()

                                            Dim qry As String = ""
                                            Dim MTids As String = ""
                                            If UCase(arr(0).ToString()) <> "CHILD" And UCase(arr(0).ToString) <> "STATIC" Then
                                                da.SelectCommand.CommandType = CommandType.Text
                                                da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR," & CurrFieldMapping & ")  FROM " & TABLENAME & "  WITH (NOLOCK) where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & CurrDoctype & "'" & " FOR XML PATH('')),2,1000) AS CSV"
                                                MTids = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                            End If
                                            ''ends  for multiuse of document by sp on 08_apr_15


                                            If tids.Length >= 2 Then
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                            ElseIf tids = "0" Then
                                                pnlFields.Visible = False
                                                btnActEdit.Visible = False
                                                updMain.Update()
                                                xwhr = ""
                                            End If
                                            '' new by sunil for pre role data filter 22-feb
                                            If Rtids <> "" Then
                                                If xwhr.ToString = "" Then
                                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                                Else
                                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                                End If
                                            End If

                                            '' new by sunil for multiuse of docs
                                            If MTids.Length > 2 And isMultiUse = 1 Then
                                                If Right(MTids, 1) = "," Then
                                                    MTids = Left(MTids, Len(MTids) - 1)
                                                End If
                                                xwhr = xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") "
                                            End If
                                            '' new by sunil for multiuse of docs

                                            str1 = str1 & "  AND M.isauth>0 " & xwhr & " order by " & arr(2).ToString()
                                            'Dim documenttype2 As String = arr1(1).ToString()
                                            'Dim fieldmping2 As String = arr1(2).ToString()
                                            'pnlFields.Controls.Add(ddl)
                                            Dim dt2 As New DataTable
                                            'oda.SelectCommand.CommandText = "select " & fieldmping2 & " from " & TABLENAME & " where EID=" & HttpContext.Current.Session("EID") & " and documenttype = '" & documenttype2 & "'"

                                            If str1.Length > 0 Then
                                                pnlFields.Controls.Add(ddl)
                                                od.SelectCommand.CommandText = str1
                                                od.Fill(dt2)
                                                Dim isAddJquery As Integer = 0
                                                ddl.Items.Add("Select")
                                                ddl.Items(0).Value = "0"
                                                For JK As Integer = 0 To dt2.Rows.Count - 1
                                                    ddl.Items.Add(dt2.Rows(JK).Item(0).ToString())
                                                    Dim lookddlVal As String = dt2.Rows(JK).Item(1).ToString()
                                                    ddl.Items(JK + 1).Value = lookddlVal
                                                Next
                                                dt2.Dispose()
                                            End If
                                            If dtfld1.Rows(j).Item("isEditable").ToString() = "1" Then
                                                ddl.Enabled = True
                                            Else
                                                ddl.Enabled = False
                                            End If
                                        End If
                                    Next

                                    If Not IsNothing(ddl.Items.FindByValue(row.Cells(j).Text)) Then
                                        ddl.Items.FindByValue(row.Cells(j).Text).Selected = True
                                    End If

                                    row.Cells(j).Controls.Add(ddl)

                                ElseIf ftype.ToUpper() = "DROP DOWN" Then
                                    Dim ddl As New DropDownList
                                    ddl.ID = "fld" & FldID & "_" & row.RowIndex
                                    ddl.CssClass = "txtBox"
                                    If dtfld1.Rows(j).Item("isEditable") = 1 Then
                                        ddl.Enabled = True
                                    Else
                                        ddl.Enabled = False
                                    End If
                                    If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                        ddl.Enabled = True
                                    Else
                                        ddl.Enabled = False
                                    End If

                                    ddl.Width = 70
                                    Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                    Dim dropdowntype As String = dtfld1.Rows(j).Item("dropdowntype").ToString()
                                    Dim arr() As String
                                    'Dim arrMid() As String
                                    If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                        Dim cb As New DropDownList
                                        cb.ID = "fld" & FldID & "_" & row.RowIndex
                                        Dim ARR1() As String = dtfld1.Rows(j).Item("dropdown").ToString().Split(",")
                                        cb.Items.Insert(0, "Select")
                                        cb.Items(0).Value = 0
                                        For K As Integer = 0 To ARR1.Length - 1
                                            cb.Items.Add(ARR1(K).ToString)
                                        Next


                                        'Prashant_30_7
                                        If dtfld1.Rows(j).Item("iseditable") = 1 Then
                                            ddl.Enabled = True
                                        Else
                                            ddl.Enabled = False
                                        End If
                                        If ViewState("chkadd") = 1 Then
                                            j = j + 1
                                        End If
                                        If cb.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                            cb.Items.FindByText(row.Cells(j).Text).Selected = True
                                        End If


                                        row.Cells(j).Controls.Add(cb)


                                    ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                        '' code for getting master valued 
                                        Dim ob As New DynamicForm
                                        arr = ddlText.Split("-")
                                        Dim TID As String = "TID"
                                        Dim TABLENAME As String = ""
                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                            If arr(1).ToString.ToUpper = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                TID = "LOCID"
                                            End If
                                        End If
                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        Dim lookUpqry As String = ""
                                        Dim str As String = ""
                                        If arr(0).ToUpper() = "CHILD" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M  WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        Else
                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  "
                                            Else
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            End If
                                        End If

                                        Dim xwhr As String = ""
                                        Dim tids As String = ""
                                        'Dim tidarr() As String

                                        ''FILTER THE DATA ACCORDING TO USER 
                                        tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())

                                        If tids.Length >= 2 Then
                                            'tidarr = tids.Split("-")
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                        ElseIf tids = "0" Then
                                            pnlFields.Visible = False
                                            btnActEdit.Visible = False
                                            updMain.Update()
                                            xwhr = ""
                                        End If
                                        str = str & "  AND M.isauth=1 " & xwhr
                                        Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
                                        If AutoFilter.Length > 0 Then
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            If arr(0).ToUpper() = "CHILD" Then
                                                If AutoFilter.ToUpper = "DOCID" Then
                                                    str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                                Else
                                                    str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                                End If
                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                str = str & "  AND M.isauth=1 " & xwhr
                                            Else
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & Session("EID") & " "
                                                str = str & "  AND M.isauth=1 " & xwhr
                                            End If
                                        End If

                                        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim con As SqlConnection = New SqlConnection(conStr)
                                        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                        Dim dss As New DataSet

                                        If str.Length > 0 Then
                                            If dtfld1.Rows(j).Item("fillwithexistingonEdit").ToString().ToUpper = "TRUE" Then
                                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                str = str & " AND TID IN (select distinct " & dtfld1.Rows(j).Item("fieldmapping").ToString() & " from mmm_mst_doc_item  WITH (NOLOCK) where docid=" & Convert.ToInt32(RetDocId(Session("EID"))) & ") order by " & arr(2).ToString()
                                            Else
                                                str = str & "order by " & arr(2).ToString()
                                            End If

                                            oda.SelectCommand.CommandText = str
                                            oda.Fill(dss, "FV")
                                            Dim isAddJquery As Integer = 0
                                            ddl.Items.Add("Select")
                                            ddl.Items(0).Value = "0"
                                            For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
                                                Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
                                                ddl.Items(J1 + 1).Value = lookddlVal
                                            Next
                                            oda.Dispose()
                                            dss.Dispose()


                                            Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()
                                            Dim multilookup As String = dtfld1.Rows(j).Item("multilookUpVal").ToString()
                                            Dim ddlmultilookup As String = dtfld1.Rows(j).Item("ddlmultilookUpVal").ToString()

                                            If lookupvalue.Length > 0 Or multilookup.Length > 0 Or ddlmultilookup.Length > 0 Then
                                                ddl.AutoPostBack = True
                                                AddHandler ddl.TextChanged, AddressOf GridDdl_TextChanged
                                            End If

                                            If ViewState("chkadd") = 1 Then
                                                j = j + 1
                                            End If

                                            If ddl.Items.FindByValue(row.Cells(j).Text) IsNot Nothing Then
                                                ddl.Items.FindByValue(row.Cells(j).Text).Selected = True
                                            End If
                                            If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                            End If


                                            row.Cells(j).Controls.Add(ddl)
                                            If isAddJquery = 1 Then
                                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                            End If
                                        End If
                                        con.Dispose()
                                        oda.Dispose()
                                        dss.Dispose()
                                        '' ends here for getting master valued 
                                    End If
                                ElseIf ftype.ToUpper() = "CHECKBOX LIST" Then
                                    Dim CHKlIST As New CheckBoxList()
                                    Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                                    dynmdiv.ID = "div_" & FldID
                                    Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                                    CHKlIST.ID = "fld" & FldID & "_" & row.RowIndex
                                    If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                        Dim arr = ddlText.Split(",")

                                        If ViewState("chkadd") = 1 Then
                                            j = j + 1
                                        End If

                                        For ii As Integer = 0 To arr.Count - 1
                                            CHKlIST.Items.Add(arr(ii).ToUpper())
                                            If row.Cells(j).Text.Contains(arr(ii).ToUpper()) Then
                                                CHKlIST.Items(ii).Selected = True
                                            End If
                                        Next

                                    ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                        Dim arr = ddlText.Split("-")
                                        Dim TID As String = "TID"
                                        Dim TABLENAME As String = ""
                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                            If arr(1).ToString.ToUpper = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                TID = "LOCID"
                                            End If
                                        End If
                                        Dim lookUpqry As String = ""
                                        Dim str As String = ""
                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        If arr(0).ToUpper() = "CHILD" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK)  WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        Else
                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) "
                                            Else
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            End If
                                        End If
                                        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim con As SqlConnection = New SqlConnection(conStr)
                                        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                        oda = New SqlDataAdapter("", con)
                                        Dim dss As New DataSet
                                        oda.SelectCommand.CommandText = str
                                        oda.Fill(dss, "FV")

                                        If ViewState("chkadd") = 1 Then
                                            j = j + 1
                                        End If

                                        For JJ As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                            CHKlIST.Items.Add(dss.Tables("FV").Rows(JJ).Item(0))
                                            CHKlIST.Items(JJ).Value = dss.Tables("FV").Rows(JJ).Item(1)
                                            If row.Cells(j).Text.Contains(CHKlIST.Items(JJ).Value) Then
                                                CHKlIST.Items(JJ).Selected = True
                                            End If
                                        Next
                                        oda.Dispose()
                                        dss.Dispose()
                                    End If

                                    dynmdiv.Style.Add(HtmlTextWriterStyle.Width, "200px")
                                    dynmdiv.Style.Add(HtmlTextWriterStyle.Height, "100px")
                                    dynmdiv.Style.Add(HtmlTextWriterStyle.Overflow, "Scroll")
                                    dynmdiv.Controls.Add(CHKlIST)
                                    row.Cells(j).Controls.Add(dynmdiv)
                                ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
                                    Dim txtBox As New FileUpload

                                    Dim txtBox1 As New HiddenField

                                    Dim lbl1 As New Label
                                    lbl1.ID = "lblf_" & FldID
                                    lbl1.Text = ""
                                    lbl1.ClientIDMode = ClientIDMode.Static

                                    txtBox1.ID = "hdn_" & FldID
                                    txtBox1.Value = ""
                                    txtBox1.ClientIDMode = ClientIDMode.Static
                                    txtBox.Attributes.Add("onchange", "UtilJs.UploadFile1(this,'" & txtBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")

                                    Dim hdnflag As New HiddenField
                                    hdnflag.ID = "hdnf_" & FldID
                                    hdnflag.Value = "0"

                                    'txtBox.Visible = False
                                    txtBox.ID = "fld_" & FldID & "_" & row.RowIndex
                                    txtBox.CssClass = "txtBox"

                                    txtBox.Width = 180
                                    If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                        txtBox.Enabled = True
                                    Else
                                        txtBox.Enabled = False
                                    End If

                                    If ViewState("chkadd") = 1 Then
                                        j = j + 1
                                    End If
                                    Dim str As String = row.Cells(j).Text
                                    str = After(str, "/")
                                    txtBox1.Value = str 'row.Cells(j).Text
                                    lbl1.Text = str ' row.Cells(j).Text
                                    row.Cells(j).Text = str
                                    row.Cells(j).Controls.Add(txtBox)
                                    row.Cells(j).Controls.Add(txtBox1)
                                    row.Cells(j).Controls.Add(lbl1)
                                    row.Cells(j).Controls.Add(hdnflag)
                                    Dim pstback As New PostBackTrigger
                                    pstback.ControlID = btnActEdit.ID
                                    updMain.Triggers.Add(pstback)


                                End If
                                If ViewState("chkadd") = 1 Then
                                    j = j - 1
                                End If

                            End If
                        Next

                    End If
                End If
            Else

            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Public Function GenerateJQueryScript(ByVal dt As DataTable, ByVal GridID As String, ByVal RowID As Integer, ByVal Formula As String, ByVal FieldID As Integer) As String
        Dim result = ""
        Try
            Dim CurRow As DataRow() = dt.Select("FieldID='" & FieldID & "'")
            Dim DisplayName = Convert.ToString(CurRow(0).Item("DisplayName"))
            Dim strFormula = ""
            'appending , in case when only one formula exists
            Formula = "," & Formula
            Dim FormulaField = ""
            'Formula = Formula.Remove("{", "").Remove("}", "")
            'Spliting all the formula with ,
            Dim arrFor As String() = Formula.Split(",")
            Dim liverFormula = From fldMapping In arrFor Where fldMapping <> "" And Not fldMapping Is Nothing Select fldMapping
            For Each Formula1 In liverFormula
                Dim arr As String() = Formula1.Split("=")
                FormulaField = arr(0).Replace("{", "").Replace("}", "")
                strFormula = arr(1)
                If arr(1).Contains("{" & DisplayName & "}") Then
                    Dim str As String() = arr(1).Split("+", "-", "*", "/", "%")
                    For Each str1 In str
                        str1 = str1.Replace("{", "").Replace("}", "")
                        Dim DR As DataRow() = dt.Select("DisplayName='" & str1 & "'")
                        If strFormula.Contains("{" & DR(0).Item("DisplayName") & "}") Then
                            strFormula = strFormula.Replace("{" & DR(0).Item("DisplayName") & "}", "parseFloat($('#GRD" & GridID & "_fld" & DR(0).Item("FieldID") & RowID & "_" & RowID & "').val())")
                        End If
                    Next
                    Dim DR1 As DataRow() = dt.Select("DisplayName='" & FormulaField & "'")
                    strFormula = "parseFloat($('#GRD" & GridID & "_fld" & DR1(0).Item("FieldID") & RowID & "_" & RowID & "').val(" & strFormula & "))"
                    If result = "" Then
                        result = strFormula
                    Else
                        result = result & ";" & strFormula
                    End If
                End If
            Next
        Catch ex As Exception
            Return ""
        End Try
        Return result
    End Function

    '' prev disabled by sunil on 13_mar_14 
    'Public Sub AMENDMENTHIT()
    '    Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("select FF.*,FM.* from MMM_MST_FIELDS FF inner join MMM_MST_DOC M on FF.DocumentType =M.DocumentType INNER JOIN MMM_MST_FORMS FM ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.showonAmendment=1  order by displayOrder", con)
    '    Dim ds As New DataSet()
    '    oda.Fill(ds, "fields")
    '    Dim ob As New DynamicForm
    '    ob._CallerPage = 1
    '    pnlFields.Controls.Clear()
    '    ob.CreateControlsOnPanel(ds.Tables("fields"), pnlFields, updatePanelEdit, btnActEdit, 0)
    '    Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and lookupvalue is not null")
    '    If ROW1.Length > 0 Then
    '        For i As Integer = 0 To ROW1.Length - 1
    '            Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
    '            DDL.AutoPostBack = True
    '            DDL.EnableViewState = True
    '            AddHandler DDL.TextChanged, AddressOf bindvalue
    '        Next
    '    End If
    '    '' optional para isamend=1 (last) is passed for amendment doc feature 
    '    ob.FillControlsOnPanel(ds.Tables("fields"), pnlFields, "DOCUMENT", pid, 1)
    '    Session("FIELDS") = ds.Tables("fields")
    '    Session("ACTION") = "EDIT"
    '    Session("ActionForm") = ds.Tables("fields").Rows(0).Item("documenttype").ToString()

    '    Dim dtchild As DataTable = ds.Tables("fields")

    '    Dim row() As DataRow = dtchild.Select("FieldType='CHILD ITEM'")
    '    If row.Length > 0 Then
    '        For i As Integer = 0 To row.Length - 1
    '            Dim btn1 As Button = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
    '            AddHandler btn1.Click, AddressOf ShowChildForm
    '            Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
    '            If PRitem.Length > 1 Then
    '                Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
    '                AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
    '            End If
    '            Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
    '            AddHandler GRD.RowDataBound, AddressOf totalrow
    '            AddHandler GRD.RowCommand, AddressOf Delete
    '            AddHandler GRD.RowDeleting, AddressOf Deleting

    '            oda.SelectCommand.Parameters.Clear()
    '            oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '            oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
    '            oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '            oda.SelectCommand.Parameters.AddWithValue("DOCID", pid)
    '            oda.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
    '            oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
    '            ds.Tables.Clear()
    '            oda.Fill(ds, "ITEM")
    '            oda.SelectCommand.CommandType = CommandType.Text
    '            oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName FROM MMM_MST_FIELDS F1 INNER JOIN MMM_MST_FIELDS F2 ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & ""
    '            oda.Fill(ds, "TOTAL")
    '            ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, btn1.ID, updatePanelEdit, ds.Tables("TOTAL"))
    '        Next

    '        If Not Session("CHILD") Is Nothing Then
    '            pnlFields1.Controls.Clear()
    '            ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
    '            Dim ROW2() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
    '            If ROW2.Length > 0 Then
    '                For i As Integer = 0 To ROW2.Length - 1
    '                    Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW2(i).Item("FieldID").ToString()), DropDownList)
    '                    DDL.AutoPostBack = True
    '                    AddHandler DDL.TextChanged, AddressOf bindvalue1
    '                Next
    '            End If

    '            Dim ROW3() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and kc_logic is not null")
    '            If ROW3.Length > 0 Then
    '                For i As Integer = 0 To ROW3.Length - 1
    '                    parentchild(ROW3(i).Item("FIELDID"), CInt(ROW3(i).Item("KC_LOGIC").ToString()))
    '                Next
    '            End If


    '        End If
    '    End If
    '    updatePanelEdit.Update()
    '    ModalEditPopup.Show()
    'End Sub


    Public Sub AMENDMENTHIT()
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select FF.*,FM.* from MMM_MST_FIELDS FF  WITH (NOLOCK) inner join MMM_MST_DOC M  WITH (NOLOCK) on FF.DocumentType =M.DocumentType INNER JOIN MMM_MST_FORMS FM ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.showonAmendment=1  order by displayOrder", con)
        Dim ds As New DataSet()
        oda.Fill(ds, "fields")
        Dim ob As New DynamicForm
        ob._CallerPage = 1
        pnlFields.Controls.Clear()
        Session("AMENDMENT") = "AMENDMENT"
        ob.CreateControlsOnPanel(ds.Tables("fields"), pnlFields, updatePanelEdit, btnActEdit, 0, , "AMENDMENT")
        Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and lookupvalue is not null")
        If ROW1.Length > 0 Then
            For i As Integer = 0 To ROW1.Length - 1
                Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                DDL.AutoPostBack = True
                DDL.EnableViewState = True
                AddHandler DDL.TextChanged, AddressOf bindvalue
            Next
        End If
        '' optional para isamend=1 (last) is passed for amendment doc feature 
        ob.FillControlsOnPanel(ds.Tables("fields"), pnlFields, "DOCUMENT", pid, , 1)
        Session("FIELDS") = ds.Tables("fields")
        Session("ACTION") = "EDIT"
        Session("ActionForm") = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
        '   Session("AMENDMENT") = "AMENDMENT"

        Dim dtchild As DataTable = ds.Tables("fields")

        Dim row() As DataRow = dtchild.Select("FieldType='CHILD ITEM'")
        If row.Length > 0 Then
            For i As Integer = 0 To row.Length - 1
                ' balmiki start here
                'Dim btn1 As Button = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                'AddHandler btn1.Click, AddressOf ShowChildForm
                'Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                'If PRitem.Length > 1 Then
                '    Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
                '    AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
                'End If
                'Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
                'AddHandler GRD.RowDataBound, AddressOf totalrow
                'AddHandler GRD.RowCommand, AddressOf Delete
                'AddHandler GRD.RowDeleting, AddressOf Deleting

                'oda.SelectCommand.Parameters.Clear()
                'oda.SelectCommand.CommandType = CommandType.StoredProcedure
                'oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
                'oda.SelectCommand.CommandType = CommandType.StoredProcedure
                'oda.SelectCommand.Parameters.AddWithValue("DOCID", pid)
                'oda.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
                'oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                'ds.Tables.Clear()
                'oda.Fill(ds, "ITEM")
                'oda.SelectCommand.CommandType = CommandType.Text
                'oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName FROM MMM_MST_FIELDS F1 INNER JOIN MMM_MST_FIELDS F2 ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & ""
                'oda.Fill(ds, "TOTAL")
                'ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, btn1.ID, updatePanelEdit, ds.Tables("TOTAL"))
                '' above was prev running on 05-mar-14


                '' removed frm here by sp 13-jan-14

                'Balmiki end 

                Dim btn1 As Button = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                'btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                'AddHandler btn1.Click, AddressOf ShowChildForm
                Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                If PRitem.Length > 1 Then
                    Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
                    AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
                End If

                Session("FNS") = Session("FNS") & PRitem(0).ToString() & ":" & row(i).Item("Fieldid").ToString() & ":"

                ' Dim array3Ds(,,) As String = New String(,,) {}

                Dim ColHEAD() As String = {}
                Dim DDLTXT() As String = {}
                Dim DDLVAL() As String = {}

                Session("COLHEAD") = ColHEAD
                Session("DDLTXT") = DDLTXT
                Session("DDLVAL") = DDLVAL
                '' by sunil for def value 16-dec-13 - ends


                Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
                ''AddHandler GRD.RowDataBound, AddressOf totalrow  '' moved frm here to below
                AddHandler GRD.RowCommand, AddressOf Delete
                AddHandler GRD.RowDeleting, AddressOf Deleting


                '' by sunil for def value insert for Aggrawal  16-dec-13 - starts
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim strDF As String = "select * from mmm_mst_forms  WITH (NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(HasDefaultValue,0)=1"
                Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
                Dim dtIsdv As New DataTable
                oda.SelectCommand.CommandText = strDF
                oda.Fill(dtIsdv)

                'Prashant_30_7
                Dim dtIsDef As New DataTable
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim str As String = "select * from mmm_mst_forms  WITH (NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(IsDefaultRows,0)>0"
                oda.SelectCommand.CommandText = str
                oda.Fill(dtIsDef)
                'Prashant_30_7


                If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                    AddHandler GRD.RowDataBound, AddressOf gvData_InlineEdit
                Else
                    AddHandler GRD.RowDataBound, AddressOf totalrow
                    btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                    AddHandler btn1.Click, AddressOf ShowChildForm
                End If
                ' oda.Dispose()
                'dtIsdv.Dispose()


                If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                    'INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), ds.Tables("childDocid").Rows(0).Item("tid"))  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
                    INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsdv)
                ElseIf dtIsDef.Rows.Count = 1 Then
                    INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsDef)
                Else
                    oda.SelectCommand.Parameters.Clear()
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.Parameters.AddWithValue("DOCID", pid)
                    oda.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
                    oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                    ds.Tables.Clear()
                    oda.Fill(ds, "ITEM")
                    oda.SelectCommand.CommandType = CommandType.Text
                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                    oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType  FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH (NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D  WITH (NOLOCK) ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & ""
                    oda.Fill(ds, "TOTAL")


                    ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, btn1.ID, updatePanelEdit, ds.Tables("TOTAL"))
                End If


            Next

            If Not Session("CHILD") Is Nothing Then
                pnlFields1.Controls.Clear()
                ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
                Dim ROW2() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                If ROW2.Length > 0 Then
                    For i As Integer = 0 To ROW2.Length - 1
                        Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW2(i).Item("FieldID").ToString()), DropDownList)
                        DDL.AutoPostBack = True
                        AddHandler DDL.TextChanged, AddressOf bindvalue1
                    Next
                End If

                Dim ROW3() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and kc_logic is not null")
                If ROW3.Length > 0 Then
                    For i As Integer = 0 To ROW3.Length - 1
                        parentchild(ROW3(i).Item("FIELDID"), CInt(ROW3(i).Item("KC_LOGIC").ToString()))
                    Next
                End If


            End If
        End If
        updatePanelEdit.Update()
        ModalEditPopup.Show()
    End Sub

    Public Sub Delete(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)
        Dim btnDelete As GridView = TryCast(sender, GridView)
        Dim ID As String = btnDelete.ID
        ID = Right(ID, ID.Length - 3)
        Session("ID") = ID
        ID = "BTN" & ID
        ViewState("ID") = ID
        Dim rw As GridViewRow = DirectCast(DirectCast(e.CommandSource, ImageButton).NamingContainer, GridViewRow)
        Dim Pid As String = btnDelete.DataKeys(rw.RowIndex).Value
        ViewState("Pid") = Pid

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        If e.CommandName = "Remove" Then
            oda.SelectCommand.CommandText = "Delete from MMM_MST_DOC_ITEM where tid=" & Pid & ""
            oda.SelectCommand.ExecuteScalar()
            BINDGRIDAFTERDELETION(ID)
        ElseIf e.CommandName.ToUpper = "EDITCHILD" Then
            Dim ob As New DynamicForm
            ob._CallerPage = 1
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            oda = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FORMNAME=(Select documenttype from mmm_mst_doc_item  WITH (NOLOCK) where tid=" & Pid & ") order by displayOrder", con)
            Dim DS As New DataSet
            oda.Fill(DS, "CHILD")
            ViewState("FN") = DS.Tables("CHILD").Rows(0).Item("DOCUMENTTYPE").ToString
            Session("CHILD") = DS.Tables("CHILD")
            pnlFields1.Controls.Clear()
            ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
            Dim ROW1() As DataRow = DS.Tables("CHILD").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and lookupvalue is not null")
            If ROW1.Length > 0 Then
                For i As Integer = 0 To ROW1.Length - 1
                    Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                    DDL.AutoPostBack = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue1
                Next
            End If
            ob.FillControlsOnPanel(Session("CHILD"), pnlFields1, "CHILDITEM", Pid)
            ChildFormEditing()
            'ChildFormddlRenderingOnCreation(1)
            'ChildFormddlRendering(ROW1, 1)
            Button2.Text = "UPDATE"
            updpnlchild.Update()
            ModalPopupExtender1.Show()
        End If
        oda.Dispose()
        con.Dispose()

    End Sub

    Protected Sub BINDGRIDAFTERDELETION(ByVal ID As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
        'Dim scrname As String = Request.QueryString("SC").ToString()
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim DS As New DataSet
        Dim FLDID As String = Right(ID, ID.Length - 3)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        ODA.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS  WITH (NOLOCK) WHERE FIELDID=" & FLDID & ""

        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim DOCTYPE() As String = ODA.SelectCommand.ExecuteScalar().ToString.Split("-")

        ODA.SelectCommand.Parameters.Clear()
        ODA.SelectCommand.CommandText = "uspGetDetailITEMbydocid"
        ODA.SelectCommand.CommandType = CommandType.StoredProcedure
        ODA.SelectCommand.Parameters.AddWithValue("docID", pid)
        ODA.SelectCommand.Parameters.AddWithValue("FN", DOCTYPE(0))
        ODA.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
        DS.Tables.Clear()
        ODA.Fill(DS, "ITEM")
        Dim dt_item As DataTable = New DataTable()
        dt_item = DS.Tables("ITEM")
        ODA.SelectCommand.CommandType = CommandType.Text
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType  FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH (NOLOCK) ON F1.dropdown =F2.Fieldid inner join mmm_mst_doc D on f1.documenttype=d.documenttype  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL'  AND d.tid=" & pid & ""
        ODA.Fill(DS, "TOTAL")
        Dim OB As New DynamicForm
        OB.BINDITEMGRID(dt_item, pnlFields, ID, updatePanelEdit, DS.Tables("TOTAL"))
        ODA.Dispose()
        DS.Dispose()
        con.Dispose()
    End Sub

    Public Sub Deleting(ByVal Sender As Object, ByVal e As GridViewDeleteEventArgs)
        Dim btnDelete As GridView = TryCast(Sender, GridView)
        btnDelete.DataBind()
    End Sub

    Public Sub ShowChildForm(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Dim btnDetails As Button = TryCast(sender, Button)
        Dim formname As String = btnDetails.Text
        formname = Right(formname, formname.Length - 5)
        ViewState("FN") = formname
        ' Session("FN") = formname
        Session("ID") = Right(btnDetails.ID, btnDetails.ID.Length - 3)
        Dim ob As New DynamicForm
        If ViewState("ID") <> btnDetails.ID Or ViewState("ID") Is Nothing Or Session("CHILD") Is Nothing Then
            ViewState("ID") = btnDetails.ID
            Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim oda As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F WITH (NOLOCK)  on F.FormName = FF.DocumentType and F.EID = FF.EID where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FORMNAME='" & formname & "' order by displayOrder", con)
            Dim DS As New DataSet
            oda.Fill(DS, "CHILD")
            Session("CHILD") = DS.Tables("CHILD")
            pnlFields1.Controls.Clear()
            ob.CreateControlsOnPanel(DS.Tables("CHILD"), pnlFields1, updpnlchild, Button2, 0, Nothing, Nothing)
            Dim ROW1() As DataRow = DS.Tables("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
            If ROW1.Length > 0 Then
                For i As Integer = 0 To ROW1.Length - 1
                    Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                    DDL.AutoPostBack = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue1
                Next
            End If
            oda.Dispose()
            DS.Dispose()
            con.Dispose()
        End If

        Button2.Text = "Save"
        ChildFormddlRenderingOnCreation(1)
        updpnlchild.Update()
        ModalPopupExtender1.Show()
    End Sub

    'Transactional
    Protected Sub ValidateChildData(ByVal actionType As String)
        'Check All Validations
        ' now validation of created controls
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim screenname As String = ViewState("FN")
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim da As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & screenname & "' order by displayOrder", con)
        Dim ds As New DataSet
        da.Fill(ds, "fields")
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim ob As New DynamicForm
        Dim FinalQry As String
        If actionType = "ADD" Then
            If ds.Tables("fields").Rows(0).Item("layouttype") = "CUSTOM" Then
                FinalQry = ob.ValidateAndGenrateQueryForCustom("ADD", "INSERT INTO MMM_MST_DOC_ITEM(DOCID,documenttype,", "VALUES (" & Session.SessionID & ",'" & screenname & "',", ds.Tables("fields"), pnlFields1)
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Done Successfully!!');", True)
            Else
                FinalQry = ob.ValidateAndGenrateQueryForControls("ADD", "INSERT INTO MMM_MST_DOC_ITEM(DOCID,documenttype,", "VALUES (" & pid & ",'" & screenname & "',", ds.Tables("fields"), pnlFields1, 0)
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Done Successfully!!');", True)
            End If
        Else
            'pass query of updation and also type
            FinalQry = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC_ITEM SET  ", "", ds.Tables("fields"), pnlFields1, ViewState("Pid"))
        End If
        If Trim(Left(FinalQry, 6)).ToUpper() = "PLEASE" Then
            Label3.Text = FinalQry
            updpnlchild.Update()
            da.Dispose()
            con.Dispose()
        Else
            If actionType <> "ADD" Then
                FinalQry = FinalQry & " WHERE tID=" & ViewState("Pid")
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                da.SelectCommand.CommandText = "select history from MMM_MST_FORMS  WITH (NOLOCK) where EID= " & Session("EID") & " and formname='" & screenname & "' "
                da.Fill(ds, "his")
                'if formname consist history 1 then save the data in MMM_MST_HISTORY
                If ds.Tables("his").Rows(0).Item("history") = 1 Then
                    FinalQry = FinalQry & " " & ob.ValidateAndGenrateQueryForControls("ADD", ";INSERT INTO MMM_MST_HISTORY(DOCID,EID,tablename,UID,Uaction,adate,documenttype,", "VALUES (" & pid & "," & Session("EID") & ",'MMM_MST_DOC_ITEM'," & Session("UID") & ",'UPDATE',getdate(),'" & screenname & "',", ds.Tables("fields"), pnlFields1, 0)
                End If
            End If
            'save the data
            da.SelectCommand.CommandText = FinalQry
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteNonQuery()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Done Successfully!!');", True)
            Session("CHILD") = Nothing
            BINDGRID()
            ModalPopupExtender1.Hide()
        End If
        da.Dispose()
        con.Dispose()
    End Sub


    Protected Sub BINDGRID()

        Try

            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
            'Dim scrname As String = Request.QueryString("SC").ToString()
            Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
            Dim DS As New DataSet
            ODA.SelectCommand.Parameters.Clear()
            ODA.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
            ODA.SelectCommand.CommandType = CommandType.StoredProcedure
            ODA.SelectCommand.Parameters.AddWithValue("DOCID", pid)
            ODA.SelectCommand.Parameters.AddWithValue("FN", ViewState("FN"))
            ODA.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
            DS.Tables.Clear()
            ODA.Fill(DS, "ITEM")
            Dim dt_item As DataTable = New DataTable()
            dt_item = DS.Tables("ITEM")
            'Added By Mayank For Child Specific Text Value
            ODA.SelectCommand.CommandType = CommandType.StoredProcedure
            ODA.SelectCommand.Parameters.Clear()
            ODA.SelectCommand.CommandText = "uspGetValuesFromChildonEdit"
            ODA.SelectCommand.Parameters.AddWithValue("DOcid", pid)
            ODA.SelectCommand.Parameters.AddWithValue("FN", ViewState("FN"))
            ODA.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
            Dim dtITemVal As New DataTable()
            ODA.Fill(dtITemVal)
            Session(ViewState("FN") & "VAL") = dtITemVal
            Session("ChildDoctype") = ViewState("FN")

            ODA.SelectCommand.CommandType = CommandType.Text
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType,F1.Child_Specific_Text FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2 WITH (NOLOCK)  ON F1.dropdown =F2.Fieldid inner join mmm_mst_doc D  WITH (NOLOCK) on f1.documenttype=d.documenttype  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & ViewState("FN") & "' AND d.tid=" & pid & " union all select fieldId,displayname,fieldtype,Child_specific_text from MMM_MST_FIELDS  WITH (NOLOCK) where eid=" & Session("EID") & " and DocumentType in (select documenttype from MMM_MST_DOC  WITH (NOLOCK) where eid=" & Session("EID") & " and tid=" & pid & ") and Child_Specific_text is not null"
            'ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName FROM MMM_MST_FIELDS F1 INNER JOIN MMM_MST_FIELDS F2 ON F1.dropdown =F2.Fieldid  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & ViewState("FN") & "' AND F1.DOCUMENTTYPE='" & scrname & "'"
            ODA.Fill(DS, "TOTAL")
            ODA.Dispose()
            DS.Dispose()
            Dim OB As New DynamicForm
            OB.BINDITEMGRID(dt_item, pnlFields, ViewState("ID"), updatePanelEdit, DS.Tables("TOTAL"), Eid:=Session("EID"), ScreenName:=ViewState("Doctype"), FormName:=ViewState("FN"))

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Protected Sub EditItem(ByVal sender As Object, ByVal e As System.EventArgs)
        If Button2.Text = "Save" Then
            ValidateChildData("ADD")
        Else
            ValidateChildData("EDIT")
        End If

    End Sub

    Public Sub INSERTCHILDITEM(ByVal SENDER As Object, ByVal E As System.EventArgs)
        Dim btnDetails As Button = TryCast(SENDER, Button)
        Dim formname As String = btnDetails.Text
        formname = Right(formname, formname.Length - 8).Trim()
        ViewState("FN") = formname
        Dim ID() As String = btnDetails.ID.Split("-")
        ID(0) = Right(ID(0), ID(0).Length - 3).Trim()
        Dim scrname As String = Request.QueryString("SC").ToString()
        Dim ob As New DynamicForm
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim DS As New DataSet
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim ddl As DropDownList = TryCast(pnlFields.FindControl("fld" & ID(0).ToString()), DropDownList)
        Dim docid() As String = ddl.SelectedValue.ToString.Split("|")
        oda.SelectCommand.Parameters.Clear()
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.CommandText = "USP_COPY_CHILDITEM"
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("SID", Session.SessionID)
        oda.SelectCommand.Parameters.AddWithValue("FN", formname)
        oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
        oda.SelectCommand.Parameters.AddWithValue("DOCID", docid(0).ToString())
        oda.SelectCommand.ExecuteScalar()


        oda.SelectCommand.Parameters.Clear()
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.CommandText = "uspGetDetailITEM"
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("SID", Session.SessionID)
        oda.SelectCommand.Parameters.AddWithValue("FN", formname)
        oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
        DS.Tables.Clear()
        oda.Fill(DS, "ITEM")
        oda.SelectCommand.CommandType = CommandType.Text
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType  FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH (NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & formname & "' AND F1.DOCUMENTTYPE='" & scrname & "'"
        oda.Fill(DS, "TOTAL")
        ob.BINDITEMGRID(DS.Tables("ITEM"), pnlFields, "BTN" & ID(1).ToString(), updatePanelEdit, DS.Tables("TOTAL"))

        oda.Dispose()
        DS.Dispose()
        con.Dispose()
    End Sub



    Public Sub parentchild(ByVal cid As Integer, ByVal Pid As Integer)
        Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & Pid), DropDownList)
        If DDL Is Nothing Then
            Exit Sub
        End If
        Dim ddl1 As DropDownList = TryCast(pnlFields1.FindControl("fld" & cid), DropDownList)
        ddl1.Items.Clear()
        ddl1.Items.Add(DDL.SelectedItem.Text)
        ddl1.Items(0).Value = DDL.SelectedValue
        ddl1.Items.Insert(0, "SELECT")
        updpnlchild.Update()
    End Sub

    'Public Sub EDITHIT()
    '    ViewState("IsEdit") = 1
    '    Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("select FF.*,FM.* from MMM_MST_FIELDS FF inner join MMM_MST_DOC M on FF.DocumentType =M.DocumentType INNER JOIN MMM_MST_FORMS FM ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.isactive=1  order by displayOrder", con)
    '    Dim ds As New DataSet()
    '    oda.Fill(ds, "fields")
    '    Dim ob As New DynamicForm
    '    ob._CallerPage = 1
    '    pnlFields.Controls.Clear()
    '    ob.CreateControlsOnPanel(ds.Tables("fields"), pnlFields, updatePanelEdit, btnActEdit, 0, , , True)
    '    Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and lookupvalue is not null")
    '    If ROW1.Length > 0 Then
    '        For i As Integer = 0 To ROW1.Length - 1
    '            Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
    '            DDL.AutoPostBack = True
    '            DDL.EnableViewState = True
    '            AddHandler DDL.TextChanged, AddressOf bindvalue
    '        Next
    '    End If


    '    '' for inline grid ddl filter from main ddl by sunil 31_july_14
    '    Dim ROWC() As DataRow = ds.Tables("fields").Select("fieldtype='Child Item' and len(isnull(KC_LOGIC,''))>2")
    '    If ROWC.Length > 0 Then
    '        For i As Integer = 0 To ROWC.Length - 1
    '            Dim st() As String = ROWC(i).Item("kc_logic").ToString().Split("-")

    '            Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & st(0).ToString), DropDownList)
    '            Dim id As String = Right(DDL.ID, DDL.ID.Length - 3)
    '            DDL.AutoPostBack = True
    '            AddHandler DDL.TextChanged, AddressOf bindvalue_ILFilter
    '        Next
    '    End If
    '    '' for inline grid ddl filter from main ddl by sunil 31_july_14


    '    ob.FillControlsOnPanel(ds.Tables("fields"), pnlFields, "DOCUMENT", pid, , , True)
    '    Session("FIELDS") = ds.Tables("fields")
    '    Session("ACTION") = "EDIT"

    '    Dim dtchild As DataTable = ds.Tables("fields")

    '    Dim row() As DataRow = dtchild.Select("FieldType='CHILD ITEM'")
    '    If Session("ALLCHILD") Is Nothing Then
    '        Session("ALLCHILD") = row
    '    End If

    '    If row.Length > 0 Then
    '        Dim btn1 As New Button
    '        For i As Integer = 0 To row.Length - 1
    '            '' removed frm here by sp 13-jan-14
    '            'btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
    '            'AddHandler btn1.Click, AddressOf ShowChildForm
    '            Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
    '            If PRitem.Length > 1 Then
    '                Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
    '                AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
    '            End If

    '            Session("FNS") = Session("FNS") & PRitem(0).ToString() & ":" & row(i).Item("Fieldid").ToString() & ":"

    '            ' Dim array3Ds(,,) As String = New String(,,) {}

    '            Dim ColHEAD() As String = {}
    '            Dim DDLTXT() As String = {}
    '            Dim DDLVAL() As String = {}

    '            Session("COLHEAD") = ColHEAD
    '            Session("DDLTXT") = DDLTXT
    '            Session("DDLVAL") = DDLVAL
    '            '' by sunil for def value 16-dec-13 - ends


    '            Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
    '            ''AddHandler GRD.RowDataBound, AddressOf totalrow  '' moved frm here to below
    '            AddHandler GRD.RowCommand, AddressOf Delete
    '            AddHandler GRD.RowDeleting, AddressOf Deleting


    '            '' by sunil for def value insert for Aggrawal  16-dec-13 - starts
    '            Dim strDF As String = "select * from mmm_mst_forms where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and  (isnull(IsDefaultRows,0)>0 or isnull(isinlineediting,0)=1)"
    '            Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
    '            Dim dtIsdv As New DataTable
    '            oda.SelectCommand.CommandText = strDF
    '            oda.Fill(dtIsdv)

    '            Dim dtIsDef As New DataTable
    '            Dim str As String = "select * from mmm_mst_forms where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(IsDefaultRows,0)>0"
    '            oda.SelectCommand.CommandText = str
    '            oda.Fill(dtIsDef)

    '            If dtIsdv.Rows.Count = 1 OrElse dtIsDef.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
    '                ' Dim btnIDV As New Button
    '                ' btnIDV = pnlFields.FindControl("BTN_" & row(i).Item("FieldID").ToString())  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
    '                AddHandler GRD.RowDataBound, AddressOf gvData_InlineEdit
    '            Else
    '                AddHandler GRD.RowDataBound, AddressOf totalrow
    '                btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
    '                If IsNothing(btn1) = False Then
    '                    AddHandler btn1.Click, AddressOf ShowChildForm
    '                End If

    '            End If
    '            ' oda.Dispose()
    '            'dtIsdv.Dispose()
    '            Dim str1 = "BTNFLTER" & row(i).Item("FIELDID").ToString() & "_" & row(i).Item("DROPDOWN").ToString().Replace(" ", "_")
    '            btn1 = pnlFields.FindControl(str1)
    '            If Not btn1 Is Nothing Then
    '                'AddHandler btn1.Click, AddressOf Filter ' 
    '                btn1.Visible = False
    '            End If

    '            Dim BTNUpload As New Button
    '            BTNUpload = pnlFields.FindControl("BTNUpload" & row(i).Item("FIELDID").ToString())
    '            If Not BTNUpload Is Nothing Then
    '                BTNUpload.Visible = False
    '            End If


    '            If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
    '                'INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), ds.Tables("childDocid").Rows(0).Item("tid"))  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
    '                If dtIsdv.Rows(0).Item("isinlineediting") = 1 Then
    '                    ShowDefaultValuesinGrid()
    '                Else
    '                    INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsdv)
    '                End If

    '            ElseIf dtIsDef.Rows.Count = 1 Then
    '                INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsDef)
    '            Else
    '                oda.SelectCommand.Parameters.Clear()
    '                oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
    '                oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                oda.SelectCommand.Parameters.AddWithValue("DOCID", pid)
    '                oda.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
    '                oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
    '                ds.Tables.Clear()
    '                oda.Fill(ds, "ITEM")
    '                oda.SelectCommand.CommandType = CommandType.Text
    '                oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType  FROM MMM_MST_FIELDS F1 INNER JOIN MMM_MST_FIELDS F2 ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & ""
    '                oda.Fill(ds, "TOTAL")
    '                'ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, btn1.ID, updatePanelEdit, ds.Tables("TOTAL"))
    '                ob.BINDITEMGRID1(ds.Tables("ITEM"), pnlFields, row(i).Item("FieldID"), updatePanelEdit, ds.Tables("TOTAL"))
    '            End If




    '        Next

    '        If Not Session("CHILD") Is Nothing Then
    '            pnlFields1.Controls.Clear()
    '            ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
    '            Dim ROW2() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
    '            If ROW2.Length > 0 Then
    '                For i As Integer = 0 To ROW2.Length - 1
    '                    Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW2(i).Item("FieldID").ToString()), DropDownList)
    '                    DDL.AutoPostBack = True
    '                    AddHandler DDL.TextChanged, AddressOf bindvalue1
    '                Next
    '            End If

    '            Dim ROW3() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and kc_logic is not null And kc_logic <>''")
    '            If ROW3.Length > 0 Then
    '                For i As Integer = 0 To ROW3.Length - 1
    '                    parentchild(ROW3(i).Item("FIELDID"), CInt(ROW3(i).Item("KC_LOGIC").ToString()))
    '                Next
    '            End If



    '        End If


    '    End If

    '    updatePanelEdit.Update()
    '    ModalEditPopup.Show()
    'End Sub

    Public Sub EDITHIT()
        ViewState("IsEdit") = 1
        Session("AddedRow") = Nothing
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Session("pid") = pid
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select FF.*,FM.* from MMM_MST_FIELDS FF WITH (NOLOCK)  inner join MMM_MST_DOC M  WITH (NOLOCK) on FF.DocumentType =M.DocumentType INNER JOIN MMM_MST_FORMS FM  WITH (NOLOCK) ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.isactive=1  order by displayOrder", con)
        Dim ds As New DataSet()
        oda.Fill(ds, "fields")
        Dim ob As New DynamicForm
        ob._CallerPage = 1
        pnlFields.Controls.Clear()
        Session("EDITonEDIT") = "EDITonEDIT"
        ob.CreateControlsOnPanel(ds.Tables("fields"), pnlFields, updatePanelEdit, btnActEdit, 0, , , True)
        Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and (lookupvalue is not null or ddllookupvalue is not null or multilookUpVal is not null)")
        If ROW1.Length > 0 Then
            For i As Integer = 0 To ROW1.Length - 1
                Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                If Not IsNothing(DDL) Then
                    DDL.AutoPostBack = True
                    DDL.EnableViewState = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue
                End If
            Next
        End If


        '' for inline grid ddl filter from main ddl by sunil 31_july_14
        Dim ROWC() As DataRow = ds.Tables("fields").Select("fieldtype='Child Item' and len(isnull(KC_LOGIC,''))>2")
        If ROWC.Length > 0 Then
            For i As Integer = 0 To ROWC.Length - 1
                Dim st() As String = ROWC(i).Item("kc_logic").ToString().Split("-")

                Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & st(0).ToString), DropDownList)
                Dim id As String = Right(DDL.ID, DDL.ID.Length - 3)
                DDL.AutoPostBack = True
                AddHandler DDL.TextChanged, AddressOf bindvalue_ILFilter
            Next
        End If
        Dim ROW10() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN'   and (dropdowntype<>'MASTER VALUED' OR DROPDOWNTYPE<>'SESSION VALUED') and (lookupvalue is not null or ddllookupvalue is not null or multilookUpVal is not null or ltlookupval is not null or HasRule='1')")
        If ROW10.Length > 0 Then
            For i As Integer = 0 To ROW10.Length - 1
                Dim check As Integer = 0
                Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW10(i).Item("FieldID").ToString()), DropDownList)
                Dim id As String = Right(DDL.ID, DDL.ID.Length - 3)
                DDL.AutoPostBack = True
                'Change By V 24 Dec
                If ds.Tables("fields").Rows.Count > 0 Then
                    For j As Integer = 0 To ds.Tables("fields").Rows.Count - 1
                        If ds.Tables("fields").Rows(j).Item("KC_LOGIC").ToString.Contains(id) = True Then
                            DDL.AutoPostBack = True
                            AddHandler DDL.TextChanged, AddressOf bindvalue2
                            check = check + 1
                        End If
                    Next
                End If
                If check = 0 Then
                    AddHandler DDL.TextChanged, AddressOf bindvalue
                    Dim screenname = ds.Tables("fields").Rows(0)("documenttype")
                    ExecuteControllevelRule(CInt(id), pnlFields, Nothing, screenname, ds.Tables("fields"), Nothing, lblstatus, False)
                End If
            Next
        End If
        '' for inline grid ddl filter from main ddl by sunil 31_july_14

        Session("FIELDS") = ds.Tables("fields")
        Session("ACTION") = "EDIT"
        'session added on 18 sep 2014
        Dim dtchild As DataTable = ds.Tables("fields")

        ob.FillControlsOnPanel(ds.Tables("fields"), pnlFields, "DOCUMENT", pid, , , True)
        Dim row() As DataRow = dtchild.Select("FieldType='CHILD ITEM'")
        If Session("ALLCHILD") Is Nothing Then
            Session("ALLCHILD") = row
        End If

        '  Session("EDITonEDIT") = Nothing


        If row.Length > 0 Then
            Dim btn1 As New Button
            For i As Integer = 0 To row.Length - 1
                '' removed frm here by sp 13-jan-14
                'btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                'AddHandler btn1.Click, AddressOf ShowChildForm
                Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                If PRitem.Length > 1 Then
                    Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
                    AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
                End If

                Session("FNS") = Session("FNS") & PRitem(0).ToString() & ":" & row(i).Item("Fieldid").ToString() & ":"

                ' Dim array3Ds(,,) As String = New String(,,) {}

                Session("ITEM") = Nothing  ' ADDED FOR SESSION WHICH IS CREATED AT TIME OF FILTER 24 DEC 2014 
                Dim ColHEAD() As String = {}
                Dim DDLTXT() As String = {}
                Dim DDLVAL() As String = {}

                Session("COLHEAD") = ColHEAD
                Session("DDLTXT") = DDLTXT
                Session("DDLVAL") = DDLVAL
                '' by sunil for def value 16-dec-13 - ends


                Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
                ''AddHandler GRD.RowDataBound, AddressOf totalrow  '' moved frm here to below
                AddHandler GRD.RowCommand, AddressOf Delete
                AddHandler GRD.RowDeleting, AddressOf Deleting


                '' by sunil for def value insert for Aggrawal  16-dec-13 - starts
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim strDF As String = "select * from mmm_mst_forms  WITH (NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and  (isnull(IsDefaultRows,0)>0 or isnull(isinlineediting,0)=1)"
                Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
                Dim dtIsdv As New DataTable
                oda.SelectCommand.CommandText = strDF
                oda.Fill(dtIsdv)

                Dim dtIsDef As New DataTable
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim str As String = "select * from mmm_mst_forms  WITH (NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(IsDefaultRows,0)>0"
                oda.SelectCommand.CommandText = str
                oda.Fill(dtIsDef)

                If dtIsdv.Rows.Count = 1 OrElse dtIsDef.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                    ' Dim btnIDV As New Button
                    ' btnIDV = pnlFields.FindControl("BTN_" & row(i).Item("FieldID").ToString())  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
                    AddHandler GRD.RowDataBound, AddressOf gvData_InlineEdit
                    'balli 24 dec 2014 
                    If Session("EID") = 46 Or Session("EID") = 45 Then ' this is for button filter
                        Dim str1 = "BTNFLTER" & row(i).Item("FIELDID").ToString() & "_" & row(i).Item("DROPDOWN").ToString().Replace(" ", "_")
                        btn1 = pnlFields.FindControl(str1)
                        If Not btn1 Is Nothing Then
                            btn1.Visible = True
                            AddHandler btn1.Click, AddressOf Filter
                            Session("filterDropdown") = 1
                        End If
                    End If
                Else
                    AddHandler GRD.RowDataBound, AddressOf totalrow
                    btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                    If IsNothing(btn1) = False Then
                        AddHandler btn1.Click, AddressOf ShowChildForm
                    End If

                End If
                ' oda.Dispose()
                'dtIsdv.Dispose()

                Dim BTNUpload As New Button
                BTNUpload = pnlFields.FindControl("BTNUpload" & row(i).Item("FIELDID").ToString())
                If Not BTNUpload Is Nothing Then
                    BTNUpload.Visible = False
                End If


                If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                    'INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), ds.Tables("childDocid").Rows(0).Item("tid"))  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
                    If dtIsdv.Rows(0).Item("isinlineediting") = 1 Then
                        ShowDefaultValuesinGrid()
                    Else
                        INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsdv)
                    End If

                ElseIf dtIsDef.Rows.Count = 1 Then
                    INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsDef)
                Else
                    oda.SelectCommand.Parameters.Clear()
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.Parameters.AddWithValue("DOCID", pid)
                    oda.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
                    oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                    ds.Tables.Clear()
                    oda.Fill(ds, "ITEM")
                    oda.SelectCommand.CommandType = CommandType.Text
                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                    oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType,F1.Child_Specific_Text  FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH (NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D  WITH (NOLOCK) ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & " union all select fieldId,displayname,fieldtype,Child_specific_text from MMM_MST_FIELDS  WITH (NOLOCK) where eid=" & Session("EID") & " and DocumentType in (select documenttype from MMM_MST_DOC  WITH (NOLOCK) where eid=" & Session("EID") & " and tid=" & pid & ") and Child_Specific_text is not null"
                    oda.Fill(ds, "TOTAL")
                    'ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, btn1.ID, updatePanelEdit, ds.Tables("TOTAL"))
                    ob.BINDITEMGRID1(ds.Tables("ITEM"), pnlFields, row(i).Item("FieldID"), updatePanelEdit, ds.Tables("TOTAL"), -1, -1, Session("Doctype"), Session("ChildDoctype"), Session("EID"))
                End If




            Next

            If Not Session("CHILD") Is Nothing Then
                pnlFields1.Controls.Clear()
                ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
                Dim ROW2() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                If ROW2.Length > 0 Then
                    For i As Integer = 0 To ROW2.Length - 1
                        Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW2(i).Item("FieldID").ToString()), DropDownList)
                        DDL.AutoPostBack = True
                        AddHandler DDL.TextChanged, AddressOf bindvalue1
                    Next
                End If

                Dim ROW3() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and kc_logic is not null And kc_logic <>''")
                If ROW3.Length > 0 Then
                    For i As Integer = 0 To ROW3.Length - 1
                        parentchild(ROW3(i).Item("FIELDID"), CInt(ROW3(i).Item("KC_LOGIC").ToString()))
                    Next
                End If
            End If
        End If

        updatePanelEdit.Update()
        ModalEditPopup.Show()
    End Sub
    '' added on 24 dec 2014
    'Public Sub EDITHIT()
    '    ViewState("IsEdit") = 1
    '    Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("select FF.*,FM.* from MMM_MST_FIELDS FF inner join MMM_MST_DOC M on FF.DocumentType =M.DocumentType INNER JOIN MMM_MST_FORMS FM ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.isactive=1  order by displayOrder", con)
    '    Dim ds As New DataSet()
    '    oda.Fill(ds, "fields")
    '    Dim ob As New DynamicForm
    '    ob._CallerPage = 1
    '    pnlFields.Controls.Clear()
    '    Session("EDITonEDIT") = "EDITonEDIT"
    '    ob.CreateControlsOnPanel(ds.Tables("fields"), pnlFields, updatePanelEdit, btnActEdit, 0, , , True)
    '    Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and lookupvalue is not null")
    '    If ROW1.Length > 0 Then
    '        For i As Integer = 0 To ROW1.Length - 1
    '            Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
    '            DDL.AutoPostBack = True
    '            DDL.EnableViewState = True
    '            AddHandler DDL.TextChanged, AddressOf bindvalue
    '        Next
    '    End If


    '    '' for inline grid ddl filter from main ddl by sunil 31_july_14
    '    Dim ROWC() As DataRow = ds.Tables("fields").Select("fieldtype='Child Item' and len(isnull(KC_LOGIC,''))>2")
    '    If ROWC.Length > 0 Then
    '        For i As Integer = 0 To ROWC.Length - 1
    '            Dim st() As String = ROWC(i).Item("kc_logic").ToString().Split("-")

    '            Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & st(0).ToString), DropDownList)
    '            Dim id As String = Right(DDL.ID, DDL.ID.Length - 3)
    '            DDL.AutoPostBack = True
    '            AddHandler DDL.TextChanged, AddressOf bindvalue_ILFilter
    '        Next
    '    End If
    '    '' for inline grid ddl filter from main ddl by sunil 31_july_14

    '    Session("FIELDS") = ds.Tables("fields")
    '    Session("ACTION") = "EDIT"
    '    'session added on 18 sep 2014
    '    Dim dtchild As DataTable = ds.Tables("fields")

    '    ob.FillControlsOnPanel(ds.Tables("fields"), pnlFields, "DOCUMENT", pid, , , True)


    '    Dim row() As DataRow = dtchild.Select("FieldType='CHILD ITEM'")
    '    If Session("ALLCHILD") Is Nothing Then
    '        Session("ALLCHILD") = row
    '    End If

    '    '  Session("EDITonEDIT") = Nothing


    '    If row.Length > 0 Then
    '        Dim btn1 As New Button
    '        For i As Integer = 0 To row.Length - 1
    '            '' removed frm here by sp 13-jan-14
    '            'btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
    '            'AddHandler btn1.Click, AddressOf ShowChildForm
    '            Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
    '            If PRitem.Length > 1 Then
    '                Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
    '                AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
    '            End If

    '            Session("FNS") = Session("FNS") & PRitem(0).ToString() & ":" & row(i).Item("Fieldid").ToString() & ":"

    '            ' Dim array3Ds(,,) As String = New String(,,) {}

    '            Dim ColHEAD() As String = {}
    '            Dim DDLTXT() As String = {}
    '            Dim DDLVAL() As String = {}

    '            Session("COLHEAD") = ColHEAD
    '            Session("DDLTXT") = DDLTXT
    '            Session("DDLVAL") = DDLVAL
    '            '' by sunil for def value 16-dec-13 - ends


    '            Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
    '            ''AddHandler GRD.RowDataBound, AddressOf totalrow  '' moved frm here to below
    '            AddHandler GRD.RowCommand, AddressOf Delete
    '            AddHandler GRD.RowDeleting, AddressOf Deleting


    '            '' by sunil for def value insert for Aggrawal  16-dec-13 - starts
    '            Dim strDF As String = "select * from mmm_mst_forms where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and  (isnull(IsDefaultRows,0)>0 or isnull(isinlineediting,0)=1)"
    '            Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
    '            Dim dtIsdv As New DataTable
    '            oda.SelectCommand.CommandText = strDF
    '            oda.Fill(dtIsdv)

    '            Dim dtIsDef As New DataTable
    '            Dim str As String = "select * from mmm_mst_forms where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(IsDefaultRows,0)>0"
    '            oda.SelectCommand.CommandText = str
    '            oda.Fill(dtIsDef)

    '            If dtIsdv.Rows.Count = 1 OrElse dtIsDef.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
    '                ' Dim btnIDV As New Button
    '                ' btnIDV = pnlFields.FindControl("BTN_" & row(i).Item("FieldID").ToString())  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
    '                AddHandler GRD.RowDataBound, AddressOf gvData_InlineEdit
    '            Else
    '                AddHandler GRD.RowDataBound, AddressOf totalrow
    '                btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
    '                If IsNothing(btn1) = False Then
    '                    AddHandler btn1.Click, AddressOf ShowChildForm
    '                End If

    '            End If
    '            ' oda.Dispose()
    '            'dtIsdv.Dispose()
    '            Dim str1 = "BTNFLTER" & row(i).Item("FIELDID").ToString() & "_" & row(i).Item("DROPDOWN").ToString().Replace(" ", "_")
    '            btn1 = pnlFields.FindControl(str1)
    '            If Not btn1 Is Nothing Then
    '                'AddHandler btn1.Click, AddressOf Filter ' 
    '                btn1.Visible = False
    '            End If

    '            Dim BTNUpload As New Button
    '            BTNUpload = pnlFields.FindControl("BTNUpload" & row(i).Item("FIELDID").ToString())
    '            If Not BTNUpload Is Nothing Then
    '                BTNUpload.Visible = False
    '            End If


    '            If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
    '                'INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), ds.Tables("childDocid").Rows(0).Item("tid"))  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
    '                If dtIsdv.Rows(0).Item("isinlineediting") = 1 Then
    '                    ShowDefaultValuesinGrid()
    '                Else
    '                    INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsdv)
    '                End If

    '            ElseIf dtIsDef.Rows.Count = 1 Then
    '                INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsDef)
    '            Else
    '                oda.SelectCommand.Parameters.Clear()
    '                oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
    '                oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                oda.SelectCommand.Parameters.AddWithValue("DOCID", pid)
    '                oda.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
    '                oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
    '                ds.Tables.Clear()
    '                oda.Fill(ds, "ITEM")
    '                oda.SelectCommand.CommandType = CommandType.Text
    '                oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType  FROM MMM_MST_FIELDS F1 INNER JOIN MMM_MST_FIELDS F2 ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & ""
    '                oda.Fill(ds, "TOTAL")
    '                'ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, btn1.ID, updatePanelEdit, ds.Tables("TOTAL"))
    '                ob.BINDITEMGRID1(ds.Tables("ITEM"), pnlFields, row(i).Item("FieldID"), updatePanelEdit, ds.Tables("TOTAL"))
    '            End If




    '        Next

    '        If Not Session("CHILD") Is Nothing Then
    '            pnlFields1.Controls.Clear()
    '            ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
    '            Dim ROW2() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
    '            If ROW2.Length > 0 Then
    '                For i As Integer = 0 To ROW2.Length - 1
    '                    Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW2(i).Item("FieldID").ToString()), DropDownList)
    '                    DDL.AutoPostBack = True
    '                    AddHandler DDL.TextChanged, AddressOf bindvalue1
    '                Next
    '            End If

    '            Dim ROW3() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and kc_logic is not null And kc_logic <>''")
    '            If ROW3.Length > 0 Then
    '                For i As Integer = 0 To ROW3.Length - 1
    '                    parentchild(ROW3(i).Item("FIELDID"), CInt(ROW3(i).Item("KC_LOGIC").ToString()))
    '                Next
    '            End If
    '        End If
    '    End If

    '    updatePanelEdit.Update()
    '    ModalEditPopup.Show()
    'End Sub

    Public Sub INSERT_DEFAULTVALUES(ByVal FN As String, ByVal fldID As String, ByVal chidDocID As Integer, ByVal DtForm As DataTable, Optional ByVal inlineEdit As Integer = 0)

        Dim formname As String = FN
        Dim FormnameDVM As String = ""
        Session("FN") = formname
        'PRashant_30_7
        If DtForm.Rows(0).Item("hasdefaultvalue").ToString() = "1" Then
            ViewState("FN_DVM") = formname & "_MASTER"
            FormnameDVM = formname & "_MASTER"
        Else
            ViewState("FN_DVM") = formname
            FormnameDVM = formname
        End If

        ViewState("Default") = DtForm.Rows(0).Item("IsDefaultRows").ToString() & "_" & DtForm.Rows(0).Item("hasdefaultvalue").ToString()
        'PRashant_30_7


        Session("ID") = fldID.ToString  'ID(1).ToString
        ViewState("ID") = "BTN" & fldID.ToString  'ID(1).ToString


        Dim ob As New DynamicForm
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim DS As New DataSet

        'Dim oda As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF left outer JOIN MMM_MST_FORMS F on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
        oda.Fill(DS, "CHILD")
        Session("CHILD") = DS.Tables("CHILD")
        Session("D" & formname) = DS.Tables("CHILD")
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If

        'WITH (NOLOCK) added by Himank on 28th sep 2015
        oda.SelectCommand.CommandText = "select documenttype from  MMM_MST_DOC  WITH (NOLOCK) where EID=" & Session("EID") & " and tid =" & chidDocID
        Dim dtdocType As New DataTable
        Dim scrname As String
        oda.Fill(dtdocType)
        If dtdocType.Rows.Count > 0 Then
            scrname = dtdocType.Rows(0).Item(0).ToString
            ViewState("MDOCTYPE") = scrname
        End If

        Dim DefValMastDoctype As String = ""
        DS.Tables.Clear()
        ' Dim ddl As DropDownList = TryCast(pnlFields.FindControl("fld" & ID(0).ToString()), DropDownList)
        ' Dim docid() As String = ddl.SelectedValue.ToString.Split("|")
        oda.SelectCommand.Parameters.Clear()
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID1"
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("DOCID", chidDocID)
        oda.SelectCommand.Parameters.AddWithValue("FN", FN)
        oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
        DS.Tables.Clear()

        Dim dtitem As New DataTable
        Dim dtVal As New DataTable

        If inlineEdit = 1 Then
            dtitem.Columns.Add("All", GetType(String))
        End If

        oda.Fill(dtitem)
        'Session("ITEM") = DS.Tables("ITEM")
        Session("ITEM") = dtitem

        If inlineEdit = 1 Then
            dtVal.Columns.Add("All", GetType(String))
        End If

        oda.Fill(dtVal)
        oda.SelectCommand.CommandType = CommandType.Text
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2 WITH (NOLOCK)  ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & formname & "' AND F1.DOCUMENTTYPE='" & scrname & "'"
        oda.Fill(DS, "TOTAL")

        'Prashant 16-04-2015
        'Dim Dictionary As New Dictionary(Of Integer, Integer)
        'If Not IsNothing(Session("AddedRow")) Then
        '    Dictionary = CType(Session("AddedRow"), Dictionary(Of Integer, Integer))
        '    For c As Integer = 0 To Dictionary.Count - 1
        '        dtVal.Rows.Add(dtVal.NewRow())
        '        dtitem.Rows.Add(dtitem.NewRow())
        '    Next
        'Else

        'End If

        If Not IsNothing(Session("DS")) Then
            Dim ct As Integer = dtVal.Rows.Count
            Dim ds1 = CType(Session("DS"), DataTable)
            For c As Integer = 0 To ds1.Rows.Count - 2 - ct
                If Not ds1.Rows(c).Item(0).ToString.ToUpper = "TOTAL" Then
                    dtVal.Rows.Add(dtVal.NewRow())
                    dtitem.Rows.Add(dtitem.NewRow())
                End If
            Next
        End If

        '' WRITE here func that will add row by row values in grid ' write new function by sunil
        'ADD_DV_ITEMSTOGRID(formname, DS.Tables("ITEM"), DS.Tables("ITEM_VALS"))
        ADD_DV_ITEMSTOGRID(formname, dtitem, dtVal)

        Dim ColHead() As String = {}
        Dim DDLTxt() As String = {}
        Dim DDLval() As String = {}
        Dim aCnt As Integer = 0

        Dim dtC As DataTable = Session("D" & formname) 'DS.Tables("CHILD")

        For j = 0 To dtC.Rows.Count - 1
            If dtC.Rows(j).Item("fieldtype").ToString = "DROP DOWN" And dtC.Rows(j).Item("DROPDOWNTYPE") = "MASTER VALUED" Then
                For i As Integer = 0 To DS.Tables("item").Rows.Count - 1
                    For k As Integer = 0 To DS.Tables("item").Columns.Count - 1
                        If DS.Tables("item").Columns(k).ColumnName = dtC.Rows(j).Item("displayname").ToString Then  '' matched col. (mast. val.) 
                            ColHead(aCnt) = formname & "_" & dtC.Rows(j).Item("displayname").ToString
                            DDLTxt(aCnt) = DS.Tables("item").Rows(i).Item(DS.Tables("item").Columns(k).ColumnName).ToString
                            DDLval(aCnt) = DS.Tables("ITEM_VALS").Rows(i).Item(DS.Tables("item").Columns(k).ColumnName).ToString
                        End If
                    Next
                Next
            End If
        Next

        Session("COLHEAD") = ColHead
        Session("DDLTXT") = DDLTxt
        Session("DDLVAL") = DDLval

        dtC.Dispose()
        oda.Dispose()
        DS.Dispose()
        con.Dispose()
    End Sub

    Protected Sub ADD_DV_ITEMSTOGRID(ByVal FORMNAME As String, ByVal DtDV As DataTable, ByVal DtDV_Vals As DataTable, Optional ByVal childGdId As String = Nothing)
        Try

            Dim dtFD As New DataTable
            Dim dtField As New DataTable
            Dim DTVALUE As New DataTable
            Dim errormsg As String = "Please Enter "
            dtField = ViewState(FORMNAME)
            ' Dim OB As New DynamicForm()
            Session("ITEM") = DtDV_Vals
            dtFD = DtDV
            If Session(FORMNAME) Is Nothing Then
                dtFD = DtDV
                DTVALUE = DtDV_Vals
            Else
                DTVALUE = Session(FORMNAME)
            End If



            Session(FORMNAME) = dtFD
            Session(FORMNAME & "VAL") = DTVALUE
            BINDGRID1(dtFD)
            ' ModalPopupExtender1.Hide()

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    '' above is used for binding grid (adding row to grid) when child item's save button is clicked
    Protected Sub BINDGRID1(ByVal DT As DataTable)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
        'Dim scrname As String = Session("FN") ' Request.QueryString("SC").ToString()
        ' Dim scrname As String = Session("Document") 'ViewState("FN")

        Dim scrname As String = ViewState("sc")

        Dim DS As New DataSet
        Try


            Dim dt_item As DataTable = New DataTable()
            dt_item = DT
            ODA.SelectCommand.CommandType = CommandType.Text
            'ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName FROM MMM_MST_FIELDS F1 INNER JOIN MMM_MST_FIELDS F2 ON F1.dropdown =F2.Fieldid  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & Session("FN") & "' AND F1.DOCUMENTTYPE='" & scrname & "'"
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,f1.fieldtype FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH (NOLOCK) ON F1.dropdown =F2.Fieldid  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType in ('CHILD ITEM MAX','CHILD ITEM TOTAL')  AND F2.DocumentType ='" & Session("FN") & "' AND F1.DOCUMENTTYPE='" & scrname & "'"
            ODA.Fill(DS, "TOTAL")
            ODA.Dispose()
            DS.Dispose()

            Dim defRows As Integer = -1
            Dim hasDefVal As Integer = -1
            If IsNothing(ViewState("Default")) = False Then
                If ViewState("Default").ToString IsNot "" Then
                    Dim ar() As String = ViewState("Default").ToString().Split("_")
                    If ar(0).ToString IsNot "" Then
                        defRows = CInt(ar(0))
                    End If
                    If defRows = 0 Then
                        defRows = -1
                    End If
                    If Not ar(1).ToString() = "" Then
                        hasDefVal = CInt(ar(1))
                    End If

                End If
            End If


            Dim OB As New DynamicForm
            ' OB.BINDITEMGRID(dt_item, pnlFields, "BTN" & ViewState("ID"), UpdatePanel1, DS.Tables("TOTAL"))
            OB.BINDITEMGRID(dt_item, pnlFields, ViewState("ID"), updatePanelEdit, DS.Tables("TOTAL"), defRows, hasDefVal, scrname, Session("FN").ToString, Convert.ToInt32(Session("EID")))
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Public Sub EditRecord(ByVal sender As Object, ByVal e As EventArgs)
        Dim ret As Integer = 0
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim tran As SqlTransaction = Nothing
        con.Open()
        tran = con.BeginTransaction()
        ret = ValidateData("EDIT", con, tran)


        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        da.SelectCommand.Transaction = tran
        Dim ds As New DataSet
        da.SelectCommand.Parameters.Clear()
        da.SelectCommand.CommandType = CommandType.Text

        da.SelectCommand.CommandText = "SELECT enablews,FormName FROM MMM_MST_FORMS  WHERE EID=" & Session("EID") & " AND FormName=(SELECT Documenttype FROM MMM_MST_DOC WHERE TID=" & pid & ")"
        da.Fill(ds)
        Dim doctype = ""
        'doctype = ViewState("dvDocumentType")
        doctype = Convert.ToString(ds.Tables(0).Rows(0).Item("FormName").ToString)
        Try
            If ret = 0 Then
                tran.Rollback()
                ModalEditPopup.Show()
                Exit Sub
            Else
                Session("AMENDMENT") = ""
                Dim ob1 As New DMSUtil()
                If ViewState("status") = "AMEND" Then
                    '' now change doc nature and start workflow of modify if any by sunil 13-sep
                    da.SelectCommand.CommandText = "InsertDefaultMovement"
                    da.SelectCommand.CommandType = CommandType.StoredProcedure
                    da.SelectCommand.Parameters.Clear()
                    da.SelectCommand.Parameters.AddWithValue("tid", pid)
                    da.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
                    da.SelectCommand.Parameters.AddWithValue("what", "MODIFY")
                    da.SelectCommand.ExecuteNonQuery()
                    Dim res As String
                    res = ob1.GetNextUserFromRolematrixT(pid, Val(Session("EID").ToString()), Val(Session("UID").ToString()), "", Val(Session("UID").ToString()), con, tran)
                    '' here code to approve document  - by sunil
                    ' below code used for calling webservice...
                    tran.Commit()
                    da.Dispose()
                    Try
                        If ds.Tables(0).Rows(0).Item("enablews").ToString = "1" Then
                            Dim ws As New WSOutward()
                            Dim URLIST As String = ws.WBS(doctype, Session("EID"), pid, "Edit")
                            If UCase(URLIST).Contains("IS NOT AVAILABLE") Or UCase(URLIST).Contains("NOT VALID") Then
                                URLIST = ws.WBS(doctype, Session("EID"), pid)
                            End If
                            lblMsg.Text = lblMsg.Text & Environment.NewLine & URLIST.ToString()
                        End If
                    Catch ex As Exception
                    End Try
                    ' below code for webservice report

                    Dim da1 As SqlDataAdapter = New SqlDataAdapter("select * from MMM_Print_Template  WITH (NOLOCK) where documenttype='" & pid & "' and draft='Service'", con)
                    Dim ds1 As New DataSet

                    da1.Fill(ds1, "dataset")
                    Try
                        For k As Integer = 0 To ds1.Tables("dataset").Rows.Count - 1
                            If ds1.Tables("dataset").Rows(k).Item("SendType").ToString() = "WS" Then
                                Dim ws As New WSOutward()
                                Dim URLIST As String = ws.WBSREPORT(doctype, Session("EID"), pid, "Edit")
                                If UCase(URLIST).Contains("NOT VALID") Or UCase(URLIST).Contains("INVALID") Then
                                    URLIST = ws.WBSREPORT(doctype, Session("EID"), pid)
                                End If
                            End If
                        Next
                    Catch ex As Exception
                    Finally
                        da1.Dispose()
                        ds1.Dispose()
                    End Try
                End If
                If ViewState("status") <> "AMEND" Then
                    tran.Commit()
                End If

                ob1.TemplateCalling(pid, Session("EID"), doctype, "CREATED")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Done Successfully!!');", True)
                updatePanelEdit.Update()
                ModalEditPopup.Hide()
                updMain.Update()
            End If
            Call FillMainPage()

            'Added Configuration for Variaton
            Dim dtvarn As New DataTable


            Dim conStrng As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con1 As SqlConnection = New SqlConnection(conStr)
            Dim dtvar As New DataTable
            Dim qry As String

            qry = "select fieldmapping,dropdown from mmm_mst_fields  WITH (NOLOCK) where eid=" & Session("EID") & " and documenttype='" & Session("Doctype") & "' and fieldType='Variance'"
            Dim da1s As SqlDataAdapter = New SqlDataAdapter(qry, con1)

            da1s.Fill(dtvar)
            Dim li As New ArrayList
            Dim liupdate As New ArrayList
            If (dtvar.Rows.Count > 0) Then
                For i As Integer = 0 To dtvar.Rows.Count - 1
                    li.Add(dtvar.Rows(i).Item("dropdown").ToString())
                    liupdate.Add(dtvar.Rows(i).Item("fieldmapping").ToString())
                Next
                'Dim i As Integer = 0
                'Do While (i - dtvar.Rows.Count - 1)
                '    li.Add(dtvar.Rows(i).Item("dropdown").ToString())
                '    i = (i + 1)
                'Loop
                Dim finalstr = String.Join(",", li.ToArray())
                Dim finalUpdate = String.Join(",", liupdate.ToArray())

                Dim ODAs As SqlDataAdapter = New SqlDataAdapter("", con)
                'Dim scrname As String = Request.QueryString("SC").ToString()

                Dim DSvar As New DataSet
                ODAs.SelectCommand.Parameters.Clear()
                ODAs.SelectCommand.CommandText = "uspGetHistoryDetails"
                ODAs.SelectCommand.CommandType = CommandType.StoredProcedure
                ODAs.SelectCommand.Parameters.AddWithValue("eid", Session("EID"))
                ODAs.SelectCommand.Parameters.AddWithValue("docid", RetDocId(Session("EID")))
                ODAs.SelectCommand.Parameters.AddWithValue("ParString", finalstr.ToString())
                DSvar.Tables().Clear()
                ODAs.Fill(DSvar, "variance")
                Dim str As New StringBuilder()
                str.Append("Update mmm_mst_doc set ")
                If (DSvar.Tables("variance2").Rows(0)(0).ToString() = "1") Then
                    For Val As Integer = 0 To li.Count - 1
                        str.Append(liupdate(Val).ToString() & "='" & DSvar.Tables("variance1").Rows(0)(Val).ToString() & "',")
                    Next
                    str.Remove(str.Length - 1, 1)
                    str.Append("where tid=" & RetDocId(Session("EID")) & " and eid=" & Session("EID") & "")
                Else
                    For Val As Integer = 0 To li.Count - 1
                        Dim d As Decimal
                        d = Convert.ToDecimal(DSvar.Tables("variance1").Rows(0)(Val)) - Convert.ToDecimal(DSvar.Tables("variance").Rows(0)(Val))
                        str.Append(liupdate(Val).ToString() & "='" & d.ToString() & "',")
                    Next
                    str.Remove(str.Length - 1, 1)
                    str.Append("where tid=" & RetDocId(Session("EID")) & " and eid=" & Session("EID") & "")
                End If

                Dim updateqry As String
                updateqry = str.ToString()
                Dim dts As New DataTable
                Dim da2 As SqlDataAdapter = New SqlDataAdapter(updateqry, con1)
                da2.Fill(dts)
            End If

            'Added By mayank in case of variation configuration  20-Feb-2015
        Catch ex As Exception
            tran.Rollback()
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not tran Is Nothing Then
                tran.Dispose()
            End If
        End Try
    End Sub

    Public Sub bindvalue2(ByVal sender As Object, ByVal e As EventArgs)
        Dim c As Control = GetPostBackControl(Me.Page)
        '...
        If c IsNot Nothing Then
        End If
        If TypeOf c Is System.Web.UI.WebControls.DropDownList Then
            Dim ddl As DropDownList = TryCast(c, DropDownList)
            Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
            Dim id1 As Integer = CInt(id)
            Dim ob As New DynamicForm()
            ob.bind(id, pnlApprove, ddl)
            btnApprove_ModalPopupExtender.Show()
        End If
    End Sub
    Public Sub PrintDoc(ByVal SENDER As Object, ByVal E As EventArgs)
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim imgBut As ImageButton = TryCast(SENDER, ImageButton)
        Dim TemplateID As String = imgBut.AlternateText.ToString()

        If TemplateID = "DEFAULT" Then
            PrintDefault(pid)
            'Print Normal Form
        Else
            Print(TemplateID, pid)
        End If
    End Sub

    Public Sub PrintDefault(ByVal DocID As Integer)
        ClientScript.RegisterStartupScript([GetType](), "print", "window.print();", True)
        'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        'Dim con As New SqlConnection(conStr)
        'Dim pnl As New Panel
        'Dim strPrint As String = lblDetail.Text.Replace("px", "")
        'pnl.Controls.Add(New LiteralControl(strPrint))

        'Dim attachment As String = "attachment; filename=" & DocID & ".pdf"
        'System.Web.HttpContext.Current.Response.ClearContent()
        'HttpContext.Current.Response.AddHeader("content-disposition", attachment)
        'HttpContext.Current.Response.ContentType = "application/pdf"

        'pnl.Font.Size = 7
        'Dim stw As StringWriter = New StringWriter()
        'Dim htextw As HtmlTextWriter = New HtmlTextWriter(stw)
        'pnl.RenderControl(htextw)
        'Dim document As iTextSharp.text.Document = New iTextSharp.text.Document()
        '' Dim font As New iTextSharp.text.Font(iTextSharp.text.FontFactory.GetFont("", 8, iTextSharp.text.Font.NORMAL, New iTextSharp.text.BaseColor(80, 80, 80)))
        'PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream)
        'document.Open()
        ''document.Add(iTextSharp.text.FontFactory.GetFont("Verdana", 8, iTextSharp.text.Font.NORMAL, New iTextSharp.text.BaseColor(80, 80, 80)))
        '' document.Add(New Phrase("Report Name: ", FontFactory.GetFont("Verdana", 8, iTextSharp.text.Font.BOLD, New iTextSharp.text.BaseColor(21, 66, 157))))
        'Dim Str As StringReader = New StringReader(stw.ToString())
        'Dim htmlworker As iTextSharp.text.html.simpleparser.HTMLWorker = New iTextSharp.text.html.simpleparser.HTMLWorker(document)
        'htmlworker.Parse(Str)
        'document.Close()

        'HttpContext.Current.Response.Write(document)
        'HttpContext.Current.Response.End()
    End Sub

    'Public Sub Print(ByVal TemplateID As Integer, ByVal DocID As Integer)
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As New SqlConnection(conStr)

    '    Dim da As New SqlDataAdapter("select * from MMM_Print_Template where tid=" & TemplateID, con)
    '    Dim ds As New DataSet
    '    da.Fill(ds, "data")

    '    If ds.Tables("data").Rows.Count <> 1 Then
    '        da.Dispose()
    '        con.Dispose()
    '        Exit Sub
    '    End If

    '    Dim body As String = ds.Tables("data").Rows(0).Item("body").ToString()
    '    Dim MainQry As String = ds.Tables("data").Rows(0).Item("qry").ToString()
    '    Dim childQry As String = ds.Tables("data").Rows(0).Item("SQL_CHILDITEM").ToString()
    '    Dim DocType As String = ds.Tables("data").Rows(0).Item("Documenttype").ToString()
    '    Dim OtherQry As String = ds.Tables("data").Rows(0).Item("sql_mov_dtl").ToString()

    '    da.SelectCommand.CommandText = MainQry.Replace("@tid", DocID)
    '    da.Fill(ds, "main")

    '    For j As Integer = 0 To ds.Tables("main").Columns.Count - 1
    '        body = body.Replace("[" & ds.Tables("main").Columns(j).ColumnName & "]", ds.Tables("main").Rows(0).Item(j).ToString())
    '    Next

    '    If OtherQry <> "" Then
    '        If body.Contains("[movdtl]") Then
    '            Dim hub As String = ds.Tables("main").Rows(0).Item("Hub Name").ToString()
    '            da.SelectCommand.CommandText = OtherQry.Replace("@hub", hub)
    '            da.Fill(ds, "movdtl")
    '            Dim stmov As String = "<div><table width=""100%"" border=""0.5"" text-align=""left""  >"
    '            Dim preMovvVal As String = ""
    '            'For i As Integer = 0 To ds.Tables("movdtl").Rows.Count - 1
    '            '    If preMovvVal = ds.Tables("movdtl").Rows(i).Item(0).ToString() Then
    '            '        preMovvVal = ds.Tables("movdtl").Rows(i).Item(0).ToString()
    '            '        ds.Tables("movdtl").Rows(i).Item(0) = ""
    '            '    Else
    '            '        preMovvVal = ds.Tables("movdtl").Rows(i).Item(0).ToString()
    '            '    End If
    '            'Next

    '            For i As Integer = 0 To ds.Tables("movdtl").Rows.Count
    '                stmov &= "<tr>"
    '                For j As Integer = 0 To ds.Tables("movdtl").Columns.Count - 1
    '                    stmov &= "<td text-align:left>"
    '                    If i = 0 Then
    '                        stmov &= ds.Tables("movdtl").Columns(j).ColumnName
    '                    Else
    '                        stmov &= ds.Tables("movdtl").Rows(i - 1).Item(j).ToString()
    '                    End If
    '                    stmov &= "</td>"
    '                Next
    '                stmov &= "</tr>"
    '            Next
    '            stmov &= "</table></div>"
    '            body = body.Replace("[movdtl]", stmov)

    '        ElseIf body.Contains("[fmovdtl]") Then
    '            da.SelectCommand.CommandText = OtherQry.Replace("@tid", DocID)
    '            da.Fill(ds, "fmovdtl")
    '            Dim stmov As String = "<div><table width=""100%"" border=""0.5"" text-align=""left""  >"
    '            For i As Integer = 0 To ds.Tables("fmovdtl").Rows.Count
    '                stmov &= "<tr>"
    '                For j As Integer = 0 To ds.Tables("fmovdtl").Columns.Count - 1
    '                    stmov &= "<td text-align:left>"
    '                    If i = 0 Then
    '                        stmov &= ds.Tables("fmovdtl").Columns(j).ColumnName
    '                    Else
    '                        stmov &= ds.Tables("fmovdtl").Rows(i - 1).Item(j).ToString()
    '                    End If
    '                    stmov &= "</td>"
    '                Next
    '                stmov &= "</tr>"
    '            Next
    '            stmov &= "</table></div>"
    '            body = body.Replace("[fmovdtl]", stmov)
    '        Else
    '            da.SelectCommand.CommandText = OtherQry.Replace("@tid", DocID)
    '            da.Fill(ds, "other")
    '            For k As Integer = 0 To ds.Tables("other").Columns.Count - 1
    '                body = body.Replace("[" & ds.Tables("other").Columns(k).ColumnName & "]", ds.Tables("other").Rows(0).Item(k).ToString())
    '            Next
    '        End If

    '    End If

    '    da.SelectCommand.CommandText = childQry.Replace("@tid", DocID)
    '    da.Fill(ds, "child")

    '    ds.Dispose()
    '    con.Dispose()

    '    Dim strChildItem As String = "<div><table width=""100%"" border=""0.5""  >"
    '    Dim prevVal As String = ""
    '    For i As Integer = 0 To ds.Tables("child").Rows.Count - 1
    '        If prevVal = ds.Tables("child").Rows(i).Item(0).ToString() Then
    '            prevVal = ds.Tables("child").Rows(i).Item(0).ToString()
    '            ds.Tables("child").Rows(i).Item(0) = ""
    '        Else
    '            prevVal = ds.Tables("child").Rows(i).Item(0).ToString()
    '        End If
    '    Next

    '    For i As Integer = 0 To ds.Tables("child").Rows.Count
    '        strChildItem &= "<tr>"
    '        For j As Integer = 0 To ds.Tables("child").Columns.Count - 1
    '            strChildItem &= "<td>"
    '            If i = 0 Then
    '                strChildItem &= ds.Tables("child").Columns(j).ColumnName
    '            Else
    '                strChildItem &= ds.Tables("child").Rows(i - 1).Item(j).ToString()
    '            End If
    '            strChildItem &= "</td>"
    '        Next
    '        strChildItem &= "</tr>"
    '    Next
    '    strChildItem &= "</table></div>"

    '    body = body.Replace("[child item]", strChildItem)
    '    Dim pnl As New Panel
    '    pnl.Controls.Add(New LiteralControl(body))

    '    Dim attachment As String = "attachment; filename=" & DocType & "_" & DocID & ".pdf"
    '    System.Web.HttpContext.Current.Response.ClearContent()
    '    HttpContext.Current.Response.AddHeader("content-disposition", attachment)
    '    HttpContext.Current.Response.ContentType = "application/pdf"

    '    pnl.Font.Size = 7
    '    Dim stw As StringWriter = New StringWriter()
    '    Dim htextw As HtmlTextWriter = New HtmlTextWriter(stw)
    '    pnl.RenderControl(htextw)
    '    Dim document As iTextSharp.text.Document = New iTextSharp.text.Document()
    '    ' Dim font As New iTextSharp.text.Font(iTextSharp.text.FontFactory.GetFont("", 8, iTextSharp.text.Font.NORMAL, New iTextSharp.text.BaseColor(80, 80, 80)))
    '    PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream)
    '    document.Open()
    '    'document.Add(iTextSharp.text.FontFactory.GetFont("Verdana", 8, iTextSharp.text.Font.NORMAL, New iTextSharp.text.BaseColor(80, 80, 80)))
    '    ' document.Add(New Phrase("Report Name: ", FontFactory.GetFont("Verdana", 8, iTextSharp.text.Font.BOLD, New iTextSharp.text.BaseColor(21, 66, 157))))
    '    Dim Str As StringReader = New StringReader(stw.ToString())
    '    Dim htmlworker As iTextSharp.text.html.simpleparser.HTMLWorker = New iTextSharp.text.html.simpleparser.HTMLWorker(document)
    '    htmlworker.Parse(Str)
    '    document.Close()

    '    HttpContext.Current.Response.Write(document)
    '    HttpContext.Current.Response.End()
    'End Sub

    Public Sub Print(ByVal TemplateID As Integer, ByVal DocID As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)

        Dim da As New SqlDataAdapter("select * from MMM_Print_Template  WITH (NOLOCK) where tid=" & TemplateID, con)
        Dim ds As New DataSet
        da.Fill(ds, "data")

        If ds.Tables("data").Rows.Count <> 1 Then
            da.Dispose()
            con.Dispose()
            Exit Sub
        End If

        Dim body As String = ds.Tables("data").Rows(0).Item("body").ToString()
        Dim MainQry As String = ds.Tables("data").Rows(0).Item("qry").ToString()
        Dim childQry As String = ds.Tables("data").Rows(0).Item("SQL_CHILDITEM").ToString()
        Dim DocType As String = ds.Tables("data").Rows(0).Item("Documenttype").ToString()
        Dim OtherQry As String = ds.Tables("data").Rows(0).Item("sql_mov_dtl").ToString()

        da.SelectCommand.CommandText = MainQry.Replace("@tid", DocID)
        da.Fill(ds, "main")

        For j As Integer = 0 To ds.Tables("main").Columns.Count - 1
            body = body.Replace("[" & ds.Tables("main").Columns(j).ColumnName & "]", ds.Tables("main").Rows(0).Item(j).ToString())
        Next

        If OtherQry <> "" Then
            If body.Contains("[movdtl]") Then
                Dim hub As String = ds.Tables("main").Rows(0).Item("Hub Name").ToString()
                da.SelectCommand.CommandText = OtherQry.Replace("@hub", hub)
                da.Fill(ds, "movdtl")
                Dim stmov As String = "<div><table width=""100%"" border=""0.5"" text-align=""left""  >"
                Dim preMovvVal As String = ""
                'For i As Integer = 0 To ds.Tables("movdtl").Rows.Count - 1
                '    If preMovvVal = ds.Tables("movdtl").Rows(i).Item(0).ToString() Then
                '        preMovvVal = ds.Tables("movdtl").Rows(i).Item(0).ToString()
                '        ds.Tables("movdtl").Rows(i).Item(0) = ""
                '    Else
                '        preMovvVal = ds.Tables("movdtl").Rows(i).Item(0).ToString()
                '    End If
                'Next

                For i As Integer = 0 To ds.Tables("movdtl").Rows.Count
                    stmov &= "<tr>"
                    For j As Integer = 0 To ds.Tables("movdtl").Columns.Count - 1
                        stmov &= "<td text-align:left>"
                        If i = 0 Then
                            stmov &= ds.Tables("movdtl").Columns(j).ColumnName
                        Else
                            stmov &= ds.Tables("movdtl").Rows(i - 1).Item(j).ToString()
                        End If
                        stmov &= "</td>"
                    Next
                    stmov &= "</tr>"
                Next
                stmov &= "</table></div>"
                body = body.Replace("[movdtl]", stmov)

            ElseIf body.Contains("[fmovdtl]") Then
                Dim oda As SqlDataAdapter = New SqlDataAdapter("uspGetMoveDetailwithRole_Print", con)
                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                oda.SelectCommand.Parameters.AddWithValue("DOCID", DocID)
                oda.Fill(ds, "fmovdtl")
                Dim stmov As String = "<div><table width=""100%"" border=""0.5"" text-align=""left""  >"
                For i As Integer = 0 To ds.Tables("fmovdtl").Rows.Count
                    stmov &= "<tr>"
                    For j As Integer = 0 To ds.Tables("fmovdtl").Columns.Count - 1
                        stmov &= "<td text-align:left>"
                        If i = 0 Then
                            stmov &= ds.Tables("fmovdtl").Columns(j).ColumnName
                        Else
                            stmov &= ds.Tables("fmovdtl").Rows(i - 1).Item(j).ToString()
                        End If
                        stmov &= "</td>"
                    Next
                    stmov &= "</tr>"
                Next
                stmov &= "</table></div>"
                body = body.Replace("[fmovdtl]", stmov)

            Else
                da.SelectCommand.CommandText = OtherQry.Replace("@tid", DocID)
                da.Fill(ds, "other")
                For k As Integer = 0 To ds.Tables("other").Columns.Count - 1
                    body = body.Replace("[" & ds.Tables("other").Columns(k).ColumnName & "]", ds.Tables("other").Rows(0).Item(k).ToString())
                Next
            End If

        End If
        da.SelectCommand.CommandText = childQry.Replace("@tid", DocID)
        da.Fill(ds, "child")
        ds.Dispose()
        con.Dispose()
        Dim strChildItem As String = "<div><table width=""100%"" border=""0.5""  >"
        Dim prevVal As String = ""
        For i As Integer = 0 To ds.Tables("child").Rows.Count - 1
            If prevVal = ds.Tables("child").Rows(i).Item(0).ToString() Then
                prevVal = ds.Tables("child").Rows(i).Item(0).ToString()
                ds.Tables("child").Rows(i).Item(0) = ""
            Else
                prevVal = ds.Tables("child").Rows(i).Item(0).ToString()
            End If
        Next

        For i As Integer = 0 To ds.Tables("child").Rows.Count
            strChildItem &= "<tr>"
            For j As Integer = 0 To ds.Tables("child").Columns.Count - 1
                strChildItem &= "<td>"
                If i = 0 Then
                    strChildItem &= ds.Tables("child").Columns(j).ColumnName
                Else
                    strChildItem &= ds.Tables("child").Rows(i - 1).Item(j).ToString()
                End If
                strChildItem &= "</td>"
            Next
            strChildItem &= "</tr>"
        Next
        strChildItem &= "</table></div>"
        body = body.Replace("[child item]", strChildItem)
        Dim pnl As New Panel
        pnl.Controls.Add(New LiteralControl(body))
        Dim attachment As String = "attachment; filename=" & DocType & "_" & DocID & ".pdf"
        System.Web.HttpContext.Current.Response.ClearContent()
        HttpContext.Current.Response.AddHeader("content-disposition", attachment)
        HttpContext.Current.Response.ContentType = "application/pdf"
        pnl.Font.Size = 7
        Dim stw As StringWriter = New StringWriter()
        Dim htextw As HtmlTextWriter = New HtmlTextWriter(stw)
        pnl.RenderControl(htextw)
        If body.Contains("[Movements]") Then
            Dim document As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate(), 10, 10, 10, 10)
            PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream)
            document.Open()
            Dim Str As StringReader = New StringReader(stw.ToString())
            Dim htmlworker As iTextSharp.text.html.simpleparser.HTMLWorker = New iTextSharp.text.html.simpleparser.HTMLWorker(document)
            htmlworker.Parse(Str)
            document.Close()
            HttpContext.Current.Response.Write(document)
            HttpContext.Current.Response.End()
        Else
            Dim document As iTextSharp.text.Document = New iTextSharp.text.Document()
            PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream)
            document.Open()
            Dim Str As StringReader = New StringReader(stw.ToString())
            Dim htmlworker As iTextSharp.text.html.simpleparser.HTMLWorker = New iTextSharp.text.html.simpleparser.HTMLWorker(document)
            htmlworker.Parse(Str)
            document.Close()
            HttpContext.Current.Response.Write(document)
            HttpContext.Current.Response.End()
        End If

    End Sub

    Public Sub PrintWord(ByVal SENDER As Object, ByVal E As EventArgs)
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim imgBut As ImageButton = TryCast(SENDER, ImageButton)
        Dim TemplateID As String = imgBut.AlternateText.ToString()

        If TemplateID = "DEFAULT" Then
            PrintDefault(pid)
            'Print Normal Form
        Else
            PrintwordDoc(TemplateID, pid)
        End If
    End Sub

    Public Sub PrintwordDoc(ByVal TemplateID As Integer, ByVal DocID As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim da As New SqlDataAdapter("select * from MMM_Print_Template  WITH (NOLOCK) where tid=" & TemplateID, con)
        Dim ds As New DataSet
        da.Fill(ds, "data")

        If ds.Tables("data").Rows.Count <> 1 Then
            da.Dispose()
            con.Dispose()
            Exit Sub
        End If
        Dim body As String = ds.Tables("data").Rows(0).Item("body").ToString()
        Dim MainQry As String = ds.Tables("data").Rows(0).Item("qry").ToString()
        Dim childQry As String = ds.Tables("data").Rows(0).Item("SQL_CHILDITEM").ToString()
        Dim DocType As String = ds.Tables("data").Rows(0).Item("Documenttype").ToString()
        Dim OtherQry As String = ds.Tables("data").Rows(0).Item("sql_mov_dtl").ToString()

        da.SelectCommand.CommandText = MainQry.Replace("@tid", DocID)
        da.Fill(ds, "main")

        For j As Integer = 0 To ds.Tables("main").Columns.Count - 1
            body = body.Replace("[" & ds.Tables("main").Columns(j).ColumnName & "]", ds.Tables("main").Rows(0).Item(j).ToString())
        Next


        If OtherQry <> "" Then
            da.SelectCommand.CommandText = OtherQry.Replace("@tid", DocID)
            da.Fill(ds, "other")
            For k As Integer = 0 To ds.Tables("other").Columns.Count - 1
                body = body.Replace("[" & ds.Tables("other").Columns(k).ColumnName & "]", ds.Tables("other").Rows(0).Item(k).ToString())
            Next
        End If

        da.SelectCommand.CommandText = childQry.Replace("@tid", DocID)
        da.Fill(ds, "child")

        ds.Tables("child").DefaultView.Sort = ds.Tables("child").Columns(0).ColumnName & " ASC"
        ds.Dispose()
        con.Dispose()

        Dim strChildItem As String = "<div><table width=""100%"" border=""1"" bordercolor=""blue"" border-style=""solid""  >"
        Dim prevVal As String = ""
        For i As Integer = 0 To ds.Tables("child").Rows.Count - 1
            If prevVal = ds.Tables("child").Rows(i).Item(0).ToString() Then
                prevVal = ds.Tables("child").Rows(i).Item(0).ToString()
                ds.Tables("child").Rows(i).Item(0) = ""
            Else
                prevVal = ds.Tables("child").Rows(i).Item(0).ToString()
            End If
        Next




        For i As Integer = 0 To ds.Tables("child").Rows.Count
            strChildItem &= "<tr>"
            For j As Integer = 0 To ds.Tables("child").Columns.Count - 1
                strChildItem &= "<td>"
                If i = 0 Then
                    strChildItem &= ds.Tables("child").Columns(j).ColumnName
                Else
                    strChildItem &= ds.Tables("child").Rows(i - 1).Item(j).ToString()
                End If
                strChildItem &= "</td>"
            Next
            strChildItem &= "</tr>"
        Next
        strChildItem &= "</table></div>"

        body = body.Replace("[child item]", strChildItem)
        Dim pnl As New Panel
        pnl.Controls.Add(New LiteralControl(body))

        'Dim attachment As String = "attachment; filename=" & DocType & "_" & DocID & ".pdf"
        'System.Web.HttpContext.Current.Response.ClearContent()
        'HttpContext.Current.Response.AddHeader("content-disposition", attachment)
        'HttpContext.Current.Response.ContentType = "application/pdf"

        'pnl.Font.Size = 7
        Dim stw As StringWriter = New StringWriter()
        Dim htextw As HtmlTextWriter = New HtmlTextWriter(stw)
        'pnl.RenderControl(htextw)
        'Dim document As iTextSharp.text.Document = New iTextSharp.text.Document()
        '' Dim font As New iTextSharp.text.Font(iTextSharp.text.FontFactory.GetFont("", 8, iTextSharp.text.Font.NORMAL, New iTextSharp.text.BaseColor(80, 80, 80)))
        'PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream)
        'document.Open()
        ''document.Add(iTextSharp.text.FontFactory.GetFont("Verdana", 8, iTextSharp.text.Font.NORMAL, New iTextSharp.text.BaseColor(80, 80, 80)))
        '' document.Add(New Phrase("Report Name: ", FontFactory.GetFont("Verdana", 8, iTextSharp.text.Font.BOLD, New iTextSharp.text.BaseColor(21, 66, 157))))
        'Dim Str As StringReader = New StringReader(stw.ToString())
        'Dim htmlworker As iTextSharp.text.html.simpleparser.HTMLWorker = New iTextSharp.text.html.simpleparser.HTMLWorker(document)
        'htmlworker.Parse(Str)
        'document.Close()

        'HttpContext.Current.Response.Write(document)
        'HttpContext.Current.Response.End()

        Response.AppendHeader("content-disposition", "attachment;filename=" & DocType & "_" & DocID & ".doc")
        Response.Charset = ""
        Response.Cache.SetCacheability(HttpCacheability.NoCache)
        Response.ContentType = "application/vnd.ms-word"
        Me.EnableViewState = False
        body.ToUpper()
        Response.Write(body)
        Response.[End]()
    End Sub

    Private Sub FillMainPage()
        Session("FIELDS") = Nothing
        Session("ACTION") = Nothing
        btnDocEdit.Visible = False
        btnPrint3.Visible = True
        btnPrint3.AlternateText = "DEFAULT"
        '' new added 
        btnAmendment.Visible = False
        btnCancel.Visible = False
        btnRecall.Visible = False
        btnSplit.Visible = False

        'Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim pid As Integer = RetDocId(Session("EID"))
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim da As SqlDataAdapter = New SqlDataAdapter("SELECT M.fname,M.docurl,D.Userid,m.ouid,M.curstatus,m.curdocNature, f.FormDESC,F.FormName,M.DocumentType  from MMM_MST_DOC M   WITH (NOLOCK) LEFT OUTER JOIN MMM_DOC_DTL D  WITH (NOLOCK) on D.tid =M.lasttid LEFT OUTER JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName=M.documenttype  and F.EID=M.EID where M.TID=" & pid, con)
        Dim ds As New DataSet()

        da.Fill(ds, "data")

        '' temporary for flipkart to restric rejection by HM  - BY SP ON 27_MAY_15
        Dim TempdocType As String = ""
        Dim TempCurStatus = ""
        Dim TempEid As Integer = 0
        TempEid = Session("EID")
        If ds.Tables("data").Rows.Count > 0 Then
            TempdocType = ds.Tables("data").Rows(0).Item("documenttype").ToString()
            TempCurStatus = ds.Tables("data").Rows(0).Item("curstatus").ToString()
        End If
        '' temporary for flipkart to restric rejection by HM  - BY SP ON 27_MAY_15

        If (ds.Tables("data").Rows(0).Item("curstatus").ToString()).ToUpper = "UPLOADED" Then
            btnDocApprove.Text = "SUBMIT"
            btnDocReject.Visible = False
            btnRejectDoc.Text = "CANCEL"
            btnDocEdit.Text = "EDIT"
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            da.SelectCommand.CommandText = "select * from MMM_MST_WORKFLOW_STATUS_CONFIG  WITH (NOLOCK) where eid=" & Session("EID") & " and documenttype='" & ds.Tables("data").Rows(0).Item("formName").ToString() & "' and statusname='UPLOADED'"
            da.SelectCommand.CommandType = CommandType.Text
            da.Fill(ds, "uploadSta")

            If ds.Tables("uploadSta").Rows.Count = 1 Then
                If IsDBNull(ds.Tables("uploadSta").Rows(0).Item("Recall")) = True Then
                    btnRecall.Visible = False
                Else
                    btnRecall.Text = ds.Tables("uploadSta").Rows(0).Item("Recall").ToString()
                    btnRecall.Visible = True
                End If
                'Hide or show print button on the bases of allow print checkbox in work flow status.

                If Convert.ToInt32(ds.Tables("uploadSta").Rows(0).Item("allowprint")) = 1 Then
                    btnPrint3.Visible = True
                Else
                    btnPrint3.Visible = False
                End If

                If IsDBNull(ds.Tables("uploadSta").Rows(0).Item("Cancel")) = True Then
                    btnCancel.Visible = False
                Else
                    btnCancel.Text = ds.Tables("uploadSta").Rows(0).Item("Cancel").ToString()
                    btnCancel.Visible = True
                End If

                '' for display split by sunil 03-jan-13
                da.SelectCommand.CommandText = "IsSplitActive"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("docid", pid)
                da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If

                Dim SplitStr As String = da.SelectCommand.ExecuteScalar()
                If SplitStr.Length > 0 Then
                    btnSplit.Visible = True
                    btnSplit.Text = SplitStr
                End If


                ' for copy of document
                da.SelectCommand.CommandText = "IsCopyActive"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("docid", pid)
                da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                Dim CopyStr As String = da.SelectCommand.ExecuteScalar()
                If CopyStr.Length > 0 Then
                    btnCopy.Visible = True
                    btnCopy.Text = CopyStr
                End If
                ' end here


                '' for display edit doc btn from settings by sp 04-jan-13
                '' for display split by sunil 03-dec-13
                da.SelectCommand.CommandText = "IsEditActive"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.Clear()
                'da.SelectCommand.Parameters.AddWithValue("eid", Session("EID"))
                da.SelectCommand.Parameters.AddWithValue("docid", pid)
                da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If

                Dim EditStr As String = da.SelectCommand.ExecuteScalar()
                If EditStr.Length > 0 Then
                    btnDocEdit.Visible = True
                    btnDocEdit.Text = EditStr
                End If
            End If
        ElseIf (ds.Tables("data").Rows(0).Item("curstatus").ToString()).ToUpper = "ARCHIVE" Then   ' removed for remodify of modified doc - by sp 'And (ds.Tables("data").Rows(0).Item("curDocNature").ToString()).ToUpper = "CREATE" Then
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            da.SelectCommand.CommandText = "select * from MMM_MST_WORKFLOW_STATUS_CONFIG  WITH (NOLOCK) where eid=" & Session("EID") & " and documenttype='" & ds.Tables("data").Rows(0).Item("formName").ToString() & "' and statusname='ARCHIVE'"
            da.SelectCommand.CommandType = CommandType.Text
            Dim dtUs As New DataTable
            da.Fill(dtUs)

            If dtUs.Rows.Count = 1 Then
                'Hide or show print button on the bases of allow print checkbox in work flow status.
                If Convert.ToInt32(dtUs.Rows(0).Item("allowprint")) = 1 Then
                    btnPrint3.Visible = True
                Else
                    btnPrint3.Visible = False
                End If
            Else
                btnPrint3.Visible = True
            End If

            dtUs.Dispose()

            da.SelectCommand.CommandText = "IsAmendmentActive"
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.Parameters.AddWithValue("docid", pid)
            da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If

            Dim Amendstr As String = da.SelectCommand.ExecuteScalar().ToString()
            If Amendstr.Length > 0 Then
                btnAmendment.Visible = True
                btnAmendment.Text = Amendstr
            End If
            'Changes By mayank for Role 24-Feb-2015(Manage By Role)

            da.SelectCommand.CommandType = CommandType.Text
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            da.SelectCommand.CommandText = "select Amendment,Rolename from mmm_mst_workflow_status_config  WITH (NOLOCK) where eid=" & Session("EID") & " and documenttype='" & ds.Tables("data").Rows(0).Item("formName").ToString() & "' and statusname='ARCHIVE'"
            Dim tempdt As New DataTable()
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.Fill(tempdt)
            If (tempdt.Rows.Count > 0) Then
                If (tempdt.Rows(0)("Rolename").ToString().ToUpper().Trim() = Session("USERROLE").ToString().ToUpper().Trim()) Then
                    da.SelectCommand.CommandText = "IsAmendmentActive_RoleBased"
                    da.SelectCommand.CommandType = CommandType.StoredProcedure
                    da.SelectCommand.Parameters.Clear()
                    da.SelectCommand.Parameters.AddWithValue("docid", pid)
                    da.SelectCommand.Parameters.AddWithValue("eid", Session("EID").ToString())
                    da.SelectCommand.Parameters.AddWithValue("docType", ds.Tables("data").Rows(0).Item("formName").ToString())
                    da.SelectCommand.Parameters.AddWithValue("uid", Session("UID"))
                    da.SelectCommand.Parameters.AddWithValue("RoleName", Session("USERROLE"))
                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If

                    Dim Amendstrs As New DataSet()
                    da.Fill(Amendstrs, "datas")
                    If (Amendstrs.Tables("datas" & Amendstrs.Tables.Count() - 1.ToString()).Rows(0)(0).ToString() = "Yes") Then
                        btnAmendment.Visible = True
                        btnAmendment.Text = tempdt.Rows(0)("Amendment").ToString()
                    End If
                End If
            End If

            'If Amendstrs.Length > 0 Then
            '    btnAmendment.Visible = True
            '    btnAmendment.Text = Amendstr
            'End If


            da.SelectCommand.CommandText = "isCancelActive"
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.Clear()
            'da.SelectCommand.Parameters.AddWithValue("eid", Session("EID"))
            da.SelectCommand.Parameters.AddWithValue("docid", pid)
            da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If

            Dim Cancelstr As String = da.SelectCommand.ExecuteScalar()
            If Cancelstr.Length > 0 Then
                btnCancel.Visible = True
                btnCancel.Text = Cancelstr
            End If


            ' for copy of document
            da.SelectCommand.CommandText = "IsCopyActive"
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.Parameters.AddWithValue("docid", pid)
            da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim CopyStr As String = da.SelectCommand.ExecuteScalar()
            If CopyStr.Length > 0 Then
                btnCopy.Visible = True
                btnCopy.Text = CopyStr
            End If
            ' end here

            '' new for split btn display 
            '' for display split by sunil 03-dec-13
            da.SelectCommand.CommandText = "IsSplitActive"
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.Clear()
            'da.SelectCommand.Parameters.AddWithValue("eid", Session("EID"))
            da.SelectCommand.Parameters.AddWithValue("docid", pid)
            da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If

            Dim SplitStr As String = da.SelectCommand.ExecuteScalar()
            If SplitStr.Length > 0 Then
                btnSplit.Visible = True
                btnSplit.Text = SplitStr
            End If

            btnDocApprove.Visible = False
            btnDocReject.Visible = False
            btnRejectDoc.Visible = False
            btnDocEdit.Visible = False
        Else '' for any other status 
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            da.SelectCommand.CommandText = "select * from MMM_MST_WORKFLOW_STATUS  WITH (NOLOCK) where eid=" & Session("EID") & " and documenttype='" & ds.Tables("data").Rows(0).Item("formName").ToString() & "' and statusname='" & ds.Tables("data").Rows(0).Item("curstatus").ToString() & "' "
            da.Fill(ds, "status")
            If ds.Tables("status").Rows.Count = 1 Then
                '''' new for amendment show by sunil 07-oct
                If IsDBNull(ds.Tables("status").Rows(0).Item("Amendment")) = True Then
                    btnAmendment.Visible = False
                Else
                    btnAmendment.Visible = True
                    btnAmendment.Text = ds.Tables("status").Rows(0).Item("Amendment").ToString()
                End If

                'Hide or show print button on the bases of allow print checkbox in workflow status.

                If Convert.ToInt32(ds.Tables("status").Rows(0).Item("allowprint")) = 1 Then
                    btnPrint3.Visible = True
                Else
                    btnPrint3.Visible = False
                End If

                If IsDBNull(ds.Tables("status").Rows(0).Item("approve")) = True Then
                    btnDocApprove.Visible = False
                Else
                    btnDocApprove.Visible = True
                    btnDocApprove.Text = ds.Tables("status").Rows(0).Item("approve").ToString()
                End If
                '' here disable this if first status and docnature is modify
                '' new added code for disable for first status in modify docnature by sunil on 14-nov-13
                Dim CurDocnat As String = ds.Tables("data").Rows(0).Item("curDocNature").ToString().ToUpper
                Dim Dord As Integer = ds.Tables("status").Rows(0).Item("DORD").ToString

                If IsDBNull(ds.Tables("status").Rows(0).Item("Reconsider")) = True Then
                    btnDocReject.Visible = False
                Else
                    If CurDocnat = "MODIFY" And Dord = 1 Then
                        btnDocReject.Visible = False  '' hide reconsider button 
                        btnRejectDoc.Visible = True   '' show reject button 
                        btnRejectDoc.Text = "Reject" 'ds.Tables("status").Rows(0).Item("Reject").ToString()
                        btnPerReject.Visible = True
                        btnPerReject.Text = "Reject"
                    Else
                        btnDocReject.Visible = True
                        btnDocReject.Text = ds.Tables("status").Rows(0).Item("Reconsider").ToString()
                    End If
                End If

                If IsDBNull(ds.Tables("status").Rows(0).Item("Reject")) = True Then
                    If CurDocnat = "MODIFY" And Dord = 1 Then
                    Else
                        btnRejectDoc.Visible = False
                    End If
                Else
                    btnRejectDoc.Visible = True
                    btnRejectDoc.Text = ds.Tables("status").Rows(0).Item("Reject").ToString()
                End If

                If IsDBNull(ds.Tables("status").Rows(0).Item("approve")) = True Then
                    btnApprove.Visible = False
                Else
                    btnApprove.Visible = True
                    btnApprove.Text = ds.Tables("status").Rows(0).Item("approve").ToString()
                    lblAppdoc.Text = ds.Tables("status").Rows(0).Item("approve").ToString()
                End If
                If IsDBNull(ds.Tables("status").Rows(0).Item("Reconsider")) = True Then
                    btnReject.Visible = False
                Else
                    btnReject.Visible = True
                    btnReject.Text = ds.Tables("status").Rows(0).Item("Reconsider").ToString()
                    lblrejdoc.Text = ds.Tables("status").Rows(0).Item("Reconsider").ToString()
                End If

                If IsDBNull(ds.Tables("status").Rows(0).Item("Reject")) = True Then
                    If CurDocnat = "MODIFY" And Dord = 1 Then
                    Else
                        btnPerReject.Visible = False
                    End If
                Else
                    btnPerReject.Visible = True
                    btnPerReject.Text = ds.Tables("status").Rows(0).Item("Reject").ToString()
                    lblPREJ.Text = ds.Tables("status").Rows(0).Item("Reject").ToString()
                End If

                '' for display split by sunil 03-jan-13
                da.SelectCommand.CommandText = "IsSplitActive"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("docid", pid)
                da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If

                Dim SplitStr As String = da.SelectCommand.ExecuteScalar()
                If SplitStr.Length > 0 Then
                    btnSplit.Visible = True
                    btnSplit.Text = SplitStr
                End If
                ' for copy of document
                da.SelectCommand.CommandText = "IsCopyActive"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("docid", pid)
                da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                Dim CopyStr As String = da.SelectCommand.ExecuteScalar()
                If CopyStr.Length > 0 Then
                    btnCopy.Visible = True
                    btnCopy.Text = CopyStr
                End If

                ' for Edit btn visible of document
                da.SelectCommand.CommandText = "IsEditActive"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("docid", pid)
                da.SelectCommand.Parameters.AddWithValue("Curuid", Session("UID"))

                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                Dim EditStr As String = da.SelectCommand.ExecuteScalar()
                If EditStr.Length > 0 Then
                    btnDocEdit.Visible = True
                    btnDocEdit.Text = EditStr
                Else
                    btnDocEdit.Visible = False
                End If
                ' for Edit btn visible of document

                'If ds.Tables("status").Rows(0).Item("edit").ToString() = "" Then
                '    btnDocEdit.Visible = False
                'Else
                '    btnDocEdit.Visible = True
                '    btnDocEdit.Text = ds.Tables("status").Rows(0).Item("edit").ToString()
                'End If


            End If

            da.SelectCommand.CommandText = "isRecallactive"
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.Parameters.AddWithValue("eid", Session("EID"))
            da.SelectCommand.Parameters.AddWithValue("docid", pid)
            da.SelectCommand.Parameters.AddWithValue("curUid", Session("UID"))
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If

            Dim str As String = da.SelectCommand.ExecuteScalar().ToString()
            If str.Length > 0 Then
                btnRecall.Visible = True
                btnRecall.Text = str
            End If
        End If

        updMain.Update()
        da.SelectCommand.CommandText = "select * from MMM_PRINT_TEMPLATE"
        da.SelectCommand.CommandType = CommandType.Text
        If ds.Tables("data").Rows.Count <> 1 Then
            da.Dispose()
            con.Dispose()
            Exit Sub
        End If

        Dim docType As String = ds.Tables("data").Rows(0).Item("formname").ToString()
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        da.SelectCommand.CommandText = "select * from MMM_PRINT_TEMPLATE  WITH (NOLOCK) Where EID=" & Session("EID").ToString() & " and isprint='1' AND Documenttype='" & docType & "'"
        da.SelectCommand.CommandType = CommandType.Text
        da.Fill(ds, "print")
        da.Dispose()
        con.Dispose()

        Dim docURl As String = ds.Tables("data").Rows(0).Item("docurl").ToString()
        Dim formCaption As String = ds.Tables("data").Rows(0).Item("formdesc").ToString()
        Dim curUser As Integer = Val(ds.Tables("data").Rows(0).Item("userid").ToString())
        Dim createUser As Integer = Val(ds.Tables("data").Rows(0).Item("ouid").ToString())
        Dim curstatus As String = ds.Tables("data").Rows(0).Item("curstatus").ToString()
        ViewState("FORMDESC") = formCaption

        ViewState("Doctype") = ds.Tables("data").Rows(0).Item("Documenttype").ToString()
        Session("Doctype") = ViewState("Doctype").ToString

        btnPrint1.Visible = False
        btnPrint2.Visible = False

        If ds.Tables("print").Rows.Count > 0 Then
            If ds.Tables("print").Rows(0).Item("wordprint") = "0" Then
                btnPrintWord.Visible = False
            Else
                btnPrintWord.Visible = True
            End If
            btnPrint1.Visible = True
            btnPrint1.AlternateText = ds.Tables("print").Rows(0).Item("tid").ToString()
            btnPrint1.ToolTip = "Print " & docType
            'btnPrintWord.Visible = True
            btnPrintWord.AlternateText = ds.Tables("print").Rows(0).Item("tid").ToString()
            btnPrintWord.ToolTip = "Print " & docType
        End If

        If ds.Tables("print").Rows.Count > 1 Then
            btnPrint2.Visible = True
            btnPrint2.AlternateText = ds.Tables("print").Rows(1).Item("tid").ToString()
            btnPrint2.ToolTip = "Print " & docType
            btnPrintWord.Visible = True
            btnPrintWord.AlternateText = ds.Tables("print").Rows(0).Item("tid").ToString()
            btnPrintWord.ToolTip = "Print " & docType
        End If

        If curUser = Val(Session("UID").ToString()) Then
            'btnDocApprove.Visible = True 
            'btnDocReject.Visible = True
            'If createUser = Val(Session("UID").ToString()) And curstatus = "UPLOADED" Then 'And curstatus = "REJECTED" Then
            '    'btnDocReject.Visible = False
            '    btnDocEdit.Visible = True
            '    btnDocEdit.Text = "EDIT"
            'Else
            '    'btnDocEdit.Visible = False
            '    ''btnDocReject.Visible = True
            'End If
        Else
            btnDocApprove.Visible = False
            btnDocReject.Visible = False
            btnRejectDoc.Visible = False
        End If
        BindDocDetailGrid(pid)
        BindDocumentDetail(pid)
        BindFutureMovementDetail(pid)
        'Code By Ajeet:Date:28-06-2014: code For disabling history tab
        Dim IsHistoryEnabled = "0"
        Dim DSH As New DataSet()
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim HQuery = "SELECT History FROM MMM_MST_FORMS  WITH (NOLOCK) WHERE EID= " & Session("eid").ToString() & " and History=1 and FormName='" & ds.Tables("data").Rows(0).Item("DocumentType").ToString() & "'"
        Using conH = New SqlConnection(conStr)
            Using daH = New SqlDataAdapter(HQuery, conH)
                daH.Fill(DSH)
            End Using
        End Using
        If DSH.Tables(0).Rows.Count > 0 Then
            IsHistoryEnabled = Convert.ToString(DSH.Tables(0).Rows(0).Item("History"))
        End If
        If IsHistoryEnabled = 1 Then
            '<%--<a href="#tabMy">HISTORY</a>--%>
            LBLHistroy.Text = "<a href=""#tabMy"">" & "HISTORY" & "</a>"
            tabMy.Attributes.Add("Style", "display:block;")
            gridHistory(pid, ds.Tables("data").Rows(0).Item("DocumentType").ToString())
        Else
            tabMy.Attributes.Add("Style", "display:none;")
        End If


        '' temporary for flipkart to restric rejection by HM  - BY SP ON 27_July_15
        '' If tempeid = 49 And tempdoctype.TOUPPER() = "PETTY CASH VOUCHER HUB" And Session("USERROLE").ToString().ToUpper().Trim() <> "RA" Then
        If TempEid = 49 And TempdocType.ToUpper() = "PETTY CASH VOUCHER HUB" Then ' And tempcurstatus.toupper() = "UPLOADED" Then
            ' btnDocApprove.Enabled = False
            ' btnDocReject.Enabled = False
            btnRejectDoc.Enabled = False
            ' btnDocEdit.Enabled = False

            ' btnDocApprove.Text = "Not Allowed"
            '  btnDocReject.Text = "Not Allowed"
            btnRejectDoc.Text = "Not Allowed"
            '  btnDocEdit.Text = "Not Allowed"
        End If
        ' '' temporary for flipkart to restric rejection by HM  - BY SP ON 27_July_15

    End Sub


    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
        If Not IsPostBack Then
            FillMainPage()
            Page.Form.Attributes.Add("enctype", "multipart/form-data")
            lblLogo.Text = "<img width=""190px"" height=""50px"" src=""logo/" & Session("CLOGO") & """ alt=""" & Session("CODE") & """  />"
            'Code by Ajeet Kumar :: Code For binding grid of CRM
            Try
                If Not ViewState("CRMDocType") Is Nothing Then
                    Dim DocType = ViewState("CRMDocType").ToString()
                    Dim UEmail = Session("EMAIL")
                    Dim l1 As New ListItem("no-reply@myndsol.com", 0)
                    Dim l2 As New ListItem(UEmail, 1)
                    ddlFromMail.Items.Insert(0, l1)
                    ddlFromMail.Items.Insert(1, l2)
                    BindCRM(DocType)
                    'If GVCRM.Rows.Count > 0 Then
                    '    GVCRM.Columns(1).Visible = False
                    'End If
                End If
            Catch ex As Exception
            End Try
        End If

    End Sub

    'prev
    'Public Sub BindDocDetailGrid(ByVal pid As Integer)

    '    Dim VAL As Integer = 0
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
    '    Dim ds As New DataSet()
    '    Dim fldQry As String = ""
    '    oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '    oda.SelectCommand.CommandText = "uspGetDetailGridByDocid"
    '    oda.SelectCommand.Parameters.Clear()
    '    oda.SelectCommand.Parameters.AddWithValue("@pid", pid)
    '    oda.SelectCommand.Parameters.AddWithValue("@uid", Session("UID"))
    '    oda.SelectCommand.Parameters.AddWithValue("@eid", Session("EID"))
    '    oda.Fill(ds, "data")
    '    Dim tblData As New StringBuilder()
    '    Dim chldata As New StringBuilder()
    '    Dim chldata1 As New StringBuilder()
    '    Dim chldata2 As New StringBuilder()
    '    Dim chldatahis As New StringBuilder()
    '    Dim cntchld As Integer = 0

    '    Session("Document") = ViewState("FORMDESC").ToString()

    '    Session("Doctype") = ViewState("Doctype").ToString()

    '    tblData.Append("<div class=""form"" style=""background-color:#fff;color:black""><h3> " & ViewState("FORMDESC").ToString() & " - [System Document ID: " & pid & "] </h3><table cellspacing=""0px"" cellpadding=""0px"" width=""100%"" border=""1px green"">")
    '    If ds.Tables("data").Rows.Count = 1 Then
    '        Dim cnt As Integer = ds.Tables("data").Columns.Count
    '        ' adding string for  new  child item 
    '        'Dim tblchildItmString As New StringBuilder()
    '        'tblchildItmString.Append("<div class=""form"" style=""background-color:#fff;color:black""><h3> " & ViewState("FORMDESC").ToString() & " - [System Document ID: " & pid & "] </h3><table cellspacing=""0px"" cellpadding=""0px"" width=""100%"" border=""1px green"">")
    '        For i As Integer = 0 To ds.Tables("data").Columns.Count - 1
    '            If i Mod 2 = 0 Then
    '                tblData.Append("<tr>")
    '            End If
    '            If ds.Tables("data").Rows(0).Item(i).ToString().Contains("CHILDITEM") Then
    '                Dim arr1 As String() = ds.Tables("data").Rows(0).Item(i).ToString.Split("-")
    '                If cntchld = 0 Then
    '                    chldata.Append("<tr><td colspan=""4""><div id=""tab"" style=""Width:100%;height:100%""><ul>")
    '                End If
    '                cntchld = cntchld + 1

    '                chldata.Append("<li><a href=""#tabPending" & i.ToString() & """>" & arr1(1).ToString() & "<asp:Label ID=""lblpending" & i & " "" runat=""server""></asp:Label></a></li>")
    '                chldata1.Append("<div id=""tabPending" & i.ToString() & """style=""min-height:300px;"">")

    '                ''now find the child Item and render it 
    '                oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                oda.SelectCommand.Parameters.Clear()
    '                oda.SelectCommand.CommandText = "uspGetDetailITEMDetail"
    '                oda.SelectCommand.Parameters.AddWithValue("docid", pid)
    '                oda.SelectCommand.Parameters.AddWithValue("FN", arr1(1))
    '                oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
    '                Dim dtItem As New DataTable()
    '                oda.Fill(dtItem)
    '                'Added By Mayank For Child Item values from doc Item Start Here 
    '                oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                oda.SelectCommand.Parameters.Clear()
    '                oda.SelectCommand.CommandText = "uspGetValuesFromChildonEdit"
    '                oda.SelectCommand.Parameters.AddWithValue("DOcid", pid)
    '                oda.SelectCommand.Parameters.AddWithValue("FN", arr1(1))
    '                oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
    '                Dim dtITemVal As New DataTable()
    '                oda.Fill(dtITemVal)
    '                Session(arr1(1) & "VAL") = dtITemVal
    '                Session("ChildDoctype") = arr1(1)
    '                'Added By Mayank For Child Item values from doc Item Closed Here 
    '                Dim tblChildItem As New StringBuilder()
    '                tblChildItem.Append("<table cellspacing=""2px"" cellpadding=""2px"" height=""100%"" width=""100%"" border=""1px double"">")
    '                For iRow As Integer = 0 To dtItem.Rows.Count
    '                    VAL = 1
    '                    tblChildItem.Append("<tr>")
    '                    For iColumn As Integer = 0 To dtItem.Columns.Count - 1
    '                        If iRow = 0 Then
    '                            tblChildItem.Append("<td><h3 class=""tabs"">" & dtItem.Columns(iColumn).ColumnName.ToString() & "</h3></td>")
    '                        Else
    '                            '' new by sp for showing attachment in child item 15-jan-14
    '                            If dtItem.Rows(iRow - 1).Item(iColumn).ToString().Contains(Session("EID").ToString() & "/") Then
    '                                tblChildItem.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript: return window.open('DOCS/" & dtItem.Rows(iRow - 1).Item(iColumn).ToString() & "', 'CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
    '                            Else
    '                                tblChildItem.Append("<td>" & dtItem.Rows(iRow - 1).Item(iColumn).ToString() & "</td>")
    '                            End If

    '                        End If
    '                    Next
    '                    tblChildItem.Append("</tr>")
    '                Next
    '                tblChildItem.Append("</table></div>")
    '                chldata1.Append(tblChildItem)
    '                '' added code for child item history by "balli"
    '                'oda.SelectCommand.CommandText = "select * from MMM_MST_HISTORY where eid=" & Session("EID") & " and docid=" & pid & " and tablename='MMM_MST_DOC_ITEM'"
    '                'oda.SelectCommand.CommandType = CommandType.Text
    '                'Dim da As New DataSet()
    '                'oda.Fill(da, "chldata")
    '                'If da.Tables("chldata").Rows.Count > 0 Then
    '                '    chldata.Append("<li><a href=""#tabHis" & i.ToString() & """>Child Item History " & "<asp:Label ID=""lblpending" & i & " "" runat=""server""></asp:Label></a></li>")
    '                '    chldata2.Append("<div id=""tabHis" & i.ToString() & """style=""min-height:300px;"">")
    '                '    oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                '    oda.SelectCommand.Parameters.Clear()
    '                '    oda.SelectCommand.CommandText = "uspGetHistoryDetail"
    '                '    oda.SelectCommand.Parameters.AddWithValue("docid", pid)
    '                '    oda.SelectCommand.Parameters.AddWithValue("FN", arr1(1))
    '                '    oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
    '                '    Dim HisItem As New DataTable()
    '                '    oda.Fill(HisItem)
    '                '    Dim tblChildItemHis As New StringBuilder()
    '                '    tblChildItemHis.Append("<table cellspacing=""2px"" id=""table"" cellpadding=""2px"" width=""100%"" border=""1px double"">")
    '                '    For trow As Integer = 0 To HisItem.Rows.Count
    '                '        VAL = 1
    '                '        tblChildItemHis.Append("<tr>")
    '                '        For t As Integer = 0 To HisItem.Columns.Count - 1
    '                '            If trow = 0 Then
    '                '                tblChildItemHis.Append("<td><h3>" & HisItem.Columns(t).ColumnName.ToString() & "</h3></td>")
    '                '            Else
    '                '                tblChildItemHis.Append("<td>" & HisItem.Rows(trow - 1).Item(t).ToString() & "</td>")
    '                '            End If
    '                '        Next
    '                '        tblChildItemHis.Append("</tr>")
    '                '    Next
    '                '    tblChildItemHis.Append("</table></div>")
    '                '    chldata2.Append(tblChildItemHis)
    '                '    chldata.Append(chldata2)
    '                '    'end code "balli" 
    '                '  End If
    '            Else
    '                tblData.Append("<td align=""left"">" & ds.Tables("data").Columns(i).ColumnName & "</td>")
    '                If ds.Tables("data").Rows(0).Item(i).ToString().Contains(Session("EID").ToString() & "/") Then
    '                    ' prev wrong  tblData.Append("<td align=""left""><a  href=""Javascript:window.open('../DOCS/" & ds.Tables("data").Rows(0).Item(i).ToString() & "'); return false;"" >View Attachment</a></td>")
    '                    tblData.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript:return window.open('viewpdf.aspx?docid=" & pid & "&EidPage=" & ds.Tables("data").Rows(0).Item(i).ToString() & "','CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
    '                    'last running - tblData.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript: return window.open('DOCS/" & ds.Tables("data").Rows(0).Item(i).ToString() & "', 'CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
    '                Else
    '                    tblData.Append("<td align=""left"">" & ds.Tables("data").Rows(0).Item(i).ToString() & "</td>")
    '                End If
    '            End If


    '            If i Mod 2 = 1 Then
    '                tblData.Append("</tr>")
    '            End If
    '        Next
    '        ' added code for child item history by "balli"
    '        oda.SelectCommand.CommandText = "select * from MMM_MST_HISTORY where eid=" & Session("EID") & " and docid=" & pid & " and tablename='MMM_MST_DOC_ITEM'"
    '        oda.SelectCommand.CommandType = CommandType.Text
    '        Dim da As New DataSet()
    '        oda.Fill(da, "chldata")

    '        Dim CHtabCaption = ""
    '        If da.Tables("chldata").Rows.Count > 0 Then
    '            CHtabCaption = da.Tables("chldata").Rows(0).Item("documenttype").ToString()
    '        End If
    '        If da.Tables("chldata").Rows.Count > 0 Then
    '            chldata.Append("<li><a href=""#tabHis"">" & CHtabCaption & "" & "-HISTORY" & "<asp:Label ID=""lblpending"" runat=""server""></asp:Label></a></li>")
    '            chldata2.Append("<div id=""tabHis""style=""min-height:300px;"">")
    '            Dim j As Integer = 0
    '            ' If da.Tables("chldata").Rows.Count > 0 Then
    '            oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '            oda.SelectCommand.Parameters.Clear()
    '            oda.SelectCommand.CommandText = "uspGetHistoryDetail"
    '            oda.SelectCommand.Parameters.AddWithValue("docid", pid)
    '            oda.SelectCommand.Parameters.AddWithValue("FN", da.Tables("chldata").Rows(j).Item("documenttype").ToString())
    '            oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
    '            Dim HisItem As New DataTable()
    '            oda.Fill(HisItem)
    '            Dim tblChildItemHis As New StringBuilder()
    '            tblChildItemHis.Append("<table cellspacing=""2px"" cellpadding=""2px"" height=""100%"" width=""100%"" border=""1px double"">")

    '            tblChildItemHis.Append("<tr>")
    '            For t As Integer = 0 To HisItem.Columns.Count - 1
    '                tblChildItemHis.Append("<td><h3 class=""tabs"" >" & HisItem.Columns(t).ColumnName.ToString() & "</h3></td>")
    '            Next
    '            tblChildItemHis.Append("</tr>")

    '            For trow As Integer = 0 To HisItem.Rows.Count - 1
    '                tblChildItemHis.Append("<tr>")
    '                For t As Integer = 0 To HisItem.Columns.Count - 1
    '                    tblChildItemHis.Append("<td>" & HisItem.Rows(trow).Item(t).ToString() & "</td>")
    '                Next
    '                tblChildItemHis.Append("</tr>")
    '            Next
    '            tblChildItemHis.Append("</table></div>")
    '            chldata2.Append(tblChildItemHis)
    '            chldata.Append(chldata2)
    '            ' Next 'end code "balli" 
    '            j = j + 1
    '            ' End If
    '        End If
    '        chldata.Append("</ul>")
    '        'chldata1.Append("</div>")
    '        chldata.Append(chldata1)
    '        chldata.Append("</div></td></tr>")
    '        tblData.Append(chldata)
    '        lblDetail.Text = tblData.ToString() & "</table></div>"
    '    End If
    '    con.Close()
    '    oda.Dispose()
    '    con.Dispose()
    'End Sub

    'dt 05-nov-15
    'Public Sub BindDocDetailGrid(ByVal pid As Integer)
    '    Dim VAL As Integer = 0
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
    '    Dim ds As New DataSet()
    '    Dim dt As New DataTable()
    '    Dim fldQry As String = ""
    '    oda.SelectCommand.CommandType = CommandType.StoredProcedure

    '    oda.SelectCommand.CommandText = "uspGetDetailGridByDocid"
    '    oda.SelectCommand.Parameters.Clear()
    '    oda.SelectCommand.Parameters.AddWithValue("@pid", pid)
    '    oda.SelectCommand.Parameters.AddWithValue("@uid", Session("UID"))
    '    oda.SelectCommand.Parameters.AddWithValue("@eid", Session("EID"))
    '    oda.Fill(ds, "data")
    '    Dim tblData As New StringBuilder()
    '    Dim chldata As New StringBuilder()
    '    Dim chldata1 As New StringBuilder()
    '    Dim chldata2 As New StringBuilder()
    '    Dim chldatahis As New StringBuilder()
    '    Dim cntchld As Integer = 0
    '    Session("Document") = ViewState("FORMDESC").ToString()
    '    Session("Doctype") = ViewState("Doctype").ToString()

    '    'finding the uploader '
    '    'WITH (NOLOCK) added by Himank on 28th sep 2015
    '    oda.SelectCommand.CommandText = "select * from MMM_MST_Fields  WITH (NOLOCK) where eid='" & Session("EID") & "' and documenttype='" & ViewState("Doctype").ToString() & "' AND FIELDTYPE='FILE UPLOADER'"
    '    oda.SelectCommand.CommandType = CommandType.Text
    '    oda.Fill(dt)

    '    tblData.Append("<div class=""form"" style=""background-color:#fff;color:black""><h3> " & ViewState("FORMDESC").ToString() & " - [System Document ID: " & pid & "] </h3><table cellspacing=""0px"" cellpadding=""0px"" width=""100%"" border=""1px green"">")
    '    If ds.Tables("data").Rows.Count = 1 Then
    '        Dim cnt As Integer = ds.Tables("data").Columns.Count
    '        ' adding string for  new  child item 
    '        'Dim tblchildItmString As New StringBuilder()
    '        'tblchildItmString.Append("<div class=""form"" style=""background-color:#fff;color:black""><h3> " & ViewState("FORMDESC").ToString() & " - [System Document ID: " & pid & "] </h3><table cellspacing=""0px"" cellpadding=""0px"" width=""100%"" border=""1px green"">")
    '        For i As Integer = 0 To ds.Tables("data").Columns.Count - 1
    '            If i Mod 2 = 0 Then
    '                tblData.Append("<tr>")
    '            End If
    '            If ds.Tables("data").Rows(0).Item(i).ToString().Contains("CHILDITEM") Then
    '                Dim arr1 As String() = ds.Tables("data").Rows(0).Item(i).ToString.Split("-")
    '                If cntchld = 0 Then
    '                    chldata.Append("<tr><td colspan=""4""><div id=""tab"" style=""Width:100%;height:100%""><ul>")
    '                End If
    '                cntchld = cntchld + 1

    '                chldata.Append("<li><a href=""#tabPending" & i.ToString() & """>" & arr1(1).ToString() & "<asp:Label ID=""lblpending" & i & " "" runat=""server""></asp:Label></a></li>")
    '                chldata1.Append("<div id=""tabPending" & i.ToString() & """style=""min-height:300px;"">")

    '                ''now find the child Item and render it 
    '                oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                oda.SelectCommand.Parameters.Clear()
    '                oda.SelectCommand.CommandText = "uspGetDetailITEMDetail"
    '                oda.SelectCommand.Parameters.AddWithValue("docid", pid)
    '                oda.SelectCommand.Parameters.AddWithValue("FN", arr1(1))
    '                oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
    '                Dim dtItem As New DataTable()
    '                oda.Fill(dtItem)
    '                Dim tblChildItem As New StringBuilder()
    '                tblChildItem.Append("<table cellspacing=""2px"" cellpadding=""2px"" height=""100%"" width=""100%"" border=""1px double"">")
    '                For iRow As Integer = 0 To dtItem.Rows.Count
    '                    VAL = 1
    '                    tblChildItem.Append("<tr>")
    '                    For iColumn As Integer = 0 To dtItem.Columns.Count - 1
    '                        If iRow = 0 Then
    '                            tblChildItem.Append("<td><h3 class=""tabs"">" & dtItem.Columns(iColumn).ColumnName.ToString() & "</h3></td>")
    '                        Else
    '                            '' new by sp for showing attachment in child item 15-jan-14
    '                            If dtItem.Rows(iRow - 1).Item(iColumn).ToString().Contains(Session("EID").ToString() & "/") Then
    '                                tblChildItem.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript: return window.open('DOCS/" & dtItem.Rows(iRow - 1).Item(iColumn).ToString() & "', 'CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
    '                            Else
    '                                tblChildItem.Append("<td>" & dtItem.Rows(iRow - 1).Item(iColumn).ToString() & "</td>")
    '                            End If

    '                        End If
    '                    Next
    '                    tblChildItem.Append("</tr>")
    '                Next
    '                tblChildItem.Append("</table></div>")
    '                chldata1.Append(tblChildItem)
    '                '' added code for child item history by "balli"
    '                'oda.SelectCommand.CommandText = "select * from MMM_MST_HISTORY where eid=" & Session("EID") & " and docid=" & pid & " and tablename='MMM_MST_DOC_ITEM'"
    '                'oda.SelectCommand.CommandType = CommandType.Text
    '                'Dim da As New DataSet()
    '                'oda.Fill(da, "chldata")
    '                'If da.Tables("chldata").Rows.Count > 0 Then
    '                '    chldata.Append("<li><a href=""#tabHis" & i.ToString() & """>Child Item History " & "<asp:Label ID=""lblpending" & i & " "" runat=""server""></asp:Label></a></li>")
    '                '    chldata2.Append("<div id=""tabHis" & i.ToString() & """style=""min-height:300px;"">")
    '                '    oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                '    oda.SelectCommand.Parameters.Clear()
    '                '    oda.SelectCommand.CommandText = "uspGetHistoryDetail"
    '                '    oda.SelectCommand.Parameters.AddWithValue("docid", pid)
    '                '    oda.SelectCommand.Parameters.AddWithValue("FN", arr1(1))
    '                '    oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
    '                '    Dim HisItem As New DataTable()
    '                '    oda.Fill(HisItem)
    '                '    Dim tblChildItemHis As New StringBuilder()
    '                '    tblChildItemHis.Append("<table cellspacing=""2px"" id=""table"" cellpadding=""2px"" width=""100%"" border=""1px double"">")
    '                '    For trow As Integer = 0 To HisItem.Rows.Count
    '                '        VAL = 1
    '                '        tblChildItemHis.Append("<tr>")
    '                '        For t As Integer = 0 To HisItem.Columns.Count - 1
    '                '            If trow = 0 Then
    '                '                tblChildItemHis.Append("<td><h3>" & HisItem.Columns(t).ColumnName.ToString() & "</h3></td>")
    '                '            Else
    '                '                tblChildItemHis.Append("<td>" & HisItem.Rows(trow - 1).Item(t).ToString() & "</td>")
    '                '            End If
    '                '        Next
    '                '        tblChildItemHis.Append("</tr>")
    '                '    Next
    '                '    tblChildItemHis.Append("</table></div>")
    '                '    chldata2.Append(tblChildItemHis)
    '                '    chldata.Append(chldata2)
    '                '    'end code "balli" 
    '                '  End If
    '            Else
    '                tblData.Append("<td align=""left"">" & ds.Tables("data").Columns(i).ColumnName & "</td>")
    '                Dim flg As Integer = 0
    '                If dt.Rows.Count > 0 Then
    '                    For j As Integer = 0 To dt.Rows.Count - 1
    '                        If dt.Rows(j).Item("displayname").ToString.ToUpper = ds.Tables("data").Columns(i).ColumnName.ToUpper Then
    '                            If ds.Tables("data").Rows(0).Item(i).ToString.Length > 0 Then
    '                                If ds.Tables("data").Rows(0).Item(i).ToString.ToUpper <> "NULL" Then
    '                                    flg = 1
    '                                    Exit For
    '                                Else
    '                                    flg = 2
    '                                    Exit For
    '                                End If

    '                            End If
    '                        End If
    '                    Next
    '                End If
    '                If flg = 1 Then
    '                    tblData.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript:return window.open('viewpdf.aspx?docid=" & pid & "&EidPage=" & ds.Tables("data").Rows(0).Item(i).ToString() & "','CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
    '                Else
    '                    If flg = 2 Then
    '                        tblData.Append("<td align=""left""></td>")
    '                    Else
    '                        tblData.Append("<td align=""left"">" & ds.Tables("data").Rows(0).Item(i).ToString() & "</td>")
    '                    End If
    '                End If

    '                ' commented by balli because issue comes when data found with below criteria 13 april 15
    '                'If ds.Tables("data").Rows(0).Item(i).ToString().Contains(Session("EID").ToString() & "/") Then

    '                '    ' prev wrong  tblData.Append("<td align=""left""><a  href=""Javascript:window.open('../DOCS/" & ds.Tables("data").Rows(0).Item(i).ToString() & "'); return false;"" >View Attachment</a></td>")
    '                '    tblData.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript:return window.open('viewpdf.aspx?docid=" & pid & "&EidPage=" & ds.Tables("data").Rows(0).Item(i).ToString() & "','CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
    '                '    'last running - tblData.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript: return window.open('DOCS/" & ds.Tables("data").Rows(0).Item(i).ToString() & "', 'CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
    '                'Else
    '                '    tblData.Append("<td align=""left"">" & ds.Tables("data").Rows(0).Item(i).ToString() & "</td>")
    '                'End If


    '            End If


    '            If i Mod 2 = 1 Then
    '                tblData.Append("</tr>")
    '            End If
    '        Next
    '        ' added code for child item history by "balli"
    '        'WITH (NOLOCK) added by Himank on 28th sep 2015
    '        oda.SelectCommand.CommandText = "select * from MMM_MST_HISTORY  WITH (NOLOCK) where eid=" & Session("EID") & " and docid=" & pid & " and tablename='MMM_MST_DOC_ITEM'"
    '        oda.SelectCommand.CommandType = CommandType.Text
    '        Dim da As New DataSet()
    '        oda.Fill(da, "chldata")

    '        Dim CHtabCaption = ""
    '        If da.Tables("chldata").Rows.Count > 0 Then
    '            CHtabCaption = da.Tables("chldata").Rows(0).Item("documenttype").ToString()
    '        End If
    '        If da.Tables("chldata").Rows.Count > 0 Then
    '            chldata.Append("<li><a href=""#tabHis"">" & CHtabCaption & "" & "-HISTORY" & "<asp:Label ID=""lblpending"" runat=""server""></asp:Label></a></li>")
    '            chldata2.Append("<div id=""tabHis""style=""min-height:300px;"">")
    '            Dim j As Integer = 0
    '            ' If da.Tables("chldata").Rows.Count > 0 Then
    '            oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '            oda.SelectCommand.Parameters.Clear()
    '            oda.SelectCommand.CommandText = "uspGetHistoryDetail"
    '            oda.SelectCommand.Parameters.AddWithValue("docid", pid)
    '            oda.SelectCommand.Parameters.AddWithValue("FN", da.Tables("chldata").Rows(j).Item("documenttype").ToString())
    '            oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
    '            Dim HisItem As New DataTable()
    '            oda.Fill(HisItem)
    '            Dim tblChildItemHis As New StringBuilder()
    '            tblChildItemHis.Append("<table cellspacing=""2px"" cellpadding=""2px"" height=""100%"" width=""100%"" border=""1px double"">")

    '            tblChildItemHis.Append("<tr>")
    '            For t As Integer = 0 To HisItem.Columns.Count - 1
    '                tblChildItemHis.Append("<td><h3 class=""tabs"" >" & HisItem.Columns(t).ColumnName.ToString() & "</h3></td>")
    '            Next
    '            tblChildItemHis.Append("</tr>")

    '            For trow As Integer = 0 To HisItem.Rows.Count - 1
    '                tblChildItemHis.Append("<tr>")
    '                For t As Integer = 0 To HisItem.Columns.Count - 1
    '                    tblChildItemHis.Append("<td>" & HisItem.Rows(trow).Item(t).ToString() & "</td>")
    '                Next
    '                tblChildItemHis.Append("</tr>")
    '            Next
    '            tblChildItemHis.Append("</table></div>")
    '            chldata2.Append(tblChildItemHis)
    '            chldata.Append(chldata2)
    '            ' Next 'end code "balli" 
    '            j = j + 1
    '            ' End If
    '        End If
    '        chldata.Append("</ul>")
    '        'chldata1.Append("</div>")
    '        chldata.Append(chldata1)
    '        chldata.Append("</div></td></tr>")
    '        tblData.Append(chldata)
    '        lblDetail.Text = tblData.ToString() & "</table></div>"
    '    End If
    '    con.Close()
    '    oda.Dispose()
    '    con.Dispose()
    'End Sub


    Public Sub BindDocDetailGrid(ByVal pid As Integer)
        Dim VAL As Integer = 0
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet()
        Dim dt As New DataTable()
        Dim fldQry As String = ""
        oda.SelectCommand.CommandType = CommandType.StoredProcedure

        oda.SelectCommand.CommandText = "uspGetDetailGridByDocid"
        oda.SelectCommand.Parameters.Clear()
        oda.SelectCommand.Parameters.AddWithValue("@pid", pid)
        oda.SelectCommand.Parameters.AddWithValue("@uid", Session("UID"))
        oda.SelectCommand.Parameters.AddWithValue("@eid", Session("EID"))
        oda.Fill(ds, "data")
        Dim tblData As New StringBuilder()
        Dim chldata As New StringBuilder()
        Dim chldata1 As New StringBuilder()
        Dim chldata2 As New StringBuilder()
        Dim chldatahis As New StringBuilder()
        Dim cntchld As Integer = 0
        Session("Document") = ViewState("FORMDESC").ToString()
        Session("Doctype") = ViewState("Doctype").ToString()

        'finding the uploader '
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        oda.SelectCommand.CommandText = "select * from MMM_MST_Fields  WITH (NOLOCK) where eid='" & Session("EID") & "' and documenttype='" & ViewState("Doctype").ToString() & "' AND FIELDTYPE='FILE UPLOADER'"
        oda.SelectCommand.CommandType = CommandType.Text
        oda.Fill(dt)
        oda.SelectCommand.CommandText = "select displayname,docstyle from mmm_mst_fields where documenttype='" & ViewState("Doctype").ToString() & "' and eid=" & Session("EID") & " and ShowOnDocDetail=1 order by DocDtlDisplayOrder"
        oda.SelectCommand.CommandType = CommandType.Text
        Dim dt1 As New DataTable
        oda.Fill(dt1)

        tblData.Append("<div class=""form"" style=""background-color:#fff;color:black""><h3> " & ViewState("FORMDESC").ToString() & " - [System Document ID: " & pid & "] LoggedIn User : [" & Session("USERNAME") & "] | Role : [" & Session("USERROLE") & "] </h3><table cellspacing=""0px"" cellpadding=""0px"" width=""100%"" border=""1px green"">")
        If ds.Tables("data").Rows.Count = 1 Then
            Dim cnt As Integer = ds.Tables("data").Columns.Count
            ' adding string for  new  child item 
            'Dim tblchildItmString As New StringBuilder()
            'tblchildItmString.Append("<div class=""form"" style=""background-color:#fff;color:black""><h3> " & ViewState("FORMDESC").ToString() & " - [System Document ID: " & pid & "] </h3><table cellspacing=""0px"" cellpadding=""0px"" width=""100%"" border=""1px green"">")
            For i As Integer = 0 To ds.Tables("data").Columns.Count - 1
                If i Mod 2 = 0 Then
                    tblData.Append("<tr>")
                End If
                If ds.Tables("data").Rows(0).Item(i).ToString().Contains("CHILDITEM") Then
                    Dim arr1 As String() = ds.Tables("data").Rows(0).Item(i).ToString.Split("-")
                    If cntchld = 0 Then
                        chldata.Append("<tr><td colspan=""4""><div id=""tab"" style=""Width:100%;height:100%""><ul>")
                    End If
                    cntchld = cntchld + 1

                    chldata.Append("<li><a href=""#tabPending" & i.ToString() & """>" & arr1(1).ToString() & "<asp:Label ID=""lblpending" & i & " "" runat=""server""></asp:Label></a></li>")
                    chldata1.Append("<div id=""tabPending" & i.ToString() & """style=""min-height:300px;"">")

                    ''now find the child Item and render it 
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.Parameters.Clear()
                    oda.SelectCommand.CommandText = "uspGetDetailITEMDetail"
                    oda.SelectCommand.Parameters.AddWithValue("docid", pid)
                    oda.SelectCommand.Parameters.AddWithValue("FN", arr1(1))
                    oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
                    Dim dtItem As New DataTable()
                    oda.Fill(dtItem)
                    Dim tblChildItem As New StringBuilder()
                    tblChildItem.Append("<div style=""overflow-x: scroll; width: 1266px ! important;"">")
                    tblChildItem.Append("<table cellspacing=""2px"" cellpadding=""2px"" height=""100%"" border=""1px double"" style=""width:600px; overflow:scroll;"">")
                    For iRow As Integer = 0 To dtItem.Rows.Count
                        VAL = 1
                        tblChildItem.Append("<tr>")
                        For iColumn As Integer = 0 To dtItem.Columns.Count - 1
                            If iRow = 0 Then
                                tblChildItem.Append("<td><h3 class=""tabs"">" & dtItem.Columns(iColumn).ColumnName.ToString() & "</h3></td>")
                            Else
                                '' new by sp for showing attachment in child item 15-jan-14
                                If dtItem.Rows(iRow - 1).Item(iColumn).ToString().Contains(Session("EID").ToString() & "/") Then
                                    tblChildItem.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript: return window.open('DOCS/" & dtItem.Rows(iRow - 1).Item(iColumn).ToString() & "', 'CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
                                Else
                                    tblChildItem.Append("<td>" & dtItem.Rows(iRow - 1).Item(iColumn).ToString() & "</td>")
                                End If

                            End If
                        Next
                        tblChildItem.Append("</tr>")
                    Next
                    tblChildItem.Append("</table></div></div>")

                    chldata1.Append(tblChildItem)
                    '' added code for child item history by "balli"
                    'oda.SelectCommand.CommandText = "select * from MMM_MST_HISTORY where eid=" & Session("EID") & " and docid=" & pid & " and tablename='MMM_MST_DOC_ITEM'"
                    'oda.SelectCommand.CommandType = CommandType.Text
                    'Dim da As New DataSet()
                    'oda.Fill(da, "chldata")
                    'If da.Tables("chldata").Rows.Count > 0 Then
                    '    chldata.Append("<li><a href=""#tabHis" & i.ToString() & """>Child Item History " & "<asp:Label ID=""lblpending" & i & " "" runat=""server""></asp:Label></a></li>")
                    '    chldata2.Append("<div id=""tabHis" & i.ToString() & """style=""min-height:300px;"">")
                    '    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    '    oda.SelectCommand.Parameters.Clear()
                    '    oda.SelectCommand.CommandText = "uspGetHistoryDetail"
                    '    oda.SelectCommand.Parameters.AddWithValue("docid", pid)
                    '    oda.SelectCommand.Parameters.AddWithValue("FN", arr1(1))
                    '    oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
                    '    Dim HisItem As New DataTable()
                    '    oda.Fill(HisItem)
                    '    Dim tblChildItemHis As New StringBuilder()
                    '    tblChildItemHis.Append("<table cellspacing=""2px"" id=""table"" cellpadding=""2px"" width=""100%"" border=""1px double"">")
                    '    For trow As Integer = 0 To HisItem.Rows.Count
                    '        VAL = 1
                    '        tblChildItemHis.Append("<tr>")
                    '        For t As Integer = 0 To HisItem.Columns.Count - 1
                    '            If trow = 0 Then
                    '                tblChildItemHis.Append("<td><h3>" & HisItem.Columns(t).ColumnName.ToString() & "</h3></td>")
                    '            Else
                    '                tblChildItemHis.Append("<td>" & HisItem.Rows(trow - 1).Item(t).ToString() & "</td>")
                    '            End If
                    '        Next
                    '        tblChildItemHis.Append("</tr>")
                    '    Next
                    '    tblChildItemHis.Append("</table></div>")
                    '    chldata2.Append(tblChildItemHis)
                    '    chldata.Append(chldata2)
                    '    'end code "balli" 
                    '  End If
                Else
                    If i > 2 Then
                        If ds.Tables("data").Columns(i).ColumnName.ToUpper = dt1.Rows(i - 3)("displayname").ToString().ToUpper Then
                            Dim tempval() As String = Convert.ToString(dt1.Rows(i - 3)("docstyle")).Split(",")
                            If tempval.Length > 1 Then
                                tblData.Append("<td align=""left"" style='" & tempval(0) & "'>" & ds.Tables("data").Columns(i).ColumnName & "</td>")
                            Else
                                tblData.Append("<td align=""left"">" & ds.Tables("data").Columns(i).ColumnName & "</td>")
                            End If

                        Else
                            tblData.Append("<td align=""left"">" & ds.Tables("data").Columns(i).ColumnName & "</td>")
                        End If
                    Else
                        tblData.Append("<td align=""left"">" & ds.Tables("data").Columns(i).ColumnName & "</td>")
                    End If


                    Dim flg As Integer = 0
                    If dt.Rows.Count > 0 Then
                        For j As Integer = 0 To dt.Rows.Count - 1
                            If dt.Rows(j).Item("displayname").ToString.ToUpper = ds.Tables("data").Columns(i).ColumnName.ToUpper Then
                                If ds.Tables("data").Rows(0).Item(i).ToString.Length > 0 Then
                                    If ds.Tables("data").Rows(0).Item(i).ToString.ToUpper <> "NULL" Then
                                        flg = 1
                                        Exit For
                                    Else
                                        flg = 2
                                        Exit For
                                    End If

                                End If
                            End If
                        Next
                    End If
                    If flg = 1 Then
                        tblData.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript:return window.open('viewpdf.aspx?docid=" & pid & "&EidPage=" & ds.Tables("data").Rows(0).Item(i).ToString() & "','CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
                    Else
                        If flg = 2 Then
                            tblData.Append("<td align=""left""></td>")
                        Else
                            If i > 2 Then
                                If ds.Tables("data").Columns(i).ColumnName.ToUpper = dt1.Rows(i - 3)("displayname").ToString().ToUpper Then
                                    Dim tempval() As String = Convert.ToString(dt1.Rows(i - 3)("docstyle")).Split(",")
                                    If tempval.Length > 1 Then
                                        tblData.Append("<td align=""left"" style='" & tempval(1) & "'>" & ds.Tables("data").Rows(0).Item(i).ToString() & "</td>")
                                    Else
                                        tblData.Append("<td align=""left"">" & ds.Tables("data").Rows(0).Item(i).ToString() & "</td>")
                                    End If
                                Else
                                    tblData.Append("<td align=""left"">" & ds.Tables("data").Rows(0).Item(i).ToString() & "</td>")
                                End If
                            Else
                                tblData.Append("<td align=""left"">" & ds.Tables("data").Rows(0).Item(i).ToString() & "</td>")
                            End If

                        End If
                    End If

                    ' commented by balli because issue comes when data found with below criteria 13 april 15
                    'If ds.Tables("data").Rows(0).Item(i).ToString().Contains(Session("EID").ToString() & "/") Then

                    '    ' prev wrong  tblData.Append("<td align=""left""><a  href=""Javascript:window.open('../DOCS/" & ds.Tables("data").Rows(0).Item(i).ToString() & "'); return false;"" >View Attachment</a></td>")
                    '    tblData.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript:return window.open('viewpdf.aspx?docid=" & pid & "&EidPage=" & ds.Tables("data").Rows(0).Item(i).ToString() & "','CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
                    '    'last running - tblData.Append("<td align=""left""><input type=""button"" value=""View Attachment"" onclick=""Javascript: return window.open('DOCS/" & ds.Tables("data").Rows(0).Item(i).ToString() & "', 'CustomPopUp', 'width=600, height=600, menubar=no, resizable=yes');"" /></td>")
                    'Else
                    '    tblData.Append("<td align=""left"">" & ds.Tables("data").Rows(0).Item(i).ToString() & "</td>")
                    'End If


                End If


                If i Mod 2 = 1 Then
                    tblData.Append("</tr>")
                End If
            Next
            ' added code for child item history by "balli"
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            oda.SelectCommand.CommandText = "select * from MMM_MST_HISTORY  WITH (NOLOCK) where eid=" & Session("EID") & " and docid=" & pid & " and tablename='MMM_MST_DOC_ITEM'"
            oda.SelectCommand.CommandType = CommandType.Text
            Dim da As New DataSet()
            oda.Fill(da, "chldata")

            Dim CHtabCaption = ""
            If da.Tables("chldata").Rows.Count > 0 Then
                CHtabCaption = da.Tables("chldata").Rows(0).Item("documenttype").ToString()
            End If
            If da.Tables("chldata").Rows.Count > 0 Then
                chldata.Append("<li><a href=""#tabHis"">" & CHtabCaption & "" & "-HISTORY" & "<asp:Label ID=""lblpending"" runat=""server""></asp:Label></a></li>")
                chldata2.Append("<div id=""tabHis""style=""min-height:300px;"">")
                Dim j As Integer = 0
                ' If da.Tables("chldata").Rows.Count > 0 Then
                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                oda.SelectCommand.Parameters.Clear()
                oda.SelectCommand.CommandText = "uspGetHistoryDetail"
                oda.SelectCommand.Parameters.AddWithValue("docid", pid)
                oda.SelectCommand.Parameters.AddWithValue("FN", da.Tables("chldata").Rows(j).Item("documenttype").ToString())
                oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
                Dim HisItem As New DataTable()
                oda.Fill(HisItem)
                Dim tblChildItemHis As New StringBuilder()
                tblChildItemHis.Append("<table cellspacing=""2px"" cellpadding=""2px"" height=""100%"" width=""100%"" border=""1px double"">")

                tblChildItemHis.Append("<tr>")
                For t As Integer = 0 To HisItem.Columns.Count - 1
                    tblChildItemHis.Append("<td><h3 class=""tabs"" >" & HisItem.Columns(t).ColumnName.ToString() & "</h3></td>")
                Next
                tblChildItemHis.Append("</tr>")

                For trow As Integer = 0 To HisItem.Rows.Count - 1
                    tblChildItemHis.Append("<tr>")
                    For t As Integer = 0 To HisItem.Columns.Count - 1
                        tblChildItemHis.Append("<td>" & HisItem.Rows(trow).Item(t).ToString() & "</td>")
                    Next
                    tblChildItemHis.Append("</tr>")
                Next
                tblChildItemHis.Append("</table></div>")
                chldata2.Append(tblChildItemHis)
                chldata.Append(chldata2)
                ' Next 'end code "balli" 
                j = j + 1
                ' End If
            End If
            chldata.Append("</ul>")
            'chldata1.Append("</div>")
            chldata.Append(chldata1)
            chldata.Append("</div></td></tr>")
            tblData.Append(chldata)
            lblDetail.Text = tblData.ToString() & "</table></div>"
        End If
        con.Close()
        oda.Dispose()
        con.Dispose()
    End Sub



    Public Sub BindDocumentDetail(ByVal pid As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        ' oda.SelectCommand.CommandText = "select tid,docid,fdate,tdate,ptat,atat, UserName [UserName],remarks from MMM_DOC_DTL D LEFT OUTER JOIN MMM_MST_USER U on D.userid=U.uid  where docid=" & pid & " order by tid"

        oda.SelectCommand.CommandText = "uspGetMoveDetailwithRole"
        oda.SelectCommand.Parameters.AddWithValue("DOCID", Val(pid))
        Dim ds As New DataSet()
        oda.SelectCommand.CommandType = CommandType.StoredProcedure

        oda.Fill(ds, "data")
        gvMovDetail.DataSource = ds.Tables("data")
        gvMovDetail.DataBind()
        con.Close()
        oda.Dispose()
        con.Dispose()
    End Sub

    Public Sub BindFutureMovementDetail(ByVal pid As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)

        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspSelectFuturePath", con)
        ' oda.SelectCommand.CommandText = "select dm.tid, u.username, dm.docid,dm.uid,dm.isauth, dm.sla from MMM_MOVPATH_DOC DM Inner join MMM_MST_USER U on u.uid=dm.UID where dm.DocID=" & pid & " order by dm.tid"
        Dim ds As New DataSet()
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("DOCID", Val(pid))
        oda.Fill(ds, "data")
        gvFutureMov.DataSource = ds.Tables("data")
        gvFutureMov.DataBind()
        con.Close()
        oda.Dispose()
        con.Dispose()
    End Sub

    'Protected Function Validate_Save_SplittedDocument(ByVal OldDocID As Integer, ByRef pnlFields As Panel, ByVal DSF As DataTable) As String
    '    Dim ob As New DynamicForm
    '    Dim msgAN As String = ""
    '    Dim DocID As Integer = 0
    '    Dim ds As New DataTable
    '    ds = DSF
    '    '"fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld33,fld44,fld45,fld46,fld47,fld48,fld49,fld50,fld51,fld52,fld53,fld54,fld55,fld56,fld57,fld58,fld59,fld60,fld61,fld62,fld63,fld64,fld65,fld66,fld67,fld68,fld69,fld70"

    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim da As SqlDataAdapter = New SqlDataAdapter("", con)

    '    da.SelectCommand.CommandText = "select documenttype from mmm_mst_doc where tid=" & OldDocID
    '    If con.State <> ConnectionState.Open Then con.Open()
    '    Dim dtDC As New DataTable
    '    Dim dtFld As New DataTable
    '    Dim dtOV As New DataTable
    '    da.Fill(dtDC)
    '    Dim DocType As String = dtDC.Rows(0).Item(0).ToString
    '    Dim ReturnStr As String = "ERROR"


    '    da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS  where documenttype='" & DocType & "' and EID=" & Session("EID").ToString() & " and Splittable=1"
    '    da.Fill(dtFld)
    '    Dim NewDocStr As String = ""

    '    For i As Integer = 0 To dtFld.Rows.Count - 1
    '        Select Case dtFld.Rows(i).Item("FieldType").ToString().ToUpper()
    '            Case "TEXT BOX"
    '                Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFld.Rows(i).Item("FieldID").ToString()), TextBox)
    '                da.SelectCommand.CommandText = "select * from mmm_mst_doc where tid=" & OldDocID
    '                da.Fill(dtOV)

    '                Dim spltFldMp As String = dtFld.Rows(i).Item("fieldmapping").ToString
    '                'Dim spltfldOldval As String
    '                Dim fldStr As String = "", ValStr As String = ""
    '                Dim SpltLinkFldMp As String

    '                If dtFld.Rows(i).Item("datatype").ToString.ToUpper = "DATETIME" Then
    '                    SpltLinkFldMp = dtFld.Rows(i).Item("splitLinkFld").ToString

    '                    For k As Integer = 1 To 70 '' for getting old doc value
    '                        If UCase(Trim("fld" & k)) = UCase(Trim(SpltLinkFldMp)) Then
    '                            Dim str1 As String() = Split(txtBox.Text, "/")  ' 31/10/13
    '                            If str1.Length = 3 Then
    '                                ' Dim strDate1 As String = str1(1) & "/" & Val(str1(0)) + 1 & "/" & str1(2)  ' 10/31/13 ' prev 
    '                                Dim strDate1 As String = str1(1) & "/" & str1(0) & "/" & str1(2)  ' 10/31/13
    '                                strDate1 = Format(DateAdd(DateInterval.Day, 1, Convert.ToDateTime(strDate1)), "dd/MM/yy")

    '                                If IsDate(strDate1) Then    ' 10/31/13
    '                                    ' txtBox.Text = Format(Convert.ToDateTime(txtBox.Text.ToString), "dd/MM/yy")
    '                                    Dim str As String() = Split(strDate1, "/")  ' 10/31/13
    '                                    Dim strDate As String = str(1).PadLeft(2, "0") & "/" & str(0).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")

    '                                    fldStr = fldStr & "fld" & k & ","
    '                                    ValStr = ValStr & "'" & strDate & "',"  ' this for link fld value saving (from date in new doc) 
    '                                End If
    '                            End If
    '                        ElseIf Not IsDBNull(dtOV.Rows(0).Item("fld" & k)) Then
    '                            fldStr = fldStr & "fld" & k & ","
    '                            ValStr = ValStr & "'" & dtOV.Rows(0).Item("fld" & k).ToString & "',"
    '                        End If
    '                    Next

    '                    fldStr &= "lasttid,curstatus,curDocNature,docRef,isworkFlow,isauth,"
    '                    ValStr &= "'" & dtOV.Rows(0).Item("lasttid") & "'," & "'" & dtOV.Rows(0).Item("curstatus") & "'," & "'" & dtOV.Rows(0).Item("curdocNature") & "'," & "'" & OldDocID & "'," & "'" & dtOV.Rows(0).Item("isworkflow") & "'," & "'" & dtOV.Rows(0).Item("isauth") & "',"

    '                    fldStr = Left(fldStr, Len(fldStr) - 1) & ")"
    '                    ValStr = Left(ValStr, Len(ValStr) - 1) & ")"

    '                    NewDocStr = "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate," & fldStr & "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & dtOV.Rows(0).Item("OUID").ToString & ",getdate()," & ValStr

    '                ElseIf dtFld.Rows(i).Item("datatype").ToString.ToUpper = "NUMERIC" Then
    '                    For k As Integer = 1 To 70 '' for getting old doc valueS
    '                        If UCase(Trim("fld" & k)) = UCase(Trim(spltFldMp)) Then
    '                            fldStr = fldStr & "fld" & k & ","
    '                            ValStr = ValStr & "'" & Val(txtBox.Text) & "',"  ' this for link fld value saving (from date in new doc) 
    '                            txtBox.Text = Val(dtOV.Rows(0).Item("fld" & k).ToString) - Val(txtBox.Text)
    '                            'ValStr = ValStr & "'" & Val(dtOV.Rows(0).Item("fld" & k).ToString) - Val(txtBox.Text) & "',"  ' this for link fld value saving (from date in new doc) 
    '                        ElseIf Not IsDBNull(dtOV.Rows(0).Item("fld" & k)) Then
    '                            fldStr = fldStr & "fld" & k & ","
    '                            ValStr = ValStr & "'" & dtOV.Rows(0).Item("fld" & k).ToString & "',"
    '                        End If
    '                    Next

    '                    fldStr &= "lasttid,curstatus,curDocNature,docRef,isworkFlow,isauth,"
    '                    ValStr &= "'" & dtOV.Rows(0).Item("lasttid").ToString & "'," & "'" & dtOV.Rows(0).Item("curstatus").ToString & "'," & "'" & dtOV.Rows(0).Item("curdocNature") & "'," & "'" & OldDocID & "'," & "'" & dtOV.Rows(0).Item("isworkflow") & "'," & "'" & dtOV.Rows(0).Item("isauth") & "',"

    '                    fldStr = Left(fldStr, Len(fldStr) - 1) & ")"
    '                    ValStr = Left(ValStr, Len(ValStr) - 1) & ")"

    '                    NewDocStr = "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate," & fldStr & "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & dtOV.Rows(0).Item("OUID").ToString & ",getdate()," & ValStr
    '                End If
    '        End Select
    '    Next


    '    '' here code for split functionality by sunil - create new document 
    '    Dim fileid As Integer

    '    'ReturnStr = "Invalid data while split action!"
    '    If NewDocStr <> "" Then
    '        NewDocStr = NewDocStr & ";Select @@identity"
    '        'save the data
    '        lblDetail1.Text = ""
    '        da.SelectCommand.CommandText = NewDocStr
    '        If con.State <> ConnectionState.Open Then
    '            con.Open()
    '        End If
    '        fileid = da.SelectCommand.ExecuteScalar()
    '        DocID = fileid
    '        '' new for adding child item
    '        Dim childDocStr As String
    '        childDocStr = "INSERT INTO MMM_MST_DOC_ITEM (DOCID,DOCREF, SESSIONID,DOCUMENTTYPE,ISAUTH,fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld43,fld44,fld45,fld46,fld47,fld48,fld49,fld50) select " & fileid & " [DOCID]," & OldDocID & " [DOCREF], SESSIONID,DOCUMENTTYPE,ISAUTH,fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld43,fld44,fld45,fld46,fld47,fld48,fld49,fld50 from MMM_MST_DOC_ITEM where DocID=" & OldDocID
    '        da.SelectCommand.CommandText = childDocStr
    '        If con.State <> ConnectionState.Open Then
    '            con.Open()
    '        End If
    '        Dim res1 As Integer = da.SelectCommand.ExecuteNonQuery()
    '        '' new for adding child item

    '        Dim row As DataRow() = ds.Select("Fieldtype='Auto Number'")
    '        If row.Length > 0 Then
    '            da.SelectCommand.Parameters.Clear()
    '            da.SelectCommand.CommandText = "usp_GetAutoNoNew"
    '            da.SelectCommand.CommandType = CommandType.StoredProcedure
    '            da.SelectCommand.Parameters.AddWithValue("Fldid", row(0).Item("fieldid"))
    '            da.SelectCommand.Parameters.AddWithValue("docid", fileid)
    '            da.SelectCommand.Parameters.AddWithValue("fldmapping", row(0).Item("fieldmapping"))
    '            da.SelectCommand.Parameters.AddWithValue("FormType", "Document")
    '            Dim an As String = da.SelectCommand.ExecuteScalar()
    '            msgAN = "<br/> " & row(0).Item("displayname") & " is " & an & ""
    '            da.SelectCommand.Parameters.Clear()
    '        End If
    '    End If


    '    Dim ob1 As New DMSUtil()
    '    ' by rajat bansal for formula field
    '    Dim CalculativeField() As DataRow = DS.Select("Fieldtype='Formula Field'")
    '    Dim viewdoc As String = DocType
    '    viewdoc = viewdoc.Replace(" ", "_")
    '    If CalculativeField.Length > 0 Then
    '        For Each CField As DataRow In CalculativeField
    '            Dim formulaeditorr As New formulaEditor
    '            Dim forvalue As String = String.Empty
    '            forvalue = formulaeditorr.ExecuteFormula(CField.Item("KC_LOGIC"), DocID, "v" + Session("eid").ToString + viewdoc)
    '            Dim upquery As String = "update " & CField.Item("DBTableName").ToString & "  set  " & CField.Item("FieldMapping").ToString & "='" & forvalue.ToString & "'  where tid =" & DocID & ""
    '            da.SelectCommand.CommandText = upquery
    '            da.SelectCommand.CommandType = CommandType.Text
    '            da.SelectCommand.ExecuteNonQuery()
    '        Next
    '    End If

    '    '' copy all movements of document - by sunil for split 
    '    da.SelectCommand.CommandText = "CopyDocMovement_NewSplittedDoc"
    '    da.SelectCommand.CommandType = CommandType.StoredProcedure
    '    da.SelectCommand.Parameters.Clear()
    '    da.SelectCommand.Parameters.AddWithValue("OldDocID", OldDocID)
    '    da.SelectCommand.Parameters.AddWithValue("NewDocID", fileid)
    '    da.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
    '    ' da.SelectCommand.Parameters.AddWithValue("what", "SPLIT")
    '    If con.State <> ConnectionState.Open Then
    '        con.Open()
    '    End If
    '    Dim res As String
    '    res = da.SelectCommand.ExecuteScalar()

    '    Dim sretMsgArr() As String = res.Split(":")

    '    'ob.CLEARDYNAMICFIELDS(pnlFields)

    '    '' code to send mail to first approver on document creation and to document owner also
    '    '' new added by sunil for mail sending 
    '    '''' disabled due to not reqd by sunil for split feature
    '    'ob1.TemplateCalling(fileid, Session("EID"), DocType, "CREATED")

    '    'da.SelectCommand.CommandType = CommandType.Text
    '    'da.SelectCommand.Parameters.Clear()
    '    'da.SelectCommand.CommandText = "select isworkflow from mmm_mst_doc where TID=" & fileid & " and eid='" & Session("EID") & "'"
    '    'Dim dt As New DataTable
    '    'da.Fill(dt)
    '    'If dt.Rows.Count = 1 Then
    '    '    If dt.Rows(0).Item(0).ToString = "1" Then
    '    '        ob1.TemplateCalling(fileid, Session("EID"), DocType, "APPROVE")
    '    '    End If
    '    'End If

    '    ''INSERT INTO HISTORY 
    '    ob.History(Session("EID"), fileid, Session("UID"), DocType, "MMM_MST_DOC", "ADD")


    '    '' new added for pusing data to master on docuement creation by sp 21-Jan-14
    '    If sretMsgArr(0) = "ARCHIVE" Then
    '        Dim Op As New Exportdata()
    '        Op.Pushdata(fileid, sretMsgArr(1))
    '    End If


    '    '''' check if no skip setting and if not allowed then don't move doc and show msg to user by sunil on 07-Oct
    '    If sretMsgArr(0).ToUpper() = "NO SKIP" Then
    '        Dim Noskipmsg As String = "Next Approvar/User not found, please contact Admin"
    '        ReturnStr = "Splitted Document's System Docid is " & fileid & " " & msgAN & "" & "<br/> " & Noskipmsg
    '    Else
    '        ReturnStr = "New System Docid is " & fileid & " " & msgAN & ""
    '    End If
    '    Try
    '        Dim FormName As String = DocType
    '        Dim EID As Integer = 0
    '        EID = Convert.ToInt32(Session("EID"))
    '        If (DocID > 0) And (FormName <> "") Then
    '            Trigger.ExecuteTrigger(FormName, EID, DocID)
    '        End If
    '    Catch ex As Exception
    '    End Try

    '    Return ReturnStr
    '    'FinalQry = ob.ValidateAndGenrateQueryForControls("ADD", "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate,", "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & Session("UID").ToString() & ",getdate(),", dtFld.Tables("fields"), pnlFields, 0)
    'End Function
    '' prev running code is above 

    Protected Function Validate_Save_SplittedDocument(ByVal OldDocID As Integer, ByRef pnlFields As Panel, ByVal DSF As DataTable, con As SqlConnection, trans As SqlTransaction) As String
        Dim ob As New DynamicForm
        Dim msgAN As String = ""
        Dim DocID As Integer = 0
        Dim ds As New DataTable
        ds = DSF
        '"fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld33,fld44,fld45,fld46,fld47,fld48,fld49,fld50,fld51,fld52,fld53,fld54,fld55,fld56,fld57,fld58,fld59,fld60,fld61,fld62,fld63,fld64,fld65,fld66,fld67,fld68,fld69,fld70"
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        da.SelectCommand.Transaction = trans

        da.SelectCommand.CommandText = "select documenttype from mmm_mst_doc  where tid=" & OldDocID
        If con.State <> ConnectionState.Open Then con.Open()
        Dim dtDC As New DataTable
        Dim dtFld As New DataTable
        Dim dtOV As New DataTable
        da.Fill(dtDC)
        Dim DocType As String = dtDC.Rows(0).Item(0).ToString
        Dim ReturnStr As String = "ERROR"

        da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS  where documenttype='" & DocType & "' and EID=" & Session("EID").ToString() & " and Splittable=1 order by displayorder"
        da.Fill(dtFld)
        Dim NewDocStr As String = ""

        Dim SplitFldsArr(dtFld.Rows.Count - 1) As String
        Dim SplitLinkFldsArr(dtFld.Rows.Count - 1) As String
        Dim SplitValidationArr(dtFld.Rows.Count - 1) As String


        For i As Integer = 0 To dtFld.Rows.Count - 1
            If dtFld.Rows(i).Item("FieldType").ToString().ToUpper() = "TEXT BOX" And dtFld.Rows(i).Item("datatype").ToString.ToUpper = "DATETIME" Then
                SplitFldsArr(i) = dtFld.Rows(i).Item("fieldmapping").ToString
                SplitLinkFldsArr(i) = dtFld.Rows(i).Item("splitLinkFld").ToString
                SplitValidationArr(i) = ""
            ElseIf (dtFld.Rows(i).Item("FieldType").ToString().ToUpper() = "TEXT BOX" And dtFld.Rows(i).Item("datatype").ToString.ToUpper = "NUMERIC") Or (dtFld.Rows(i).Item("FieldType").ToString().ToUpper() = "CALCULATIVE FIELD") Then
                SplitFldsArr(i) = dtFld.Rows(i).Item("fieldmapping").ToString
                SplitLinkFldsArr(i) = ""
                'CODE OF SPLIT VALIDATION BY SP '12_MAR_14
                If dtFld.Rows(i).Item("splitvalidation").ToString() <> "" Then
                    SplitValidationArr(i) = dtFld.Rows(i).Item("splitvalidation").ToString()
                Else
                    SplitValidationArr(i) = ""
                End If
                'CODE OF SPLIT VALIDATION BY SP '12_MAR_14
            End If
        Next

        Dim fldStr As String = "", ValStr As String = ""
        da.SelectCommand.CommandText = "select * from mmm_mst_doc where tid=" & OldDocID
        da.Fill(dtOV)

        Dim found As Boolean = False
        For k As Integer = 1 To 70
            found = False
            For f As Integer = 0 To SplitFldsArr.Length - 1
                If (UCase(Trim("fld" & k)) = UCase(Trim(SplitFldsArr(f).ToString))) Or (UCase(Trim("fld" & k)) = UCase(Trim(SplitLinkFldsArr(f).ToString))) Then
                    found = True
                    Exit For
                End If
            Next
            If found = False Then
                fldStr = fldStr & "fld" & k & ","
                ValStr = ValStr & "'" & dtOV.Rows(0).Item("fld" & k).ToString & "',"
            End If
        Next

        '' you here on lunch

        For i As Integer = 0 To dtFld.Rows.Count - 1
            Select Case dtFld.Rows(i).Item("FieldType").ToString().ToUpper()
                Case "TEXT BOX"
                    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFld.Rows(i).Item("FieldID").ToString()), TextBox)

                    Dim spltFldMp As String = dtFld.Rows(i).Item("fieldmapping").ToString
                    Dim SpltLinkFldMp As String

                    If dtFld.Rows(i).Item("datatype").ToString.ToUpper = "DATETIME" Then
                        SpltLinkFldMp = dtFld.Rows(i).Item("splitLinkFld").ToString

                        Dim str1 As String() = Split(txtBox.Text, "/")  ' 31/10/13
                        If str1.Length = 3 Then
                            ' Dim strDate1 As String = str1(1) & "/" & Val(str1(0)) + 1 & "/" & str1(2)  ' 10/31/13 ' prev 
                            Dim strDate1 As String = str1(1) & "/" & str1(0) & "/" & str1(2)  ' 10/31/13
                            Dim NewDt As String = Format(DateAdd(DateInterval.Day, 1, Convert.ToDateTime(strDate1)), "dd/MM/yy")


                            fldStr = fldStr & SpltLinkFldMp & ","
                            ValStr = ValStr & "'" & NewDt & "',"  ' this for link fld value saving (from date in new doc) 

                            '' for spltfldmapping
                            fldStr = fldStr & spltFldMp & ","
                            ValStr = ValStr & "'" & dtOV.Rows(0).Item(spltFldMp).ToString & "',"

                            '' for validation of new with old date by sp
                            Dim arrOlddate As String() = Split(dtOV.Rows(0).Item(spltFldMp).ToString, "/")
                            Dim strOldDate As String = arrOlddate(1) & "/" & arrOlddate(0) & "/" & arrOlddate(2)  ' 10/31/13
                            If Convert.ToDateTime(strDate1) >= Convert.ToDateTime(strOldDate) Then
                                ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' should be less than original/approved Date"
                            End If
                        End If

                    ElseIf dtFld.Rows(i).Item("datatype").ToString.ToUpper = "NUMERIC" Then
                        fldStr = fldStr & spltFldMp & ","
                        ValStr = ValStr & "'" & Val(txtBox.Text) & "',"  ' this for link fld value saving (from date in new doc) 

                        '' for validation of new with old amount by sp                       
                        If Val(txtBox.Text) <= 0 Then 'Val(dtOV.Rows(0).Item(spltFldMp).ToString)
                            ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' should be greater than Zero!"
                        End If
                        If Val(txtBox.Text) >= Val(dtOV.Rows(0).Item(spltFldMp).ToString) Then
                            ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' should be less than original amount!"
                        End If

                        'CODE OF SPLIT VALIDATION BY SP '12_MAR_14
                        If SplitValidationArr(i).ToString <> "" Then
                            Dim vArr() As String = SplitValidationArr(i).Split("|")
                            If vArr.Length = 2 Then
                                Dim rw() As DataRow = dtFld.Select("fieldmapping='" & vArr(1).ToString & "'")
                                For Each r As DataRow In rw
                                    Dim fid As String = r.Item("fieldid")
                                    Dim txtBox1 As TextBox = CType(pnlFields.FindControl("fld" & fid), TextBox)
                                    Select Case Trim(vArr(0).ToString)
                                        Case "<="
                                            If Not Val(txtBox.Text) <= Val(txtBox1.Text) Then
                                                ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' must be <= " & r.Item("displayname") & "!"
                                            End If
                                        Case "<"
                                            If Not Val(txtBox.Text) < Val(txtBox1.Text) Then
                                                ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' must be < " & r.Item("displayname") & "!"
                                            End If
                                        Case ">="
                                            If Not Val(txtBox.Text) >= Val(txtBox1.Text) Then
                                                ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' must be >=  " & r.Item("displayname") & "!"
                                            End If
                                        Case ">"
                                            If Not Val(txtBox.Text) >= Val(txtBox1.Text) Then
                                                ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' must be >  " & r.Item("displayname") & "!"
                                            End If
                                        Case "<>"
                                            If Not Val(txtBox.Text) >= Val(txtBox1.Text) Then
                                                ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' must be not equal to  " & r.Item("displayname") & "!"
                                            End If
                                        Case "="
                                            If Not Val(txtBox.Text) >= Val(txtBox1.Text) Then
                                                ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' must be =  " & r.Item("displayname") & "!"
                                            End If
                                    End Select
                                    ' If Val(txtBox.Text) & vArr(0).ToString & Val(txtBox1.Text) Then
                                    ' ReturnStr &= ": '" & dtFld.Rows(i).Item("displayname").ToString & "' should be less than " & r.Item("displayname") & "!"
                                    ' End If
                                Next
                            End If
                        End If
                        'CODE OF SPLIT VALIDATION BY SP '12_MAR_14 ENDS

                        ViewState("SplitUpdStr") = "UPDATE MMM_MST_DOC SET " & spltFldMp & "=" & Val(dtOV.Rows(0).Item(spltFldMp).ToString) - Val(txtBox.Text) & " WHERE TID=" & OldDocID
                    End If
            End Select
        Next

        If ReturnStr <> "ERROR" Then
            ViewState("SplitUpdStr") = Nothing
            dtOV.Dispose()
            dtFld.Dispose()
            dtDC.Dispose()
            Return ReturnStr
        End If

        '' from here static fields 
        fldStr &= "lasttid,curstatus,curDocNature,docRef,isworkFlow,isauth,"
        ValStr &= "'" & dtOV.Rows(0).Item("lasttid").ToString & "'," & "'" & dtOV.Rows(0).Item("curstatus").ToString & "'," & "'" & dtOV.Rows(0).Item("curdocNature") & "'," & "'" & OldDocID & "'," & "'" & dtOV.Rows(0).Item("isworkflow") & "'," & "'" & dtOV.Rows(0).Item("isauth") & "',"
        fldStr = Left(fldStr, Len(fldStr) - 1) & ")"
        ValStr = Left(ValStr, Len(ValStr) - 1) & ")"
        NewDocStr = "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate," & fldStr & "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & dtOV.Rows(0).Item("OUID").ToString & ",getdate()," & ValStr


        '' here code for split functionality by sunil - create new document 
        Dim fileid As Integer

        'ReturnStr = "Invalid data while split action!"
        If NewDocStr <> "" Then
            NewDocStr = NewDocStr & ";Select @@identity"
            'save the data
            lblDetail1.Text = ""
            da.SelectCommand.CommandText = NewDocStr
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            fileid = da.SelectCommand.ExecuteScalar()
            DocID = fileid
            '' new for adding child item
            Dim childDocStr As String
            childDocStr = "INSERT INTO MMM_MST_DOC_ITEM (DOCID,DOCREF, SESSIONID,DOCUMENTTYPE,ISAUTH,fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld43,fld44,fld45,fld46,fld47,fld48,fld49,fld50) select " & fileid & " [DOCID]," & OldDocID & " [DOCREF], SESSIONID,DOCUMENTTYPE,ISAUTH,fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld43,fld44,fld45,fld46,fld47,fld48,fld49,fld50 from MMM_MST_DOC_ITEM where DocID=" & OldDocID
            da.SelectCommand.CommandText = childDocStr
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim res1 As Integer = da.SelectCommand.ExecuteNonQuery()
            '' new for adding child item

            Dim row As DataRow() = ds.Select("Fieldtype='Auto Number'")
            If row.Length > 0 Then
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.CommandText = "usp_GetAutoNoNew"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.AddWithValue("Fldid", row(0).Item("fieldid"))
                da.SelectCommand.Parameters.AddWithValue("docid", fileid)
                da.SelectCommand.Parameters.AddWithValue("fldmapping", row(0).Item("fieldmapping"))
                da.SelectCommand.Parameters.AddWithValue("FormType", "Document")
                Dim an As String = da.SelectCommand.ExecuteScalar()
                msgAN = "<br/> " & row(0).Item("displayname") & " is " & an & ""
                da.SelectCommand.Parameters.Clear()
            End If
        End If


        Dim ob1 As New DMSUtil()
        ' by rajat bansal for formula field
        Dim CalculativeField() As DataRow = ds.Select("Fieldtype='Formula Field'")
        Dim viewdoc As String = DocType
        viewdoc = viewdoc.Replace(" ", "_")
        If CalculativeField.Length > 0 Then
            For Each CField As DataRow In CalculativeField
                Dim formulaeditorr As New formulaEditor
                Dim forvalue As String = String.Empty
                forvalue = formulaeditorr.ExecuteFormulaT(CField.Item("KC_LOGIC"), DocID, "v" + Session("eid").ToString + viewdoc, Session("eid").ToString, 0, con, trans)
                Dim upquery As String = "update " & CField.Item("DBTableName").ToString & "  set  " & CField.Item("FieldMapping").ToString & "='" & forvalue.ToString & "'  where tid =" & DocID & ""
                da.SelectCommand.CommandText = upquery
                da.SelectCommand.CommandType = CommandType.Text
                da.SelectCommand.ExecuteNonQuery()
            Next
        End If

        '' copy all movements of document - by sunil for split 
        da.SelectCommand.CommandText = "CopyDocMovement_NewSplittedDoc"
        da.SelectCommand.CommandType = CommandType.StoredProcedure
        da.SelectCommand.Parameters.Clear()
        da.SelectCommand.Parameters.AddWithValue("OldDocID", OldDocID)
        da.SelectCommand.Parameters.AddWithValue("NewDocID", fileid)
        da.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
        ' da.SelectCommand.Parameters.AddWithValue("what", "SPLIT")
        Dim res As String
        res = da.SelectCommand.ExecuteScalar()

        Dim sretMsgArr() As String = res.Split(":")

        'ob.CLEARDYNAMICFIELDS(pnlFields)

        '' code to send mail to first approver on document creation and to document owner also
        '' new added by sunil for mail sending 
        '''' disabled due to not reqd by sunil for split feature
        'ob1.TemplateCalling(fileid, Session("EID"), DocType, "CREATED")

        'da.SelectCommand.CommandType = CommandType.Text
        'da.SelectCommand.Parameters.Clear()
        'da.SelectCommand.CommandText = "select isworkflow from mmm_mst_doc where TID=" & fileid & " and eid='" & Session("EID") & "'"
        'Dim dt As New DataTable
        'da.Fill(dt)
        'If dt.Rows.Count = 1 Then
        '    If dt.Rows(0).Item(0).ToString = "1" Then
        '        ob1.TemplateCalling(fileid, Session("EID"), DocType, "APPROVE")
        '    End If
        'End If

        ''INSERT INTO HISTORY 
        ob.HistoryT(Session("EID"), fileid, Session("UID"), DocType, "MMM_MST_DOC", "ADD", con, trans)

        '' new added for pusing data to master on docuement creation by sp 21-Jan-14
        If sretMsgArr(0) = "ARCHIVE" Then
            Dim Op As New Exportdata()
            Op.PushdataT(fileid, sretMsgArr(1), Session("EID"), con, trans)
        End If

        '''' check if no skip setting and if not allowed then don't move doc and show msg to user by sunil on 07-Oct
        If sretMsgArr(0).ToUpper() = "NO SKIP" Then
            Dim Noskipmsg As String = "Next Approvar/User not found, please contact Admin"
            ReturnStr = "Splitted Document's System Docid is " & fileid & " " & msgAN & "" & "<br/> " & Noskipmsg
        Else
            ReturnStr = "New System Docid is " & fileid & " " & msgAN & ""
        End If
        Try
            Dim FormName As String = DocType
            Dim EID As Integer = 0
            EID = Convert.ToInt32(Session("EID"))
            If (DocID > 0) And (FormName <> "") Then
                Trigger.ExecuteTriggerT(FormName, EID, DocID, con, trans, TriggerNature:="Create")
            End If
        Catch ex As Exception
            Throw
        End Try
        dtOV.Dispose()
        dtFld.Dispose()
        dtDC.Dispose()
        Return ReturnStr
        'FinalQry = ob.ValidateAndGenrateQueryForControls("ADD", "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate,", "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & Session("UID").ToString() & ",getdate(),", dtFld.Tables("fields"), pnlFields, 0)
    End Function

    'Protected Function Validate_Save_COPYDocument(ByVal OldDocID As Integer, ByRef pnlFields As Panel, ByVal DSF As DataTable, ByVal con As SqlConnection, ByVal trans As SqlTransaction) As String
    '    Dim ob As New DynamicForm
    '    Dim msgAN As String = ""
    '    Dim DocID As Integer = 0
    '    Dim qryField As String = ""
    '    Dim dataField As String = ""

    '    Dim ds As New DataTable
    '    ds = DSF

    '    Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
    '    da.SelectCommand.Transaction = trans
    '    da.SelectCommand.CommandText = "select * from mmm_mst_doc where tid=" & OldDocID
    '    Dim dtDC As New DataTable
    '    Dim dtFld As New DataTable
    '    da.Fill(dtDC)
    '    Dim DocType As String = dtDC.Rows(0).Item("DOCUMENTTYPE").ToString
    '    Dim ReturnStr As String = "ERROR"
    '    da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS  where documenttype='" & dtDC.Rows(0).Item("Documenttype").ToString() & "' and EID=" & Session("EID").ToString() & "  order by displayorder"
    '    da.Fill(dtFld)
    '    Dim NewDocStr As String = ""
    '    Dim fldStr As String = "", ValStr As String = ""
    '    For k As Integer = 1 To 90
    '        fldStr = fldStr & "fld" & k & ","
    '        ValStr = ValStr & "'" & dtDC.Rows(0).Item("fld" & k).ToString & "',"
    '    Next
    '    '' you here on lunch
    '    Dim errorMsg As String = ""
    '    If ds.Rows.Count > 0 Then
    '        For i = 0 To ds.Rows.Count - 1
    '            Dim lblfound As Boolean = False
    '            Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
    '            Dim lbl As Label = CType(pnlFields.FindControl("lbl" & ds.Rows(i).Item("FieldID").ToString()), Label)
    '            If IsNothing(lbl) = False Then
    '                lbl.ForeColor = Drawing.Color.Black
    '                lbl.BackColor = Drawing.Color.White
    '            End If

    '        Next
    '    End If
    '    '' from here static fields 
    '    qryField &= "lasttid,curstatus,curDocNature,docRef,isworkFlow,isauth,"
    '    dataField &= "'" & dtDC.Rows(0).Item("lasttid").ToString & "'," & "'" & dtDC.Rows(0).Item("curstatus").ToString & "'," & "'" & dtDC.Rows(0).Item("curdocNature") & "'," & "'" & OldDocID & "'," & "'" & dtDC.Rows(0).Item("isworkflow") & "'," & "'" & dtDC.Rows(0).Item("isauth") & "',"
    '    qryField = Left(qryField, Len(qryField) - 1) & ")"
    '    dataField = Left(dataField, Len(dataField) - 1) & ")"
    '    NewDocStr = "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate," & qryField & "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & dtDC.Rows(0).Item("OUID").ToString & ",getdate()," & dataField
    '    '' here code for split functionality by sunil - create new document 
    '    Dim fileid As Integer

    '    'ReturnStr = "Invalid data while split action!"
    '    If NewDocStr <> "" Then
    '        NewDocStr = NewDocStr & ";Select @@identity"
    '        'save the data
    '        lblDetail1.Text = ""
    '        da.SelectCommand.CommandText = NewDocStr
    '        If con.State <> ConnectionState.Open Then
    '            con.Open()
    '        End If
    '        fileid = da.SelectCommand.ExecuteScalar()
    '        DocID = fileid
    '        '' new for adding child item
    '        Dim childDocStr As String
    '        childDocStr = "INSERT INTO MMM_MST_DOC_ITEM (DOCID,DOCREF, SESSIONID,DOCUMENTTYPE,ISAUTH,fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld43,fld44,fld45,fld46,fld47,fld48,fld49,fld50,fld51,fld52,fld53,fld54,fld55,fld56,fld57,fld58,fld59,fld60,fld61,fld62,fld63,fld64,fld65,fld66,fld67,fld68,fld69,fld70,fld71,fld72,fld73,fld74,fld75,fld76,fld77,fld78,fld79,fld80,fld81,fld82,fld83,fld84,fld85,fld86,fld87,fld88,fld89,fld90) select " & fileid & " [DOCID]," & OldDocID & " [DOCREF], SESSIONID,DOCUMENTTYPE,ISAUTH,fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld43,fld44,fld45,fld46,fld47,fld48,fld49,fld50,fld51,fld52,fld53,fld54,fld55,fld56,fld57,fld58,fld59,fld60,fld61,fld62,fld63,fld64,fld65,fld66,fld67,fld68,fld69,fld70,fld71,fld72,fld73,fld74,fld75,fld76,fld77,fld78,fld79,fld80,fld81,fld82,fld83,fld84,fld85,fld86,fld87,fld88,fld89,fld90 from MMM_MST_DOC_ITEM where DocID=" & OldDocID
    '        da.SelectCommand.CommandText = childDocStr
    '        If con.State <> ConnectionState.Open Then
    '            con.Open()
    '        End If
    '        Dim res1 As Integer = da.SelectCommand.ExecuteNonQuery()
    '        '' new for adding child item

    '        Dim row As DataRow() = ds.Select("Fieldtype='Auto Number'")
    '        If row.Length > 0 Then
    '            da.SelectCommand.Parameters.Clear()
    '            da.SelectCommand.CommandText = "usp_GetAutoNoNew"
    '            da.SelectCommand.CommandType = CommandType.StoredProcedure
    '            da.SelectCommand.Parameters.AddWithValue("Fldid", row(0).Item("fieldid"))
    '            da.SelectCommand.Parameters.AddWithValue("docid", fileid)
    '            da.SelectCommand.Parameters.AddWithValue("fldmapping", row(0).Item("fieldmapping"))
    '            da.SelectCommand.Parameters.AddWithValue("FormType", "Document")
    '            Dim an As String = da.SelectCommand.ExecuteScalar()
    '            msgAN = "<br/> " & row(0).Item("displayname") & " is " & an & ""
    '            da.SelectCommand.Parameters.Clear()
    '        End If
    '    End If


    '    Dim ob1 As New DMSUtil()
    '    ' by rajat bansal for formula field
    '    Dim CalculativeField() As DataRow = ds.Select("Fieldtype='Formula Field'")
    '    Dim viewdoc As String = DocType
    '    viewdoc = viewdoc.Replace(" ", "_")
    '    If CalculativeField.Length > 0 Then
    '        For Each CField As DataRow In CalculativeField
    '            Dim formulaeditorr As New formulaEditor
    '            Dim forvalue As String = String.Empty
    '            forvalue = formulaeditorr.ExecuteFormulaT(CField.Item("KC_LOGIC"), DocID, "v" + Session("eid").ToString + viewdoc, Session("eid").ToString, 0, con, trans)
    '            Dim upquery As String = "update " & CField.Item("DBTableName").ToString & "  set  " & CField.Item("FieldMapping").ToString & "='" & forvalue.ToString & "'  where tid =" & DocID & ""
    '            da.SelectCommand.CommandText = upquery
    '            da.SelectCommand.CommandType = CommandType.Text
    '            da.SelectCommand.ExecuteNonQuery()
    '        Next
    '    End If

    '    '' copy all movements of document - by sunil for split 
    '    da.SelectCommand.CommandText = "CopyDocMovement_NewSplittedDoc"
    '    da.SelectCommand.CommandType = CommandType.StoredProcedure
    '    da.SelectCommand.Parameters.Clear()
    '    da.SelectCommand.Parameters.AddWithValue("OldDocID", OldDocID)
    '    da.SelectCommand.Parameters.AddWithValue("NewDocID", fileid)
    '    da.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
    '    da.SelectCommand.Parameters.AddWithValue("type", "COPY")
    '    If con.State <> ConnectionState.Open Then
    '        con.Open()
    '    End If
    '    Dim res As String
    '    res = da.SelectCommand.ExecuteScalar()

    '    Dim sretMsgArr() As String = res.Split(":")

    '    ''INSERT INTO HISTORY 
    '    ob.HistoryT(Session("EID"), fileid, Session("UID"), DocType, "MMM_MST_DOC", "ADD", con, trans)
    '    '' new added for pusing data to master on docuement creation by sp 21-Jan-14
    '    If sretMsgArr(0) = "ARCHIVE" Then
    '        Dim Op As New Exportdata()
    '        Op.PushdataT(fileid, sretMsgArr(1), Session("EID"), con, trans)
    '    End If

    '    '''' check if no skip setting and if not allowed then don't move doc and show msg to user by sunil on 07-Oct
    '    If sretMsgArr(0).ToUpper() = "NO SKIP" Then
    '        Dim Noskipmsg As String = "Next Approvar/User not found, please contact Admin"
    '        errorMsg = "Splitted Document's System Docid is " & fileid & " " & msgAN & "" & "<br/> " & Noskipmsg
    '    Else
    '        errorMsg = "New System Docid is " & fileid & " " & msgAN & ""
    '    End If
    '    Try
    '        Dim FormName As String = DocType
    '        Dim EID As Integer = 0
    '        EID = Convert.ToInt32(Session("EID"))
    '        If (DocID > 0) And (FormName <> "") Then
    '            Trigger.ExecuteTriggerT(FormName, EID, DocID, con, trans, TriggerNature:="Create")
    '        End If
    '    Catch ex As Exception
    '    End Try
    '    ds.Dispose()

    '    Return errorMsg
    '    'FinalQry = ob.ValidateAndGenrateQueryForControls("ADD", "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate,", "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & Session("UID").ToString() & ",getdate(),", dtFld.Tables("fields"), pnlFields, 0)
    'End Function


    Protected Function Validate_Save_COPYDocument(ByVal OldDocID As Integer, ByRef pnlFields As Panel, ByVal DSF As DataTable, ByVal con As SqlConnection, ByVal trans As SqlTransaction) As String
        Dim ob As New DynamicForm
        Dim msgAN As String = ""
        Dim DocID As Integer = 0
        Dim qryField As String = ""
        Dim dataField As String = ""

        Dim ds As New DataTable
        ds = DSF

        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        da.SelectCommand.Transaction = trans
        da.SelectCommand.CommandText = "select * from mmm_mst_doc  where tid=" & OldDocID
        Dim dtDC As New DataTable
        Dim dtFld As New DataTable
        da.Fill(dtDC)
        Dim DocType As String = dtDC.Rows(0).Item("DOCUMENTTYPE").ToString
        Dim ReturnStr As String = "ERROR"

        da.SelectCommand.CommandText = "select * from MMM_MST_FIELDS   where documenttype='" & dtDC.Rows(0).Item("Documenttype").ToString() & "' and EID=" & Session("EID").ToString() & " and isactive=1  order by displayorder"
        da.Fill(dtFld)
        Dim NewDocStr As String = ""
        Dim fldStr As String = "", ValStr As String = ""
        For k As Integer = 1 To 90
            fldStr = fldStr & "fld" & k & ","
            ValStr = ValStr & "'" & dtDC.Rows(0).Item("fld" & k).ToString & "',"
        Next
        '' you here on lunch
        Dim errorMsg As String = ""
        If ds.Rows.Count > 0 Then
            For i = 0 To ds.Rows.Count - 1
                Dim lblfound As Boolean = False
                Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                Dim lbl As Label = CType(pnlFields.FindControl("lbl" & ds.Rows(i).Item("FieldID").ToString()), Label)
                If IsNothing(lbl) = False Then
                    lbl.ForeColor = Drawing.Color.Black
                    lbl.BackColor = Drawing.Color.White
                End If

            Next
        End If
        '' from here static fields 
        qryField &= fldStr & "lasttid,curstatus,curDocNature,docRef,isworkFlow,isauth,"
        dataField &= ValStr & "'" & dtDC.Rows(0).Item("lasttid").ToString & "'," & "'" & dtDC.Rows(0).Item("curstatus").ToString & "'," & "'" & dtDC.Rows(0).Item("curdocNature") & "'," & "'" & OldDocID & "'," & "'" & dtDC.Rows(0).Item("isworkflow") & "'," & "'" & dtDC.Rows(0).Item("isauth") & "',"
        qryField = Left(qryField, Len(qryField) - 1) & ")"
        dataField = Left(dataField, Len(dataField) - 1) & ")"
        NewDocStr = "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate, " & qryField & "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & dtDC.Rows(0).Item("OUID").ToString & ",getdate()," & dataField
        '' here code for split functionality by sunil - create new document 
        Dim fileid As Integer

        'ReturnStr = "Invalid data while split action!"
        If NewDocStr <> "" Then
            NewDocStr = NewDocStr & ";Select @@identity"
            'save the data
            lblDetail1.Text = ""
            da.SelectCommand.CommandText = NewDocStr
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            fileid = da.SelectCommand.ExecuteScalar()
            DocID = fileid
            '' new for adding child item
            Dim childDocStr As String
            childDocStr = "INSERT INTO MMM_MST_DOC_ITEM (DOCID,DOCREF, SESSIONID,DOCUMENTTYPE,ISAUTH,fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld43,fld44,fld45,fld46,fld47,fld48,fld49,fld50,fld51,fld52,fld53,fld54,fld55,fld56,fld57,fld58,fld59,fld60,fld61,fld62,fld63,fld64,fld65,fld66,fld67,fld68,fld69,fld70,fld71,fld72,fld73,fld74,fld75,fld76,fld77,fld78,fld79,fld80,fld81,fld82,fld83,fld84,fld85,fld86,fld87,fld88,fld89,fld90) select " & fileid & " [DOCID]," & OldDocID & " [DOCREF], SESSIONID,DOCUMENTTYPE,ISAUTH,fld1,fld2,fld3,fld4,fld5,fld6,fld7,fld8,fld9,fld10,fld11,fld12,fld13,fld14,fld15,fld16,fld17,fld18,fld19,fld20,fld21,fld22,fld23,fld24,fld25,fld26,fld27,fld28,fld29,fld30,fld31,fld32,fld33,fld34,fld35,fld36,fld37,fld38,fld39,fld40,fld41,fld42,fld43,fld44,fld45,fld46,fld47,fld48,fld49,fld50,fld51,fld52,fld53,fld54,fld55,fld56,fld57,fld58,fld59,fld60,fld61,fld62,fld63,fld64,fld65,fld66,fld67,fld68,fld69,fld70,fld71,fld72,fld73,fld74,fld75,fld76,fld77,fld78,fld79,fld80,fld81,fld82,fld83,fld84,fld85,fld86,fld87,fld88,fld89,fld90 from MMM_MST_DOC_ITEM where DocID=" & OldDocID
            da.SelectCommand.CommandText = childDocStr
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim res1 As Integer = da.SelectCommand.ExecuteNonQuery()
            '' new for adding child item

            Dim row As DataRow() = ds.Select("Fieldtype='Auto Number'")
            If row.Length > 0 Then
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.CommandText = "usp_GetAutoNoNew"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.AddWithValue("Fldid", row(0).Item("fieldid"))
                da.SelectCommand.Parameters.AddWithValue("docid", fileid)
                da.SelectCommand.Parameters.AddWithValue("fldmapping", row(0).Item("fieldmapping"))
                da.SelectCommand.Parameters.AddWithValue("FormType", "Document")
                Dim an As String = da.SelectCommand.ExecuteScalar()
                msgAN = "<br/> " & row(0).Item("displayname") & " is " & an & ""
                da.SelectCommand.Parameters.Clear()
            End If
        End If


        Dim ob1 As New DMSUtil()
        ' by rajat bansal for formula field
        Dim CalculativeField() As DataRow = ds.Select("Fieldtype='Formula Field'")
        Dim viewdoc As String = DocType
        viewdoc = viewdoc.Replace(" ", "_")
        If CalculativeField.Length > 0 Then
            For Each CField As DataRow In CalculativeField
                Dim formulaeditorr As New formulaEditor
                Dim forvalue As String = String.Empty
                forvalue = formulaeditorr.ExecuteFormulaT(CField.Item("KC_LOGIC"), DocID, "v" + Session("eid").ToString + viewdoc, Session("eid").ToString, 0, con, trans)
                Dim upquery As String = "update " & CField.Item("DBTableName").ToString & "  set  " & CField.Item("FieldMapping").ToString & "='" & forvalue.ToString & "'  where tid =" & DocID & ""
                da.SelectCommand.CommandText = upquery
                da.SelectCommand.CommandType = CommandType.Text
                da.SelectCommand.ExecuteNonQuery()
            Next
        End If

        '' copy all movements of document - by sunil for split 
        da.SelectCommand.CommandText = "CopyDocMovement_NewSplittedDoc"
        da.SelectCommand.CommandType = CommandType.StoredProcedure
        da.SelectCommand.Parameters.Clear()
        da.SelectCommand.Parameters.AddWithValue("OldDocID", OldDocID)
        da.SelectCommand.Parameters.AddWithValue("NewDocID", fileid)
        da.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
        da.SelectCommand.Parameters.AddWithValue("type", "COPY")
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim res As String
        res = da.SelectCommand.ExecuteScalar()

        Dim sretMsgArr() As String = res.Split(":")

        ''INSERT INTO HISTORY 
        ob.HistoryT(Session("EID"), fileid, Session("UID"), DocType, "MMM_MST_DOC", "ADD", con, trans)
        '' new added for pusing data to master on docuement creation by sp 21-Jan-14
        If sretMsgArr(0) = "ARCHIVE" Then
            Dim Op As New Exportdata()
            Op.PushdataT(fileid, sretMsgArr(1), Session("EID"), con, trans)
        End If

        '''' check if no skip setting and if not allowed then don't move doc and show msg to user by sunil on 07-Oct
        If sretMsgArr(0).ToUpper() = "NO SKIP" Then
            Dim Noskipmsg As String = "Next Approvar/User not found, please contact Admin"
            errorMsg = "Splitted Document's System Docid is " & fileid & " " & msgAN & "" & "<br/> " & Noskipmsg
        Else
            errorMsg = "New System Docid is " & fileid & " " & msgAN & ""
        End If
        Try
            Dim FormName As String = DocType
            Dim EID As Integer = 0
            EID = Convert.ToInt32(Session("EID"))
            If (DocID > 0) And (FormName <> "") Then
                Trigger.ExecuteTriggerT(FormName, EID, DocID, con, trans, TriggerNature:="Create")
            End If
        Catch ex As Exception
        End Try
        ds.Dispose()

        Return errorMsg
        'FinalQry = ob.ValidateAndGenrateQueryForControls("ADD", "INSERT INTO MMM_MST_DOC(EID,Documenttype,oUID,adate,", "VALUES (" & Session("EID").ToString() & ",'" & DocType & "'," & Session("UID").ToString() & ",getdate(),", dtFld.Tables("fields"), pnlFields, 0)
    End Function

    Protected Function ValidateData(ByVal actionType As String, con As SqlConnection, trans As SqlTransaction) As Integer
        lblDetail1.Text = ""
        Dim ret As Integer = 1
        Dim childvalidation As String = ""
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        oda.SelectCommand.Transaction = trans
        If ViewState("status") = "AMEND" Then

            oda.SelectCommand.CommandText = "select FF.*,FM.* from MMM_MST_FIELDS FF  inner join MMM_MST_DOC M   on FF.DocumentType =M.DocumentType left outer join MMM_MST_FORMS FM   ON FF.DOCUMENTTYPE=FM.FORMNAME   where FF.EID=" & Session("EID") & " AND FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.showonamendment=1  order by displayOrder"
        ElseIf ViewState("status") = "EDIT" Then
            oda.SelectCommand.CommandText = "select FF.*,FM.* from MMM_MST_FIELDS FF  inner join MMM_MST_DOC M   on FF.DocumentType =M.DocumentType left outer join MMM_MST_FORMS FM   ON FF.DOCUMENTTYPE=FM.FORMNAME   where FF.EID=" & Session("EID") & " AND FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.isactive=1  order by displayOrder"
        ElseIf ViewState("status") = "SPLIT" Then
            oda.SelectCommand.CommandText = "select FF.*,FM.* from MMM_MST_FIELDS FF  inner join MMM_MST_DOC M   on FF.DocumentType =M.DocumentType left outer join MMM_MST_FORMS FM   ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and (FF.ShowonSplit=1  or Fieldtype='auto number') order by displayOrder"
        ElseIf ViewState("status") = "COPY" Then
            oda.SelectCommand.CommandText = "select FF.*,FM.* from MMM_MST_FIELDS FF  inner join MMM_MST_DOC M   on FF.DocumentType =M.DocumentType left outer join MMM_MST_FORMS FM  ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and  FF.isactive=1 order by displayOrder"
        End If
        Dim ds As New DataSet
        oda.Fill(ds, "fields")
        Dim ob As New DynamicForm
        Dim FinalQry As String
        ' here is the code for calculation inline grid 
        Dim childDt() As DataRow = ds.Tables("fields").Select("fieldtype='child item'")
        For K As Integer = 0 To childDt.Length - 1
            CalculateGRid(ds.Tables("fields").Rows(0).Item("documenttype").ToString(), childDt(K).Item("fieldid").ToString())
        Next
        'End here
        FinalQry = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", ds.Tables("fields"), pnlFields, pid)
        If Trim(Left(FinalQry, 6)).ToUpper() = "PLEASE" Then
            lblDetail1.Text = FinalQry
            updatePanelEdit.Update()
            ret = 0
            Return ret
        Else
            'Code For Rule Engine By Ajeet Kumar Dated :30-july-2014
            Dim RDocType As String = "NO Rule configured"
            If (ds.Tables("fields").Rows.Count > 0) Then
                RDocType = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
            End If

            Dim dv As DataView = ds.Tables("fields").DefaultView
            dv.RowFilter = "IsActive=1"
            Dim theFields As DataTable = dv.ToTable
            Dim lstData As New List(Of UserData)
            Dim obj As New DynamicForm()
            'Creating collection for rule engine execution
            lstData = obj.CreateCollection(pnlFields, theFields)
            'Setting it to session for getting it's value for child Item validation
            Session("pColl") = lstData
            'Creating object of rule response
            Dim ObjRet As New RuleResponse()
            'Initialising rule Object
            Dim ObjRule As New RuleEngin(Session("EID"), RDocType, "CREATED", "SUBMIT")
            'Uncomment
            ObjRet = ObjRule.ExecuteRule(lstData, Nothing, False)
            If ObjRet.Success = False Then
                lblDetail1.Text = ObjRet.Message
                updatePanelEdit.Update()
                ret = 0
                Return ret
            End If

            'Prashant_30_7
            Dim validatechilditem() As DataRow = ds.Tables("fields").Select("Fieldtype='CHILD ITEM'")
            If validatechilditem.Length > 0 Then
                For Each DR As DataRow In validatechilditem
                    '' new added for saving differently if def. value feature is on

                    Dim strDF As String = "select * from mmm_mst_forms  where formname='" & DR.Item("DROPDOWN") & "' and formsource='DETAIL FORM' and EID=" & Session("EID") & " and (isnull(HasDefaultValue,0)=1 or isnull(IsDefaultRows,0)>0)"
                    Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
                    oda1.SelectCommand.Transaction = trans
                    Dim dtIsdv As New DataTable
                    oda1.SelectCommand.CommandText = strDF
                    oda1.Fill(dtIsdv)

                    If dtIsdv.Rows.Count > 0 Then
                        childvalidation = ValidatingChildItem_DV(DR.Item("DROPDOWN"))
                    End If
                    If childvalidation.Length > 5 Then
                        lblDetail1.Text = childvalidation
                        ret = 0
                        Return ret
                    End If


                    'childvalidation = ValidatingChildItem_DV(DR.Item("DROPDOWN"))
                    'If childvalidation.Length > 5 Then
                    '    lblDetail1.Text = childvalidation
                    '    ret = 0
                    '    Return ret

                    'End If
                Next
            End If
            '' here code for split functionality by sunil - create new document 
            Dim NewDocRES As String = ""
            If ViewState("status") = "SPLIT" Then
                NewDocRES = Validate_Save_SplittedDocument(pid, pnlFields, ds.Tables("fields"), con, trans)
                If Left(NewDocRES, 5) = "ERROR" Then
                    If NewDocRES = "ERROR" Then
                        lblDetail1.Text = "Error occured while saving new splitted document!"
                        updatePanelEdit.Update()
                        ret = 0
                        Return ret
                    Else
                        lblDetail1.Text = NewDocRES
                        updatePanelEdit.Update()
                        ret = 0
                        Return ret
                    End If
                End If
            End If
            If ViewState("status") = "COPY" Then
                NewDocRES = Validate_Save_COPYDocument(pid, pnlFields, ds.Tables("fields"), con, trans)
                If Left(NewDocRES, 5) = "ERROR" Then
                    If NewDocRES = "ERROR" Then
                        lblDetail1.Text = "Error occured while saving new splitted document!"
                        updatePanelEdit.Update()
                        ret = 0
                        Return ret
                    Else
                        lblDetail1.Text = NewDocRES
                        updatePanelEdit.Update()
                        ret = 0
                        Return ret
                    End If
                End If
            End If

            If actionType <> "ADD" Then
                FinalQry = FinalQry & " WHERE tID=" & pid
            End If
            'save the data
            oda.SelectCommand.CommandText = FinalQry
            oda.SelectCommand.ExecuteNonQuery()

            '' new for updating amount value in old doc by sp 
            If ViewState("status") = "SPLIT" Then
                If NewDocRES <> "ERROR" Then
                    If Not ViewState("SplitUpdStr") = Nothing Then
                        oda.SelectCommand.CommandText = ViewState("SplitUpdStr")
                        oda.SelectCommand.ExecuteNonQuery()
                    End If
                End If
            End If
            Dim fileid As Integer = Convert.ToString(RetDocId(Session("EID")))

            Call Recalculate_CalfieldsonSave(fileid, con, trans) 'fOR cALCULATIV fIELD

            Dim childitem() As DataRow = ds.Tables("fields").Select("Fieldtype='CHILD ITEM'")
            If childitem.Length > 0 Then
                For Each DR As DataRow In childitem
                    '' new added for saving differently if def. value feature is on
                    '' by sunil for def value 13-jan-14 - starts

                    Dim strDF As String = "select * from mmm_mst_forms where formname='" & DR.Item("DROPDOWN") & "' and formsource='DETAIL FORM' and EID=" & Session("EID") & " and ( isnull(HasDefaultValue,0)=1 or isnull(IsDefaultRows,0)>0 or isnull(isinlineediting,0)=1)"
                    Dim dtIsdv As New DataTable
                    oda.SelectCommand.CommandType = CommandType.Text
                    oda.SelectCommand.CommandText = strDF
                    oda.Fill(dtIsdv)
                    If dtIsdv.Rows.Count = 0 Then
                        '  SavingChildItem(DR.Item("DROPDOWN"), fileid)
                        oda.SelectCommand.CommandText = "UPDATE MMM_MST_DOC_ITEM SET DOCID =" & fileid & " WHERE SESSIONID='" & Session.SessionID & "' AND DOCID IS NULL "
                        oda.SelectCommand.ExecuteNonQuery()
                    Else
                        SavingChildItem_DV(DR.Item("DROPDOWN"), fileid, con, trans)
                    End If
                    Try
                        Dim FormName As String = DR.Item("DROPDOWN")
                        Dim EID As Integer = 0
                        EID = Convert.ToInt32(Session("EID"))
                        If (fileid > 0) And (FormName <> "") Then
                            'Last parameter is for child item
                            Trigger.ExecuteTriggerT(FormName, EID, fileid, con, trans, 1, TriggerNature:="Update")
                        End If
                    Catch ex As Exception
                        Throw
                    End Try
                Next
            End If

            '' formula
            Dim CalculativeField() As DataRow = ds.Tables("fields").Select("Fieldtype='Formula Field'")
            Dim viewdoc As String = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
            Dim doctype = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
            viewdoc = viewdoc.Replace(" ", "_")

            If CalculativeField.Length > 0 Then
                For Each CField As DataRow In CalculativeField
                    Dim da As New SqlDataAdapter("", con)
                    da.SelectCommand.Transaction = trans
                    Dim formulaeditorr As New formulaEditor
                    Dim forvalue As String = String.Empty
                    forvalue = formulaeditorr.ExecuteFormulaT(CField.Item("KC_LOGIC"), fileid, "v" + Session("eid").ToString + viewdoc, Session("eid").ToString, 0, con, trans)
                    Dim upquery As String = "update " & CField.Item("DBTableName").ToString & "  set  " & CField.Item("FieldMapping").ToString & "='" & forvalue.ToString & "'  where tid =" & fileid & ""
                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If
                    da.SelectCommand.CommandType = CommandType.Text
                    da.SelectCommand.CommandText = upquery
                    da.SelectCommand.ExecuteNonQuery()
                    da.Dispose()
                Next
            End If
            'formula end
            ob.HistoryT(Session("EID"), fileid, Session("UID"), ds.Tables("fields").Rows(0).Item("documenttype").ToString(), "MMM_MST_DOC", "UPDATE", con, trans)
            oda.SelectCommand.ExecuteNonQuery()
            Try
                ' fill the actionform in session 
                Trigger.ExecuteTriggerT(ds.Tables("fields").Rows(0).Item("documenttype").ToString(), Session("EID"), RetDocId(Session("EID")), con, trans, TriggerNature:="Update")
            Catch ex As Exception
            End Try
            Dim ob1 As New DMSUtil
            'ob1.TemplateCalling(fileid, Session("EID"), ds.Tables("fields").Rows(0).Item("documenttype").ToString(), "CREATED")
            ob.CLEARDYNAMICFIELDS(pnlFields)
            ModalEditPopup.Hide()
            Dim remarks As String = ""
            If ViewState("status") = "SPLIT" Or ViewState("status") = "COPY" Then  ' ADDED FOR COPY
                If NewDocRES <> "ERROR" Then

                    '' for sending old doc to archive status  
                    '' insert default fiest movement of document - by sunil
                    oda.SelectCommand.CommandText = "InsertDefaultMovement"
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.Parameters.Clear()
                    oda.SelectCommand.Parameters.AddWithValue("tid", fileid)
                    oda.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
                    If ViewState("status") = "SPLIT" Or ViewState("status") = "COPY" Then   ' CHANGES HERE
                        oda.SelectCommand.Parameters.AddWithValue("what", "ARCHIVE")
                    End If
                    '                    oda.SelectCommand.Parameters.AddWithValue("what", "ARCHIVE")
                    If ViewState("status") = "COPY" Then
                        oda.SelectCommand.Parameters.AddWithValue("Remarks", "Document COPIED & Archived")
                    Else
                        oda.SelectCommand.Parameters.AddWithValue("Remarks", "Document splited & Archived")
                    End If


                    oda.SelectCommand.ExecuteNonQuery()
                    '' for sending old doc to archive status  

                    lblMsg.Text = NewDocRES
                    updMsg.Update()
                    btnForm_ModalPopupExtender.Show()
                End If
                Session("DOCSTATUS") = Nothing
                ViewState("status") = Nothing
                ViewState("SplitUpdStr") = Nothing
            End If
        End If
        oda.Dispose()
        ModalEditPopup.Hide()
        updatePanelEdit.Update()

        updMain.Update()
        Return ret

    End Function

    'Public Sub Recalculate_CalfieldsonSave(ByVal docid As Integer, con As SqlConnection, tran As SqlTransaction)
    '    ''''''''' Shalini;;;; For calculative field'''''''Calculative Field''''''''''''''''
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con1 As New SqlConnection(conStr)
    '    Dim da As SqlDataAdapter = New SqlDataAdapter("", con1)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
    '    oda.SelectCommand.Transaction = tran
    '    Dim dsscal As New DataSet
    '    Dim dt5 As New DataTable
    '    Dim dt6 As New DataTable
    '    Dim dt7 As New DataTable
    '    Dim cal_mpng As String = ""
    '    Dim cal_text As String = ""
    '    Dim fldmpng As String = ""
    '    Dim stringf As String = ""
    '    Dim orignlfinalstr As String = ""
    '    Dim finalstrr As String = ""
    '    oda.SelectCommand.CommandText = "Select documenttype from MMM_MST_DOC where tid = " & docid & ""
    '    oda.Fill(dsscal, "caldoc")
    '    da.SelectCommand.CommandText = "Select cal_text,fieldmapping from MMM_MST_FIELDS where documenttype = '" & dsscal.Tables("caldoc").Rows(0).Item("documenttype").ToString() & "' and fieldtype='Calculative Field' and eid='" & Session("EID") & "'"
    '    da.Fill(dt5)
    '    If dt5.Rows.Count > 0 Then
    '        For n As Integer = 0 To dt5.Rows.Count - 1
    '            cal_text = dt5.Rows(n).Item("cal_text")
    '            cal_mpng = dt5.Rows(n).Item("fieldmapping")
    '            da.SelectCommand.CommandText = "Select displayname,fieldmapping from MMM_MST_FIELDS where documenttype = '" & dsscal.Tables("caldoc").Rows(0).Item("documenttype").ToString() & "' and eid = " & Session("EID") & ""
    '            da.Fill(dt6)
    '            stringf = cal_text
    '            For m As Integer = 0 To dt6.Rows.Count - 1
    '                '  If cal_text.Contains("{" & dt6.Rows(m).Item("displayname").ToString() & "}") Then
    '                If cal_text.Trim().Contains("{" & dt6.Rows(m).Item("displayname").ToString().Trim() & "}") Then
    '                    fldmpng = dt6.Rows(m).Item("fieldmapping").ToString().Trim()
    '                    stringf = stringf.Replace("{" & dt6.Rows(m).Item("displayname").ToString().Trim() & "}", "{" & fldmpng.Trim() & "}")
    '                End If
    '            Next
    '            stringf = stringf.Replace("{", "")
    '            stringf = stringf.Replace("}", "")
    '            Dim s As String() = Split(stringf, "=")
    '            Dim resultfldd As String = s(0)

    '            orignlfinalstr = s(1)
    '            finalstrr = orignlfinalstr
    '            finalstrr = finalstrr.Replace("(", "")
    '            finalstrr = finalstrr.Replace(")", "")
    '            finalstrr = finalstrr.Replace("+", ",")
    '            finalstrr = finalstrr.Replace("-", ",")
    '            finalstrr = finalstrr.Replace("*", ",")
    '            finalstrr = finalstrr.Replace("/", ",")
    '            finalstrr = finalstrr.Replace("%", ",")
    '            oda.SelectCommand.CommandText = "Select " & finalstrr & " from MMM_MST_DOC  where tid = " & docid & ""
    '            oda.Fill(dt7)
    '            For h As Integer = 0 To dt7.Columns.Count - 1
    '                orignlfinalstr = orignlfinalstr.Replace(dt7.Columns(h).ColumnName, dt7.Rows(0).Item(dt7.Columns(h).ColumnName))
    '            Next
    '            Dim res = New DataTable().Compute(orignlfinalstr, 0).ToString()
    '            ' oda.SelectCommand.CommandText = "Update MMM_MST_DOC set " & resultfldd & "=" & res & " where tid = " & docid & ""
    '            oda.SelectCommand.CommandText = "Update MMM_MST_DOC set " & cal_mpng & "=" & res & " where tid = " & docid & ""
    '            oda.SelectCommand.ExecuteNonQuery()
    '        Next
    '    End If
    '    da.Dispose()
    '    dt5.Dispose()
    '    dt6.Dispose()
    '    dt7.Dispose()
    'End Sub


    'Protected Function ValidateData(ByVal actionType As String) As Integer

    '    lblDetail1.Text = ""
    '    Dim ret As Integer = 1
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
    '    If ViewState("status") = "AMEND" Then
    '        oda.SelectCommand.CommandText = "select FF.*,FM.* from MMM_MST_FIELDS FF inner join MMM_MST_DOC M on FF.DocumentType =M.DocumentType left outer join MMM_MST_FORMS FM ON FF.DOCUMENTTYPE=FM.FORMNAME   where FF.EID=" & Session("EID") & " AND FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.showonamendment=1  order by displayOrder"
    '    ElseIf ViewState("status") = "EDIT" Then
    '        oda.SelectCommand.CommandText = "select FF.*,FM.* from MMM_MST_FIELDS FF inner join MMM_MST_DOC M on FF.DocumentType =M.DocumentType left outer join MMM_MST_FORMS FM ON FF.DOCUMENTTYPE=FM.FORMNAME   where FF.EID=" & Session("EID") & " AND FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.isactive=1  order by displayOrder"
    '    ElseIf ViewState("status") = "SPLIT" Then
    '        oda.SelectCommand.CommandText = "select FF.*,FM.* from MMM_MST_FIELDS FF inner join MMM_MST_DOC M on FF.DocumentType =M.DocumentType left outer join MMM_MST_FORMS FM ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and (FF.ShowonSplit=1  or Fieldtype='auto number') order by displayOrder"
    '    End If
    '    Dim ds As New DataSet
    '    oda.Fill(ds, "fields")
    '    Dim ob As New DynamicForm
    '    Dim FinalQry As String
    '    FinalQry = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET adate=getdate(),", "", ds.Tables("fields"), pnlFields, pid)

    '    If Trim(Left(FinalQry, 6)).ToUpper() = "PLEASE" Then
    '        lblDetail1.Text = FinalQry
    '        updatePanelEdit.Update()
    '        ret = 0
    '        Return ret
    '    Else

    '        '' here code for split functionality by sunil - create new document 
    '        Dim NewDocRES As String = ""

    '        If ViewState("status") = "SPLIT" Then
    '            NewDocRES = Validate_Save_SplittedDocument(pid, pnlFields, ds.Tables("fields"))

    '            If Left(NewDocRES, 5) = "ERROR" Then
    '                If NewDocRES = "ERROR" Then
    '                    lblDetail1.Text = "Error occured while saving new splitted document!"
    '                    updatePanelEdit.Update()
    '                    ret = 0
    '                    Return ret
    '                Else
    '                    lblDetail1.Text = NewDocRES
    '                    updatePanelEdit.Update()
    '                    ret = 0
    '                    Return ret
    '                End If
    '            End If
    '        End If

    '        If actionType <> "ADD" Then
    '            FinalQry = FinalQry & " WHERE tID=" & pid
    '        End If
    '        'save the data

    '        oda.SelectCommand.CommandText = FinalQry
    '        If con.State <> ConnectionState.Open Then
    '            con.Open()
    '        End If
    '        oda.SelectCommand.ExecuteNonQuery()

    '        '' new for updating amount value in old doc by sp 
    '        If ViewState("status") = "SPLIT" Then
    '            If NewDocRES <> "ERROR" Then
    '                If Not ViewState("SplitUpdStr") = Nothing Then
    '                    oda.SelectCommand.CommandText = ViewState("SplitUpdStr")
    '                    If con.State <> ConnectionState.Open Then
    '                        con.Open()
    '                    End If
    '                    oda.SelectCommand.ExecuteNonQuery()
    '                End If
    '            End If
    '        End If


    '        Dim fileid As Integer = Convert.ToString(RetDocId(Session("EID")))

    '        Dim childitem() As DataRow = ds.Tables("fields").Select("Fieldtype='CHILD ITEM'")
    '        If childitem.Length > 0 Then
    '            For Each DR As DataRow In childitem
    '                '' new added for saving differently if def. value feature is on
    '                '' by sunil for def value 13-jan-14 - starts
    '                Dim strDF As String = "select * from mmm_mst_forms where formname='" & DR.Item("DROPDOWN") & "' and formsource='DETAIL FORM' and EID=" & Session("EID") & " and isnull(HasDefaultValue,0)=1"
    '                Dim dtIsdv As New DataTable
    '                oda.SelectCommand.CommandType = CommandType.Text
    '                oda.SelectCommand.CommandText = strDF
    '                oda.Fill(dtIsdv)
    '                If dtIsdv.Rows.Count = 0 Then
    '                    '  SavingChildItem(DR.Item("DROPDOWN"), fileid)
    '                    oda.SelectCommand.CommandText = "UPDATE MMM_MST_DOC_ITEM SET DOCID =" & fileid & " WHERE SESSIONID='" & Session.SessionID & "' AND DOCID IS NULL "
    '                    If con.State <> ConnectionState.Open Then
    '                        con.Open()
    '                    End If
    '                    oda.SelectCommand.ExecuteNonQuery()
    '                Else
    '                    SavingChildItem_DV(DR.Item("DROPDOWN"), fileid)
    '                End If


    '                Try
    '                    Dim FormName As String = DR.Item("DROPDOWN")
    '                    Dim EID As Integer = 0
    '                    EID = Convert.ToInt32(Session("EID"))
    '                    If (fileid > 0) And (FormName <> "") Then
    '                        'Last parameter is for child item
    '                        Trigger.ExecuteTrigger(FormName, EID, fileid, 1, TriggerNature:="Update")
    '                    End If
    '                Catch ex As Exception
    '                End Try
    '            Next
    '        End If

    '        '' formula
    '        Dim CalculativeField() As DataRow = ds.Tables("fields").Select("Fieldtype='Formula Field'")
    '        Dim viewdoc As String = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
    '        Dim doctype = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
    '        viewdoc = viewdoc.Replace(" ", "_")

    '        If CalculativeField.Length > 0 Then
    '            For Each CField As DataRow In CalculativeField
    '                Dim da As New SqlDataAdapter("", con)
    '                Dim formulaeditorr As New formulaEditor
    '                Dim forvalue As String = String.Empty
    '                forvalue = formulaeditorr.ExecuteFormula(CField.Item("KC_LOGIC"), fileid, "v" + Session("eid").ToString + viewdoc, Session("eid").ToString, 0)
    '                Dim upquery As String = "update " & CField.Item("DBTableName").ToString & "  set  " & CField.Item("FieldMapping").ToString & "='" & forvalue.ToString & "'  where tid =" & fileid & ""
    '                If con.State <> ConnectionState.Open Then
    '                    con.Open()
    '                End If
    '                da.SelectCommand.CommandType = CommandType.Text
    '                da.SelectCommand.CommandText = upquery
    '                da.SelectCommand.ExecuteNonQuery()
    '                da.Dispose()
    '            Next
    '        End If
    '        'formula end
    '        ob.History(Session("EID"), fileid, Session("UID"), ds.Tables("fields").Rows(0).Item("documenttype").ToString(), "MMM_MST_DOC", "UPDATE")
    '        oda.SelectCommand.ExecuteNonQuery()
    '        Try
    '            ' fill the actionform in session 
    '            Trigger.ExecuteTrigger(ds.Tables("fields").Rows(0).Item("documenttype").ToString(), Session("EID"), RetDocId(Session("EID")), TriggerNature:="Update")
    '        Catch ex As Exception
    '        End Try
    '        Dim ob1 As New DMSUtil
    '        ob1.TemplateCalling(fileid, Session("EID"), ds.Tables("fields").Rows(0).Item("documenttype").ToString(), "CREATED")
    '        ob.CLEARDYNAMICFIELDS(pnlFields)
    '        ModalEditPopup.Hide()

    '        If ViewState("status") = "SPLIT" Then
    '            If NewDocRES <> "ERROR" Then

    '                '' for sending old doc to archive status  
    '                '' insert default fiest movement of document - by sunil
    '                oda.SelectCommand.CommandText = "InsertDefaultMovement"
    '                oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '                oda.SelectCommand.Parameters.Clear()
    '                oda.SelectCommand.Parameters.AddWithValue("tid", fileid)
    '                oda.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
    '                oda.SelectCommand.Parameters.AddWithValue("what", "ARCHIVE")
    '                oda.SelectCommand.Parameters.AddWithValue("Remarks", "Document splited & Archived")
    '                If con.State <> ConnectionState.Open Then
    '                    con.Open()
    '                End If
    '                oda.SelectCommand.ExecuteNonQuery()
    '                '' for sending old doc to archive status  

    '                lblMsg.Text = NewDocRES
    '                updMsg.Update()
    '                btnForm_ModalPopupExtender.Show()
    '            End If
    '            Session("DOCSTATUS") = Nothing
    '            ViewState("status") = Nothing
    '            ViewState("SplitUpdStr") = Nothing
    '        End If

    '        ' below code used for calling webservice...

    '        If ViewState("status") = "AMEND" Then
    '            Try
    '                If ds.Tables("fields").Rows(0).Item("enablews").ToString = "1" Then
    '                    Dim ws As New WSOutward()
    '                    Dim URLIST As String = ws.WBS(doctype, Session("EID"), fileid, "Edit")
    '                    lblMsg.Text = lblMsg.Text & Environment.NewLine & URLIST.ToString()
    '                End If
    '            Catch ex As Exception
    '            End Try
    '        End If

    '    End If
    '    oda.Dispose()
    '    con.Dispose()
    '    ModalEditPopup.Hide()
    '    updatePanelEdit.Update()
    '    If ret = 1 Then
    '        FillMainPage()
    '    End If
    '    updMain.Update()
    '    Return ret
    'End Function

    'Public Sub Recalculate_CalfieldsonSave(ByVal docid As Integer, con As SqlConnection, tran As SqlTransaction)
    '    ''''''''' Shalini;;;; For calculative field'''''''Calculative Field''''''''''''''''
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con1 As New SqlConnection(conStr)
    '    Dim da As SqlDataAdapter = New SqlDataAdapter("", con1)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
    '    oda.SelectCommand.Transaction = tran
    '    Dim dsscal As New DataSet
    '    Dim dt5 As New DataTable
    '    Dim dt6 As New DataTable

    '    Dim cal_mpng As String = ""
    '    Dim cal_text As String = ""
    '    Dim fldmpng As String = ""
    '    Dim stringf As String = ""
    '    oda.SelectCommand.CommandText = "Select documenttype from MMM_MST_DOC where tid = " & docid & ""
    '    oda.Fill(dsscal, "caldoc")
    '    da.SelectCommand.CommandText = "Select cal_text,fieldmapping from MMM_MST_FIELDS with (nolock) where documenttype = '" & dsscal.Tables("caldoc").Rows(0).Item("documenttype").ToString() & "' and fieldtype='Calculative Field' and eid='" & Session("EID") & "'"
    '    da.Fill(dt5)
    '    If dt5.Rows.Count > 0 Then
    '        For n As Integer = 0 To dt5.Rows.Count - 1
    '            Dim orignlfinalstr As String = ""
    '            Dim finalstrr As String = ""
    '            Dim dt7 As New DataTable
    '            cal_text = dt5.Rows(n).Item("cal_text")
    '            cal_mpng = dt5.Rows(n).Item("fieldmapping")
    '            dt6.Rows.Clear()
    '            da.SelectCommand.CommandText = "Select displayname,fieldmapping from MMM_MST_FIELDS with(nolock) where documenttype = '" & dsscal.Tables("caldoc").Rows(0).Item("documenttype").ToString() & "' and eid = " & Session("EID") & ""
    '            da.Fill(dt6)
    '            stringf = cal_text
    '            For m As Integer = 0 To dt6.Rows.Count - 1
    '                '  If cal_text.Contains("{" & dt6.Rows(m).Item("displayname").ToString() & "}") Then
    '                If cal_text.Trim().Contains("{" & dt6.Rows(m).Item("displayname").ToString().Trim() & "}") Then
    '                    fldmpng = dt6.Rows(m).Item("fieldmapping").ToString().Trim()
    '                    stringf = stringf.Replace("{" & dt6.Rows(m).Item("displayname").ToString().Trim() & "}", "{" & fldmpng.Trim() & "}")
    '                End If
    '            Next
    '            stringf = stringf.Replace("{", "")
    '            stringf = stringf.Replace("}", "")
    '            Dim s As String() = Split(stringf, "=")
    '            Dim resultfldd As String = s(0)
    '            orignlfinalstr = s(1)

    '            If Right(orignlfinalstr, 1) = "," Then
    '                orignlfinalstr = Left(orignlfinalstr, orignlfinalstr.Length - 1)
    '            End If

    '            Dim intval As String = ""
    '            Dim spltstr() As String = orignlfinalstr.Split("(", ")", "+", "-", "*", "/", "%")
    '            For i As Integer = 0 To spltstr.Length - 1
    '                If spltstr(i).Contains("fld") Then
    '                    finalstrr = finalstrr & spltstr(i) & ","
    '                Else
    '                    intval = intval & spltstr(i) & ","
    '                End If
    '            Next
    '            If Right(finalstrr, 1) = "," Then
    '                finalstrr = Left(finalstrr, finalstrr.Length - 1)
    '            End If
    '            'finalstrr = finalstrr.Replace("(", "")
    '            'finalstrr = finalstrr.Replace(")", "")

    '            'finalstrr = finalstrr.Replace("+", ",")
    '            'finalstrr = finalstrr.Replace("-", ",")
    '            'finalstrr = finalstrr.Replace("*", ",")
    '            'finalstrr = finalstrr.Replace("/", ",")
    '            'finalstrr = finalstrr.Replace("%", ",")
    '            Dim value As String = ""
    '            Dim opr As String = ""

    '            oda.SelectCommand.CommandText = "Select " & finalstrr & " from MMM_MST_DOC  where tid = " & docid & ""
    '            oda.Fill(dt7)
    '            Dim str As String = ""
    '            For h As Integer = 0 To dt7.Columns.Count - 1
    '                For Each c As Char In orignlfinalstr
    '                    str &= c
    '                    If str.Trim = dt7.Columns(h).ColumnName.ToString Then
    '                        value &= dt7.Rows(0).Item(dt7.Columns(h).ColumnName.ToString)
    '                        'Exit For
    '                        'orignlfinalstr = orignlfinalstr.Replace(dt7.Columns(h).ColumnName.ToString, IIf(IsDBNull(dt7.Rows(0).Item(dt7.Columns(h).ColumnName)), "0", dt7.Rows(0).Item(dt7.Columns(h).ColumnName).ToString()))

    '                    Else
    '                        If c = "+" Or c = "-" Or c = "*" Or c = "/" Or c = "%" Then
    '                            value = value & c
    '                            Dim fld As String = str & c
    '                            orignlfinalstr = Replace(orignlfinalstr, str.Trim, "")
    '                            str = ""
    '                            'orignlfinalstr = Right(orignlfinalstr, orignlfinalstr.Length - 1)
    '                            Exit For
    '                        End If
    '                    End If
    '                Next
    '                'orignlfinalstr = orignlfinalstr.Replace(dt7.Columns(h).ColumnName.ToString, "")
    '                'orignlfinalstr = Right(orignlfinalstr, orignlfinalstr.Length - 1)
    '            Next
    '            value = value & Val(orignlfinalstr.Trim)
    '            Dim res = New DataTable().Compute(value, 0).ToString()
    '            'Dim res = New DataTable().Compute(orignlfinalstr, 0).ToString()
    '            ' oda.SelectCommand.CommandText = "Update MMM_MST_DOC set " & resultfldd & "=" & res & " where tid = " & docid & ""
    '            oda.SelectCommand.CommandText = "Update MMM_MST_DOC set " & cal_mpng & "=" & res & " where tid = " & docid & ""
    '            oda.SelectCommand.ExecuteNonQuery()
    '            dt7.Rows.Clear()
    '            dt7.Dispose()
    '        Next
    '    End If
    '    da.Dispose()
    '    dt5.Dispose()
    '    dt6.Dispose()

    'End Sub


    Public Sub Recalculate_CalfieldsonSave(ByVal docid As Integer, con As SqlConnection, tran As SqlTransaction)
        ''''''''' Shalini;;;; For calculative field'''''''Calculative Field''''''''''''''''
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con1 As New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con1)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        oda.SelectCommand.Transaction = tran
        Dim dsscal As New DataSet
        Dim dt5 As New DataTable
        Dim dt6 As New DataTable

        Dim cal_mpng As String = ""
        Dim cal_text As String = ""
        Dim fldmpng As String = ""
        Dim stringf As String = ""
        oda.SelectCommand.CommandText = "Select documenttype from MMM_MST_DOC   where tid = " & docid & ""
        oda.Fill(dsscal, "caldoc")
        da.SelectCommand.CommandText = "Select cal_text,fieldmapping from MMM_MST_FIELDS with (nolock) where documenttype = '" & dsscal.Tables("caldoc").Rows(0).Item("documenttype").ToString() & "' and fieldtype='Calculative Field' and eid='" & Session("EID") & "' and isactive=1"
        da.Fill(dt5)
        If dt5.Rows.Count > 0 Then
            For n As Integer = 0 To dt5.Rows.Count - 1
                Dim orignlfinalstr As String = ""
                Dim finalstrr As String = ""
                Dim dt7 As New DataTable
                cal_text = dt5.Rows(n).Item("cal_text")
                cal_mpng = dt5.Rows(n).Item("fieldmapping")
                dt6.Rows.Clear()
                da.SelectCommand.CommandText = "Select displayname,fieldmapping,isactive from MMM_MST_FIELDS with(nolock) where documenttype = '" & dsscal.Tables("caldoc").Rows(0).Item("documenttype").ToString() & "' and eid = " & Session("EID") & " "
                da.Fill(dt6)
                stringf = cal_text
                For m As Integer = 0 To dt6.Rows.Count - 1
                    '  If cal_text.Contains("{" & dt6.Rows(m).Item("displayname").ToString() & "}") Then
                    If cal_text.Trim().Contains("{" & dt6.Rows(m).Item("displayname").ToString().Trim() & "}") Then
                        fldmpng = dt6.Rows(m).Item("fieldmapping").ToString().Trim()
                        stringf = stringf.Replace("{" & dt6.Rows(m).Item("displayname").ToString().Trim() & "}", "{" & fldmpng.Trim() & "}")
                    End If
                Next
                stringf = stringf.Replace("{", "")
                stringf = stringf.Replace("}", "")
                Dim s As String() = Split(stringf, "=")
                Dim resultfldd As String = s(0)
                orignlfinalstr = s(1)

                If Right(orignlfinalstr, 1) = "," Then
                    orignlfinalstr = Left(orignlfinalstr, orignlfinalstr.Length - 1)
                End If

                Dim intval As String = ""
                Dim spltstr() As String = orignlfinalstr.Split("(", ")", "+", "-", "*", "/")
                For i As Integer = 0 To spltstr.Length - 1
                    If spltstr(i).Contains("fld") Then
                        finalstrr = finalstrr & spltstr(i) & ","
                    Else
                        intval = intval & spltstr(i) & ","
                    End If
                Next
                If Right(finalstrr, 1) = "," Then
                    finalstrr = Left(finalstrr, finalstrr.Length - 1)
                End If
                'finalstrr = finalstrr.Replace("(", "")
                'finalstrr = finalstrr.Replace(")", "")

                'finalstrr = finalstrr.Replace("+", ",")
                'finalstrr = finalstrr.Replace("-", ",")
                'finalstrr = finalstrr.Replace("*", ",")
                'finalstrr = finalstrr.Replace("/", ",")
                'finalstrr = finalstrr.Replace("%", ",")
                Dim value As String = ""
                Dim opr As String = ""

                oda.SelectCommand.CommandText = "Select " & finalstrr & " from MMM_MST_DOC  with(nolock)  where tid = " & docid & ""
                oda.Fill(dt7)
                Dim str As String = ""
                For h As Integer = 0 To dt7.Columns.Count - 1
                    For Each c As Char In orignlfinalstr
                        str &= c
                        If str.Trim = dt7.Columns(h).ColumnName.ToString Then
                            value &= dt7.Rows(0).Item(dt7.Columns(h).ColumnName.ToString)
                            'Exit For
                            'orignlfinalstr = orignlfinalstr.Replace(dt7.Columns(h).ColumnName.ToString, IIf(IsDBNull(dt7.Rows(0).Item(dt7.Columns(h).ColumnName)), "0", dt7.Rows(0).Item(dt7.Columns(h).ColumnName).ToString()))

                        Else
                            If c = "+" Or c = "-" Or c = "*" Or c = "/" Or c = "%" Then
                                value = value & c

                                Dim fld As String = str & c
                                orignlfinalstr = Replace(orignlfinalstr, str.Trim, "")
                                str = ""
                                'orignlfinalstr = Right(orignlfinalstr, orignlfinalstr.Length - 1)
                                Exit For
                            End If
                        End If
                    Next
                    'orignlfinalstr = orignlfinalstr.Replace(dt7.Columns(h).ColumnName.ToString, "")
                    'orignlfinalstr = Right(orignlfinalstr, orignlfinalstr.Length - 1)
                Next
                If Val(orignlfinalstr.Trim) <> 0 Then
                    value = value & Val(orignlfinalstr.Trim)  '' removed on 01_jan_15
                End If
                Dim res = New DataTable().Compute(value, 0).ToString()
                'Dim res = New DataTable().Compute(orignlfinalstr, 0).ToString()
                ' oda.SelectCommand.CommandText = "Update MMM_MST_DOC set " & resultfldd & "=" & res & " where tid = " & docid & ""
                oda.SelectCommand.CommandText = "Update MMM_MST_DOC set " & cal_mpng & "=" & res & " where tid = " & docid & ""
                oda.SelectCommand.ExecuteNonQuery()
                dt7.Rows.Clear()
                dt7.Dispose()
            Next
        End If
        da.Dispose()
        dt5.Dispose()
        dt6.Dispose()

    End Sub




    '' added on 24 dec 2014
    'Protected Sub SavingChildItem_DV(ByVal formname As String, ByVal docid As Integer, con As SqlConnection, trans As SqlTransaction)
    '    Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
    '    ODA.SelectCommand.Transaction = trans
    '    Dim dtField As New DataTable
    '    ' Dim dtFD As New DataTable
    '    'Dim drnew As DataRow
    '    Dim updquery As String = ""
    '    Dim ob As New DynamicForm()
    '    If Session(formname & "VAL") Is Nothing Then
    '        Exit Sub
    '    End If

    '    ' dtField = ViewState(formname)
    '    dtField = Session("D" & formname)
    '    Dim dtvalue As DataTable = Session(formname & "VAL")
    '    'Session("id")
    '    Dim dt As New DataTable
    '    ODA.SelectCommand.CommandText = "select * from mmm_mst_fields where eid=" & Session("eid") & " and documenttype='" & ViewState("MDOCTYPE") & "' and dropdown='" & formname & "'"
    '    ODA.SelectCommand.CommandType = CommandType.Text
    '    ODA.SelectCommand.Parameters.Clear()
    '    ODA.Fill(dt)

    '    Dim dtTotal As New DataTable
    '    ODA.SelectCommand.CommandType = CommandType.Text
    '    ODA.SelectCommand.CommandText = "SELECT F1.FieldID [MainFieldID],F2.FieldID [ChildFieldID],F2.displayName [CdisplayName] ,F1.dropdown [mDropDown],F1.displayName [MdisplayName],F1.FieldMapping [MFieldMapping],f1.fieldtype [MFIELDTYPE]  FROM MMM_MST_FIELDS F1 INNER JOIN MMM_MST_FIELDS F2 ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType in ('CHILD ITEM MAX','CHILD ITEM TOTAL') AND F2.DocumentType ='" & formname & "' AND F1.DOCUMENTTYPE='" & ViewState("MDOCTYPE") & "'"
    '    ODA.Fill(dtTotal)

    '    Dim isTotal As Boolean = False
    '    Dim cDispName As String = ""
    '    Dim Childtotal As Double = 0
    '    If dtTotal.Rows.Count = 1 Then
    '        isTotal = True
    '        cDispName = dtTotal.Rows(0).Item("cdisplayname").ToString
    '    End If

    '    Dim GID As String = dt.Rows(0).Item("fieldId").ToString
    '    Dim dataitem As DataTable = Session("ITEM")

    '    ' GID = Right(GID, GID.Length - 3)
    '    'Dim itemDS As DataSet = Session("ITEM")
    '    Dim GV As GridView = CType(pnlFields.FindControl("GRD" & GID.ToString()), GridView)

    '    'Prashant_21_7
    '    Dim gridCols As DataTable = GV.DataSource
    '    Dim MaxVal As Double = -999
    '    'Prashant_17_7
    '    Dim LastRow As Integer = 0

    '    If IsNothing(ViewState("LastRow")) = False Then
    '        If ViewState("LastRow").ToString.Trim <> "" Then
    '            LastRow = Convert.ToInt32(ViewState("LastRow"))
    '        Else
    '            LastRow = GV.Rows.Count - 1
    '        End If
    '    Else
    '        LastRow = GV.Rows.Count - 1
    '    End If

    '    'Prashant_17_7

    '    Dim cnt As Integer = 0
    '    ' drnew = dtFD.NewRow()
    '    For Each GR As GridViewRow In GV.Rows
    '        If GR.RowIndex <= LastRow Then
    '            If GR.RowType = DataControlRowType.DataRow Then
    '                If GR.Cells(0).Text.ToUpper <> "TOTAL" Then
    '                    For i As Integer = 0 To dataitem.Rows.Count - 1
    '                        If GR.Cells(GR.Cells.Count - 1).Text.Trim() <> "" And GR.Cells(GR.Cells.Count - 1).Text.Trim() <> "&nbsp;" Then
    '                            Dim str As String = "update MMM_MST_DOC_ITEM Set "
    '                            Dim STRFld As String = ""
    '                            Dim STRVal As String = ""
    '                            updquery = ""
    '                            Dim querry As String = ""
    '                            ' For j As Integer = 0 To GR.Cells.Count - 1
    '                            For j As Integer = 0 To dtField.Rows.Count - 1
    '                                STRFld &= dtField.Rows(j).Item("fieldmapping").ToString & ","
    '                                Dim colValue As String = ""
    '                                Dim FldID As String = ""
    '                                FldID = dtField.Rows(j).Item("fieldid").ToString()
    '                                If dtField.Rows(j).Item("inlineediting").ToString = "1" Then
    '                                    '' new for getting child item total 
    '                                    Dim ftype As String = dtField.Rows(j).Item("fieldtype").ToString()
    '                                    Dim fldmapping As String = dtField.Rows(j).Item("fieldmapping").ToString()
    '                                    If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Then
    '                                        ' Dim cb As TextBox = CType(GR.FindControl("fld" & j.ToString() & "_" & cnt), TextBox)
    '                                        'Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & cnt), TextBox)
    '                                        Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
    '                                        If cb IsNot Nothing Then
    '                                            colValue = Replace(cb.Text.ToString, "'", "")
    '                                            querry = fldmapping & "='" & colValue & "' " & ","
    '                                        Else
    '                                            colValue = "0"
    '                                        End If
    '                                        str &= querry

    '                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
    '                                            If colValue <> "" Then
    '                                                Childtotal = Childtotal + Convert.ToDouble(colValue)
    '                                            End If
    '                                        End If
    '                                    ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
    '                                        'Dim cb As New DropDownList
    '                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
    '                                        If cb IsNot Nothing Then
    '                                            colValue = cb.SelectedItem.Text.ToString
    '                                            querry = fldmapping & "='" & colValue & "' " & ","
    '                                        Else
    '                                            colValue = "0"
    '                                        End If

    '                                        str &= querry
    '                                    ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" Then
    '                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
    '                                        If cb IsNot Nothing Then
    '                                            colValue = cb.SelectedItem.Value.ToString  ' use value bcoz it's mastervalued - needs tid
    '                                            querry = fldmapping & "='" & colValue & "' " & ","
    '                                        Else
    '                                            colValue = "0"
    '                                        End If

    '                                        str &= querry
    '                                    ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
    '                                        '' here to code for getting file 
    '                                        Dim txtBox As FileUpload = CType(GR.FindControl("fld_" & FldID & "_" & cnt), FileUpload)

    '                                        Dim txtBox1 As Label = CType(GR.FindControl("lblf_" & FldID), Label)
    '                                        Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & FldID), HiddenField)
    '                                        Dim hdnflg As HiddenField = CType(GR.FindControl("hdnf_" & FldID), HiddenField)

    '                                        txtBox1.Text = hdn.Value

    '                                        If txtBox1.Text IsNot "" And hdnflg.Value IsNot "0" Then
    '                                            Dim errormsg As String = ""
    '                                            Dim FN As String = ""
    '                                            Dim ext As String = ""
    '                                            Dim flag As Integer = 0
    '                                            Dim sourceFile As String = Server.MapPath("~/DOCS/temp/" + txtBox1.Text)
    '                                            Dim finfo As New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))
    '                                            Dim curFileSize As Integer = finfo.Length
    '                                            ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
    '                                            FN = Left(txtBox1.Text, txtBox1.Text.LastIndexOf("."))
    '                                            colValue = Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & "" & ext
    '                                            File.Copy(sourceFile, Server.MapPath("DOCS/") & Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & ext)
    '                                            querry = fldmapping & "='" & colValue & "' " & ","
    '                                        ElseIf txtBox1.Text IsNot "" And hdnflg.Value IsNot "1" Then
    '                                            colValue = Session("EID").ToString() & "/" & txtBox1.Text
    '                                            querry = fldmapping & "='" & colValue & "' " & ","
    '                                        Else
    '                                            colValue = ""
    '                                            querry = fldmapping & "='" & colValue & "' " & ","
    '                                        End If

    '                                        str &= querry

    '                                    Else
    '                                        colValue = GR.Cells(j).Text.ToString()
    '                                        querry = fldmapping & "='" & colValue & "' " & ","
    '                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
    '                                            If colValue <> "" Then
    '                                                Childtotal = Childtotal + Convert.ToDouble(colValue)
    '                                            End If
    '                                        End If

    '                                    End If
    '                                Else  ' if no inline editing 
    '                                    If dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" And dtField.Rows(j).Item("fieldtype") = "Drop Down" Then
    '                                        '' here code to get tid from session arrays by sp 13-jan-13
    '                                        Dim CH() As String = Session("COLHEAD")  ' {}
    '                                        Dim txt() As String = Session("DDLTXT") ' {}
    '                                        Dim Vals() As String = Session("DDLVAL") '{}
    '                                        Dim found As Boolean = False
    '                                        Dim searchHdr As String = formname & "_" & dtField.Rows(j).Item("displayname")
    '                                        For a As Integer = 0 To CH.Length - 1
    '                                            If CH(a).ToString = searchHdr And txt(a).ToString = GR.Cells(j).Text.ToString() Then ' if match found in array 
    '                                                colValue = Vals(a).ToString
    '                                                found = True
    '                                                Exit For
    '                                            End If
    '                                        Next
    '                                        If found = False Then
    '                                            colValue = dtvalue.Rows(cnt).Item(j).ToString()
    '                                        End If
    '                                        'ElseIf dtField.Rows(j).Item("fieldtype") = "Child Item Total" Then

    '                                    Else
    '                                        colValue = GR.Cells(j).Text.ToString()
    '                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
    '                                            If colValue <> "" Then
    '                                                Childtotal = Childtotal + Convert.ToDouble(colValue)
    '                                            End If
    '                                        End If
    '                                    End If
    '                                End If
    '                                'STRVal &= "'" & colValue & "'" & ","
    '                                colValue = colValue


    '                            Next
    '                            If Right(str, 1) = "," Then
    '                                str = Left(str, str.Length - 1)
    '                            End If

    '                            str = str & "  where TID=" & GR.Cells(GR.Cells.Count - 1).Text

    '                            ODA.SelectCommand.CommandText = str
    '                            ODA.SelectCommand.ExecuteNonQuery()
    '                            Exit For
    '                        Else

    '                            Dim str As String = "INSERT INTO MMM_MST_DOC_ITEM("
    '                            Dim STRFld As String = ""
    '                            Dim STRVal As String = ""
    '                            updquery = ""
    '                            Dim querry As String = ""

    '                            For j As Integer = 0 To dtField.Rows.Count - 1
    '                                STRFld &= dtField.Rows(j).Item("fieldmapping").ToString & ","  'adding  j+1 for incremental
    '                                Dim colValue As String = ""
    '                                Dim FldID As String = ""

    '                                Dim DispName = dtField.Rows(j).Item("DisplayName").ToString

    '                                FldID = dtField.Rows(j).Item("fieldid").ToString()
    '                                If dtField.Rows(j).Item("inlineediting").ToString = "1" Then

    '                                    Dim ftype As String = dtField.Rows(j).Item("fieldtype").ToString()
    '                                    If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Then


    '                                        Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & cnt), TextBox)

    '                                        If cb IsNot Nothing Then
    '                                            colValue = cb.Text.ToString
    '                                        Else
    '                                            colValue = "0"
    '                                        End If


    '                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
    '                                            If colValue <> "" Then
    '                                                If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
    '                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
    '                                                ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
    '                                                    If Convert.ToDouble(colValue) > MaxVal Then
    '                                                        MaxVal = Convert.ToDouble(colValue)
    '                                                        Childtotal = MaxVal
    '                                                    End If
    '                                                End If
    '                                            End If
    '                                        End If
    '                                    ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then

    '                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
    '                                        If cb IsNot Nothing Then
    '                                            colValue = cb.SelectedItem.Text.ToString
    '                                        Else
    '                                            colValue = "0"
    '                                        End If
    '                                    ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" Then
    '                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
    '                                        If cb IsNot Nothing Then
    '                                            colValue = cb.SelectedItem.Value.ToString  ' use value bcoz it's mastervalued - needs tid
    '                                        Else
    '                                            colValue = "0"
    '                                        End If
    '                                    ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
    '                                        '' here to code for getting file 
    '                                        Dim txtBox As FileUpload = CType(GR.FindControl("fld" & FldID & "_" & cnt), FileUpload)
    '                                        'Prashant 
    '                                        Dim txtBox1 As Label = CType(GR.FindControl("lblf_" & FldID), Label)

    '                                        Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & FldID), HiddenField)

    '                                        Dim hdnflg As HiddenField = CType(GR.FindControl("hdnf_" & FldID), HiddenField)
    '                                        txtBox1.Text = hdn.Value

    '                                        If txtBox.HasFile Then
    '                                            'Dim FN As String = ""
    '                                            'Dim ext As String = ""
    '                                            'FN = Left(txtBox.FileName, txtBox.FileName.LastIndexOf("."))
    '                                            'ext = txtBox.FileName.Substring(txtBox.FileName.LastIndexOf("."), (txtBox.FileName.Length - txtBox.FileName.LastIndexOf(".")))
    '                                            'colValue = Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & "" & ext
    '                                            'txtBox.SaveAs(Server.MapPath("DOCS/") & Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & ext)
    '                                            ''Prashant
    '                                        End If

    '                                        If txtBox1.Text IsNot "" And hdnflg.Value IsNot "0" Then
    '                                            Dim errormsg As String = ""
    '                                            Dim FN As String = ""
    '                                            Dim ext As String = ""
    '                                            Dim flag As Integer = 0
    '                                            Dim sourceFile As String = Server.MapPath("~/DOCS/temp/" + txtBox1.Text)
    '                                            Dim finfo As New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))
    '                                            Dim curFileSize As Integer = finfo.Length
    '                                            ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
    '                                            FN = Left(txtBox1.Text, txtBox1.Text.LastIndexOf("."))
    '                                            colValue = Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & "" & ext

    '                                            File.Copy(sourceFile, Server.MapPath("DOCS/") & Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & ext)

    '                                        ElseIf txtBox1.Text IsNot "" And hdnflg.Value IsNot "1" Then
    '                                            colValue = txtBox1.Text
    '                                        End If
    '                                    Else

    '                                        For index As Integer = 0 To gridCols.Columns.Count - 1
    '                                            If DispName = gridCols.Columns(index).ColumnName.ToString Then
    '                                                colValue = GR.Cells(index).Text.ToString()
    '                                                Exit For
    '                                            Else
    '                                                colValue = ""
    '                                            End If
    '                                        Next


    '                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
    '                                            If colValue <> "" Then
    '                                                If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then  ' by sunil for maxval
    '                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
    '                                                ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
    '                                                    If Convert.ToDouble(colValue) > MaxVal Then
    '                                                        MaxVal = Convert.ToDouble(colValue)
    '                                                        Childtotal = MaxVal
    '                                                    End If
    '                                                End If
    '                                            End If
    '                                        End If
    '                                    End If
    '                                Else  ' if no inline editing 
    '                                    If dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" And dtField.Rows(j).Item("fieldtype") = "Drop Down" Then
    '                                        '' here code to get tid from session arrays by sp 13-jan-13
    '                                        Dim CH() As String = Session("COLHEAD")  ' {}
    '                                        Dim txt() As String = Session("DDLTXT") ' {}
    '                                        Dim Vals() As String = Session("DDLVAL") '{}
    '                                        Dim found As Boolean = False
    '                                        Dim searchHdr As String = formname & "_" & dtField.Rows(j).Item("displayname")
    '                                        For a As Integer = 0 To CH.Length - 1
    '                                            If CH(a).ToString = searchHdr And txt(a).ToString = GR.Cells(j).Text.ToString() Then ' if match found in array 
    '                                                colValue = Vals(a).ToString
    '                                                found = True
    '                                                Exit For
    '                                            End If
    '                                        Next
    '                                        If found = False Then
    '                                            'Prashant_21_7
    '                                            For index As Integer = 0 To gridCols.Columns.Count - 1
    '                                                If DispName = gridCols.Columns(index).ColumnName.ToString Then
    '                                                    colValue = dtvalue.Rows(cnt).Item(DispName).ToString()
    '                                                    Exit For
    '                                                Else
    '                                                    colValue = ""
    '                                                End If
    '                                            Next
    '                                            ' +1 IS ADDED FOR CELL ADJUSTMENT 
    '                                            'Else
    '                                            '    colValue = dtvalue.Rows(cnt).Item(j).ToString() ' added by balli on 2 june 
    '                                        End If
    '                                        'ElseIf dtField.Rows(j).Item("fieldtype") = "Child Item Total" Then

    '                                    Else

    '                                        For index As Integer = 0 To gridCols.Columns.Count - 1
    '                                            If DispName = gridCols.Columns(index).ColumnName.ToString Then
    '                                                colValue = GR.Cells(index).Text.ToString()
    '                                                Exit For
    '                                            Else
    '                                                colValue = ""
    '                                            End If
    '                                        Next
    '                                        ' +1 IS ADDED FOR CELL ADJUSTMENT 
    '                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
    '                                            If colValue <> "" Then
    '                                                If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then  ' by sunil for maxval
    '                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
    '                                                ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
    '                                                    If Convert.ToDouble(colValue) > MaxVal Then
    '                                                        MaxVal = Convert.ToDouble(colValue)
    '                                                        Childtotal = MaxVal
    '                                                    End If
    '                                                End If
    '                                            End If
    '                                        End If
    '                                    End If
    '                                End If
    '                                STRVal &= "'" & colValue & "'" & ","
    '                            Next

    '                            STRFld &= "DOCID,documenttype,isauth)"
    '                            STRVal &= docid & "," & "'" & formname & "'" & ",1)"
    '                            str &= STRFld & "values(" & STRVal
    '                            ODA.SelectCommand.CommandText = str
    '                            ODA.SelectCommand.ExecuteNonQuery()
    '                            Exit For
    '                        End If
    '                    Next
    '                    cnt += 1
    '                End If
    '            End If
    '        End If
    '    Next


    '    If isTotal Then
    '        Dim childTotalUpdstr As String = ""
    '        childTotalUpdstr = "UPDATE mmm_mst_doc set " & dtTotal.Rows(0).Item("mFieldMapping").ToString & "=" & Childtotal & " where tid=" & docid

    '        ODA.SelectCommand.CommandType = CommandType.Text
    '        ODA.SelectCommand.CommandText = childTotalUpdstr
    '        ODA.SelectCommand.ExecuteNonQuery()
    '    End If

    '    dt.Dispose()
    '    dtTotal.Dispose()
    '    dtField.Dispose()
    '    dtvalue.Dispose()

    '    Session(formname) = Nothing
    '    Session(formname & "VAL") = Nothing
    '    'ViewState("MDOCTYPE") = Nothing
    '    ODA.Dispose()
    'End Sub

    Protected Sub SavingChildItem_DV(ByVal formname As String, ByVal docid As Integer, con As SqlConnection, trans As SqlTransaction)
        Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
        ODA.SelectCommand.Transaction = trans
        Dim dtField As New DataTable
        Dim dtField1 As New DataTable
        ' Dim dtFD As New DataTable
        'Dim drnew As DataRow
        Dim updquery As String = ""
        Dim ob As New DynamicForm()
        If Session(formname & "VAL") Is Nothing Then
            Exit Sub
        End If

        ' dtField = ViewState(formname)
        Dim dtFieldTemp As New DataTable
        dtFieldTemp = Session("D" & formname)

        Dim view As New DataView(dtFieldTemp) 'Put your original dataset into a dataview
        view.Sort = "DisplayOrder" ' Sort your data view
        dtField1 = view.ToTable()

        Dim filterRows1() As DataRow
        Dim filterRows2() As DataRow
        filterRows1 = dtField1.Select("inlinemapping is not null and inlinemapping <>''", "DisplayOrder")
        filterRows2 = dtField1.Select("InLineEditing=1 and inlinemapping is null", "DisplayOrder")

        If filterRows1.Length > 0 Then
            dtField = filterRows1.CopyToDataTable()
            If filterRows2.Length > 0 Then
                dtField.Merge(filterRows2.CopyToDataTable())
            End If
        Else
            If filterRows2.Length > 0 Then
                dtField = filterRows2.CopyToDataTable()
            End If
        End If

        Dim dtvalue As DataTable = Session(formname & "VAL")
        'Session("id")
        Dim dt As New DataTable

        ODA.SelectCommand.CommandText = "select * from mmm_mst_fields  where eid=" & Session("eid") & " and documenttype='" & ViewState("MDOCTYPE") & "' and dropdown='" & formname & "'"
        ODA.SelectCommand.CommandType = CommandType.Text
        ODA.SelectCommand.Parameters.Clear()
        ODA.Fill(dt)

        Dim dtTotal As New DataTable
        ODA.SelectCommand.CommandType = CommandType.Text

        ODA.SelectCommand.CommandText = "SELECT F1.FieldID [MainFieldID],F2.FieldID [ChildFieldID],F2.displayName [CdisplayName] ,F1.dropdown [mDropDown],F1.displayName [MdisplayName],F1.FieldMapping [MFieldMapping],f1.fieldtype [MFIELDTYPE]  FROM MMM_MST_FIELDS F1   INNER JOIN MMM_MST_FIELDS F2   ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType in ('CHILD ITEM MAX','CHILD ITEM TOTAL') AND F2.DocumentType ='" & formname & "' AND F1.DOCUMENTTYPE='" & ViewState("MDOCTYPE") & "'"
        ODA.Fill(dtTotal)

        Dim isTotal As Boolean = False
        Dim cDispName As String = ""
        Dim Childtotal As Double = 0
        If dtTotal.Rows.Count = 1 Then
            isTotal = True
            cDispName = dtTotal.Rows(0).Item("cdisplayname").ToString
        End If

        Dim GID As String = dt.Rows(0).Item("fieldId").ToString
        Dim dataitem As DataTable = Session("ITEM")

        ' GID = Right(GID, GID.Length - 3)
        'Dim itemDS As DataSet = Session("ITEM")
        Dim GV As GridView = CType(pnlFields.FindControl("GRD" & GID.ToString()), GridView)

        'Prashant_21_7
        Dim gridCols As DataTable = GV.DataSource
        Dim MaxVal As Double = -999
        'Prashant_17_7
        Dim LastRow As Integer = 0

        If IsNothing(ViewState("LastRow")) = False Then
            If ViewState("LastRow").ToString.Trim <> "" Then
                LastRow = Convert.ToInt32(ViewState("LastRow"))
            Else
                LastRow = GV.Rows.Count - 1
            End If
        Else
            LastRow = GV.Rows.Count - 1
        End If

        'Prashant_17_7

        Dim cnt As Integer = 0
        ' drnew = dtFD.NewRow()
        For Each GR As GridViewRow In GV.Rows
            If GR.RowIndex <= LastRow Then
                If GR.RowType = DataControlRowType.DataRow Then
                    If GR.Cells(0).Text.ToUpper <> "TOTAL" Then
                        'For i As Integer = 0 To dataitem.Rows.Count - 1 ' here changed 2 to 1 countering the loop
                        'If GR.Cells(GR.Cells.Count - 1).Text.Trim() <> "" And GR.Cells(GR.Cells.Count - 1).Text.Trim() <> "&nbsp;" Then
                        Dim str As String = ""
                        Dim STRFld As String = ""
                        Dim STRVal As String = ""
                        updquery = ""
                        ' 24 dec 2014 by ball start from here
                        Dim tid = 0 'IIf(IsNothing(dataitem.Rows(GR.RowIndex)), 0, dataitem.Rows(GR.RowIndex).Item("TID"))
                        If dataitem.Rows.Count > GR.RowIndex Then
                            tid = IIf(String.IsNullOrEmpty(dataitem.Rows(GR.RowIndex).Item("TID").ToString), 0, dataitem.Rows(GR.RowIndex).Item("TID"))
                        End If

                        If Val(tid) = 0 Then  ' here is the searching for tid for insertion or updation the record
                            str = "INSERT INTO MMM_MST_DOC_ITEM("
                            For j As Integer = 0 To dtField.Rows.Count - 1  ' decreasing 2 because we are not considering the total row data 
                                STRFld &= dtField.Rows(j).Item("fieldmapping").ToString & ","  'adding  j+1 for incremental
                                Dim colValue As String = ""
                                Dim FldID As String = ""

                                Dim DispName = dtField.Rows(j).Item("DisplayName").ToString

                                FldID = dtField.Rows(j).Item("fieldid").ToString()
                                If dtField.Rows(j).Item("inlineediting").ToString = "1" Then

                                    Dim ftype As String = dtField.Rows(j).Item("fieldtype").ToString()
                                    If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Or ftype.ToUpper = "MULTI LOOKUP" Then
                                        Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                        If cb IsNot Nothing Then
                                            colValue = cb.Text.ToString
                                        Else
                                            colValue = "0"
                                        End If


                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                            If colValue <> "" Then
                                                If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
                                                    If Convert.ToDouble(colValue) > MaxVal Then
                                                        MaxVal = Convert.ToDouble(colValue)
                                                        Childtotal = MaxVal
                                                    End If
                                                End If
                                            End If
                                        End If
                                    ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then

                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                        If cb IsNot Nothing Then
                                            colValue = cb.SelectedItem.Text.ToString
                                        Else
                                            colValue = "0"
                                        End If
                                    ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" Then
                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                        If cb IsNot Nothing Then
                                            colValue = cb.SelectedItem.Value.ToString  ' use value bcoz it's mastervalued - needs tid
                                        Else
                                            colValue = "0"
                                        End If

                                    ElseIf ftype.ToUpper() = "LOOKUPDDL" Or ftype.ToUpper() = "MULTI LOOKUPDDL" Then
                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
                                        If cb IsNot Nothing Then
                                            colValue = cb.SelectedItem.Value.ToString
                                        Else
                                            colValue = "0"
                                        End If
                                    ElseIf ftype.ToUpper() = "CHECKBOX LIST" Then
                                        Dim cb As CheckBoxList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), CheckBoxList)
                                        If cb IsNot Nothing Then
                                            For Each item As ListItem In cb.Items
                                                If item.Selected Then
                                                    If dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                                        colValue &= item.Text & ","
                                                    Else
                                                        colValue &= item.Value & ","
                                                    End If
                                                End If
                                            Next
                                            If colValue.Length > 0 Then
                                                colValue = colValue.Substring(0, colValue.Length - 1)
                                            End If
                                        Else
                                            colValue = ""
                                        End If

                                    ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
                                        '' here to code for getting file 
                                        Dim txtBox As FileUpload = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), FileUpload)
                                        'Prashant 
                                        Dim txtBox1 As Label = CType(GR.FindControl("lblf_" & FldID), Label)

                                        Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & FldID), HiddenField)

                                        Dim hdnflg As HiddenField = CType(GR.FindControl("hdnf_" & FldID), HiddenField)
                                        txtBox1.Text = hdn.Value

                                        'If txtBox.HasFile Then
                                        'Dim FN As String = ""
                                        'Dim ext As String = ""
                                        'FN = Left(txtBox.FileName, txtBox.FileName.LastIndexOf("."))
                                        'ext = txtBox.FileName.Substring(txtBox.FileName.LastIndexOf("."), (txtBox.FileName.Length - txtBox.FileName.LastIndexOf(".")))
                                        'colValue = Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & "" & ext
                                        'txtBox.SaveAs(Server.MapPath("DOCS/") & Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & ext)
                                        ''Prashant
                                        'End If

                                        If txtBox1.Text IsNot "" And hdnflg.Value IsNot "0" Then
                                            Dim errormsg As String = ""
                                            Dim FN As String = ""
                                            Dim ext As String = ""
                                            Dim flag As Integer = 0
                                            Dim sourceFile As String = Server.MapPath("~/DOCS/temp/" + txtBox1.Text)
                                            Dim finfo As New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))
                                            Dim curFileSize As Integer = finfo.Length
                                            ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
                                            FN = Left(txtBox1.Text, txtBox1.Text.LastIndexOf("."))
                                            colValue = Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & "" & ext

                                            File.Copy(sourceFile, Server.MapPath("DOCS/") & Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & ext)

                                        ElseIf txtBox1.Text IsNot "" And hdnflg.Value IsNot "1" Then
                                            colValue = txtBox1.Text
                                        End If
                                    Else

                                        For index As Integer = 0 To gridCols.Columns.Count - 1
                                            If DispName = gridCols.Columns(index).ColumnName.ToString Then
                                                colValue = GR.Cells(index).Text.ToString()
                                                Exit For
                                            Else
                                                colValue = ""
                                            End If
                                        Next


                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                            If colValue <> "" Then
                                                If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then  ' by sunil for maxval
                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
                                                    If Convert.ToDouble(colValue) > MaxVal Then
                                                        MaxVal = Convert.ToDouble(colValue)
                                                        Childtotal = MaxVal
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                Else  ' if no inline editing 
                                    If dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" And dtField.Rows(j).Item("fieldtype") = "Drop Down" Then
                                        '' here code to get tid from session arrays by sp 13-jan-13
                                        Dim CH() As String = Session("COLHEAD")  ' {}
                                        Dim txt() As String = Session("DDLTXT") ' {}
                                        Dim Vals() As String = Session("DDLVAL") '{}
                                        Dim found As Boolean = False
                                        Dim searchHdr As String = formname & "_" & dtField.Rows(j).Item("displayname")
                                        For a As Integer = 0 To CH.Length - 1
                                            If CH(a).ToString = searchHdr And txt(a).ToString = GR.Cells(j).Text.ToString() Then ' if match found in array 
                                                colValue = Vals(a).ToString
                                                found = True
                                                Exit For
                                            End If
                                        Next
                                        If found = False Then
                                            'Prashant_21_7
                                            For index As Integer = 0 To gridCols.Columns.Count - 1
                                                If DispName = gridCols.Columns(index).ColumnName.ToString Then
                                                    colValue = dtvalue.Rows(cnt).Item(DispName).ToString()
                                                    Exit For
                                                Else
                                                    colValue = ""
                                                End If
                                            Next
                                            ' +1 IS ADDED FOR CELL ADJUSTMENT 
                                            'Else
                                            '    colValue = dtvalue.Rows(cnt).Item(j).ToString() ' added by balli on 2 june 
                                        End If
                                        'ElseIf dtField.Rows(j).Item("fieldtype") = "Child Item Total" Then

                                    Else

                                        For index As Integer = 0 To gridCols.Columns.Count - 1
                                            If DispName = gridCols.Columns(index).ColumnName.ToString Then
                                                colValue = GR.Cells(index).Text.ToString()
                                                Exit For
                                            Else
                                                colValue = ""
                                            End If
                                        Next
                                        ' +1 IS ADDED FOR CELL ADJUSTMENT 
                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                            If colValue <> "" Then
                                                If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then  ' by sunil for maxval
                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
                                                    If Convert.ToDouble(colValue) > MaxVal Then
                                                        MaxVal = Convert.ToDouble(colValue)
                                                        Childtotal = MaxVal
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                                STRVal &= "'" & colValue & "'" & ","
                            Next
                            ' code for insertion of document 
                            STRFld &= "DOCID,documenttype,isauth,cmastertid)" ' 24 dec inserting cmastertid

                            Dim cMasterTid As String = ""
                            If dataitem.Rows.Count > GR.RowIndex Then
                                Dim cols As DataColumnCollection = dataitem.Columns
                                If cols.Contains("cmasterTid") Then
                                    cMasterTid = IIf(String.IsNullOrEmpty(dataitem.Rows(GR.RowIndex).Item("cmasterTid").ToString), "", dataitem.Rows(GR.RowIndex).Item("cmasterTid").ToString())
                                End If
                            End If

                            STRVal &= docid & "," & "'" & formname & "'" & ",1," & IIf(cMasterTid = "", "null", cMasterTid) & ")"
                            'STRVal &= docid & "," & "'" & formname & "'" & ",1," & gridCols.Columns("cmasterTid").ColumnName & ")"

                            str &= STRFld & "values(" & STRVal
                            ODA.SelectCommand.CommandText = str
                            ODA.SelectCommand.ExecuteNonQuery()
                        Else
                            str = "update MMM_MST_DOC_ITEM Set "
                            Dim querry As String = ""
                            For j As Integer = 0 To dtField.Rows.Count - 1
                                STRFld &= dtField.Rows(j).Item("fieldmapping").ToString & ","
                                Dim colValue As String = ""
                                Dim FldID As String = ""
                                FldID = dtField.Rows(j).Item("fieldid").ToString()
                                If dtField.Rows(j).Item("inlineediting").ToString = "1" Then
                                    '' new for getting child item total 
                                    Dim ftype As String = dtField.Rows(j).Item("fieldtype").ToString()
                                    Dim fldmapping As String = dtField.Rows(j).Item("fieldmapping").ToString()
                                    If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Or ftype.ToUpper() = "MULTI LOOKUP" Then
                                        ' Dim cb As TextBox = CType(GR.FindControl("fld" & j.ToString() & "_" & cnt), TextBox)
                                        'Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & cnt), TextBox)
                                        Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                        If cb IsNot Nothing Then
                                            colValue = Replace(cb.Text.ToString, "'", "")
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                        Else
                                            colValue = "0"
                                        End If
                                        str &= querry

                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                            If colValue <> "" Then
                                                Childtotal = Childtotal + Convert.ToDouble(colValue)
                                            End If
                                        End If
                                    ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                        'Dim cb As New DropDownList
                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                        If cb IsNot Nothing Then
                                            colValue = cb.SelectedItem.Text.ToString
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                        Else
                                            colValue = "0"
                                        End If

                                        str &= querry
                                    ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" Then
                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                        If cb IsNot Nothing Then
                                            colValue = cb.SelectedItem.Value.ToString  ' use value bcoz it's mastervalued - needs tid
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                        Else
                                            colValue = "0"
                                        End If

                                        str &= querry

                                    ElseIf ftype.ToUpper() = "LOOKUPDDL" Or ftype.ToUpper() = "MULTI LOOKUPDDL" Then
                                        Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
                                        If cb IsNot Nothing Then
                                            colValue = cb.SelectedItem.Value.ToString
                                        Else
                                            colValue = "0"
                                        End If
                                        querry = fldmapping & "='" & colValue & "' " & ","
                                        str &= querry
                                    ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
                                        '' here to code for getting file 
                                        Dim txtBox As FileUpload = CType(GR.FindControl("fld_" & FldID & "_" & GR.RowIndex), FileUpload)

                                        Dim txtBox1 As Label = CType(GR.FindControl("lblf_" & FldID), Label)
                                        Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & FldID), HiddenField)
                                        Dim hdnflg As HiddenField = CType(GR.FindControl("hdnf_" & FldID), HiddenField)

                                        txtBox1.Text = hdn.Value

                                        If txtBox1.Text IsNot "" And hdnflg.Value IsNot "0" Then
                                            Dim errormsg As String = ""
                                            Dim FN As String = ""
                                            Dim ext As String = ""
                                            Dim flag As Integer = 0
                                            Dim sourceFile As String = Server.MapPath("~/DOCS/temp/" + txtBox1.Text)
                                            Dim finfo As New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))
                                            Dim curFileSize As Integer = finfo.Length
                                            ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
                                            FN = Left(txtBox1.Text, txtBox1.Text.LastIndexOf("."))
                                            colValue = Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & "" & ext
                                            File.Copy(sourceFile, Server.MapPath("DOCS/") & Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & ext)
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                        ElseIf txtBox1.Text IsNot "" And hdnflg.Value IsNot "1" Then
                                            colValue = Session("EID").ToString() & "/" & txtBox1.Text
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                        Else
                                            colValue = ""
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                        End If

                                        str &= querry
                                    ElseIf ftype.ToUpper() = "CHECKBOX LIST" Then
                                        Dim cb As CheckBoxList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), CheckBoxList)
                                        If cb IsNot Nothing Then
                                            For Each item As ListItem In cb.Items
                                                If item.Selected Then
                                                    If dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                                        colValue &= item.Text & ","
                                                    Else
                                                        colValue &= item.Value & ","
                                                    End If
                                                End If
                                            Next
                                            If colValue.Length > 0 Then
                                                colValue = colValue.Substring(0, colValue.Length - 1)
                                            End If
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                        Else
                                            colValue = ""
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                        End If
                                        str &= querry
                                    Else
                                        colValue = GR.Cells(j).Text.ToString()
                                        querry = fldmapping & "='" & colValue & "' " & ","
                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                            If colValue <> "" Then
                                                Childtotal = Childtotal + Convert.ToDouble(colValue)
                                            End If
                                        End If

                                    End If
                                Else  ' if no inline editing 
                                    If dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" And dtField.Rows(j).Item("fieldtype") = "Drop Down" Then
                                        '' here code to get tid from session arrays by sp 13-jan-13
                                        Dim CH() As String = Session("COLHEAD")  ' {}
                                        Dim txt() As String = Session("DDLTXT") ' {}
                                        Dim Vals() As String = Session("DDLVAL") '{}
                                        Dim found As Boolean = False
                                        Dim searchHdr As String = formname & "_" & dtField.Rows(j).Item("displayname")
                                        For a As Integer = 0 To CH.Length - 1
                                            If CH(a).ToString = searchHdr And txt(a).ToString = GR.Cells(j).Text.ToString() Then ' if match found in array 
                                                colValue = Vals(a).ToString
                                                found = True
                                                Exit For
                                            End If
                                        Next
                                        If found = False Then
                                            colValue = dtvalue.Rows(cnt).Item(j).ToString()
                                        End If
                                        'ElseIf dtField.Rows(j).Item("fieldtype") = "Child Item Total" Then

                                    Else
                                        colValue = GR.Cells(j).Text.ToString()
                                        If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                            If colValue <> "" Then
                                                Childtotal = Childtotal + Convert.ToDouble(colValue)
                                            End If
                                        End If
                                    End If
                                End If
                                'STRVal &= "'" & colValue & "'" & ","
                                colValue = colValue
                            Next
                            If Right(str, 1) = "," Then
                                str = Left(str, str.Length - 1)
                            End If
                            Dim str1 As String = ""
                            str = str & "  where TID=" & dataitem.Rows(GR.RowIndex).Item("tid").ToString()
                            ODA.SelectCommand.CommandText = str
                            ODA.SelectCommand.ExecuteNonQuery()
                        End If
                        '  End If
                    End If
                End If
            End If
        Next


        If isTotal Then
            Dim childTotalUpdstr As String = ""
            childTotalUpdstr = "UPDATE mmm_mst_doc set " & dtTotal.Rows(0).Item("mFieldMapping").ToString & "=" & Childtotal & " where tid=" & docid
            ODA.SelectCommand.CommandType = CommandType.Text
            ODA.SelectCommand.CommandText = childTotalUpdstr
            ODA.SelectCommand.ExecuteNonQuery()
        End If

        dt.Dispose()
        dtTotal.Dispose()
        dtField.Dispose()
        dtvalue.Dispose()

        Session(formname) = Nothing
        Session(formname & "VAL") = Nothing
        'ViewState("MDOCTYPE") = Nothing
        ODA.Dispose()
    End Sub




    Public Function getSafeString(ByVal strVar As String) As String
        Trim(strVar)
        strVar = Replace(strVar, "'", "")
        strVar = Replace(strVar, ";", "")
        strVar = Replace(strVar, "--", "")
        strVar = Replace(strVar, "%", "")
        strVar = Replace(strVar, "&", "")
        Return strVar
    End Function

    Public Sub bindvalue(ByVal sender As Object, ByVal e As EventArgs)
        Dim c As Control = GetPostBackControl(Me.Page)
        ResetGrid()
        '...
        If c IsNot Nothing Then
        End If
        If TypeOf c Is System.Web.UI.WebControls.DropDownList Then
            Dim ddl As DropDownList = TryCast(c, DropDownList)
            Dim ar = Right(ddl.ID, ddl.ID.Length - 3).Split("_")
            'Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
            Dim id = ar(0)
            Dim id1 As Integer = CInt(id)
            Dim ob As New DynamicForm()
            ob.bind(id, pnlFields, ddl)
            Dim dt As DataTable = Session("FIELDS")
            ExecuteControllevelRule(id1, pnlFields, Nothing, dt.Rows(0)("documenttype"), dt, Nothing, lblstatus, False)

        End If

    End Sub

    Public Sub bindvalue1(ByVal sender As Object, ByVal e As EventArgs)
        Dim c As Control = GetPostBackControl(Me.Page)
        ResetGrid()
        '...
        If c IsNot Nothing Then
        End If
        If TypeOf c Is System.Web.UI.WebControls.DropDownList Then
            Dim ddl As DropDownList = TryCast(c, DropDownList)
            Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
            Dim id1 As Integer = CInt(id)
            Dim ob As New DynamicForm()
            ob.bind(id, pnlFields1, ddl)
        End If
    End Sub

    Public Sub bindvalue_ILFilter(ByVal sender As Object, ByVal e As EventArgs)
        Dim c As Control = GetPostBackControl(Me.Page)
        '...
        If c IsNot Nothing Then
        End If
        If TypeOf c Is System.Web.UI.WebControls.DropDownList Then
            Dim ddl As DropDownList = TryCast(c, DropDownList)
            Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
            Dim ar() As String = id.Split("_")
            Dim id1 As Integer = CInt(ar(0))
            Dim ob As New DynamicForm()
            ob.bind(id1, pnlFields1, ddl)
            Call FilterILgrid(id1)  '' new by sunil 31_july_14
        End If
    End Sub


    '' new by sunil on 11_aug_14 for main to child filter in inline grid
    Public Sub FilterILgrid(ByVal ID As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)

        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim da As SqlDataAdapter = New SqlDataAdapter("SELECT  documenttype,dropdown from MMM_MST_FIELDS  WITH (NOLOCK) where fieldID=" & ID, con)
        Dim dsp As New DataSet
        da.Fill(dsp, "fields")
        Dim Dtype As String = dsp.Tables(0).Rows(0).Item("documenttype").ToString()
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        da.SelectCommand.CommandText = "SELECT fieldid from MMM_MST_FIELDS  WITH (NOLOCK) where EID=" & Session("EID").ToString() & " and documenttype='" & Dtype & "' and fieldtype='Child Item' and len(isnull(kc_logic,''))>2"

        Dim dt As New DataTable
        da.Fill(dt)

        con.Close()
        con.Dispose()
        da.Dispose()
        If dt.Rows.Count <> 0 Then
            Call FilterChildGridDDL(dt.Rows(0).Item(0).ToString)
        End If
        dt.Dispose()
    End Sub

    Protected Sub FilterChildGridDDL1(ByVal fldId As Integer)
        Dim c As Control = GetPostBackControl(Me.Page)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)

        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim da As SqlDataAdapter = New SqlDataAdapter("SELECT  kc_logic,dropdown from MMM_MST_FIELDS  WITH (NOLOCK) where fieldID=" & fldId, con)
        Dim dsp As New DataSet
        da.Fill(dsp, "fields")
        Dim tab As String = dsp.Tables(0).Rows(0).Item("dropdown").ToString()
        Dim kc As String = dsp.Tables(0).Rows(0).Item("kc_logic").ToString()
        Dim kcL() As String = dsp.Tables(0).Rows(0).Item("kc_logic").ToString().Split("-")

        'WITH (NOLOCK) added by Himank on 28th sep 2015
        da = New SqlDataAdapter("SELECT  isEditable,isactive  from MMM_MST_FIELDS  WITH (NOLOCK) where EID=" & Session("EID").ToString() & " and fieldid=" & kcL(1).ToString & "", con)

        Dim dt As New DataTable
        da.Fill(dt)


        ' If Not DDLM Is Nothing Then
        Dim grd As GridView = CType(pnlFields.FindControl("GRD" & fldId.ToString), GridView)
        If Not grd Is Nothing Then
            ' For Each dr As DataRow In dt.Rows
            For Each gr As GridViewRow In grd.Rows
                If gr.RowIndex < grd.Rows.Count - 1 Then

                    Dim DDLM As DropDownList = DirectCast(pnlFields.FindControl("fld" & kcL(0).ToString), DropDownList)

                    If Not DDLM Is Nothing Then
                        Dim ddl1 As DropDownList = DirectCast(gr.FindControl("fld" & kcL(1).ToString & "_" & gr.RowIndex.ToString), DropDownList)
                        If Not ddl1 Is Nothing Then
                            ' cell = i
                            If IsNothing(ddl1) Then
                            Else
                                ddl1.Items.Clear()
                            End If

                            If dt.Rows(0).Item(0).ToString = "1" And dt.Rows(0).Item(1).ToString = "1" Then
                                ' ddl1.Items.Insert(0, "SELECT")
                                ddl1.Enabled = True
                                'ddl1.SelectedIndex = 0
                                Dim li As ListItem = DDLM.SelectedItem
                                Dim tn As String = li.Text
                                Dim vl As String = li.Value
                                ddl1.Items.Add(tn)
                                ddl1.Items(0).Value = vl
                                '' here code to run lookup/filter if any by sunil 06 oct 14  - starts
                                ddl1.SelectedIndex = ddl1.Items.IndexOf(ddl1.Items.Item(0))

                                Dim id As String = Right(ddl1.ID, ddl1.ID.Length - 3)
                                Dim ar() As String = id.Split("_")
                                Dim id1 As Integer = CInt(ar(0))
                                BindGRidLookup(ar(1), id1, ddl1)
                                '' here code to run lookup/filter if any by sunil 06 oct 14  - ends
                            ElseIf dt.Rows(0).Item(0).ToString = "0" And dt.Rows(0).Item(1).ToString = "1" Then
                                Dim li As ListItem = DDLM.SelectedItem
                                Dim tn As String = li.Text
                                Dim vl As String = li.Value
                                ddl1.Items.Add(tn)
                                ddl1.Items(0).Value = vl
                                ddl1.Enabled = False
                                '' here code to run lookup/filter if any by sunil 06 oct 14  - starts
                                ddl1.SelectedIndex = ddl1.Items.IndexOf(ddl1.Items.Item(0))

                                Dim id As String = Right(ddl1.ID, ddl1.ID.Length - 3)
                                Dim ar() As String = id.Split("_")
                                Dim id1 As Integer = CInt(ar(0))
                                BindGRidLookup(ar(1), id1, ddl1)
                                '' here code to run lookup/filter if any by sunil 06 oct 14  - ends
                            Else
                            End If
                        End If
                    End If ' here
                End If
            Next
            updpnlchild.Update()
        End If
        ' End If

        con.Close()
        con.Dispose()
        da.Dispose()
        dt.Dispose()
        dsp.Dispose()
    End Sub

    Public Sub FilterChildGridDDL(ByVal fldId As Integer)

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As New SqlDataAdapter("", con)
        Try
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim qry = "Select DocumentType from MMM_MST_DOC  WITH (NOLOCK) where Tid=" & RetDocId(Session("EID"))
            oda.SelectCommand.CommandText = qry
            con.Open()
            Dim scrName As String = Convert.ToString(oda.SelectCommand.ExecuteScalar())
            con.Close()
            Dim dtIsdv As New DataTable
            Dim strdf As String = ""
            Dim row() As DataRow = Session("ALLCHILD")
            If row.Length > 0 Then
                Dim btn1 As New Button
                For i As Integer = 0 To row.Length - 1
                    Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                    strdf = "select * from mmm_mst_forms  WITH (NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(isinlineediting,0)=1"
                    oda.SelectCommand.CommandText = strdf    ' 
                    ViewState("ddlChange") = 1
                    oda.Fill(dtIsdv)
                    If dtIsdv.Rows.Count > 0 Then
                        ViewState("Change") = True
                        insert_InlineEditing(PRitem(0).ToString, row(i).Item("FieldID").ToString(), scrName)
                    End If
                Next
                oda.Dispose()
                dtIsdv.Dispose()
            End If
        Catch ex As Exception

        Finally
            con.Close()
            oda.Dispose()
        End Try

    End Sub

    Public Sub bindvalueRejection(ByVal sender As Object, ByVal e As EventArgs)
        Dim c As Control = GetPostBackControl(Me.Page)
        '...
        If c IsNot Nothing Then
        End If
        If TypeOf c Is System.Web.UI.WebControls.DropDownList Then
            Dim ddl As DropDownList = TryCast(c, DropDownList)
            Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
            Dim id1 As Integer = CInt(id)
            Dim ob As New DynamicForm()
            ob.bind(id, pnlFields1, ddl)
        End If
    End Sub

    Protected Sub ShowApprove(ByVal sender As Object, ByVal e As System.EventArgs)
        'Dim pid As Integer = RetDocId(Session("EID"))
        Dim pid As Integer = RetDocId(Session("EID"))
        ' No Value in Session just fill the Edit Form and Show two button
        'two methods.. either show data from Grid or Show data from Database.
        lblMsgRule2.Text = ""
        lblTabApprove.Text = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("docid", pid)
        oda.SelectCommand.Parameters.AddWithValue("subevent", "APPROVAL")
        Dim ds As New DataSet
        oda.Fill(ds, "fields")
        If ds.Tables("fields").Rows.Count > 0 Then
            Session("ActionForm") = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
        Else
            Dim oda1 As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen1", con)
            oda1.SelectCommand.CommandType = CommandType.StoredProcedure
            oda1.SelectCommand.Parameters.Clear()
            oda1.SelectCommand.Parameters.AddWithValue("@docid", pid)
            oda1.SelectCommand.Parameters.AddWithValue("@subevent", "APPROVAL")
            Dim ds1 As New DataSet
            oda1.Fill(ds1, "Action")
            If ds1.Tables("Action").Rows.Count > 0 Then
                Session("ActionForm") = Convert.ToString(ds1.Tables("Action").Rows(0).Item("documenttype"))
            End If
        End If

        Session("FIELDS") = ds.Tables("fields")
        Session("ACTION") = "APPROVAL"
        pnlApprove.Width = 500
        pnlApprove.Height = 300
        pnlApprove.CssClass = "approve"

        ''Clear controls on Panel Reject 
        pnlFieldsRej.Controls.Clear()
        pnlCRMFields.Controls.Clear()
        btnReject_ModalPopupExtender.Hide()

        pnlApprove.Controls.Clear()
        updatePanelApprove.Update()


        If ds.Tables("fields").Rows.Count > 0 Then
            '           lblHeaderPopUp.Text = ds.Tables("fields").Rows(0).Item("Formcaption").ToString()
            Dim ob As New DynamicForm()
            ob.CreateControlsOnPanel(ds.Tables("fields"), pnlApprove, updatePanelApprove, btnApprove, 1, Nothing, Nothing, True)



            Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
            If ROW1.Length > 0 Then
                For i As Integer = 0 To ROW1.Length - 1
                    Dim DDL As DropDownList = TryCast(pnlApprove.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                    DDL.AutoPostBack = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue2
                Next
            End If
            ob.FillControlsOnPanel(ds.Tables("fields"), pnlApprove, "DOCUMENT", pid)
            Dim conF As New SqlConnection(ConfigurationManager.ConnectionStrings("conStr").ConnectionString)
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim odaField As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID   where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName ='" & Convert.ToString(Session("ActionForm")) & "' and eventname in(select documenttype from MMM_MST_DOC  WITH (NOLOCK) where eid=" & Session("EID") & " and tid=" & RetDocId(Session("EID")).ToString & ")   order by displayOrder", conF)
            Dim dtFileds As New DataTable()
            odaField.Fill(dtFileds)

            'Code For Rule Post back handler for  controls
            'Added By Himank Singh:09-September-2015
            AddHandlerOnControl(dtFileds, pnlApprove, lblMsgRule2)
            Dim RuleRow() As DataRow = ds.Tables("fields").Select("HasRule='1'")
            If RuleRow.Length > 0 Then
                For r As Integer = 0 To RuleRow.Length - 1
                    Dim ControlID As Integer = CInt(RuleRow(r).Item("FieldID"))
                    Dim screenname = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
                    ExecuteControllevelRule(ControlID, pnlFields, Nothing, screenname, ds.Tables("fields"), Nothing, lblAmendment, False)
                Next
            End If

        End If
        con.Close()
        oda.Dispose()
        con.Dispose()

        'Add for Child Action Screen
        If (Not IsNothing(Session("ActionForm"))) Then
            Dim conStrs As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim cons As SqlConnection = New SqlConnection(conStrs)
            Dim actionform As String = Session("ActionForm")
            Dim childActionvalueRights As String = String.Empty
            Dim oda12 As SqlDataAdapter = New SqlDataAdapter("", cons)
            oda12.SelectCommand.CommandType = CommandType.Text
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            oda12.SelectCommand.CommandText = "select ChidFormforActionScreen from MMM_MST_FORMS WITH (NOLOCK)  WHERE FORMNAME='" & actionform & "' and eid=" & Session("EID").ToString()
            If (cons.State = ConnectionState.Closed) Then
                cons.Open()
            End If
            Dim childActionvalue = oda12.SelectCommand.ExecuteScalar()
            oda12.Dispose()
            'cons.Dispose()
            Dim oda123 As SqlDataAdapter = New SqlDataAdapter("", cons)
            oda123.SelectCommand.CommandType = CommandType.Text
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            oda123.SelectCommand.CommandText = "select isnull(ChidFormforActionScreen_Rights,'') from MMM_MST_FORMS  WITH (NOLOCK) WHERE FORMNAME='" & actionform & "' and eid=" & Session("EID").ToString()
            If (cons.State = ConnectionState.Closed) Then
                cons.Open()
            End If
            childActionvalueRights = oda123.SelectCommand.ExecuteScalar()
            Session("CHILDACTIONSCREEN") = Nothing
            Session("CHILDACTIONSCREEN") = childActionvalue
            Session("CHILDACTIONSCREENRIGHTS") = Nothing
            Session("CHILDACTIONSCREENRIGHTS") = childActionvalueRights
            If Convert.ToString(childActionvalue).Length > 0 Then
                If (Not IsNothing(Session("ActionForm"))) Then
                    pnlApprove.Controls.Add(New LiteralControl("<tr>"))
                    pnlApprove.Controls.Add(New LiteralControl("<td colspan='4'>"))
                    pnlApprove.Controls.Add(New LiteralControl("&nbsp;</td>"))
                    pnlApprove.Controls.Add(New LiteralControl("</tr>"))
                    pnlApprove.Controls.Add(New LiteralControl("<tr>"))
                    pnlApprove.Controls.Add(New LiteralControl("<td colspan='4'>"))
                    pnlApprove.Controls.Add(New LiteralControl("<div id=""tabs"" ><ul>"))
                    ' pnlApprove.Controls.Add(New LiteralControl("<li><a href=""#tabPending0"">" & Session("ActionForm").ToString() & "<asp:Label ID=""lblpending0"" runat=""server""></asp:Label></a></li>"))

                    Dim strs As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")

                    If (Not IsNothing(strs)) Then
                        For j As Integer = 1 To strs.Length
                            If Convert.ToString(strs(j - 1)) <> "" Then
                                Dim childvalue As String() = strs(j - 1).ToString().Split(".")
                                pnlApprove.Controls.Add(New LiteralControl("<li><a href=""#tabPending" & j.ToString() & """>" & childvalue(1).ToString() & "<asp:Label ID=""lblpending" & j & " "" runat=""server""></asp:Label></a></li>"))
                            End If
                        Next
                    End If

                    pnlApprove.Controls.Add(New LiteralControl("</ul>"))
                    'pnlApprove.Controls.Add(tabPending00)


                    'tabPending00.Attributes.Add("Style", "display:block;")
                    Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                    Dim con1 As New SqlConnection(conStr1)
                    Dim oda1 As New SqlDataAdapter("", con1)
                    Dim ds1 As New DataSet


                    'oda1.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & Session("FORMNAME").ToString() & "' and EID=" & Session("eid") & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='" & Session("FORMNAME").ToString() & "' and EID=" & Session("eid") & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & Session("EVENTNAME").ToString() & "' and  F.EID = " & Session("EID") & "   Order By Displayorder"
                    'oda1.Fill(ds1, "data")
                    'pnlApprove.Controls.Add(New LiteralControl("<div id=""tabPending0"" style=""min-height:50px;max-height:200px;overflow-x:scroll;overflow-y:scroll;width:650px;"">"))
                    'Dim GRDCHLDVIEWMAIN As New GridView
                    'GRDCHLDVIEWMAIN.AutoGenerateColumns = "TRUE"
                    'Dim formname As String = Session("FORMNAME").ToString()
                    'GRDCHLDVIEWMAIN.ID = "GRD_" & formname.ToString().Replace(" ", "_")
                    'GRDCHLDVIEWMAIN.Width = "600"
                    'GRDCHLDVIEWMAIN.CssClass = "mGrid"
                    'GRDCHLDVIEWMAIN.AlternatingRowStyle.CssClass = "alt"
                    'AddHandler GRDCHLDVIEWMAIN.RowDataBound, AddressOf gvData_InlineEdit
                    'GRDCHLDVIEWMAIN.DataSource = ds1.Tables("data")
                    'GRDCHLDVIEWMAIN.DataBind()
                    'pnlApprove.Controls.Add(GRDCHLDVIEWMAIN)

                    'pnlApprove.Controls.Add(New LiteralControl("</div>"))


                    If (Not IsNothing(strs)) Then
                        For i As Integer = 1 To strs.Length
                            Dim childvalue As String() = strs(i - 1).ToString().Split(".")
                            Dim conStrsS As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                            Dim consS As New SqlConnection(conStrsS)
                            Dim dasS As SqlDataAdapter = New SqlDataAdapter("", consS)
                            Dim odaN As SqlDataAdapter = New SqlDataAdapter("", consS)
                            Dim dtChildS As New DataTable()
                            Dim create As Boolean = False, delete As Boolean = False, Edit As Boolean = False
                            'dasS.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='CAS." & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & childvalue(1).ToString() & "' and  F.EID = " & Session("EID").ToString() & "   Order By Displayorder"

                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                            dasS.SelectCommand.CommandText = "select fieldid,displayname,fieldtype from mmm_mst_fields  WITH (NOLOCK) where documenttype='" & strs(i - 1).ToString() & "' and eid=" & Session("EID")
                            dasS.Fill(dtChildS)
                            'pnlApprove.Controls.Add(New LiteralControl("<tr><td colspan=""4"">"))
                            If (dtChildS.Rows.Count > 0) Then

                                pnlApprove.Controls.Add(New LiteralControl("<div id=""tabPending" & i.ToString() & """style=""max-height:200px;overflow-x:scroll;overflow-y:scroll;max-width:720px;"">"))

                                'Dim conStrss As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                'Dim conss As SqlConnection = New SqlConnection(conStrss)
                                'Dim actionform As String = Session("ActionForm")

                                odaN.SelectCommand.CommandType = CommandType.StoredProcedure
                                odaN.SelectCommand.Parameters.Clear()
                                odaN.SelectCommand.CommandText = "uspGetDetailITEMByDocidonAction"
                                odaN.SelectCommand.Parameters.AddWithValue("docid", pid)
                                odaN.SelectCommand.Parameters.AddWithValue("FN", strs(i - 1).ToString())
                                odaN.SelectCommand.Parameters.AddWithValue("NFN", childvalue(1))
                                odaN.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
                                Dim dtItem As New DataTable()
                                odaN.Fill(dtItem)
                                'Added By Mayank For Child Item values from doc Item Start Here 
                                odaN.SelectCommand.CommandType = CommandType.StoredProcedure
                                odaN.SelectCommand.Parameters.Clear()
                                odaN.SelectCommand.CommandText = "uspGetValuesFromChildonEditonAction"
                                odaN.SelectCommand.Parameters.AddWithValue("DOcid", pid)
                                odaN.SelectCommand.Parameters.AddWithValue("FN", strs(i - 1).ToString())
                                odaN.SelectCommand.Parameters.AddWithValue("NFN", childvalue(1))
                                odaN.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
                                Dim dtITemVal As New DataTable()
                                odaN.Fill(dtITemVal)

                                If (dtITemVal.Rows.Count = 0) Then
                                    Dim drs As DataRow = dtITemVal.NewRow()
                                    dtITemVal.Rows.Add(drs)
                                End If
                                If (dtItem.Rows.Count = 0) Then
                                    Dim drs1 As DataRow = dtItem.NewRow()
                                    If (drs1.Table.Columns.Contains("Ctid")) Then
                                        drs1("ctid") = 0
                                    ElseIf (drs1.Table.Columns.Contains("tid")) Then
                                        drs1("tid") = 0
                                    End If
                                    dtItem.Rows.Add(drs1)
                                End If

                                Dim GRDCHLDVIEW As New GridView
                                GRDCHLDVIEW.AutoGenerateColumns = "TRUE"
                                GRDCHLDVIEW.ID = "GRD_" & strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_")
                                GRDCHLDVIEW.Width = "500"
                                GRDCHLDVIEW.CssClass = "mGrid"
                                GRDCHLDVIEW.AlternatingRowStyle.CssClass = "alt"
                                'dtItem.Columns.Add("Action")
                                AddHandler GRDCHLDVIEW.RowDataBound, AddressOf GRDCHLDVIEW_InlineEdit
                                If (Not IsNothing(childActionvalueRights)) Then
                                    If (Not childActionvalueRights = String.Empty) Then
                                        Dim rights As String() = childActionvalueRights.ToString().Split(",")
                                        For a As Integer = 0 To rights.Length - 1
                                            If (rights(a).ToString().Contains(strs(i - 1).ToString() & "-")) Then
                                                Dim finalval As String() = rights(a).ToString().Split(New String() {strs(i - 1).ToString() & "-"}, StringSplitOptions.None)
                                                If (finalval.Length > 1) Then
                                                    Dim rightval = finalval(1)

                                                    If (Convert.ToInt32(rightval) = 14) Then
                                                        create = True
                                                        delete = True
                                                        Edit = True
                                                    ElseIf (Convert.ToInt32(rightval) = 12) Then
                                                        create = False
                                                        Edit = True
                                                        delete = True
                                                    ElseIf (Convert.ToInt32(rightval) = 10) Then
                                                        create = True
                                                        Edit = False
                                                        delete = True
                                                    ElseIf (Convert.ToInt32(rightval) = 8) Then
                                                        create = False
                                                        Edit = False
                                                        delete = True
                                                    ElseIf (Convert.ToInt32(rightval) = 6) Then
                                                        create = True
                                                        Edit = True
                                                        delete = False
                                                    ElseIf (Convert.ToInt32(rightval) = 4) Then
                                                        create = False
                                                        Edit = True
                                                        delete = False
                                                    ElseIf (Convert.ToInt32(rightval) = 2) Then
                                                        create = True
                                                        Edit = False
                                                        delete = False
                                                    End If

                                                End If
                                            End If
                                        Next
                                    End If
                                End If
                                If (delete = True) Then
                                    AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                    AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
                                    Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Delete") = "YES"
                                Else
                                    Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Delete") = Nothing
                                End If

                                Session(strs(i - 1).ToString() & "VAL") = dtITemVal
                                Session("ChildDoctypeAction") = strs(i - 1).ToString()
                                'AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                'AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
                                'If (Not IsNothing(childActionvalueRights)) Then
                                '    If (Not childActionvalueRights = String.Empty) Then
                                '        Dim rights As String() = childActionvalueRights.ToString().Split(",")
                                '        For a As Integer = 0 To rights.Length - 1
                                '            If (rights(a).ToString().Contains(strs(i - 1).ToString() & "-")) Then
                                '                Dim finalval As String() = rights(a).ToString().Split(New String() {strs(i - 1).ToString() & "-"}, StringSplitOptions.None)
                                '                If (finalval.Length > 1) Then
                                '                    Dim rightval = finalval(1)

                                '                    If (Convert.ToInt32(rightval) = 14) Then
                                '                        create = True
                                '                        delete = True
                                '                        Edit = True
                                '                        AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                '                        AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting

                                '                        'For Each li As ListItem In chk.Items
                                '                        '    If (li.Value = "2") Then
                                '                        '        li.Selected = True
                                '                        '    ElseIf (li.Value = "4") Then
                                '                        '        li.Selected = True
                                '                        '    ElseIf (li.Value = "8") Then
                                '                        '        li.Selected = True
                                '                        '    End If
                                '                        'Next
                                '                    ElseIf (Convert.ToInt32(rightval) = 12) Then
                                '                        create = False
                                '                        Edit = True
                                '                        delete = True
                                '                        AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                '                        AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
                                '                        'For Each li As ListItem In chk.Items
                                '                        '    If (li.Value = "2") Then
                                '                        '        li.Selected = False
                                '                        '    ElseIf (li.Value = "4") Then
                                '                        '        li.Selected = True
                                '                        '    ElseIf (li.Value = "8") Then
                                '                        '        li.Selected = True
                                '                        '    End If
                                '                        'Next
                                '                    ElseIf (Convert.ToInt32(rightval) = 10) Then
                                '                        create = True
                                '                        Edit = False
                                '                        delete = True
                                '                        AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                '                        AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
                                '                        'For Each li As ListItem In chk.Items
                                '                        '    If (li.Value = "2") Then
                                '                        '        li.Selected = True
                                '                        '    ElseIf (li.Value = "4") Then
                                '                        '        li.Selected = False
                                '                        '    ElseIf (li.Value = "8") Then
                                '                        '        li.Selected = True
                                '                        '    End If
                                '                        'Next
                                '                    ElseIf (Convert.ToInt32(rightval) = 8) Then
                                '                        create = False
                                '                        Edit = True
                                '                        delete = True
                                '                        AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                '                        AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
                                '                        'For Each li As ListItem In chk.Items
                                '                        '    If (li.Value = "2") Then
                                '                        '        li.Selected = False
                                '                        '    ElseIf (li.Value = "4") Then
                                '                        '        li.Selected = False
                                '                        '    ElseIf (li.Value = "8") Then
                                '                        '        li.Selected = True
                                '                        '    End If
                                '                        'Next
                                '                    ElseIf (Convert.ToInt32(rightval) = 6) Then
                                '                        create = True
                                '                        Edit = True
                                '                        delete = False
                                '                        AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                '                        AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
                                '                        dtItem.Columns.Add("Action")
                                '                        'For Each li As ListItem In chk.Items
                                '                        '    If (li.Value = "2") Then
                                '                        '        li.Selected = True
                                '                        '    ElseIf (li.Value = "4") Then
                                '                        '        li.Selected = True
                                '                        '    ElseIf (li.Value = "8") Then
                                '                        '        li.Selected = False
                                '                        '    End If
                                '                        'Next
                                '                    ElseIf (Convert.ToInt32(rightval) = 4) Then
                                '                        create = False
                                '                        Edit = True
                                '                        delete = False
                                '                        'For Each li As ListItem In chk.Items
                                '                        '    If (li.Value = "2") Then
                                '                        '        li.Selected = False
                                '                        '    ElseIf (li.Value = "4") Then
                                '                        '        li.Selected = True
                                '                        '    ElseIf (li.Value = "8") Then
                                '                        '        li.Selected = False
                                '                        '    End If
                                '                        'Next
                                '                    ElseIf (Convert.ToInt32(rightval) = 2) Then
                                '                        create = True
                                '                        Edit = False
                                '                        delete = False
                                '                        AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
                                '                        AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
                                '                        dtItem.Columns.Add("Action")
                                '                        'For Each li As ListItem In chk.Items
                                '                        '    If (li.Value = "2") Then
                                '                        '        li.Selected = True
                                '                        '    ElseIf (li.Value = "4") Then
                                '                        '        li.Selected = False
                                '                        '    ElseIf (li.Value = "8") Then
                                '                        '        li.Selected = False
                                '                        '    End If
                                '                        'Next
                                '                    End If

                                '                End If
                                '            End If
                                '        Next
                                '    End If
                                'End If
                                'If (create = True) Then
                                '    Dim dr As DataRow = dtITemVal.NewRow()
                                '    dtITemVal.Rows.Add(dr)
                                'End If
                                If (Not IsNothing(Session(strs(i - 1).ToString()))) Then
                                    GRDCHLDVIEW.DataSource = Session(strs(i - 1).ToString())
                                Else
                                    GRDCHLDVIEW.DataSource = dtItem
                                End If
                                GRDCHLDVIEW.DataBind()
                                Session(strs(i - 1)) = dtItem
                                pnlApprove.Controls.Add(GRDCHLDVIEW)
                                If (create = True) Then

                                    Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Create") = "YES"
                                    Dim btn As New Button
                                    btn.ID = strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "ADD"
                                    btn.Text = "ADD ROW"
                                    btn.CssClass = "btnDyn"
                                    btn.EnableViewState = False
                                    AddHandler btn.Click, AddressOf btnAddRow_Click
                                    pnlApprove.Controls.Add(btn)
                                Else
                                    Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Create") = Nothing
                                End If
                                pnlApprove.Controls.Add(New LiteralControl("</div>"))

                            End If

                        Next
                        pnlApprove.Controls.Add(New LiteralControl("</td></tr>"))
                    End If
                    pnlApprove.Controls.Add(New LiteralControl("</div>"))

                End If
            End If
        End If

        'Add for Child Action Screen

        Dim xx As Integer = Val(pnlApprove.Width.ToString())
        Dim ww As Integer = Val(pnlApprove.Height.ToString())
        pnlPopupApprove.Width = xx + 20
        pnlPopupApprove.Height = (ww + 170) ' (2 * (ww + 70)) panel height + button height + header height
        pnlPopupApprove.ScrollBars = ScrollBars.Both
        Me.updatePanelApprove.Update()
        Me.btnApprove_ModalPopupExtender.Show()
    End Sub
    Public Sub deletedrow(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)
        'Dim btnDetails As Button = TryCast(sender, Button)
        'Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
        'Dim CRMID As Integer = Convert.ToString(Me.GVCRM.DataKeys(row.RowIndex).Value)
        Dim btnDelete As GridView = TryCast(sender, GridView)
        'Dim id As String = btnDelete.DataKeys(Convert.ToInt32(e.CommandArgument)).Value("tid").ToString()
        Dim ID As String = btnDelete.ID
        'ID = Right(ID, ID.Leng  th - 3)
        'Session("ID") = ID
        'ID = "BTN" & ID
        'ViewState("ID") = ID
        'Dim rw As GridViewRow = DirectCast(DirectCast(e.CommandSource, ImageButton).NamingContainer, GridViewRow)
        'Dim Pid As String = btnDelete.DataKeys(rw.RowIndex).Value
        'ViewState("Pid") = Pid
        Dim rw As GridViewRow = DirectCast(DirectCast(e.CommandSource, ImageButton).NamingContainer, GridViewRow)
        Dim Pid As String = btnDelete.DataKeys(rw.RowIndex).Value

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        If e.CommandName = "Remove" Then
            oda.SelectCommand.CommandText = "Delete from MMM_MST_DOC_ITEM where tid=" & Pid & ""
            oda.SelectCommand.ExecuteScalar()
            Dim str() As String = rw.Parent.Parent.ID.ToString().Split(New String() {"GRD_"}, StringSplitOptions.None)

            Dim dt As DataTable = Session(str(1).ToString().Replace("__", " ").Replace("_", "."))
            Dim grd As GridView = TryCast(pnlApprove.FindControl(btnDelete.ID), GridView)
            dt.Rows(rw.RowIndex).Delete()
            grd.DataSource = dt
            grd.DataBind()
            Session(str(1).ToString().Replace("__", " ").Replace("_", ".")) = dt
            'If (Not IsNothing(Session("ActionForm"))) Then
            '    Dim conStrs As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            '    Dim cons As SqlConnection = New SqlConnection(conStrs)
            '    Dim actionform As String = Session("ActionForm")
            '    Dim childActionvalueRights As String = String.Empty
            '    Dim oda12 As SqlDataAdapter = New SqlDataAdapter("", cons)
            '    oda12.SelectCommand.CommandType = CommandType.Text
            '    oda12.SelectCommand.CommandText = "select ChidFormforActionScreen from MMM_MST_FORMS WHERE FORMNAME='" & actionform & "' and eid=" & Session("EID").ToString()
            '    If (cons.State = ConnectionState.Closed) Then
            '        cons.Open()
            '    End If
            '    Dim childActionvalue = oda12.SelectCommand.ExecuteScalar()
            '    oda12.Dispose()
            '    'cons.Dispose()
            '    Dim oda123 As SqlDataAdapter = New SqlDataAdapter("", cons)
            '    oda123.SelectCommand.CommandType = CommandType.Text
            '    oda123.SelectCommand.CommandText = "select ChidFormforActionScreen_Rights from MMM_MST_FORMS WHERE FORMNAME='" & actionform & "' and eid=" & Session("EID").ToString()
            '    If (cons.State = ConnectionState.Closed) Then
            '        cons.Open()
            '    End If
            '    childActionvalueRights = oda123.SelectCommand.ExecuteScalar()
            '    Session("CHILDACTIONSCREEN") = Nothing
            '    Session("CHILDACTIONSCREEN") = childActionvalue
            '    Session("CHILDACTIONSCREENRIGHTS") = Nothing
            '    Session("CHILDACTIONSCREENRIGHTS") = childActionvalueRights

            '    If (Not IsNothing(Session("ActionForm"))) Then
            '        pnlApprove.Controls.Add(New LiteralControl("<tr>"))
            '        pnlApprove.Controls.Add(New LiteralControl("<td colspan='4'>"))
            '        pnlApprove.Controls.Add(New LiteralControl("<div id=""tabs"" ><ul>"))
            '        ' pnlApprove.Controls.Add(New LiteralControl("<li><a href=""#tabPending0"">" & Session("ActionForm").ToString() & "<asp:Label ID=""lblpending0"" runat=""server""></asp:Label></a></li>"))
            '        Dim strs As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")
            '        If (Not IsNothing(strs)) Then
            '            For j As Integer = 1 To strs.Length
            '                Dim childvalue As String() = strs(j - 1).ToString().Split(".")
            '                pnlApprove.Controls.Add(New LiteralControl("<li><a href=""#tabPending" & j.ToString() & """>" & childvalue(1).ToString() & "<asp:Label ID=""lblpending" & j & " "" runat=""server""></asp:Label></a></li>"))
            '            Next
            '        End If

            '        pnlApprove.Controls.Add(New LiteralControl("</ul>"))
            '        'pnlApprove.Controls.Add(tabPending00)


            '        'tabPending00.Attributes.Add("Style", "display:block;")
            '        Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            '        Dim con1 As New SqlConnection(conStr1)
            '        Dim oda1 As New SqlDataAdapter("", con1)
            '        Dim ds1 As New DataSet


            '        'oda1.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & Session("FORMNAME").ToString() & "' and EID=" & Session("eid") & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='" & Session("FORMNAME").ToString() & "' and EID=" & Session("eid") & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & Session("EVENTNAME").ToString() & "' and  F.EID = " & Session("EID") & "   Order By Displayorder"
            '        'oda1.Fill(ds1, "data")
            '        'pnlApprove.Controls.Add(New LiteralControl("<div id=""tabPending0"" style=""min-height:50px;max-height:200px;overflow-x:scroll;overflow-y:scroll;width:650px;"">"))
            '        'Dim GRDCHLDVIEWMAIN As New GridView
            '        'GRDCHLDVIEWMAIN.AutoGenerateColumns = "TRUE"
            '        'Dim formname As String = Session("FORMNAME").ToString()
            '        'GRDCHLDVIEWMAIN.ID = "GRD_" & formname.ToString().Replace(" ", "_")
            '        'GRDCHLDVIEWMAIN.Width = "600"
            '        'GRDCHLDVIEWMAIN.CssClass = "mGrid"
            '        'GRDCHLDVIEWMAIN.AlternatingRowStyle.CssClass = "alt"
            '        'AddHandler GRDCHLDVIEWMAIN.RowDataBound, AddressOf gvData_InlineEdit
            '        'GRDCHLDVIEWMAIN.DataSource = ds1.Tables("data")
            '        'GRDCHLDVIEWMAIN.DataBind()
            '        'pnlApprove.Controls.Add(GRDCHLDVIEWMAIN)

            '        'pnlApprove.Controls.Add(New LiteralControl("</div>"))


            '        If (Not IsNothing(strs)) Then
            '            For i As Integer = 1 To strs.Length
            '                Dim childvalue As String() = strs(i - 1).ToString().Split(".")
            '                Dim conStrsS As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            '                Dim consS As New SqlConnection(conStrsS)
            '                Dim dasS As SqlDataAdapter = New SqlDataAdapter("", consS)
            '                Dim odaN As SqlDataAdapter = New SqlDataAdapter("", consS)
            '                Dim dtChildS As New DataTable()
            '                Dim create As Boolean = False, delete As Boolean = False, Edit As Boolean = False
            '                'dasS.SelectCommand.CommandText = "SELECT F.FieldID,F.displayName,F.FieldType,F.displayOrder,F.dropdown,case F.isRequired when 1 then 'Mandatory' else 'Nullable' END [isrequired],case F.isActive when 0 then 'InActive' else 'Active' end [isActive],isnull((select isEditable from MMM_MST_FIELDS WHERE DOCUMENTTYPE='" & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),F.ISEDITABLE) [isEditable],isnull((select count(displayname) from MMM_MST_FIELDS where DocumentType ='CAS." & childvalue(1).ToString() & "' and EID=" & Session("EID").ToString() & " and displayName =f.displayname),0) [AF] FROM MMM_MST_FIELDS F   WHERE F.documenttype='" & childvalue(1).ToString() & "' and  F.EID = " & Session("EID").ToString() & "   Order By Displayorder"
            '                dasS.SelectCommand.CommandText = "select fieldid,displayname,fieldtype from mmm_mst_fields where documenttype='" & strs(i - 1).ToString() & "' and eid=" & Session("EID")
            '                dasS.Fill(dtChildS)
            '                'pnlApprove.Controls.Add(New LiteralControl("<tr><td colspan=""4"">"))
            '                If (dtChildS.Rows.Count > 0) Then

            '                    pnlApprove.Controls.Add(New LiteralControl("<div id=""tabPending" & i.ToString() & """style=""max-height:200px;overflow-x:scroll;overflow-y:scroll;width:100%;margin-left:50px;"">"))


            '                    'Dim conStrss As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            '                    'Dim conss As SqlConnection = New SqlConnection(conStrss)
            '                    'Dim actionform As String = Session("ActionForm")

            '                    odaN.SelectCommand.CommandType = CommandType.StoredProcedure
            '                    odaN.SelectCommand.Parameters.Clear()
            '                    odaN.SelectCommand.CommandText = "uspGetDetailITEMByDocidonAction"
            '                    odaN.SelectCommand.Parameters.AddWithValue("docid", RetDocId(Session("EID")))
            '                    odaN.SelectCommand.Parameters.AddWithValue("FN", strs(i - 1).ToString())
            '                    odaN.SelectCommand.Parameters.AddWithValue("NFN", childvalue(1))
            '                    odaN.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())
            '                    Dim dtItem As New DataTable()
            '                    odaN.Fill(dtItem)
            '                    'Added By Mayank For Child Item values from doc Item Start Here 
            '                    odaN.SelectCommand.CommandType = CommandType.StoredProcedure
            '                    odaN.SelectCommand.Parameters.Clear()
            '                    odaN.SelectCommand.CommandText = "uspGetValuesFromChildonEditonAction"
            '                    odaN.SelectCommand.Parameters.AddWithValue("DOcid", RetDocId(Session("EID")))
            '                    odaN.SelectCommand.Parameters.AddWithValue("FN", strs(i - 1).ToString())
            '                    odaN.SelectCommand.Parameters.AddWithValue("NFN", childvalue(1))
            '                    odaN.SelectCommand.Parameters.AddWithValue("EID", Session("EID").ToString())

            '                    Dim dtITemVal As New DataTable()
            '                    odaN.Fill(dtITemVal)
            '                    Dim GRDCHLDVIEW As New GridView
            '                    GRDCHLDVIEW.AutoGenerateColumns = "TRUE"

            '                    Dim grd As GridView = TryCast(pnlApprove.FindControl("GRD_" & strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_")), GridView)
            '                    If (Not IsNothing(grd)) Then
            '                        pnlApprove.Controls.Remove(grd)
            '                    End If
            '                    GRDCHLDVIEW.ID = "GRD_" & strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_")
            '                    GRDCHLDVIEW.Width = "600"
            '                    GRDCHLDVIEW.CssClass = "mGrid"
            '                    GRDCHLDVIEW.AlternatingRowStyle.CssClass = "alt"
            '                    'dtItem.Columns.Add("Action")
            '                    AddHandler GRDCHLDVIEW.RowDataBound, AddressOf GRDCHLDVIEW_InlineEdit
            '                    If (Not IsNothing(childActionvalueRights)) Then
            '                        If (Not childActionvalueRights = String.Empty) Then
            '                            Dim rights As String() = childActionvalueRights.ToString().Split(",")
            '                            For a As Integer = 0 To rights.Length - 1
            '                                If (rights(a).ToString().Contains(strs(i - 1).ToString() & "-")) Then
            '                                    Dim finalval As String() = rights(a).ToString().Split(New String() {strs(i - 1).ToString() & "-"}, StringSplitOptions.None)
            '                                    If (finalval.Length > 1) Then
            '                                        Dim rightval = finalval(1)

            '                                        If (Convert.ToInt32(rightval) = 14) Then
            '                                            create = True
            '                                            delete = True
            '                                            Edit = True
            '                                        ElseIf (Convert.ToInt32(rightval) = 12) Then
            '                                            create = False
            '                                            Edit = True
            '                                            delete = True
            '                                        ElseIf (Convert.ToInt32(rightval) = 10) Then
            '                                            create = True
            '                                            Edit = False
            '                                            delete = True
            '                                        ElseIf (Convert.ToInt32(rightval) = 8) Then
            '                                            create = False
            '                                            Edit = False
            '                                            delete = True
            '                                        ElseIf (Convert.ToInt32(rightval) = 6) Then
            '                                            create = True
            '                                            Edit = True
            '                                            delete = False
            '                                        ElseIf (Convert.ToInt32(rightval) = 4) Then
            '                                            create = False
            '                                            Edit = True
            '                                            delete = False
            '                                        ElseIf (Convert.ToInt32(rightval) = 2) Then
            '                                            create = True
            '                                            Edit = False
            '                                            delete = False
            '                                        End If

            '                                    End If
            '                                End If
            '                            Next
            '                        End If
            '                    End If
            '                    If (delete = True) Then
            '                        AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
            '                        AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
            '                        Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Delete") = "YES"
            '                    Else
            '                        Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Delete") = Nothing
            '                    End If
            '                    If (create = True) Then
            '                        Dim dr As DataRow = dtITemVal.NewRow()
            '                        dtITemVal.Rows.Add(dr)
            '                        Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Create") = "YES"
            '                    Else
            '                        Session(strs(i - 1).ToString().Replace(" ", "__").Replace(".", "_") & "Create") = Nothing
            '                    End If
            '                    'AddHandler GRDCHLDVIEW.RowCommand, AddressOf deletedrow
            '                    'AddHandler GRDCHLDVIEW.RowDeleting, AddressOf Deleting
            '                    GRDCHLDVIEW.DataKeyNames = New String() {"tid"}
            '                    GRDCHLDVIEW.DataSource = dtItem
            '                    GRDCHLDVIEW.DataBind()
            '                    Session(strs(i - 1).ToString() & "VAL") = dtITemVal
            '                    Session("ChildDoctypeAction") = strs(i - 1).ToString()
            '                    pnlApprove.Controls.Add(GRDCHLDVIEW)
            '                    pnlApprove.Controls.Add(New LiteralControl("</div>"))
            '                End If

            '            Next
            '            pnlApprove.Controls.Add(New LiteralControl("</td></tr>"))
            '        End If
            '        pnlApprove.Controls.Add(New LiteralControl("</div>"))

            '    End If
            'End If
            'BINDGRIDAFTERDELETION(ID)
        ElseIf e.CommandName.ToUpper = "EDITCHILD" Then
            Dim ob As New DynamicForm
            ob._CallerPage = 1
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            oda = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FORMNAME=(Select documenttype from mmm_mst_doc_item where tid=" & Pid & ") order by displayOrder", con)
            Dim DS As New DataSet
            oda.Fill(DS, "CHILD")
            ViewState("FN") = DS.Tables("CHILD").Rows(0).Item("DOCUMENTTYPE").ToString
            Session("CHILD") = DS.Tables("CHILD")
            pnlFields1.Controls.Clear()
            ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
            Dim ROW1() As DataRow = DS.Tables("CHILD").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED') and lookupvalue is not null")
            If ROW1.Length > 0 Then
                For i As Integer = 0 To ROW1.Length - 1
                    Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                    DDL.AutoPostBack = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue1
                Next
            End If
            ob.FillControlsOnPanel(Session("CHILD"), pnlFields1, "CHILDITEM", Pid)
            ChildFormEditing()
            'ChildFormddlRenderingOnCreation(1)
            'ChildFormddlRendering(ROW1, 1)
            Button2.Text = "UPDATE"
            updpnlchild.Update()
            ModalPopupExtender1.Show()
        End If
        Me.btnApprove_ModalPopupExtender.Show()
        oda.Dispose()
        con.Dispose()

    End Sub
    Public Sub totalrow(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Dim cnt As Integer = e.Row.Cells.Count - 1
        If e.Row.RowType = DataControlRowType.DataRow Then

            If e.Row.Cells(0).Text.ToUpper() = "TOTAL" Then
                e.Row.Font.Bold = True
                e.Row.ForeColor = Drawing.Color.Black
            Else
                Dim img As ImageButton = New ImageButton()
                img.ID = e.Row.Cells(cnt).Text
                img.ImageUrl = "~/images/Cancel.gif"
                img.CommandName = "Remove"
                img.CommandArgument = e.Row.Cells(cnt).Text
                img.Height = Unit.Parse("16")
                img.Width = Unit.Parse("16")
                e.Row.Cells(cnt).Controls.Add(img)
                e.Row.Cells(cnt).Controls.Add(New LiteralControl("&nbsp;"))
                Dim btnEdit As ImageButton = New ImageButton()
                btnEdit.ID = e.Row.Cells(cnt).Text & "Child"
                btnEdit.CommandName = "Editchild"
                btnEdit.ImageUrl = "~/images/Edit.gif"
                btnEdit.CommandArgument = e.Row.Cells(cnt).Text
                btnEdit.Height = Unit.Parse("16")
                btnEdit.Width = Unit.Parse("16")
                e.Row.Cells(cnt).Controls.Add(btnEdit)
            End If

        ElseIf e.Row.RowType = DataControlRowType.Header Then
            e.Row.Cells(cnt).Text = " "
        End If


    End Sub
    Protected Sub GRDCHLDVIEW_InlineEdit(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs)
        Try
            Dim fn As String = ""
            'Dim dtFld1 As DataTable = ViewState(fn) ' Session(fn)
            Dim dtfld1 As New DataTable '= ViewState(fn)

            Dim row As GridViewRow = e.Row


            'Dim GV As GridView = 
            Dim GID As String = row.Parent.Parent.ID
            Dim GIDS As String() = row.Parent.Parent.ID.ToString().Split(New String() {"GRD_"}, StringSplitOptions.None)
            fn = GIDS(1).Replace("__", " ").Replace("_", ".")
            'dtfld1 = Session(fn & "VAL")
            Dim grd As GridView = DirectCast(sender, GridView)

            ' changed on 23 dec 14 by balli  , applying check box in grid

            If e.Row.RowType = DataControlRowType.Header Then

                For i As Integer = 0 To e.Row.Cells.Count - 1
                    If e.Row.Cells(i).Text.ToUpper() = "CMASTERTID" Or e.Row.Cells(i).Text.ToUpper() = "TID" Then
                        If Not IsNothing(Session(fn.ToString().Replace(" ", "__").Replace(".", "_") & "Delete")) Then
                            e.Row.Cells(i).Text = "Action"
                            e.Row.ForeColor = Drawing.Color.Black
                        Else
                            e.Row.Cells(i).Visible = False
                        End If
                    End If
                Next

                'If e.Row.Cells(1).Text.ToUpper() = "CMASTERTID" Then
                '    'e.Row.Cells(0).Text = ""
                '    If Not IsNothing(Session(fn.ToString().Replace(" ", "__").Replace(".", "_") & "Delete")) Then
                '        e.Row.Cells(1).Text = "Action"
                '        e.Row.ForeColor = Drawing.Color.Black
                '    Else
                '        e.Row.Cells(1).Visible = False
                '    End If

                'ElseIf e.Row.Cells(1).Text.ToUpper() = "TID" Then
                '    If Not IsNothing(Session(fn.ToString().Replace(" ", "__").Replace(".", "_") & "Delete")) Then
                '        e.Row.Cells(1).Text = "Action"
                '        e.Row.ForeColor = Drawing.Color.Black
                '    Else
                '        e.Row.Cells(1).Visible = False
                '    End If

                'End If

                If (e.Row.Cells.Count > 2) Then
                    If e.Row.Cells(2).Text.ToUpper() = "TID" Then
                        If Not IsNothing(Session(fn.ToString().Replace(" ", "__").Replace(".", "_") & "Delete")) Then
                            e.Row.Cells(2).Text = "Action"
                            e.Row.ForeColor = Drawing.Color.Black
                        Else
                            e.Row.Cells(2).Visible = False
                        End If
                        'e.Row.Cells(0).Text = ""

                    End If
                End If


            End If


            If row.RowType = DataControlRowType.DataRow Then


                ' For j As Integer = 0 To row.Cells.Count - 1

                If row.Cells(0).Text.ToUpper <> "TOTAL" Then

                    Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                    Dim con1 As New SqlConnection(conStr1)
                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                    Dim oda1 As New SqlDataAdapter("select * from mmm_mst_fields  WITH (NOLOCK) where documenttype='" & fn & "' and eid=" & Session("EID"), con1)
                    oda1.Fill(dtfld1)
                    If Not IsNothing(Session(fn.ToString().Replace(" ", "__").Replace(".", "_") & "Delete")) Then
                        Dim cnt As Integer = e.Row.Cells.Count - 1
                        Dim img As ImageButton = New ImageButton()
                        img.ID = e.Row.Cells(cnt).Text
                        img.ImageUrl = "~/images/Cancel.gif"
                        img.CommandName = "Remove"
                        img.CommandArgument = e.Row.Cells(cnt).Text
                        img.Height = Unit.Parse("16")
                        img.Width = Unit.Parse("16")
                        img.OnClientClick = "return DeleteConfirm();"
                        e.Row.Cells(cnt).Controls.Add(img)
                        e.Row.Cells(cnt).Controls.Add(New LiteralControl("&nbsp;"))
                    Else
                        'changed on 23 dec 14 by balli
                        If grd.HeaderRow.Cells(1).Text.ToUpper() = "CMASTERTID" Then
                            row.Cells(1).Visible = False
                        ElseIf grd.HeaderRow.Cells(1).Text.ToUpper() = "TID" Then
                            row.Cells(1).Visible = False
                        End If
                        If (grd.HeaderRow.Cells.Count > 2) Then
                            If grd.HeaderRow.Cells(2).Text.ToUpper() = "TID" Then
                                row.Cells(2).Visible = False
                            End If
                        End If

                        'For i As Integer = 0 To grd.HeaderRow.Cells.Count - 1
                        '    If grd.HeaderRow.Cells(i).Text.ToUpper() = "CMASTERTID" Or grd.HeaderRow.Cells(i).Text.ToUpper() = "TID" Then
                        '        row.Cells(i).Visible = False
                        '    End If
                        'Next

                        For i As Integer = 0 To grd.HeaderRow.Cells.Count - 1
                            If grd.HeaderRow.Cells(i).Text.ToUpper() = "CMASTERTID" Then
                                row.Cells(i).Visible = False
                            ElseIf grd.HeaderRow.Cells(i).Text.ToUpper() = "TID" Then
                                row.Cells(i).Visible = False
                            End If
                            If (grd.HeaderRow.Cells.Count > 2) Then
                                If grd.HeaderRow.Cells(i).Text.ToUpper() = "TID" Then
                                    row.Cells(i).Visible = False
                                End If
                            End If
                        Next

                    End If



                    If Not IsNothing(Session(fn.ToString().Replace(" ", "__").Replace(".", "_") & "Create")) Then
                        Dim dr As DataRow = dtfld1.NewRow()
                        dtfld1.Rows.Add(dr)
                    End If
                    For j As Integer = 0 To dtfld1.Rows.Count - 1
                        Dim ftype As String = dtfld1.Rows(j).Item("fieldtype").ToString()
                        'Dim ilEdit As Integer = dtfld1.Rows(j).Item("inlineEditing").ToString()
                        Dim FldID As String = dtfld1.Rows(j).Item("fieldid").ToString()
                        Dim Formula = Convert.ToString(dtfld1.Rows(j).Item("cal_text"))
                        Dim DisplayName = Convert.ToString(dtfld1.Rows(j).Item("DisplayName"))

                        Dim datatype As String = dtfld1.Rows(j).Item("datatype").ToString() 'Prashant_10_7
                        Dim controlWdth As Integer = 100


                        If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Then
                            Dim cb As New TextBox
                            'cb.ID = "fld" & j.ToString() & "_" & row.RowIndex
                            'cb.Width = 55
                            cb.ID = "fld" & FldID & row.RowIndex
                            'Prashant_10_7
                            If dtfld1.Rows(j).Item("defaultfieldval").ToString().Length > 0 Then
                                cb.Text = dtfld1.Rows(j).Item("defaultfieldval").ToString()
                            Else
                                If datatype.ToUpper() = "NUMERIC" Then
                                    cb.Text = "0"
                                End If
                            End If
                            If Val(dtfld1.Rows(j).Item("isDescription").ToString()) = 1 Then
                                cb.ToolTip = dtfld1.Rows(j).Item("Description").ToString()
                            End If
                            If dtfld1.Rows(j).Item("iseditable") = 1 Then
                                cb.Enabled = True
                            Else
                                cb.Enabled = False
                            End If
                            If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                cb.Enabled = True
                            Else
                                cb.Enabled = False
                            End If
                            cb.Width = controlWdth

                            'Code For calculative field
                            'Code End Here !!!!!!
                            If ftype.ToUpper() = "CALCULATIVE FIELD" Then
                                cb.Attributes.Add("READONLY", "READONLY")
                                cb.Attributes.Add("COLOR", "GRAY")
                                cb.Text = "0"
                                If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                    cb.Enabled = True
                                Else
                                    cb.Enabled = False
                                End If
                                ' cb.ReadOnly = True

                            End If

                            Dim Formula1 = Convert.ToString(dtfld1.Rows(j).Item("cal_text"))

                            If Not Formula1 Is Nothing And Formula1 <> "" Then
                                'Dim arrFor As String() = Formula.Split(",")
                                Dim jScript = GenerateJQueryScript(dtfld1, GID, row.RowIndex, Formula1, FldID)
                                If jScript <> "" Then
                                    cb.Attributes.Add("onblur", jScript)
                                End If
                            End If


                            If ViewState("chkadd") = 1 Then
                                j = j + 1
                            End If
                            Dim colValue As String = row.DataItem(j).ToString()
                            If Not colValue = "&nbsp;" And Not colValue = "" Then
                                cb.Text = colValue
                            End If

                            row.Cells(j).Controls.Add(cb)

                            If datatype.ToUpper.Trim = "DATETIME" Then
                                Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                CLNDR.Controls.Clear()
                                CLNDR.ID = "CLNDR" & dtfld1.Rows(j).Item("FieldID").ToString()
                                CLNDR.Format = "dd/MM/yy"
                                CLNDR.TargetControlID = cb.ID
                                cb.Enabled = True
                                If row.Cells(j).Text <> "" And row.Cells(j).Text <> "&nbsp;" Then
                                    cb.Text = String.Format("{0:dd/MM/yy}", row.Cells(j).Text)
                                Else
                                    cb.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                End If
                                row.Cells(j).Controls.Add(CLNDR) '
                                If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                    cb.Enabled = True
                                Else
                                    cb.Enabled = False
                                End If
                            End If

                            If Val(colValue) = 0 Then
                                If ViewState("chkadd") = 1 Then  'added by balli in case of checkboxes
                                    If ftype.ToUpper() = "TEXT BOX" And dtfld1.Rows(j - 1).Item("datatype").ToString().ToUpper() = "NUMERIC" Then
                                        cb.Text = "0"
                                    End If
                                Else
                                    If ftype.ToUpper() = "TEXT BOX" And dtfld1.Rows(j).Item("datatype").ToString().ToUpper() = "NUMERIC" Then
                                        cb.Text = "0"
                                    End If
                                End If
                            End If

                            If Not Formula Is Nothing And Formula <> "" Then
                                'Dim arrFor As String() = Formula.Split(",")
                                Dim jScript = GenerateJQueryScript(dtfld1, GID, row.RowIndex, Formula, FldID)
                                If jScript <> "" Then
                                    cb.Attributes.Add("onblur", jScript)
                                End If
                            End If
                        ElseIf ftype.ToUpper() = "MULTI LOOKUP" Then
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & dtfld1.Rows(j).Item("FieldID").ToString() & row.RowIndex
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            If dtfld1.Rows(j).Item("isEditable").ToString() = "1" Then
                                txtBox.Enabled = True
                            Else
                                txtBox.Enabled = False
                            End If
                            row.Cells(j).Controls.Add(txtBox)

                        ElseIf ftype.ToUpper() = "DROP DOWN" Then
                            Dim ddl As New DropDownList
                            ddl.ID = "fld" & FldID & "_" & row.RowIndex
                            ddl.CssClass = "txtBox"
                            If dtfld1.Rows(j).Item("alloweditonedit") = 1 Then
                                ddl.Enabled = True
                            Else
                                ddl.Enabled = False
                            End If
                            ddl.Width = 70
                            Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                            Dim dropdowntype As String = dtfld1.Rows(j).Item("dropdowntype").ToString()
                            Dim arr() As String
                            'Dim arrMid() As String
                            If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                Dim cb As New DropDownList
                                cb.ID = "fld" & FldID & "_" & row.RowIndex
                                Dim ARR1() As String = dtfld1.Rows(j).Item("dropdown").ToString().Split(",")

                                For K As Integer = 0 To ARR1.Length - 1
                                    cb.Items.Add(ARR1(K).ToString.Trim)
                                    cb.Items(K).Value = ARR1(K).ToString.Trim
                                Next
                                cb.Items.Insert(0, "Select")
                                cb.Items(0).Value = 0
                                'Prashant_30_7
                                If dtfld1.Rows(j).Item("iseditable") = 1 Then
                                    ddl.Enabled = True
                                Else
                                    ddl.Enabled = False
                                End If
                                If ViewState("chkadd") = 1 Then
                                    j = j + 1
                                End If

                                If cb.Items.FindByText(row.Cells(j).Text.Trim) IsNot Nothing Then
                                    cb.Items.FindByText(row.Cells(j).Text.Trim).Selected = True
                                End If

                                row.Cells(j).Controls.Add(cb)


                            ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                '' code for getting master valued 
                                Dim ob As New DynamicForm
                                arr = ddlText.Split("-")
                                Dim TID As String = "TID"
                                Dim TABLENAME As String = ""
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_MASTER"
                                ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                    TABLENAME = "MMM_MST_DOC"
                                ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                    TABLENAME = "MMM_MST_DOC_ITEM"
                                ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                    If arr(1).ToString.ToUpper = "USER" Then
                                        TABLENAME = "MMM_MST_USER"
                                        TID = "UID"
                                    ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                        TABLENAME = "MMM_MST_LOCATION"
                                        TID = "LOCID"
                                    End If
                                End If
                                Dim lookUpqry As String = ""
                                Dim str As String = ""
                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                If arr(0).ToUpper() = "CHILD" Then

                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M  WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                ElseIf arr(0).ToUpper() <> "STATIC" Then
                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                Else
                                    If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                        str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) "
                                    Else
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                    End If
                                End If

                                Dim xwhr As String = ""
                                Dim tids As String = ""
                                'Dim tidarr() As String

                                ''FILTER THE DATA ACCORDING TO USER 
                                tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())

                                If tids.Length >= 2 Then
                                    'tidarr = tids.Split("-")
                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                ElseIf tids = "0" Then
                                    pnlFields.Visible = False
                                    btnActEdit.Visible = False
                                    updMain.Update()
                                    xwhr = ""
                                End If
                                str = str & "  AND M.isauth=1 " & xwhr
                                Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
                                If AutoFilter.Length > 0 Then
                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                    If arr(0).ToUpper() = "CHILD" Then
                                        If AutoFilter.ToUpper = "DOCID" Then
                                            str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                        Else
                                            str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                        End If
                                    ElseIf arr(0).ToUpper() <> "STATIC" Then

                                        str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        str = str & "  AND M.isauth=1 " & xwhr
                                    Else
                                        str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & Session("EID") & " "
                                        str = str & "  AND M.isauth=1 " & xwhr
                                    End If
                                End If

                                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                Dim con As SqlConnection = New SqlConnection(conStr)
                                Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                Dim dss As New DataSet

                                If str.Length > 0 Then
                                    If dtfld1.Rows(j).Item("fillwithexistingonEdit").ToString().ToUpper = "TRUE" Then
                                        str = str & " AND TID IN (select distinct " & dtfld1.Rows(j).Item("fieldmapping").ToString() & " from mmm_mst_doc_item  WITH (NOLOCK) where docid=" & Convert.ToInt32(RetDocId(Session("EID"))) & ") order by " & arr(2).ToString()
                                    Else
                                        str = str & "order by " & arr(2).ToString()
                                    End If

                                    oda.SelectCommand.CommandText = str
                                    oda.Fill(dss, "FV")
                                    Dim isAddJquery As Integer = 0
                                    ddl.Items.Add("Select")
                                    ddl.Items(0).Value = "0"
                                    For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                        ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
                                        Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
                                        ddl.Items(J1 + 1).Value = lookddlVal
                                    Next
                                    oda.Dispose()
                                    dss.Dispose()


                                    Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()
                                    Dim multilookup As String = dtfld1.Rows(j).Item("multilookUpVal").ToString()

                                    If lookupvalue.Length > 0 Or multilookup.Length > 0 Then
                                        ddl.AutoPostBack = True
                                        AddHandler ddl.TextChanged, AddressOf ActionGridDdl_TextChanged
                                    End If



                                    If ViewState("chkadd") = 1 Then
                                        j = j + 1
                                    End If

                                    If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                        ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                    End If

                                    row.Cells(j).Controls.Add(ddl)
                                    If isAddJquery = 1 Then
                                        Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                    End If
                                End If
                                con.Dispose()
                                oda.Dispose()
                                dss.Dispose()
                                '' ends here for getting master valued 
                            End If


                        ElseIf ftype.ToUpper() = "MULTI LOOKUPDDL" Then

                            Dim ddl As New DropDownList
                            ddl.ID = "fld" & FldID & "_" & row.RowIndex
                            ddl.CssClass = "txtBox"
                            ddl.Width = 150

                            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                            Dim con As SqlConnection = New SqlConnection(conStr)
                            Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                            Dim od As SqlDataAdapter = New SqlDataAdapter("", con)
                            Dim dt As New DataTable
                            Dim dtval As New DataTable
                            Dim fieldid As String()
                            Dim ddlval As String()
                            If (ddlText.ToString() <> String.Empty) Then
                                fieldid = ddlText.ToString().Split(",")
                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                od.SelectCommand.CommandText = "select ddlMultilookupval from mmm_mst_fields  WITH (NOLOCK) where fieldid = " & fieldid(0).ToString() & ""
                                od.Fill(dtval)
                                If (dtval.Rows.Count > 0) Then
                                    ddlval = dtval.Rows(0)("ddlMultilookupval").ToString().Split(",")
                                    For q As Integer = 0 To ddlval.Length - 1
                                        If (ddlval(q).ToString().Contains("-" & dtfld1.Rows(j).Item("FieldID").ToString())) Then
                                            Dim temp() As String = ddlval(q).ToString().Split("-")
                                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                                            od.SelectCommand.CommandText = "select * from MMM_MST_FIELDS  WITH (NOLOCK) where DOCUMENTTYPE='" & temp(0).ToString() & "' and eid=" & HttpContext.Current.Session("EID") & " and fieldmapping in('" & temp(1).ToString() & "')"
                                            Dim checkval As New DataTable
                                            od.Fill(checkval)
                                            Dim ddlText1 As String = checkval.Rows(0).Item("dropdown").ToString()
                                            Dim dropdowntype As String = checkval.Rows(0).Item("dropdowntype").ToString()
                                            Dim arr() As String
                                            If UCase(dropdowntype) = "MASTER VALUED" Then
                                                Dim ob As New DynamicForm
                                                arr = ddlText1.Split("-")
                                                Dim TID As String = "TID"
                                                Dim TABLENAME As String = ""
                                                If UCase(arr(0).ToString()) = "MASTER" Then
                                                    TABLENAME = "MMM_MST_MASTER"
                                                ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                    TABLENAME = "MMM_MST_DOC"
                                                ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                    TABLENAME = "MMM_MST_DOC_ITEM"
                                                ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                    If arr(1).ToString.ToUpper = "USER" Then
                                                        TABLENAME = "MMM_MST_USER"
                                                        TID = "UID"
                                                    ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                        TABLENAME = "MMM_MST_LOCATION"
                                                        TID = "LOCID"
                                                    End If
                                                End If
                                                Dim lookUpqry As String = ""
                                                Dim str As String = ""
                                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                If arr(0).ToUpper() = "CHILD" Then

                                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M  WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                Else
                                                    If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                        str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) "
                                                    Else
                                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                    End If
                                                End If

                                                Dim xwhr As String = ""
                                                Dim tids As String = ""
                                                'Dim tidarr() As String

                                                ''FILTER THE DATA ACCORDING TO USER 
                                                tids = ob.UserDataFilter(dtfld1.Rows(j).Item("documenttype").ToString(), arr(1).ToString())

                                                If tids.Length >= 2 Then
                                                    'tidarr = tids.Split("-")
                                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                                ElseIf tids = "0" Then
                                                    pnlFields.Visible = False
                                                    btnActEdit.Visible = False
                                                    updMain.Update()
                                                    xwhr = ""
                                                End If
                                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                Dim AutoFilter As String = dtfld1.Rows(j).Item("AutoFilter").ToString()
                                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                                If AutoFilter.Length > 0 Then
                                                    If arr(0).ToUpper() = "CHILD" Then
                                                        If AutoFilter.ToUpper = "DOCID" Then
                                                            str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                                        Else
                                                            str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                                        End If
                                                    ElseIf arr(0).ToUpper() <> "STATIC" Then

                                                        str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                    Else
                                                        str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & Session("EID") & " "
                                                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                    End If
                                                End If

                                                Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                                Dim dss As New DataSet
                                                If str.Length > 0 Then
                                                    oda.SelectCommand.CommandText = str
                                                    oda.Fill(dss, "FV")
                                                    Dim isAddJquery As Integer = 0
                                                    ddl.Items.Add("Select")
                                                    ddl.Items(0).Value = "0"
                                                    For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                        ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0).ToString())
                                                        Dim lookddlVal As String = dss.Tables("FV").Rows(J1).Item(1).ToString()
                                                        ddl.Items(J1 + 1).Value = lookddlVal
                                                    Next
                                                    oda.Dispose()
                                                    dss.Dispose()
                                                    'prashant_2_7

                                                    Dim lookupvalue As String = dtfld1.Rows(j).Item("lookupvalue").ToString()
                                                    Dim multilookup As String = dtfld1.Rows(j).Item("multilookUpVal").ToString()
                                                    Dim ddlmultilookup As String = dtfld1.Rows(j).Item("ddlmultilookUpVal").ToString()

                                                    If lookupvalue.Length > 0 Or multilookup.Length > 0 Or ddlmultilookup.Length > 0 Then
                                                        ddl.AutoPostBack = True
                                                        AddHandler ddl.TextChanged, AddressOf GridDdl_TextChanged
                                                    End If

                                                    If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                        ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                                    End If
                                                    If ViewState("chkadd") = 1 Then
                                                        j = j + 1
                                                    End If

                                                    If ddl.Items.FindByText(row.Cells(j).Text) IsNot Nothing Then
                                                        'ddl.Items.FindByText(row.Cells(j).Text).Selected = True
                                                        ddl.SelectedValue = ddl.Items.FindByText(row.Cells(j).Text).Value
                                                    End If

                                                    row.Cells(j).Controls.Add(ddl)

                                                    If isAddJquery = 1 Then
                                                        Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                                    End If
                                                End If
                                                con.Dispose()
                                                oda.Dispose()
                                                dss.Dispose()
                                            ElseIf UCase(dropdowntype) = "SESSION VALUED" Then

                                            End If
                                        End If
                                    Next
                                End If
                            End If


                        ElseIf ftype.ToUpper() = "CHECKBOX LIST" Then
                            Dim CHKlIST As New CheckBoxList()
                            Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                            dynmdiv.ID = "div_" & FldID
                            Dim ddlText As String = dtfld1.Rows(j).Item("dropdown").ToString()
                            CHKlIST.ID = "fld" & FldID & "_" & row.RowIndex
                            If dtfld1.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                Dim arr = ddlText.Split(",")
                                For ii As Integer = 0 To arr.Count - 1
                                    CHKlIST.Items.Add(arr(ii).ToUpper())
                                Next

                            ElseIf dtfld1.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                Dim arr = ddlText.Split("-")
                                Dim TID As String = "TID"
                                Dim TABLENAME As String = ""
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_MASTER"
                                ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                    TABLENAME = "MMM_MST_DOC"
                                ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                    TABLENAME = "MMM_MST_DOC_ITEM"
                                ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                    If arr(1).ToString.ToUpper = "USER" Then
                                        TABLENAME = "MMM_MST_USER"
                                        TID = "UID"
                                    ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                        TABLENAME = "MMM_MST_LOCATION"
                                        TID = "LOCID"
                                    End If
                                End If
                                Dim lookUpqry As String = ""
                                Dim str As String = ""
                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                If arr(0).ToUpper() = "CHILD" Then
                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M  WITH (NOLOCK) WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                ElseIf arr(0).ToUpper() <> "STATIC" Then
                                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                Else
                                    If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                        str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) "
                                    Else
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M  WITH (NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                    End If
                                End If
                                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                Dim con As SqlConnection = New SqlConnection(conStr)
                                Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                                oda = New SqlDataAdapter("", con)
                                Dim dss As New DataSet
                                oda.SelectCommand.CommandText = str
                                oda.Fill(dss, "FV")
                                For JJ As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                    CHKlIST.Items.Add(dss.Tables("FV").Rows(JJ).Item(0))
                                    CHKlIST.Items(JJ).Value = dss.Tables("FV").Rows(JJ).Item(1)
                                Next
                                oda.Dispose()
                                dss.Dispose()
                            End If

                            dynmdiv.Style.Add(HtmlTextWriterStyle.Width, "200px")
                            dynmdiv.Style.Add(HtmlTextWriterStyle.Height, "100px")
                            dynmdiv.Style.Add(HtmlTextWriterStyle.Overflow, "Scroll")
                            dynmdiv.Controls.Add(CHKlIST)

                            Dim txt As String = row.Cells(j).Text


                            If txt.Trim = "&nbsp;" Or txt.Trim = "" Then
                                Dim arr = txt.Split(",")
                                For i As Integer = 0 To arr.Length - 1
                                    If Not IsNothing(CHKlIST.Items.FindByValue(arr(i))) Then
                                        CHKlIST.Items.FindByValue(arr(i)).Selected = True
                                    End If
                                Next
                            End If
                            row.Cells(j).Controls.Add(dynmdiv)

                        ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
                            Dim txtBox As New FileUpload

                            Dim txtBox1 As New HiddenField

                            Dim lbl1 As New Label
                            lbl1.ID = "lblf_" & FldID
                            lbl1.Text = ""
                            lbl1.ClientIDMode = ClientIDMode.Static

                            txtBox1.ID = "hdn_" & FldID
                            txtBox1.Value = ""
                            txtBox1.ClientIDMode = ClientIDMode.Static
                            txtBox.Attributes.Add("onchange", "UtilJs.UploadFile1(this,'" & txtBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")

                            Dim hdnflag As New HiddenField
                            hdnflag.ID = "hdnf_" & FldID
                            hdnflag.Value = "0"

                            'txtBox.Visible = False
                            txtBox.ID = "fld_" & FldID & "_" & row.RowIndex
                            txtBox.CssClass = "txtBox"

                            txtBox.Width = 180


                        End If

                    Next
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub
    'Protected Sub ShowApprove(ByVal sender As Object, ByVal e As System.EventArgs)
    '    Dim pid As Integer = RetDocId(Session("EID"))
    '    ' No Value in Session just fill the Edit Form and Show two button
    '    'two methods.. either show data from Grid or Show data from Database.
    '    lblTabApprove.Text = ""
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen", con)
    '    oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '    oda.SelectCommand.Parameters.AddWithValue("docid", pid)
    '    oda.SelectCommand.Parameters.AddWithValue("subevent", "APPROVAL")
    '    Dim ds As New DataSet
    '    oda.Fill(ds, "fields")
    '    If ds.Tables("fields").Rows.Count > 0 Then
    '        'this is passes to date type variables
    '        Session("Document") = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
    '    End If
    '    Session("FIELDS") = ds.Tables("fields")
    '    Session("ACTION") = "APPROVAL"
    '    pnlApprove.Width = 500
    '    pnlApprove.Height = 10

    '    ''Clear controls on Panel Reject 
    '    pnlFieldsRej.Controls.Clear()
    '    btnReject_ModalPopupExtender.Hide()

    '    pnlApprove.Controls.Clear()

    '    If ds.Tables("fields").Rows.Count > 0 Then
    '        '           lblHeaderPopUp.Text = ds.Tables("fields").Rows(0).Item("Formcaption").ToString()
    '        Dim ob As New DynamicForm()
    '        ob.CreateControlsOnPanel(ds.Tables("fields"), pnlApprove, updatePanelApprove, btnApprove, 1)
    '        Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
    '        If ROW1.Length > 0 Then
    '            For i As Integer = 0 To ROW1.Length - 1
    '                Dim DDL As DropDownList = TryCast(pnlApprove.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
    '                DDL.AutoPostBack = True
    '                AddHandler DDL.TextChanged, AddressOf bindvalue2
    '            Next
    '        End If
    '        ob.FillControlsOnPanel(ds.Tables("fields"), pnlApprove, "DOCUMENT", pid)
    '    End If
    '    con.Close()
    '    oda.Dispose()
    '    con.Dispose()
    '    Dim xx As Integer = Val(pnlApprove.Width.ToString())
    '    Dim ww As Integer = Val(pnlApprove.Height.ToString())
    '    pnlPopupApprove.Width = xx + 20
    '    pnlPopupApprove.Height = ww + 70 'panel height + button height + header height
    '    Me.updatePanelApprove.Update()
    '    Me.btnApprove_ModalPopupExtender.Show()
    'End Sub



    Protected Sub editBtnApprove(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnApprove.Click
        Dim dt As DataTable
        dt = CType(Session("FIELDS"), DataTable)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        con.Open()
        Dim trans As SqlTransaction = Nothing
        trans = con.BeginTransaction()
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        oda.SelectCommand.Transaction = trans
        Dim strfld As String = ""
        Dim insertSql As String = ""
        Try
            If dt.Rows.Count = 0 Then
            Else
                For k As Integer = 0 To dt.Rows.Count - 1
                    strfld &= dt.Rows(k).Item("fieldmapping") & ","
                Next
                strfld = Left(strfld, strfld.Length - 1)
                oda.SelectCommand.CommandType = CommandType.Text

                oda.SelectCommand.CommandText = "select " & strfld & " from MMM_MST_DOC   where eid=" & Session("EID") & " and tid=" & RetDocId(Session("EID")) & " "
                Dim flddt As New DataTable
                oda.Fill(flddt)
                Dim strFldVal As String = ""
                For j As Integer = 0 To flddt.Columns.Count - 1
                    strFldVal &= "'" & flddt.Rows(0).Item(j).ToString & "',"
                Next
                strFldVal = Left(strFldVal, strFldVal.Length - 1)

                '''' prev disabled becoz this is moved from here to approve procedure below by sunil on 07-oct-13 
                ' oda.SelectCommand.CommandText = "Insert Into MMM_MST_HISTORY(DOCID,documenttype,EID,Tablename,uid,uaction,adate," & strfld & ")Values(" & RetDocId(Session("EID")) & ",'" & Session("docType") & "'," & Session("EID") & " ,'MMM_MST_DOC'," & Session("UID") & ",'ACTION',GETDATE()," & strFldVal & ")"
                ' oda.SelectCommand.ExecuteNonQuery()
                ' oda.Dispose()
                insertSql = "Insert Into MMM_MST_HISTORY(DOCID,documenttype,EID,Tablename,uid,uaction,adate," & strfld & ")Values(" & RetDocId(Session("EID")) & ",'" & Session("docType") & "'," & Session("EID") & " ,'MMM_MST_DOC'," & Session("UID") & ",'ACTION',GETDATE()," & strFldVal & ")"

            End If

            Dim Updateqry As String = "UPDATE MMM_MST_DOC SET "
            Dim ob As New DynamicForm
            Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, pnlFields, RetDocId(Session("EID")))
            If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
                lblTabApprove.Text = retMsg
                updatePanelApprove.Update()
                btnApprove_ModalPopupExtender.Show()
                Exit Sub
            Else
                If (Not IsNothing(Session("ActionForm"))) Then

                    Dim strs As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")
                    For i As Integer = 0 To strs.Length - 1
                        If String.IsNullOrEmpty(strs(i)) Then
                            Continue For
                        End If
                        Dim childvalue As String() = strs(i).ToString().Split(".")
                        Dim conStrsS As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                        Dim consS As New SqlConnection(conStrsS)
                        Dim dasS As SqlDataAdapter = New SqlDataAdapter("", consS)
                        Dim odaN As SqlDataAdapter = New SqlDataAdapter("", consS)
                        Dim dtChildS As New DataTable()
                        Dim create As Boolean = False, delete As Boolean = False, Edit As Boolean = False

                        dasS.SelectCommand.CommandText = "select fieldid,displayname,fieldtype from mmm_mst_fields  WITH (NOLOCK) where documenttype='" & strs(i).ToString() & "' and eid=" & Session("EID")
                        dasS.Fill(dtChildS)
                        Dim gv As GridView = DirectCast(pnlApprove.FindControl("GRD_" & strs(i).ToString().Replace(" ", "__").Replace(".", "_")), GridView)

                        Dim childvalidation As String = ""

                        childvalidation = ValidatingActionFormChildItem(strs(i).ToString())

                        If childvalidation.Length > 5 Then
                            lblTabApprove.Text = childvalidation
                            lblTabApprove.Visible = True
                            trans.Rollback()
                            updatePanelApprove.Update()
                            btnApprove_ModalPopupExtender.Show()
                            Exit Sub
                        Else
                            lblTabApprove.Text = ""
                            lblTabApprove.Visible = False
                        End If
                        'SavingActionChildItem(strs(i).ToString(), Convert.ToInt32(RetDocId(Session("EID"))), con, trans)

                    Next 'Child Items loop End
                End If

                Dim RDocType As String = "NO Rule configured"
                If (dt.Rows.Count > 0) Then
                    RDocType = dt.Rows(0).Item("documenttype").ToString()
                End If
                'Code For Rule Engine By Ajeet Kumar Dated :30-july-2014
                Dim dv As DataView = dt.DefaultView
                dv.RowFilter = "IsActive=1"
                Dim theFields As DataTable = dv.ToTable
                Dim lstData As New List(Of UserData)
                Dim obj As New DynamicForm()
                'Creating collection for rule engine execution
                lstData = obj.CreateCollection(pnlFields, dt)
                'Setting it to session for getting it's value for child Item validation
                'Creating object of rule response
                Dim ObjRet As New RuleResponse()
                Dim ObjRule As New RuleEngin(Session("EID"), RDocType, "CREATED", "SUBMIT")
                'Uncomment
                Dim dsrule As DataSet = ObjRule.GetRules()
                Dim dtrule As New DataTable
                dtrule = dsrule.Tables(1)
                Dim errorlist As New ArrayList
                For Each dr As DataRow In dsrule.Tables(0).Rows
                    ObjRet = ObjRule.ExecuteRule(lstData, Nothing, False, RDocType, dr, dtrule)
                    If ObjRet.Success = False Then
                        errorlist.Add(Convert.ToString(ObjRet.ErrorMessage))
                    End If
                Next
                If errorlist.Count > 0 Then
                    lblTabApprove.Text = String.Join(",", errorlist.ToArray())
                    updatePanelApprove.Update()
                    btnApprove_ModalPopupExtender.Show()
                    Exit Sub
                    'Initialising rule Object
                    'Uncomment
                    'ObjRet = ObjRule.ExecuteRule(lstData, Nothing, False)
                    'If ObjRet.Success = False Then
                    '    lblTabApprove.Text = ObjRet.Message

                Else
                    retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
                    If insertSql.Length > 1 Then
                        retMsg = insertSql & ";" & retMsg
                    End If

                    '' code to update action screen fields in main document. 
                    '' written by sunil on 25-mar-14 for document user selection in movement ( HCL)
                    If retMsg.Length > 45 Then
                        oda.SelectCommand.CommandType = CommandType.Text
                        oda.SelectCommand.CommandText = retMsg
                        If con.State <> ConnectionState.Open Then con.Open()
                        Dim R As String = oda.SelectCommand.ExecuteNonQuery().ToString
                        ' ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Action completed successfully!');", True)
                    End If
                    '' code to update action screen fields in main document. 

                    '' new for checking priority field and setting doc's static field to 1 if found - by sunil on 28_apr_14
                    Dim docID As String = RetDocId(Session("EID"))
                    Dim df As New DynamicForm()
                    Call df.ChecknUpdatePriorityFieldvaluesT(docID, con, trans)
                    '' new for checking priority field and setting doc's static field to 1 if found - by sunil on 28_apr_14

                    '' changed from here by sunil on 07-oct-13  ' then again on 06_July_15 by sp
                    Dim ob1 As New DMSUtil()
                    Dim res As String
                    Dim sretMsgArr() As String

                    res = ob1.GetNextUserFromRolematrixT(Val(RetDocId(Session("EID"))), Val(Session("EID").ToString()), Val(Session("UID").ToString()), retMsg, Val(Session("UID").ToString()), con, trans)
                    sretMsgArr = res.Split(":")
                    '''' check if no skip setting and if not allowed then don't move doc and show msg to user

                    If res = "mismatch, try again later" Then
                        lblTabApprove.Text = "Temporarily unable to approve document, Try again later!"
                        trans.Rollback()
                        Exit Sub
                    End If

                    If sretMsgArr(0).ToUpper() = "NO SKIP" Then
                        lblTabApprove.Text = "Next Approvar/User not found, please contact Admin"
                        trans.Rollback()
                        Exit Sub
                    End If

                    If res = "User Not Authorised" Then
                        lblTabApprove.Text = "You are not authorised to Approve this document"
                        trans.Rollback()
                        Exit Sub
                    End If

                    If res = "Can not Approve, Reached to ARCHIVE" Then
                        lblTabApprove.Text = "Can not Approve, Reached to ARCHIVE"
                        trans.Rollback()
                        Exit Sub
                    End If

                    If res = "Current and Next Status cannot be same" Then
                        lblTabApprove.Text = "Current and Next Status cannot be same"
                        trans.Rollback()
                        Exit Sub
                    End If

                    '' changed from here by sunil on 07-oct-13  ' then again on 06_July_15 by sp

                    Session("ACTION") = Nothing
                    Session("FIELDS") = Nothing
                    'Dim sretMsgArr() As String = res.Split(":")

                    ''Update Kicking Fields
                    Dim strQry As String = ""
                    Dim rw() As DataRow = dt.Select("kc_value is not null and kc_status is not null")
                    For i As Integer = 0 To rw.Length - 1
                        If rw(i).Item("KC_STATUS").ToString().ToUpper = sretMsgArr(0).ToUpper() Then
                            Dim ODF As New DynamicForm()
                            Dim TXTBOX As TextBox = TryCast(pnlApprove.FindControl("fld" & rw(i).Item("fieldid").ToString()), TextBox)
                            strQry &= ODF.UPDATEKICKING(rw(i).Item("KC_VALUE").ToString(), TXTBOX.Text, pnlApprove)
                            strQry &= ";"
                        End If
                    Next
                    If strQry.Length > 1 Then
                        strQry = strQry.Substring(0, strQry.Length - 1)
                        oda.SelectCommand.CommandType = CommandType.Text
                        oda.SelectCommand.CommandText = strQry
                        oda.SelectCommand.ExecuteScalar()
                    End If
                    dt.Dispose()
                    oda.Dispose()
                    If sretMsgArr(0) = "ARCHIVE" Then
                        Dim Op As New Exportdata()
                        Op.PushdataT(Val(RetDocId(Session("EID"))), sretMsgArr(1), Session("EID"), con, trans)
                    Else
                        ' below lines moved from here to above for mail sending on archive status 
                        'Dim ob1 As New DMSUtil()
                        'ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "APPROVE")
                    End If
                    Try
                        Trigger.ExecuteTriggerT(Session("ActionForm"), Session("EID"), RetDocId(Session("EID")), con, trans, TriggerNature:="Create")
                    Catch ex As Exception
                        Throw
                    End Try

                    If (Not IsNothing(Session("ActionForm"))) Then

                        Dim strs As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")
                        For i As Integer = 0 To strs.Length - 1
                            If String.IsNullOrEmpty(strs(i)) Then
                                Continue For
                            End If
                            SavingActionChildItem(strs(i).ToString(), Convert.ToInt32(RetDocId(Session("EID"))), con, trans)
                        Next
                    End If
                    trans.Commit()
                    If btnDocApprove.Text = "SUBMIT" Then
                        Try
                            ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID"), "", "MODIFIED")
                        Catch ex As Exception
                        End Try
                    Else
                        Try
                            ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "APPROVE")
                        Catch ex As Exception
                        End Try
                    End If

                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Action completed successfully!');", True)

                    FillMainPage()
                    updMain.Update()
                    btnApprove_ModalPopupExtender.Hide()
                End If
            End If
            dt.Dispose()
            oda.Dispose()

            ' code clear panel
            ob.CLEARDYNAMICFIELDS(pnlFields)
            updMain.Update()
            pnlApprove.Controls.Clear()
            updatePanelApprove.Update()
            '

        Catch ex As Exception
            trans.Rollback()
            Throw
            ' ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Error occured at server!');", True)
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
                trans.Dispose()
            End If
        End Try

    End Sub



    '' prev b4 new rolematrix implementation on 27-Aug-13 by Sunil

    '' bkup on 30_july_15 

    'Protected Sub editBtnApprove(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnApprove.Click
    '    Dim dt As DataTable
    '    dt = CType(Session("FIELDS"), DataTable)
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    con.Open()
    '    Dim trans As SqlTransaction = Nothing
    '    trans = con.BeginTransaction()
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
    '    oda.SelectCommand.Transaction = trans
    '    Dim strfld As String = ""
    '    Dim insertSql As String = ""
    '    Try
    '        If dt.Rows.Count = 0 Then
    '        Else
    '            For k As Integer = 0 To dt.Rows.Count - 1
    '                strfld &= dt.Rows(k).Item("fieldmapping") & ","
    '            Next
    '            strfld = Left(strfld, strfld.Length - 1)
    '            oda.SelectCommand.CommandType = CommandType.Text
    '            oda.SelectCommand.CommandText = "select " & strfld & " from MMM_MST_DOC where eid=" & Session("EID") & " and tid=" & RetDocId(Session("EID")) & " "
    '            Dim flddt As New DataTable
    '            oda.Fill(flddt)
    '            Dim strFldVal As String = ""
    '            For j As Integer = 0 To flddt.Columns.Count - 1
    '                strFldVal &= "'" & flddt.Rows(0).Item(j).ToString & "',"
    '            Next
    '            strFldVal = Left(strFldVal, strFldVal.Length - 1)

    '            '''' prev disabled becoz this is moved from here to approve procedure below by sunil on 07-oct-13 
    '            ' oda.SelectCommand.CommandText = "Insert Into MMM_MST_HISTORY(DOCID,documenttype,EID,Tablename,uid,uaction,adate," & strfld & ")Values(" & RetDocId(Session("EID")) & ",'" & Session("docType") & "'," & Session("EID") & " ,'MMM_MST_DOC'," & Session("UID") & ",'ACTION',GETDATE()," & strFldVal & ")"
    '            ' oda.SelectCommand.ExecuteNonQuery()
    '            ' oda.Dispose()
    '            insertSql = "Insert Into MMM_MST_HISTORY(DOCID,documenttype,EID,Tablename,uid,uaction,adate," & strfld & ")Values(" & RetDocId(Session("EID")) & ",'" & Session("docType") & "'," & Session("EID") & " ,'MMM_MST_DOC'," & Session("UID") & ",'ACTION',GETDATE()," & strFldVal & ")"

    '        End If

    '        Dim Updateqry As String = "UPDATE MMM_MST_DOC SET "
    '        Dim ob As New DynamicForm
    '        Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, pnlFields, RetDocId(Session("EID")))
    '        If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
    '            lblTabApprove.Text = retMsg
    '            updatePanelApprove.Update()
    '            btnApprove_ModalPopupExtender.Show()
    '            Exit Sub
    '        Else
    '            Dim RDocType As String = "NO Rule configured"
    '            If (dt.Rows.Count > 0) Then
    '                RDocType = dt.Rows(0).Item("documenttype").ToString()
    '            End If
    '            'Code For Rule Engine By Ajeet Kumar Dated :30-july-2014
    '            Dim dv As DataView = dt.DefaultView
    '            dv.RowFilter = "IsActive=1"
    '            Dim theFields As DataTable = dv.ToTable
    '            Dim lstData As New List(Of UserData)
    '            Dim obj As New DynamicForm()
    '            'Creating collection for rule engine execution
    '            lstData = obj.CreateCollection(pnlFields, theFields)
    '            'Setting it to session for getting it's value for child Item validation
    '            'Creating object of rule response
    '            Dim ObjRet As New RuleResponse()
    '            'Initialising rule Object
    '            Dim ObjRule As New RuleEngin(Session("EID"), RDocType, "CREATED", "SUBMIT")
    '            'Uncomment
    '            ObjRet = ObjRule.ExecuteRule(lstData, Nothing, False)
    '            If ObjRet.Success = False Then
    '                lblTabApprove.Text = ObjRet.Message
    '                updatePanelApprove.Update()
    '            Else
    '                retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
    '                If insertSql.Length > 1 Then
    '                    retMsg = insertSql & ";" & retMsg
    '                End If

    '                '' code to update action screen fields in main document. 
    '                '' written by sunil on 25-mar-14 for document user selection in movement ( HCL)
    '                If retMsg.Length > 45 Then
    '                    oda.SelectCommand.CommandType = CommandType.Text
    '                    oda.SelectCommand.CommandText = retMsg
    '                    If con.State <> ConnectionState.Open Then con.Open()
    '                    Dim R As String = oda.SelectCommand.ExecuteNonQuery().ToString
    '                    ' ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Action completed successfully!');", True)
    '                End If
    '                '' code to update action screen fields in main document. 

    '                '' new for checking priority field and setting doc's static field to 1 if found - by sunil on 28_apr_14
    '                Dim docID As String = RetDocId(Session("EID"))
    '                Dim df As New DynamicForm()
    '                Call df.ChecknUpdatePriorityFieldvaluesT(docID, con, trans)
    '                '' new for checking priority field and setting doc's static field to 1 if found - by sunil on 28_apr_14

    '                '' changed from here by sunil on 07-oct-13  ' then again on 06_July_15 by sp
    '                Dim ob1 As New DMSUtil()
    '                Dim res As String
    '                Dim sretMsgArr() As String

    '                res = ob1.GetNextUserFromRolematrixT(Val(RetDocId(Session("EID"))), Val(Session("EID").ToString()), Val(Session("UID").ToString()), retMsg, Val(Session("UID").ToString()), con, trans)
    '                sretMsgArr = res.Split(":")
    '                '''' check if no skip setting and if not allowed then don't move doc and show msg to user

    '                If res = "mismatch, try again later" Then
    '                    lblTabApprove.Text = "Temporarily unable to approve document, Try again later!"
    '                    trans.Rollback()
    '                    Exit Sub
    '                End If

    '                If sretMsgArr(0).ToUpper() = "NO SKIP" Then
    '                    lblTabApprove.Text = "Next Approvar/User not found, please contact Admin"
    '                    trans.Rollback()
    '                    Exit Sub
    '                End If

    '                If res = "User Not Authorised" Then
    '                    lblTabApprove.Text = "You are not authorised to Approve this document"
    '                    trans.Rollback()
    '                    Exit Sub
    '                End If

    '                If res = "Can not Approve, Reached to ARCHIVE" Then
    '                    lblTabApprove.Text = "Can not Approve, Reached to ARCHIVE"
    '                    trans.Rollback()
    '                    Exit Sub
    '                End If

    '                If res = "Current and Next Status cannot be same" Then
    '                    lblTabApprove.Text = "Current and Next Status cannot be same"
    '                    trans.Rollback()
    '                    Exit Sub
    '                End If

    '                '' changed from here by sunil on 07-oct-13  ' then again on 06_July_15 by sp

    '                Session("ACTION") = Nothing
    '                Session("FIELDS") = Nothing
    '                'Dim sretMsgArr() As String = res.Split(":")

    '                ''Update Kicking Fields
    '                Dim strQry As String = ""
    '                Dim rw() As DataRow = dt.Select("kc_value is not null and kc_status is not null")
    '                For i As Integer = 0 To rw.Length - 1
    '                    If rw(i).Item("KC_STATUS").ToString().ToUpper = sretMsgArr(0).ToUpper() Then
    '                        Dim ODF As New DynamicForm()
    '                        Dim TXTBOX As TextBox = TryCast(pnlApprove.FindControl("fld" & rw(i).Item("fieldid").ToString()), TextBox)
    '                        strQry &= ODF.UPDATEKICKING(rw(i).Item("KC_VALUE").ToString(), TXTBOX.Text, pnlApprove)
    '                        strQry &= ";"
    '                    End If
    '                Next
    '                If strQry.Length > 1 Then
    '                    strQry = strQry.Substring(0, strQry.Length - 1)
    '                    oda.SelectCommand.CommandType = CommandType.Text
    '                    oda.SelectCommand.CommandText = strQry
    '                    oda.SelectCommand.ExecuteScalar()
    '                End If
    '                dt.Dispose()
    '                oda.Dispose()
    '                If sretMsgArr(0) = "ARCHIVE" Then
    '                    Dim Op As New Exportdata()
    '                    Op.PushdataT(Val(RetDocId(Session("EID"))), sretMsgArr(1), Session("EID"), con, trans)
    '                Else
    '                    ' below lines moved from here to above for mail sending on archive status 
    '                    'Dim ob1 As New DMSUtil()
    '                    'ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "APPROVE")
    '                End If
    '                Try
    '                    Trigger.ExecuteTriggerT(Session("ActionForm"), Session("EID"), RetDocId(Session("EID")), con, trans, TriggerNature:="Create")
    '                Catch ex As Exception
    '                    Throw
    '                End Try


    '                If (Not IsNothing(Session("ActionForm"))) Then

    '                    Dim strs As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")
    '                    For i As Integer = 0 To strs.Length - 1
    '                        If String.IsNullOrEmpty(strs(i)) Then
    '                            Continue For
    '                        End If
    '                        Dim childvalue As String() = strs(i).ToString().Split(".")
    '                        Dim conStrsS As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '                        Dim consS As New SqlConnection(conStrsS)
    '                        Dim dasS As SqlDataAdapter = New SqlDataAdapter("", consS)
    '                        Dim odaN As SqlDataAdapter = New SqlDataAdapter("", consS)
    '                        Dim dtChildS As New DataTable()
    '                        Dim create As Boolean = False, delete As Boolean = False, Edit As Boolean = False
    '                        dasS.SelectCommand.CommandText = "select fieldid,displayname,fieldtype from mmm_mst_fields where documenttype='" & strs(i).ToString() & "' and eid=" & Session("EID")
    '                        dasS.Fill(dtChildS)
    '                        Dim gv As GridView = DirectCast(pnlApprove.FindControl("GRD_" & strs(i).ToString().Replace(" ", "__").Replace(".", "_")), GridView)

    '                        Dim childvalidation As String = ""

    '                        childvalidation = ValidatingActionFormChildItem(strs(i).ToString())

    '                        If childvalidation.Length > 5 Then
    '                            lblTabApprove.Text = childvalidation
    '                            lblTabApprove.Visible = True
    '                            trans.Rollback()
    '                            Exit Sub
    '                        Else
    '                            lblTabApprove.Text = ""
    '                            lblTabApprove.Visible = False
    '                        End If
    '                        SavingActionChildItem(strs(i).ToString(), Convert.ToInt32(RetDocId(Session("EID"))), con, trans)

    '                    Next 'Child Items loop End


    '                End If


    '                trans.Commit()
    '                If btnDocApprove.Text = "SUBMIT" Then
    '                    Try
    '                        ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID"), "", "MODIFIED")
    '                    Catch ex As Exception
    '                    End Try
    '                Else
    '                    Try
    '                        ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "APPROVE")
    '                    Catch ex As Exception
    '                    End Try
    '                End If

    '                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Action completed successfully!');", True)

    '                FillMainPage()
    '                updMain.Update()
    '                btnApprove_ModalPopupExtender.Hide()
    '            End If
    '        End If
    '        dt.Dispose()
    '        oda.Dispose()

    '        ' code clear panel
    '        ob.CLEARDYNAMICFIELDS(pnlFields)
    '        updMain.Update()
    '        pnlApprove.Controls.Clear()
    '        updatePanelApprove.Update()
    '        '

    '    Catch ex As Exception
    '        trans.Rollback()
    '        Throw
    '        ' ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Error occured at server!');", True)
    '    Finally
    '        If Not con Is Nothing Then
    '            con.Close()
    '            con.Dispose()
    '            trans.Dispose()
    '        End If
    '    End Try

    'End Sub



    'Protected Sub editBtnApprove(ByVal sender As Object, ByVal e As System.EventArgs)
    '    Dim dt As DataTable
    '    dt = CType(Session("FIELDS"), DataTable)
    '    Dim Updateqry As String = "UPDATE MMM_MST_DOC SET "
    '    Dim ob As New DynamicForm
    '    Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, pnlFields)
    '    If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
    '        lblTabApprove.Text = retMsg
    '    Else
    '        retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
    '        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '        Dim con As SqlConnection = New SqlConnection(conStr)
    '        '' disabled prev code starts here
    '        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
    '        'oda.SelectCommand.CommandType = CommandType.StoredProcedure
    '        'oda.SelectCommand.Parameters.AddWithValue("TID", Val(RetDocId(Session("EID"))))
    '        'oda.SelectCommand.Parameters.AddWithValue("qry", retMsg)
    '        'oda.SelectCommand.Parameters.AddWithValue("auid", Val(Session("UID").ToString()))
    '        'Dim dtt As New DataTable
    '        'oda.Fill(dtt)

    '        'Dim sRetMsg As String = dtt.Rows(0).Item(0).ToString()
    '        'If sRetMsg = "User Not Authorised" Then
    '        '    lblTabApprove.Text = "You Not Authorised TO Approve This Document"
    '        '    Exit Sub
    '        'End If
    '        '' disabled prev code ends 
    '        Dim ob1 As New DMSUtil()
    '        Dim res As String
    '        res = ob1.GetNextUserFromRolematrix(Val(RetDocId(Session("EID"))), Val(Session("EID").ToString()), Val(Session("UID").ToString()), "", Val(Session("UID").ToString()))

    '        Session("ACTION") = Nothing
    '        Session("FIELDS") = Nothing


    '        Dim sretMsgArr() As String = res.Split(":")

    '        ''Update Kicking Fields
    '        Dim strQry As String = ""
    '        Dim rw() As DataRow = dt.Select("kc_value is not null and kc_status is not null")
    '        For i As Integer = 0 To rw.Length - 1
    '            If rw(i).Item("KC_STATUS").ToString().ToUpper = sretMsgArr(0).ToUpper() Then
    '                Dim ODF As New DynamicForm()
    '                Dim TXTBOX As TextBox = TryCast(pnlApprove.FindControl("fld" & rw(i).Item("fieldid").ToString()), TextBox)
    '                strQry &= ODF.UPDATEKICKING(rw(i).Item("KC_VALUE").ToString(), TXTBOX.Text, pnlApprove)
    '                strQry &= ";"
    '            End If
    '        Next

    '        If strQry.Length > 1 Then
    '            strQry = strQry.Substring(0, strQry.Length - 1)
    '            oda.SelectCommand.CommandType = CommandType.Text
    '            oda.SelectCommand.CommandText = strQry
    '            If con.State <> ConnectionState.Open Then
    '                con.Open()
    '            End If
    '            oda.SelectCommand.ExecuteScalar()
    '        End If
    '        con.Close()
    '        oda.Dispose()
    '        con.Dispose()

    '        ' below lines shifted here for mail sending on archive status 
    '        'Dim ob1 As New DMSUtil()
    '        ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "APPROVE")

    '        If sretMsgArr(0) = "ARCHIVE" Then
    '            Dim Op As New Exportdata()
    '            Op.Pushdata(Val(RetDocId(Session("EID"))), sretMsgArr(1))
    '        Else
    '            ' below lines moved from here to above for mail sending on archive status 
    '            'Dim ob1 As New DMSUtil()
    '            'ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "APPROVE")
    '        End If
    '        FillMainPage()
    '        updMain.Update()
    '        btnApprove_ModalPopupExtender.Hide()
    '    End If
    'End Sub


    'Protected Sub editBtnApprove(ByVal sender As Object, ByVal e As System.EventArgs)
    '    Dim dt As DataTable
    '    dt = CType(Session("FIELDS"), DataTable)
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)
    '    Dim strfld As String = ""
    '    For k As Integer = 0 To dt.Rows.Count - 1
    '        strfld &= dt.Rows(k).Item("fieldmapping") & ","
    '    Next
    '    strfld = Left(strfld, strfld.Length - 1)
    '    Dim oda As SqlDataAdapter = New SqlDataAdapter("select " & strfld & " from MMM_MST_DOC where eid=" & Session("EID") & " and tid=" & RetDocId(Session("EID")) & " ", con)
    '    Dim flddt As New DataTable
    '    oda.Fill(flddt)
    '    Dim strFldVal As String = ""
    '    For j As Integer = 0 To flddt.Columns.Count - 1
    '        strFldVal &= "'" & flddt.Rows(0).Item(j).ToString & "',"
    '    Next
    '    strFldVal = Left(strFldVal, strFldVal.Length - 1)
    '    Dim Updateqry As String = "UPDATE MMM_MST_DOC SET"
    '    Dim ob As New DynamicForm
    '    'code by balmiki
    '    Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, pnlFields)
    '    If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
    '        lblTabApprove.Text = retMsg
    '    Else

    '        retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
    '        retMsg &= "; Insert Into MMM_MST_HISTORY(DOCID,documenttype,EID,Tablename,uid,uaction,adate," & strfld & ")Values(" & RetDocId(Session("EID")) & ",'" & ViewState("docType") & "'," & Session("EID") & " ,'MMM_MST_DOC'," & Session("UID") & ",'ACTION',GETDATE()," & strFldVal & ") "
    '        'retMsg = retMsg & " " ; INSERT INTO MMM_MST_HISTORY(DOCID,documenttype,", "Values(" & RetDocId(Session("EID")) & ",'" & ViewState("docType") & "',", dt, pnlFields)

    '        Dim oda1 As SqlDataAdapter = New SqlDataAdapter("NewApproveWorkFlow", con)
    '        oda1.SelectCommand.CommandType = CommandType.StoredProcedure
    '        oda1.SelectCommand.Parameters.AddWithValue("TID", Val(RetDocId(Session("EID"))))
    '        oda1.SelectCommand.Parameters.AddWithValue("qry", retMsg)
    '        oda1.SelectCommand.Parameters.AddWithValue("auid", Val(Session("UID").ToString()))
    '        Dim dtt As New DataTable
    '        oda1.Fill(dtt)

    '        Dim sRetMsg As String = dtt.Rows(0).Item(0).ToString()
    '        If sRetMsg = "User Not Authorised" Then
    '            lblTabApprove.Text = "You Not Authorised TO Approve This Document"
    '            Exit Sub
    '        End If

    '        Session("ACTION") = Nothing
    '        Session("FIELDS") = Nothing

    '        Dim sretMsgArr() As String = sRetMsg.Split(":")

    '        'Dim ob1 As New DMSUtil()
    '        'Dim res As String
    '        'res = ob1.GetNextUserFromRolematrix(Val(RetDocId(Session("EID"))), Val(Session("EID").ToString()), Val(Session("UID").ToString()), retMsg, Val(Session("UID").ToString()))
    '        'Session("ACTION") = Nothing
    '        'Session("FIELDS") = Nothing
    '        'Dim sretMsgArr() As String = res.Split(":")

    '        ''Update Kicking Fields
    '        Dim strQry As String = ""
    '        Dim rw() As DataRow = dt.Select("kc_value is not null and kc_status is not null")
    '        For i As Integer = 0 To rw.Length - 1
    '            If rw(i).Item("KC_STATUS").ToString().ToUpper = sretMsgArr(0).ToUpper() Then
    '                Dim ODF As New DynamicForm()
    '                Dim TXTBOX As TextBox = TryCast(pnlApprove.FindControl("fld" & rw(i).Item("fieldid").ToString()), TextBox)
    '                strQry &= ODF.UPDATEKICKING(rw(i).Item("KC_VALUE").ToString(), TXTBOX.Text, pnlApprove)
    '                strQry &= ";"
    '            End If
    '        Next

    '        If strQry.Length > 1 Then
    '            strQry = strQry.Substring(0, strQry.Length - 1)
    '            oda.SelectCommand.CommandType = CommandType.Text
    '            oda.SelectCommand.CommandText = strQry
    '            If con.State <> ConnectionState.Open Then
    '                con.Open()
    '            End If
    '            oda.SelectCommand.ExecuteScalar()
    '        End If
    '        con.Close()
    '        oda.Dispose()
    '        con.Dispose()
    '        ' below lines shifted here for mail sending on archive status 
    '        'Dim ob1 As New DMSUtil()

    '        Dim ob1 As New DMSUtil()
    '        ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "APPROVE")
    '        If sretMsgArr(0) = "ARCHIVE" Then
    '            Dim Op As New Exportdata()
    '            Op.Pushdata(Val(RetDocId(Session("EID"))), sretMsgArr(1))
    '        Else
    '            ' below lines moved from here to above for mail sending on archive status 
    '            'Dim ob1 As New DMSUtil()
    '            'ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "APPROVE")
    '        End If
    '        FillMainPage()
    '        updMain.Update()
    '        btnApprove_ModalPopupExtender.Hide()
    '    End If
    'End Sub

    Protected Sub ShowReconsider(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDocReject.Click 'Handles btnDocReject.Click
        Dim pid As Integer = Val(RetDocId(Session("EID")))
        ' No Value in Session just fill the Edit Form and Show two button
        'two methods.. either show data from Grid or Show data from Database.
        ViewState("pid") = pid
        lblTabRej.Text = ""
        lblRuleMsg3.Text = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("docid", pid)
        oda.SelectCommand.Parameters.AddWithValue("subevent", "REJECTION")
        Dim dt As New DataTable
        oda.Fill(dt)
        Session("FIELDS") = dt
        Session("ACTION") = "REJECTION"
        'Code By Ajeet For Trigger
        If dt.Rows.Count > 0 Then
            Session("ActionForm") = dt.Rows(0).Item("documenttype").ToString()
        Else
            Dim oda1 As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen1", con)
            oda1.SelectCommand.CommandType = CommandType.StoredProcedure
            oda1.SelectCommand.Parameters.Clear()
            oda1.SelectCommand.Parameters.AddWithValue("@docid", pid)
            oda1.SelectCommand.Parameters.AddWithValue("@subevent", "REJECTION")
            Dim ds1 As New DataSet
            oda1.Fill(ds1, "Action")
            If ds1.Tables("Action").Rows.Count > 0 Then
                Session("ActionForm") = Convert.ToString(ds1.Tables("Action").Rows(0).Item("documenttype"))
            End If
        End If
        'END'

        pnlFieldsRej.Width = 500
        pnlFieldsRej.Height = 10
        If dt.Rows.Count > 0 Then
            '            lblHeaderPopUp.Text = dt.Rows(0).Item("Formcaption").ToString()

            ''Clear and Hide the Existing Panel and ModalPoup
            pnlApprove.Controls.Clear()
            btnApprove_ModalPopupExtender.Hide()
            Dim ob As New DynamicForm()
            pnlFieldsRej.Controls.Clear()

            ob.CreateControlsOnPanel(dt, pnlFieldsRej, updatePanelReject, btnReject, 1)
            Dim xx As Integer = Val(pnlFieldsRej.Width.ToString())
            Dim ww As Integer = Val(pnlFieldsRej.Height.ToString())
            pnlPopupReject.Width = xx + 20
            pnlPopupReject.Height = ww + 70 'panel height + button height + header height

            Dim conF As New SqlConnection(ConfigurationManager.ConnectionStrings("conStr").ConnectionString)
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim odaField As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID   where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName ='" & Convert.ToString(Session("ActionForm")) & "' and eventname in(select documenttype from MMM_MST_DOC  WITH (NOLOCK) where eid=" & Session("EID") & " and tid=" & RetDocId(Session("EID")).ToString & ")   order by displayOrder", conF)
            Dim dtFileds As New DataTable()
            odaField.Fill(dtFileds)

            'Code For Rule Post back handler for  controls
            'Added By Himank Singh:09-September-2015
            AddHandlerOnControl(dtFileds, pnlPopupReject, lblRuleMsg3)


            Dim ROW1() As DataRow = dt.Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
            If ROW1.Length > 0 Then
                For i As Integer = 0 To ROW1.Length - 1
                    Dim DDL As DropDownList = TryCast(pnlFieldsRej.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                    DDL.AutoPostBack = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue1
                Next
            End If
            ob.FillControlsOnPanel(dt, pnlApprove, "DOCUMENT", pid)
        End If
        con.Close()
        oda.Dispose()
        con.Dispose()

        Me.updatePanelReject.Update()
        Me.btnReject_ModalPopupExtender.Show()
    End Sub

    Protected Sub ShowPermanentReject(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim pid As Integer = Val(RetDocId(Session("EID")))
        ViewState("pid") = pid
        lblMsgRule1.Text = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("docid", pid)
        oda.SelectCommand.Parameters.AddWithValue("subevent", "P_REJECTION")
        Dim dt As New DataTable
        oda.Fill(dt)
        Session("FIELDS") = dt
        Session("ACTION") = "P_REJECTION"

        PanelPerReject.Width = 500
        PanelPerReject.Height = 10
        If dt.Rows.Count > 0 Then
            Session("ActionForm") = dt.Rows(0).Item("documenttype").ToString()
            'lblHeaderPopUp.Text = dt.Rows(0).Item("Formcaption").ToString()
            'Clear and Hide the Existing Panel and ModalPoup
            pnlApprove.Controls.Clear()
            btnApprove_ModalPopupExtender.Hide()
            Dim ob As New DynamicForm()
            PanelPerReject.Controls.Clear()
            ob.CreateControlsOnPanel(dt, PanelPerReject, updPerReject, btnPerReject, 1)
            Dim xx As Integer = Val(PanelPerReject.Width.ToString())
            Dim ww As Integer = Val(PanelPerReject.Height.ToString())
            pnlPerReject.Width = xx + 20
            pnlPerReject.Height = ww + 70 'panel height + button height + header height
            Dim ROW1() As DataRow = dt.Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")

            Dim conF As New SqlConnection(ConfigurationManager.ConnectionStrings("conStr").ConnectionString)
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim odaField As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID   where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName ='" & Convert.ToString(Session("ActionForm")) & "' and eventname in(select documenttype from MMM_MST_DOC  WITH (NOLOCK) where eid=" & Session("EID") & " and tid=" & RetDocId(Session("EID")).ToString & ")   order by displayOrder", conF)
            Dim dtFileds As New DataTable()
            odaField.Fill(dtFileds)

            'Code For Rule Post back handler for  controls
            'Added By Himank Singh:09-September-2015
            AddHandlerOnControl(dtFileds, pnlPerReject, lblMsgRule1)

            If ROW1.Length > 0 Then
                For i As Integer = 0 To ROW1.Length - 1
                    Dim DDL As DropDownList = TryCast(PanelPerReject.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                    DDL.AutoPostBack = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue1
                Next
            End If
            ob.FillControlsOnPanel(dt, PanelPerReject, "DOCUMENT", pid)
        Else
            Try
                con = New SqlConnection(conStr)
                oda = New SqlDataAdapter("getActionForm", con)
                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                oda.SelectCommand.Parameters.AddWithValue("@docid", pid)
                oda.SelectCommand.Parameters.AddWithValue("@subevent", "P_REJECTION")
                Dim dtA As New DataTable
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                oda.Fill(dtA)
                Session("ActionForm") = dtA.Rows(0).Item("formname").ToString()
                con.Close()
                oda.Dispose()
                con.Dispose()
            Catch ex As Exception
                con.Close()
                oda.Dispose()
                con.Dispose()
            End Try

        End If

        con.Close()
        oda.Dispose()
        con.Dispose()
        Me.updPerReject.Update()
        Me.btnPerRejectModalpopup.Show()
    End Sub

    Protected Sub editBtnPerReject(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim dt As DataTable
        dt = CType(Session("FIELDS"), DataTable)
        Dim ob As New DynamicForm
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim trans As SqlTransaction = Nothing
        con.Open()
        trans = con.BeginTransaction()
        Try
            Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, PanelPerReject, RetDocId(Session("EID")))
            If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
                lblPerRej.Text = retMsg
            Else

                Dim RDocType As String = "NO Rule configured"
                If (dt.Rows.Count > 0) Then
                    RDocType = dt.Rows(0).Item("documenttype").ToString()
                End If
                'Code For Executing Rule Engine
                Dim dv As DataView = dt.DefaultView
                dv.RowFilter = "IsActive=1"
                Dim theFields As DataTable = dv.ToTable
                Dim lstData As New List(Of UserData)
                Dim obj As New DynamicForm()
                'Creating collection for rule engine execution
                lstData = obj.CreateCollection(pnlFields, theFields)
                'Setting it to session for getting it's value for child Item validation
                'Creating object of rule response
                Dim ObjRet As New RuleResponse()
                'Initialising rule Object
                Dim ObjRule As New RuleEngin(Session("EID"), RDocType, "CREATED", "SUBMIT")
                'Uncomment
                ObjRet = ObjRule.ExecuteRule(lstData, Nothing, False)
                If ObjRet.Success = False Then
                    lblPerRej.Text = ObjRet.Message
                    Exit Sub
                Else
                    retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
                    ' Dim oda As SqlDataAdapter = New SqlDataAdapter("PermanentrejectDoc", con)  ' this was prev b4 new rolematrix imple. by sunil
                    Dim oda As SqlDataAdapter = New SqlDataAdapter("PermanentRejectDoc_RM", con)
                    oda.SelectCommand.Transaction = trans
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.Parameters.AddWithValue("TID", RetDocId(Session("EID")))
                    oda.SelectCommand.Parameters.AddWithValue("remarks", "REJECTED")
                    oda.SelectCommand.Parameters.AddWithValue("qry", retMsg)
                    oda.SelectCommand.Parameters.AddWithValue("auid", Val(Session("UID").ToString()))

                    Dim iSt As String = Convert.ToString(oda.SelectCommand.ExecuteScalar())
                    If iSt = "Document is already Rejected!" Then
                        lblTabApprove.Text = "Document is already in Rejected Status!"
                        trans.Rollback()
                        If Not con Is Nothing Then
                            con.Dispose()
                        End If
                        Exit Sub
                    End If
                    oda.Dispose()
                    Session("ACTION") = Nothing
                    Session("FIELDS") = Nothing
                    Try
                        ' fill the actionform in session 
                        Trigger.ExecuteTriggerT(Session("ActionForm"), Session("EID"), RetDocId(Session("EID")), con, trans, TriggerNature:="Create")
                    Catch ex As Exception
                        Throw
                    End Try
                    trans.Commit()
                    Dim ob1 As New DMSUtil()
                    Try
                        ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "REJECT")
                    Catch ex As Exception
                    End Try
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Done Successfully!!');", True)
                    FillMainPage()
                    updMain.Update()
                    btnPerRejectModalpopup.Hide()
                End If

            End If
        Catch ex As Exception
            trans.Rollback()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Error occured at server!!');", True)
        Finally
            If Not con Is Nothing Then
                con.Dispose()
                trans.Dispose()
            End If
        End Try

    End Sub

    Protected Sub editBtnReject(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim dt As DataTable
        dt = CType(Session("FIELDS"), DataTable)
        Dim ob As New DynamicForm
        Dim pid = RetDocId(Session("EID"))
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim trans As SqlTransaction = Nothing
        con.Open()
        trans = con.BeginTransaction()
        Try
            Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, pnlFieldsRej, RetDocId(Session("EID")))
            If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
                lblTabRej.Text = retMsg
            Else
                'Code For Rule Engine By Ajeet Kumar Dated :30-july-2014
                Dim RDocType As String = "NO Rule configured"
                If (dt.Rows.Count > 0) Then
                    RDocType = dt.Rows(0).Item("documenttype").ToString()
                End If

                Dim dv As DataView = dt.DefaultView
                dv.RowFilter = "IsActive=1"
                Dim theFields As DataTable = dv.ToTable
                Dim lstData As New List(Of UserData)
                Dim obj As New DynamicForm()
                'Creating collection for rule engine execution
                lstData = obj.CreateCollection(pnlFields, theFields)
                'Setting it to session for getting it's value for child Item validation
                'Creating object of rule response
                Dim ObjRet As New RuleResponse()
                'Initialising rule Object
                Dim ObjRule As New RuleEngin(Session("EID"), RDocType, "CREATED", "SUBMIT")
                'Uncomment
                ObjRet = ObjRule.ExecuteRule(lstData, Nothing, False)
                If ObjRet.Success = False Then
                    lblTabRej.Text = ObjRet.Message
                    Exit Sub
                Else
                    retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
                    ' Dim oda As SqlDataAdapter = New SqlDataAdapter("RejectWorkFlowNew", con)    ' this was prev b4 new rolematrix imple. by sunil
                    Dim oda As SqlDataAdapter = New SqlDataAdapter("ReconsiderWorkFlow_RM", con)
                    oda.SelectCommand.Transaction = trans
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.Parameters.AddWithValue("TID", RetDocId(Session("EID")))
                    oda.SelectCommand.Parameters.AddWithValue("remarks", "RECONSIDERED")
                    oda.SelectCommand.Parameters.AddWithValue("qry", retMsg)
                    oda.SelectCommand.Parameters.AddWithValue("auid", Val(Session("UID").ToString()))
                    Dim iSt As Integer = oda.SelectCommand.ExecuteScalar()
                    oda.Dispose()
                    Session("ACTION") = Nothing
                    Session("FIELDS") = Nothing
                    Try
                        Trigger.ExecuteTriggerT(Session("ActionForm"), Session("EID"), pid, con, trans, 0, "Create")
                    Catch ex As Exception
                        Throw
                    End Try
                    trans.Commit()
                    Dim ob1 As New DMSUtil()
                    ob1.TemplateCalling(Val(RetDocId(Session("EID"))), Session("EID").ToString(), "", "RECONSIDER")
                    If Not Session("ActionForm") Is Nothing Then
                        Session("ActionForm") = Nothing
                    End If
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Done Successfully!!');", True)
                    FillMainPage()
                    updMain.Update()
                    btnReject_ModalPopupExtender.Hide()
                End If
            End If
        Catch ex As Exception
            trans.Rollback()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Error occured at server!!');", True)
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
                trans.Dispose()
            End If
        End Try
    End Sub

    Protected Sub Page_PreInit(ByVal sender As Object, ByVal e As EventArgs) Handles Me.PreInit

    End Sub

    Protected Sub Page_PreLoad(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreLoad
        If Not Session("ACTION") Is Nothing Then
            Dim dt As DataTable
            dt = CType(Session("FIELDS"), DataTable)
            If dt.Rows.Count > 0 Then
                Dim PNL As New Panel
                If Session("ACTION") = "APPROVAL" Then
                    PNL = TryCast(pnlApprove, Panel)
                ElseIf Session("ACTION") = "EDIT" Then
                    PNL = TryCast(pnlFields, Panel)
                ElseIf Session("ACTION") = "REJECTION" Then
                    PNL = TryCast(pnlFieldsRej, Panel)
                ElseIf Session("ACTION") = "P_REJECTION" Then
                    PNL = TryCast(PanelPerReject, Panel)
                    'Change by Ajeet kumar For CRM Date:8 May 2014 P_REJECTION
                ElseIf Session("ACTION") = "CRMAPPROVAL" Then
                    'CRMAPPROVAL pnlCRMFields
                    PNL = TryCast(pnlCRMFields, Panel)
                End If
                Dim row() As DataRow = dt.Select("isEditable=0")
                For Each rw As DataRow In row
                    Select Case rw.Item("FieldType").ToString().ToUpper()
                        Case "DROP DOWN"
                            Dim DDL As DropDownList = TryCast(PNL.FindControl("fld" & rw.Item("fieldid").ToString()), DropDownList)
                            DDL.Enabled = False
                        Case "TEXT BOX"
                            Dim TXTBOX As TextBox = TryCast(PNL.FindControl("fld" & rw.Item("fieldid").ToString()), TextBox)
                            TXTBOX.Enabled = False
                        Case "CHILD ITEM TOTAL"
                            Dim TXTBOX As TextBox = TryCast(PNL.FindControl("fld" & rw.Item("fieldid").ToString()), TextBox)
                            TXTBOX.Enabled = False
                    End Select
                Next

                'Dim row1() As DataRow = dt.Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                'If row1.Length > 0 Then
                '    For Each dr As DataRow In row1
                '        If dr.Item("lookupvalue").ToString.Contains("-S") Or dr.Item("lookupvalue").ToString.Contains("-C") Then
                '            Dim ob As New DynamicForm
                '            Dim ddl As DropDownList = TryCast(PNL.FindControl("fld" & dr.Item("fieldid").ToString()), DropDownList)
                '            ob.bind(dr.Item("fieldid"), PNL, ddl)
                '        End If
                '    Next
                'End If
            End If
        End If
    End Sub

    Public Sub Reset(ByVal sender As Object, ByVal e As EventArgs)
        Session("Fields") = Nothing
        Session("Action") = Nothing
    End Sub

    Public Sub gridHistory(ByVal tid As Integer, ByVal doctype As String)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As New SqlDataAdapter("", con)
        'oda.SelectCommand.CommandText = "select * from MMM_MST_HISTORY where eid=" & Session("EID") & " and DOCUMENTTYPE='" & doctype & "' and UID='" & Session("UID") & "'"
        'Dim ds As New DataSet()
        'oda.Fill(ds, "his")
        'If ds.Tables("his").Rows.Count > 0 Then
        '    oda.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where EID=32 and DocumentType='" & doctype & "'"
        '    oda.Fill(ds, "fld")
        '    For i As Integer = 7 To ds.Tables("his").Columns.Count - 1
        '        If IsDBNull(ds.Tables("his").Columns(i)) = True Then
        '        Else
        '            arr(i) = i - 7
        '        End If

        '    Next
        'End If
        'oda.SelectCommand.CommandText = "select dtl.tid,u.UserName,dtl.aprstatus,dtl.fdate, dtl.tdate from MMM_DOC_DTL dtl left outer join MMM_MST_USER u on dtl.userid=u.uid  where docid=" & tid & " order by dtl.fdate "
        '' below disabled by me - sunil due to error on 31st aug. 13
        oda.SelectCommand.CommandText = "uspGetHistoryDetail"
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("@DOcid", tid)
        oda.SelectCommand.Parameters.AddWithValue("@FN", doctype)
        oda.SelectCommand.Parameters.AddWithValue("@EID", Session("EID"))
        Dim ds As New DataSet()
        oda.Fill(ds)
        gvHistory.DataSource = ds
        gvHistory.DataBind()
        con.Close()
        oda.Dispose()
    End Sub

    Public Sub ChildFormddlRenderingOnCreation(ByVal ACTION As Integer)

        Dim c As Control = GetPostBackControl(Me.Page)
        '...
        'If c IsNot Nothing Then
        'End If
        If TypeOf c Is System.Web.UI.WebControls.Button Then
            Dim BTN As Button = TryCast(c, Button)
            If Left(BTN.Text.Trim, 3) = "ADD" Then
                Dim id As String = Right(c.ID, c.ID.Length - 3)
                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                Dim con As New SqlConnection(conStr)
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim oda As SqlDataAdapter = New SqlDataAdapter("Select KC_LOGIC from mmm_mst_fields WITH (NOLOCK)  where fieldid=" & id & "", con)
                Dim STRKC As String = ""
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                STRKC = oda.SelectCommand.ExecuteScalar().ToString()

                If STRKC <> "" Then
                    Dim FLDS() As String = STRKC.Split("-")
                    If ACTION = 1 Then
                        Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & FLDS(0)), DropDownList)
                        If DDL Is Nothing Then
                            Exit Sub
                        End If
                        Dim ddl1 As DropDownList = TryCast(pnlFields1.FindControl("fld" & FLDS(1)), DropDownList)
                        ddl1.Items.Clear()
                        ddl1.Items.Insert(0, "Select One")
                        ddl1.Enabled = True
                        ddl1.SelectedIndex = 0
                        Dim li As ListItem = DDL.SelectedItem
                        Dim tn As String = li.Text
                        Dim vl As String = li.Value
                        ddl1.Items.Add(tn)
                        ddl1.Items(1).Value = vl
                        updpnlchild.Update()
                    Else
                        Dim ddl1 As DropDownList = TryCast(pnlFields1.FindControl("fld" & FLDS(1)), DropDownList)
                        ddl1.Enabled = False
                    End If
                End If
            End If
        ElseIf TypeOf c Is System.Web.UI.WebControls.ImageButton Then
            Dim id As String = Right(c.ID, c.ID.Length - 3)
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As New SqlConnection(conStr)
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim oda As SqlDataAdapter = New SqlDataAdapter("Select KC_LOGIC from mmm_mst_fields WITH (NOLOCK)  where fieldid=" & id & "", con)
            Dim STRKC As String = ""
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            STRKC = oda.SelectCommand.ExecuteScalar().ToString()
            If STRKC <> "" Then
                Dim FLDS() As String = STRKC.Split("-")
                If ACTION = 1 Then
                    Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & FLDS(0)), DropDownList)
                    If DDL Is Nothing Then
                        Exit Sub
                    End If
                    Dim ddl1 As DropDownList = TryCast(pnlFields1.FindControl("fld" & FLDS(1)), DropDownList)
                    ddl1.Items.Clear()
                    ddl1.Items.Insert(0, "Select One")
                    ddl1.Enabled = True
                    ddl1.SelectedIndex = 0
                    Dim li As ListItem = DDL.SelectedItem
                    Dim tn As String = li.Text
                    Dim vl As String = li.Value
                    ddl1.Items.Add(tn)
                    ddl1.Items(1).Value = vl
                    updpnlchild.Update()
                End If
            End If
        End If
    End Sub

    Public Sub ChildFormddlRendering(ByVal row As DataRow(), ByVal ACTION As Integer)
        Dim c As Control = GetPostBackControl(Me.Page)
        '...
        'If c IsNot Nothing Then
        'End If
        If row.Length > 0 Then
            'If TypeOf c Is System.Web.UI.WebControls.Button Then
            '    Dim BTN As Button = TryCast(c, Button)
            '    If Left(BTN.Text.Trim, 3) = "ADD" Then
            '        Dim id As String = Right(c.ID, c.ID.Length - 3)
            'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            'Dim con As New SqlConnection(conStr)
            'Dim oda As SqlDataAdapter = New SqlDataAdapter("Select KC_LOGIC from mmm_mst_fields where fieldid=" & ID & "", con)

            'If con.State <> ConnectionState.Open Then
            '    con.Open()
            'End If
            'STRKC = oda.SelectCommand.ExecuteScalar().ToString()

            Dim STRKC As String = ""

            For i As Integer = 0 To row.Length - 1
                Dim FN As String = row(i).Item("fieldid").ToString
                If FN = Session("ID") Then
                    STRKC = row(i).Item("KC_Logic").ToString
                    If STRKC <> "" Then
                        Dim FLDS() As String = STRKC.Split("-")
                        If ACTION = 1 Then
                            Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & FLDS(0)), DropDownList)
                            If DDL Is Nothing Then
                                Exit Sub
                            End If
                            Dim ddl1 As DropDownList = TryCast(pnlFields1.FindControl("fld" & FLDS(1)), DropDownList)
                            ddl1.Items.Clear()
                            ddl1.Items.Insert(0, "Select One")
                            ddl1.Enabled = True
                            ddl1.SelectedIndex = 0
                            Dim li As ListItem = DDL.SelectedItem
                            Dim tn As String = li.Text
                            Dim vl As String = li.Value
                            ddl1.Items.Add(tn)
                            ddl1.Items(1).Value = vl
                            updpnlchild.Update()
                        Else
                            Dim ddl1 As DropDownList = TryCast(pnlFields1.FindControl("fld" & FLDS(1)), DropDownList)

                            If Not IsNothing(ddl1) Then
                                ddl1.Enabled = False
                            Else
                                Dim txt As TextBox = TryCast(pnlFields1.FindControl("fld" & FLDS(1)), TextBox)
                                If Not IsNothing(txt) Then
                                    txt.Enabled = False
                                End If
                            End If
                        End If
                    End If
                End If
            Next
        End If
    End Sub

    Public Sub ChildFormEditing()
        Dim id As String = Session("ID")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        oda.SelectCommand.CommandText = "SELECT KC_LOGIC FROM MMM_MST_FIELDS  WITH (NOLOCK) WHERE EID=" & Session("EID") & " AND FIELDID=" & id & ""
        Dim KC_LOGIC As String = oda.SelectCommand.ExecuteScalar().ToString()

        If KC_LOGIC.Length > 5 Then
            Dim FLDS() As String = KC_LOGIC.Split("-")
            Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & FLDS(0)), DropDownList)
            If DDL Is Nothing Then
                Exit Sub
            End If
            Dim ddl1 As DropDownList = TryCast(pnlFields1.FindControl("fld" & FLDS(1)), DropDownList)
            ddl1.Items.Clear()
            'ddl1.Items.Insert(0, "Select One")
            'ddl1.SelectedIndex = 0
            Dim li As ListItem = DDL.SelectedItem
            Dim tn As String = li.Text
            Dim vl As String = li.Value
            ddl1.Items.Add(tn)
            ddl1.Items(0).Value = vl
            ddl1.Enabled = False
            updpnlchild.Update()
        End If


    End Sub

    Public Shared Function GetPostBackControl(ByVal page As Page) As Control
        Dim control As Control = Nothing

        Dim ctrlname As String = page.Request.Params.[Get]("__EVENTTARGET")
        If ctrlname IsNot Nothing AndAlso ctrlname <> String.Empty Then
            control = page.FindControl(ctrlname)
        Else
            For Each ctl As String In page.Request.Form
                Dim c As Control = page.FindControl(ctl)
                If TypeOf c Is System.Web.UI.WebControls.Button Then
                    control = c
                    Exit For
                ElseIf TypeOf c Is System.Web.UI.WebControls.ImageButton Then
                    control = c
                    Exit For
                End If
            Next
        End If
        Return control
    End Function

    Protected Sub btnAmendment_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAmendment.Click
        '' prev code to take to save btn click of amendment
        ViewState("status") = "AMEND"
        Session("DOCSTATUS") = "MODIFY"
        AMENDMENTHIT()
    End Sub

    Protected Sub btnDocEdit_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDocEdit.Click
        pnlApprove.Controls.Clear()
        ViewState("status") = "EDIT"
        Session("DOCSTATUS") = "EDIT"
        EDITHIT()
    End Sub

    Protected Sub btnRecall_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnRecall.Click
        Me.updRecall.Update()
        MP_Recall.Show()
    End Sub

    Protected Sub btnCancel_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCancel.Click
        Dim pid As Integer = RetDocId(Session("EID"))
        ' No Value in Session just fill the Edit Form and Show two button
        'two methods.. either show data from Grid or Show data from Database.
        lblDocCancelMsg.Text = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("docid", pid)
        oda.SelectCommand.Parameters.AddWithValue("subevent", "CANCEL")
        Dim ds As New DataSet
        oda.Fill(ds, "fields")
        Session("FIELDS") = ds.Tables("fields")
        Session("ACTION") = "CANCEL"
        pnlDocCancel.Width = 500
        pnlDocCancel.Height = 10

        ''Clear controls on Panel Reject 
        pnlCRMFields.Controls.Clear()
        pnlFieldsRej.Controls.Clear()
        btnReject_ModalPopupExtender.Hide()

        pnlDocCancel.Controls.Clear()

        If ds.Tables("fields").Rows.Count > 0 Then
            '           lblHeaderPopUp.Text = ds.Tables("fields").Rows(0).Item("Formcaption").ToString()
            Dim ob As New DynamicForm()
            ob.CreateControlsOnPanel(ds.Tables("fields"), pnlDocCancel, UpdDocCancel, btnCancelSave, 1)
            Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
            If ROW1.Length > 0 Then
                For i As Integer = 0 To ROW1.Length - 1
                    Dim DDL As DropDownList = TryCast(pnlDocCancel.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                    DDL.AutoPostBack = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue2
                Next
            End If
            ob.FillControlsOnPanel(ds.Tables("fields"), pnlDocCancel, "DOCUMENT", pid)
        End If
        con.Close()
        oda.Dispose()
        con.Dispose()
        Dim xx As Integer = Val(pnlDocCancel.Width.ToString())
        Dim ww As Integer = Val(pnlDocCancel.Height.ToString())
        pnlCancel.Width = xx + 20
        pnlCancel.Height = ww + 70 'panel height + button height + header height

        Me.UpdDocCancel.Update()
        MP_CancelPopup.Show()
    End Sub

    Protected Sub btnCancelSave_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCancelSave.Click
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim ds As New DataSet
        Dim trans As SqlTransaction = Nothing
        con.Open()
        trans = con.BeginTransaction()
        Try
            da.SelectCommand.Transaction = trans
            da.SelectCommand.CommandText = "select * from mmm_mst_doc  where eid=" & Session("EID") & " and tid=" & pid
            da.SelectCommand.CommandType = CommandType.Text
            da.SelectCommand.Parameters.Clear()
            Dim dtChk As New DataTable
            da.Fill(dtChk)
            If dtChk.Rows.Count <> 0 Then
                Dim isauth As Integer = dtChk.Rows(0).Item("isauth").ToString
                If isauth = 0 Then
                    lblDocCancelMsg.Text = "Please note that this Vehicle Request cannot be cancelled as an Expense Claim is already booked against this VRF."
                    Exit Sub
                End If
            End If
            Dim dt As DataTable
            dt = CType(Session("FIELDS"), DataTable)
            Dim ob As New DynamicForm
            Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, pnlDocCancel, RetDocId(Session("EID")))
            If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
                lblDocCancelMsg.Text = retMsg
            Else
                retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
                da.SelectCommand.CommandText = "InsertDefaultMovement"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.Clear()
                da.SelectCommand.Parameters.AddWithValue("tid", pid)
                da.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
                da.SelectCommand.Parameters.AddWithValue("what", "CANCEL")
                da.SelectCommand.Parameters.AddWithValue("qry", retMsg)
                da.SelectCommand.ExecuteNonQuery()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Done Successfully!!');", True)
                Session("ACTION") = Nothing
                Session("FIELDS") = Nothing
                '' here code to approve document  - by sunil
                Dim ob1 As New DMSUtil()
                Dim res As String
                res = ob1.GetNextUserFromRolematrixT(pid, Val(Session("EID").ToString()), Val(Session("UID").ToString()), "", Val(Session("UID").ToString()), con, trans)
                '' here code to approve document  - by sunil
                trans.Commit()
                ds.Dispose()
                FillMainPage()
                updMain.Update()
                MP_CancelPopup.Hide()
            End If
        Catch ex As Exception
            If Not trans Is Nothing Then
                trans.Rollback()
            End If
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Error occured at server!!');", True)
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
                trans.Rollback()
            End If
        End Try

    End Sub

    Protected Sub btnRecallSave_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnRecallSave.Click
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        '' now change doc nature and start workflow of modify if any by sunil 13-sep
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim trans As SqlTransaction = Nothing
        con.Open()
        trans = con.BeginTransaction()
        Try
            Dim ds As New DataSet
            Dim recallremark As String = ""
            If txtRemarkRecall.Text = "" Then
                recallremark = "Docment Recalled"
            Else
                recallremark = txtRemarkRecall.Text
            End If
            da.SelectCommand.Transaction = trans
            da.SelectCommand.CommandText = "RecallWorkFlow_RM"
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.Parameters.AddWithValue("tid", pid)
            da.SelectCommand.Parameters.AddWithValue("remarks", recallremark)
            da.SelectCommand.ExecuteNonQuery()
            trans.Commit()
            lblRecallMess.Text = "Recalled Successfully"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Recalled Successfully!!');", True)
            ds.Dispose()
            FillMainPage()
            updMain.Update()
            MP_Recall.Hide()
        Catch ex As Exception
            trans.Rollback()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('Error occured at server!!');", True)
        Finally
            con.Close()
            con.Dispose()
        End Try
    End Sub

    Protected Sub btnCancelReject_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCancelReject.Click
        MP_Recall.Hide()
    End Sub

    Protected Sub btnCancelCan_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCancelCan.Click
        MP_CancelPopup.Hide()
    End Sub

    'Protected Sub btnSaveAmendment_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSaveAmendment.Click
    '    Dim dt As DataTable
    '    dt = CType(Session("FIELDS"), DataTable)
    '    Dim ob As New DynamicForm
    '    Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
    '    Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, pnlDocCancel)
    '    If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
    '        lblTabRej.Text = retMsg
    '    Else
    '        retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
    '        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '        Dim con As SqlConnection = New SqlConnection(conStr)
    '        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
    '        Dim ds As New DataSet

    '        da.SelectCommand.CommandText = "InsertDefaultMovement"
    '        da.SelectCommand.CommandType = CommandType.StoredProcedure
    '        da.SelectCommand.Parameters.Clear()
    '        da.SelectCommand.Parameters.AddWithValue("tid", pid)
    '        da.SelectCommand.Parameters.AddWithValue("CUID", Val(Session("UID").ToString()))
    '        da.SelectCommand.Parameters.AddWithValue("what", "CANCEL")
    '        da.SelectCommand.Parameters.AddWithValue("qry", retMsg)

    '        If con.State <> ConnectionState.Open Then
    '            con.Open()
    '        End If
    '        da.SelectCommand.ExecuteNonQuery()

    '        con.Close()
    '        da.Dispose()
    '        con.Dispose()
    '        Session("ACTION") = Nothing
    '        Session("FIELDS") = Nothing

    '        '' here code to approve document  - by sunil
    '        Dim ob1 As New DMSUtil()
    '        Dim res As String
    '        res = ob1.GetNextUserFromRolematrix(pid, Val(Session("EID").ToString()), Val(Session("UID").ToString()), "", Val(Session("UID").ToString()))
    '        '' here code to approve document  - by sunil
    '        da.Dispose()
    '        con.Dispose()
    '        ds.Dispose()
    '        FillMainPage()
    '        updMain.Update()
    '        MP_CancelPopup.Hide()
    '    End If
    'End Sub

    Protected Sub btnSplit_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSplit.Click
        ViewState("status") = "SPLIT"
        Session("DOCSTATUS") = "SPLIT"
        SPLITHIT()
    End Sub

    Public Sub SPLITHIT()
        ' for split code to be written by sp
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select FF.*,FM.* from MMM_MST_FIELDS FF  WITH (NOLOCK) inner join MMM_MST_DOC M  WITH (NOLOCK) on FF.DocumentType =M.DocumentType INNER JOIN MMM_MST_FORMS FM WITH (NOLOCK)  ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.ShowonSplit=1  order by displayOrder", con)
        Dim ds As New DataSet()
        oda.Fill(ds, "fields")
        Dim ob As New DynamicForm
        ob._CallerPage = 1
        pnlFields.Controls.Clear()
        ob.CreateControlsOnPanel(ds.Tables("fields"), pnlFields, updatePanelEdit, btnActEdit, 0)
        Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED' OR DROPDOWNTYPE='CHILD VALUED') and lookupvalue is not null")
        If ROW1.Length > 0 Then
            For i As Integer = 0 To ROW1.Length - 1
                Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                DDL.AutoPostBack = True
                DDL.EnableViewState = True
                AddHandler DDL.TextChanged, AddressOf bindvalue
            Next
        End If

        '' optional para issplit=1 (last) is passed for Split doc feature 
        ob.FillControlsOnPanel(ds.Tables("fields"), pnlFields, "DOCUMENT", pid, , 1)
        Session("FIELDS") = ds.Tables("fields")
        Session("ACTION") = "EDIT"
        Session("ActionForm") = ds.Tables("fields").Rows(0).Item("documenttype").ToString()

        Dim dtchild As DataTable = ds.Tables("fields")

        Dim row() As DataRow = dtchild.Select("FieldType='CHILD ITEM'")
        If row.Length > 0 Then
            For i As Integer = 0 To row.Length - 1
                Dim btn1 As Button = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                AddHandler btn1.Click, AddressOf ShowChildForm
                Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                If PRitem.Length > 1 Then
                    Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
                    AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
                End If
                Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
                AddHandler GRD.RowDataBound, AddressOf totalrow
                AddHandler GRD.RowCommand, AddressOf Delete
                AddHandler GRD.RowDeleting, AddressOf Deleting

                oda.SelectCommand.Parameters.Clear()
                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                oda.SelectCommand.Parameters.AddWithValue("DOCID", pid)
                oda.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
                oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                ds.Tables.Clear()
                oda.Fill(ds, "ITEM")
                oda.SelectCommand.CommandType = CommandType.Text
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType  FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2 WITH (NOLOCK)  ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D  WITH (NOLOCK) ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & ""
                oda.Fill(ds, "TOTAL")
                ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, btn1.ID, updatePanelEdit, ds.Tables("TOTAL"))
            Next

            If Not Session("CHILD") Is Nothing Then
                pnlFields1.Controls.Clear()
                ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
                Dim ROW2() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                If ROW2.Length > 0 Then
                    For i As Integer = 0 To ROW2.Length - 1
                        Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW2(i).Item("FieldID").ToString()), DropDownList)
                        DDL.AutoPostBack = True
                        AddHandler DDL.TextChanged, AddressOf bindvalue1
                    Next
                End If

                Dim ROW3() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and kc_logic is not null")
                If ROW3.Length > 0 Then
                    For i As Integer = 0 To ROW3.Length - 1
                        parentchild(ROW3(i).Item("FIELDID"), CInt(ROW3(i).Item("KC_LOGIC").ToString()))
                    Next
                End If
                ' ChildFormddlRendering(row, 2)
            End If
        End If
        updatePanelEdit.Update()
        ModalEditPopup.Show()
    End Sub

#Region "auto complete list" ' by balli 1 aprail march
    <WebMethod()> _
<Script.Services.ScriptMethod()> _
    Public Shared Function GetCompletionList(ByVal prefixText As String, ByVal count As Integer, ByVal contextKey As String) As String()

        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim arr() As String
        arr = contextKey.Split("-")
        Dim TID As String = "TID"
        Dim TABLENAME As String = ""
        If UCase(arr(0).ToString()) = "MASTER" Then
            TABLENAME = "MMM_MST_MASTER"
        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
            TABLENAME = "MMM_MST_DOC"
        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
            TABLENAME = "MMM_MST_DOC_ITEM"
        ElseIf UCase(arr(0).ToString) = "STATIC" Then
            If arr(1).ToString.ToUpper = "USER" Then
                TABLENAME = "MMM_MST_USER"
                TID = "UID"
            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                TABLENAME = "MMM_MST_LOCATION"
                TID = "LOCID"
            End If
        End If
        HttpContext.Current.Session("tableTID") = TABLENAME & "||" & TID  ' this is initializing because we need this at textbox changed event  in dynamic class
        Dim panelfields As Panel = HttpContext.Current.Session("pnlFields")
        Dim updpanel As UpdatePanel = HttpContext.Current.Session("updatepanel1")
        'autofilExtender.ContextKey = ds.Rows(i).Item("dropdown").ToString() & "-" & ds.Rows(i).Item("FieldID").ToString() & "-" & ds.Rows(i).Item("dropdowntype").ToString() & "-" & ds.Rows(i).Item("autofilter").ToString() & "-" & ds.Rows(i).Item("InitialFilter").ToString()
        'context key contain  : dropdown-fieldid-dropdowntype-autofilter-InitialFilter' adding the fieldid in context key because later on we need id of field in web method 

        ''''for blank the lookup control on selection 


        'Dim sqlda As New SqlDataAdapter("select * from MMM_MST_Fields where eid=" & HttpContext.Current.Session("EID") & " and dropdown='" & arr(3) & "'", con)
        'Dim dtt As New DataTable
        'sqlda.Fill(dtt)
        'If dtt.Rows.Count > 0 Then
        '    For j As Integer = 0 To dtt.Rows.Count - 1
        '        If DynamicForm.GetControl(panelfields, "fld" & dtt.Rows(j).Item("fieldid").ToString) Then
        '            Dim txtbox As TextBox = CType(panelfields.FindControl("fld" & dtt.Rows(j).Item("fieldid").ToString), TextBox)
        '            Dim num As String = txtbox.Text
        '            txtbox.Text = String.Empty
        '        End If
        '    Next
        'End If
        'sqlda.Dispose()
        ''' end here to lookup check

        Dim lookUpqry As String = ""
        Dim str As String = ""

        'WITH(NOLOCK)  added by Himank at 28th sep 2015
        If arr(0).ToUpper() = "CHILD" Then

            str = "select top 50  " & arr(2).ToString() & " As [name]," & TID & "[tid]  from " & TABLENAME & " M WITH (NOLOCK)  WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
        ElseIf arr(0).ToUpper() <> "STATIC" Then
            str = "select top 50  " & arr(2).ToString() & " As [name]," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
        Else
            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                str = "select DISTINCT " & arr(2).ToString() & " As [name],SID [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  "
            Else
                str = "select " & arr(2).ToString() & " As [name]," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " "
            End If
        End If

        Dim xwhr As String = ""
        Dim tids As String = ""
        Dim Rtids As String = ""   ' for prerole data filter
        'Dim tidarr() As String

        ''FILTER THE DATA ACCORDING TO USER 
        Dim ob As New DynamicForm
        tids = ob.UserDataFilter(contextKey.Split("-").ElementAt(1).ToString(), arr(1).ToString())
        Rtids = ob.UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

        If tids.Length >= 2 Then
            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
            'ElseIf tids = "0" Then
            '    pnlFields.Visible = False
            '    btnActEdit.Visible = False
            '    UpdatePanel1.Update()
            '    xwhr = ""
        End If

        If Rtids.Length >= 2 Then
            If xwhr.ToString = "" Then
                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
            Else
                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
            End If
        End If

        str = str & "  AND M.isauth=1 " & xwhr
        Dim AutoFilter As String = arr(5) 'ds.Rows(i).Item("AutoFilter").ToString()
        Dim InitFilterArr As String() = arr(6).Split(":") 'ds.Rows(i).Item("InitialFilter").ToString().Split(":")

        If AutoFilter.Length > 0 Then
            Dim filteriD As String = arr(3)
            Dim mval As String = ""
            Dim filterMasVal As String = ""
            Dim ODA As New SqlDataAdapter("", con)
            ' ODA.SelectCommand.CommandText = "select top 1 * from MMM_MSt_Fields where eid='" & HttpContext.Current.Session("EID") & "' and fieldtype in ('Drop Down','AutoComplete') and lookupvalue like '%" & filteriD & "-S%'"

            'WITH (NOLOCK) added by Himank on 28th sep 2015
            ODA.SelectCommand.CommandText = "select top 1 * from MMM_MSt_Fields WITH (NOLOCK)  where eid='" & HttpContext.Current.Session("EID") & "' and fieldtype in ('Drop Down','AutoComplete') and lookupvalue like '%" & filteriD & "-S%'"
            Dim dt As New DataSet()
            ODA.Fill(dt, "filtrId")
            If dt.Tables("filtrId").Rows.Count > 0 Then
                Dim fieldtype As String = dt.Tables("filtrId").Rows(0).Item("fieldtype").ToString
                If fieldtype.ToUpper = "DROP DOWN" Then
                    If dt.Tables("filtrId").Rows(0).Item("DropDownType").ToString = "SESSION VALUED" Then
                        ' 16 march balli  
                        'str = "select " & arr(2).ToString() & " As [name]," & TID & "[tid]" & lookUpqry & " from MMM_MST_USER M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                        'Dim ddl As DropDownList = CType(panelfields.FindControl("fld" & dt.Tables("filtrId").Rows(0).Item("fieldid")), DropDownList)
                        'mval = ddl.SelectedItem.Value
                        'filterMasVal = " AND CONVERT(NVARCHAR(10)," & AutoFilter & ") = '" & mval & "' "
                    Else
                        Dim ddl As DropDownList = CType(panelfields.FindControl("fld" & dt.Tables("filtrId").Rows(0).Item("fieldid")), DropDownList)
                        mval = ddl.SelectedItem.Value
                        filterMasVal = " AND CONVERT(NVARCHAR(10)," & AutoFilter & ") = '" & mval & "' "
                    End If
                Else
                    Dim ddl As HiddenField = CType(panelfields.FindControl("HDN" & dt.Tables("filtrId").Rows(0).Item("fieldid")), HiddenField)  ' for hidden field
                    'Dim ddl As TextBox = CType(panelfields.FindControl("fld" & dt.Tables("filtrId").Rows(0).Item("fieldid")), TextBox)
                    'Dim MId As String() = Split(ddl.Text, "-")
                    'mval = Replace(MId(1), "[", "")
                    'mval = mval.Replace("]", "")
                    ' filterMasVal = " AND CONVERT(NVARCHAR(10)," & AutoFilter & ") = '" & mval & "' "
                    filterMasVal = " AND CONVERT(NVARCHAR(10)," & AutoFilter & ") = '" & Val(ddl.Value) & "' "
                End If
            End If
            ' for binding autocomplete with the selection of dropdo
            If arr(0).ToUpper() = "CHILD" Then
                If AutoFilter.ToUpper = "DOCID" Then
                    str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                Else
                    str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                End If
            ElseIf arr(0).ToUpper() <> "STATIC" Then
                'WITH(NOLOCK)  added by Himank at 28th sep 2015
                str = "select top 50 " & arr(2).ToString() & " As [name],convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                str = str & "  AND M.isauth=1 " & xwhr
                If filterMasVal.Length > 1 Then
                    str = str & filterMasVal
                End If
            Else
                str = "select top 50 " & arr(2).ToString() & " As [name],convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WITH (NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " "
                str = str & "  AND M.isauth=1 " & xwhr
                If filterMasVal.Length > 1 Then
                    str = str & filterMasVal
                End If
            End If
        ElseIf InitFilterArr.Length > 1 Then
            'WITH(NOLOCK)  added by Himank at 28th sep 2015
            Dim daa As New SqlDataAdapter("select * from MMM_MST_Fields WITH (NOLOCK)  where fieldid=" & InitFilterArr(0) & "", con)
            Dim dss As New DataSet
            daa.Fill(dss, "data")
            Dim row() As DataRow = dss.Tables("data").Select("fieldid=" & InitFilterArr(0).ToString())
            If arr(0).ToUpper() = "DOCUMENT" Or arr(0).ToUpper() = "MASTER" Then
                If row.Length > 0 Then

                    str = " Select top 50 " & arr(2).ToString() & "  As [name], convert(nvarchar(10),tid) [TID] FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                    str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                    str = str & "  AND M.isauth=1 " & xwhr
                End If
            ElseIf arr(0).ToUpper() = "STATIC" Then
                If row.Length > 0 Then
                    str = " Select top 50 " & arr(2).ToString() & "As [name],convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " "
                    str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                    str = str & "  AND M.isauth=1 " & xwhr
                End If
            End If
            dss.Dispose()
            daa.Dispose()
        End If
        ' Dim da As New SqlDataAdapter("select top 50 " & contextKey.Split("-").ElementAt(2) & " As [name] , tid from " & TABLENAME & "  where EID ='" & HttpContext.Current.Session("EID") & "' and documenttype ='" & contextKey.Split("-").ElementAt(1).ToString() & "' and " & contextKey.Split("-").ElementAt(2).ToString() & " like '" & prefixText & "%' ", con)
        ' for hidden field value check
        'Dim pnlHdnfld As HiddenField = CType(panelfields.FindControl("HDN" & arr(3)), HiddenField)


        Dim da As New SqlDataAdapter(str & " and " & contextKey.Split("-").ElementAt(2).ToString() & " like '%" & prefixText & "%'  order by LEN(" & arr(2).ToString() & ") ", con)
        Dim ds As New DataSet()
        da.Fill(ds, "data")
        Dim items As New List(Of String)
        Dim items1 As String = String.Empty
        For i As Integer = 0 To ds.Tables("data").Rows.Count - 1
            'items.Add(ds.Tables("data").Rows(i).Item("name").ToString() & "-[" & ds.Tables("data").Rows(i).Item("tid").ToString() & "]")
            items1 = AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(ds.Tables("data").Rows(i).Item("name").ToString(), ds.Tables("data").Rows(i).Item("tid").ToString())
            items.Add(items1)
        Next
        HttpContext.Current.Session("fieldid") = contextKey.Split("-").ElementAt(3)  ' this session id we need dynamic form for calculation the other field
        ds.Dispose()
        da.Dispose()

        con.Dispose()
        con = Nothing
        Return items.ToArray()
    End Function


#End Region
    'Code By Ajeet kumar For CRM
#Region "CRM Code"
    Public Function GetActionForm(ByVal DOCID As Integer) As DataSet
        Dim DS As New DataSet()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Try
            Using con = New SqlConnection(conStr)
                Using da As New SqlDataAdapter("uspSelectEventScreen1", con)
                    DS = New DataSet()
                    da.SelectCommand.CommandType = CommandType.StoredProcedure
                    da.SelectCommand.Parameters.Clear()
                    da.SelectCommand.Parameters.AddWithValue("@docid", DOCID)
                    da.SelectCommand.Parameters.AddWithValue("@subevent", "APPROVAL")
                    da.Fill(DS)
                End Using
            End Using
        Catch ex As Exception

        End Try
        Return DS
    End Function


    Protected Sub btnAddAction_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnAddAction.Click
        Dim pid As Integer = RetDocId(Session("EID"))
        ' No Value in Session just fill the Edit Form and Show two button
        'two methods.. either show data from Grid or Show data from Database.
        'pnlCRMAction  UpCRMACtion pnlCRMFields lblCRMAction
        lblCRMAction.Text = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen", con)
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("docid", pid)
        oda.SelectCommand.Parameters.AddWithValue("subevent", "APPROVAL")
        Dim dsFields As New DataSet
        Dim ds As New DataSet
        oda.Fill(dsFields)
        Dim onlyFiltered As DataView = dsFields.Tables(0).DefaultView
        'Note: in the case of Action form "IsActive" do not play any role. 
        onlyFiltered.RowFilter = "Show_on_CRM=" & "1"
        Dim CRMFlds As DataTable = onlyFiltered.Table.DefaultView.ToTable()
        CRMFlds.TableName = "fields"
        'ds.Tables.Add("fields")
        ds.Tables.Add(CRMFlds)
        If ds.Tables("fields").Rows.Count > 0 Then
            Session("ActionForm") = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
        Else
            Dim oda1 As SqlDataAdapter = New SqlDataAdapter("uspSelectEventScreen1", con)
            oda1.SelectCommand.CommandType = CommandType.StoredProcedure
            oda1.SelectCommand.Parameters.Clear()
            oda1.SelectCommand.Parameters.AddWithValue("@docid", pid)
            oda1.SelectCommand.Parameters.AddWithValue("@subevent", "APPROVAL")
            Dim ds1 As New DataSet
            oda1.Fill(ds1, "Action")
            If ds1.Tables("Action").Rows.Count > 0 Then
                Session("ActionForm") = Convert.ToString(ds1.Tables("Action").Rows(0).Item("documenttype"))
            End If
        End If
        Session("FIELDS") = ds.Tables("fields")
        Session("ACTION") = "CRMAPPROVAL"
        pnlCRMFields.Width = 500
        pnlCRMFields.Height = 10

        ''Clear controls on Panel Reject 
        pnlCRMFields.Controls.Clear()
        pnlApprove.Controls.Clear()
        pnlFieldsRej.Controls.Clear()
        btnReject_ModalPopupExtender.Hide()

        pnlCRMFields.Controls.Clear()
        'pnlCRMAction  UpCRMACtion pnlCRMFields lblCRMAction
        If ds.Tables("fields").Rows.Count > 0 Then
            '           lblHeaderPopUp.Text = ds.Tables("fields").Rows(0).Item("Formcaption").ToString()
            Dim ob As New DynamicForm()
            ob.CreateControlsOnPanel(ds.Tables("fields"), pnlCRMFields, UpCRMACtion, btnCRMAction, 1)
            Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
            If ROW1.Length > 0 Then
                For i As Integer = 0 To ROW1.Length - 1
                    Dim DDL As DropDownList = TryCast(pnlCRMFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                    DDL.AutoPostBack = True
                    AddHandler DDL.TextChanged, AddressOf bindvalue2
                Next
            End If
            ob.FillControlsOnPanel(ds.Tables("fields"), pnlCRMFields, "DOCUMENT", pid)
            'Code For Disabling controls
            For k As Integer = 0 To ds.Tables("fields").Rows.Count - 1
                Dim FieldType = ds.Tables("fields").Rows(k).Item("FieldType")
                Dim Edit_on_CRM = Convert.ToString(ds.Tables("fields").Rows(k).Item("Edit_on_CRM"))
                'Formula Field,Geo Fence,File Uploader,Calculative Field,Text Box,Lookup,AutoComplete,Text Area,Drop Down,Geo Point
                If Edit_on_CRM = "0" Then
                    If FieldType = "Formula Field" Or FieldType = "Geo Fence" Or FieldType = "Calculative Field" Or FieldType = "Text Box" Or FieldType = "Lookup" Or FieldType = "Geo Point" Or FieldType = "Text Area" Or FieldType = "AutoComplete" Then
                        Dim txtBox As New TextBox
                        txtBox = CType(pnlFields.FindControl("fld" & ds.Tables("fields").Rows(k).Item("FieldID").ToString()), TextBox)
                        txtBox.Enabled = False
                    ElseIf FieldType = "Drop Down" Then
                        Dim DDL As New DropDownList
                        DDL = CType(pnlFields.FindControl("fld" & ds.Tables("fields").Rows(k).Item("FieldID").ToString()), DropDownList)
                        DDL.Enabled = False
                    End If
                End If
            Next
        End If
        con.Close()
        oda.Dispose()
        con.Dispose()
        Dim xx As Integer = Val(pnlCRMFields.Width.ToString())
        Dim ww As Integer = Val(pnlCRMFields.Height.ToString())
        pnlCRMAction.Width = xx + 20
        pnlCRMAction.Height = ww + 70 'panel height + button height + header height
        'Dim Height = ww.ToString & "px"
        'Dim Width = xx + 70 & "px"
        pnlCRMFields.Attributes.Add("style", "heght:auto;")
        Me.UpCRMACtion.Update()
        Me.MDLCRMAC.Show()
    End Sub

    Protected Sub btnCRMApprove(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim dt As DataTable
        lblCRMAction.Text = ""
        Dim con As SqlConnection = Nothing
        Dim oda As SqlDataAdapter = Nothing
        Dim trans As SqlTransaction = Nothing
        Try
            dt = CType(Session("FIELDS"), DataTable)
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            con = New SqlConnection(conStr)
            con.Open()
            trans = con.BeginTransaction()
            oda = New SqlDataAdapter("", con)
            oda.SelectCommand.Transaction = trans
            Dim strfld As String = ""
            Dim insertSql As String = ""
            If dt.Rows.Count = 0 Then
            Else
                For k As Integer = 0 To dt.Rows.Count - 1
                    strfld &= dt.Rows(k).Item("fieldmapping") & ","
                Next
                strfld = Left(strfld, strfld.Length - 1)
                oda.SelectCommand.CommandType = CommandType.Text
                oda.SelectCommand.CommandText = "select " & strfld & " from MMM_MST_DOC  where eid=" & Session("EID") & " and tid=" & RetDocId(Session("EID")) & " "

                Dim flddt As New DataTable
                oda.Fill(flddt)
                Dim strFldVal As String = ""
                For j As Integer = 0 To flddt.Columns.Count - 1
                    strFldVal &= "'" & flddt.Rows(0).Item(j).ToString & "',"
                Next
                strFldVal = Left(strFldVal, strFldVal.Length - 1)
                'insertSql = "Insert Into MMM_MST_HISTORY(DOCID,documenttype,EID,Tablename,uid,uaction,adate," & strfld & ")Values(" & RetDocId(Session("EID")) & ",'" & Session("docType") & "'," & Session("EID") & " ,'MMM_MST_DOC'," & Session("UID") & ",'ACTION',GETDATE()," & strFldVal & ")"
            End If
            Dim ob As New DynamicForm
            'Code inserting it into CRM Table
            Dim FinalQry = ""
            Dim Updateqry As String = "UPDATE MMM_MST_DOC SET "
            FinalQry = ob.ValidateAndGenrateQueryForControls("ADD", "INSERT INTO MMM_MST_CRM(EID,DOCID,USERID,", "VALUES (" & Session("EID").ToString() & "," & RetDocId(Session("EID")) & "," & Session("UID").ToString() & ",", dt, pnlCRMFields, 0)
            If Trim(Left(FinalQry, 6)).ToUpper() = "PLEASE" Then
                lblCRMAction.Text = FinalQry
                'Validation Failed
            Else
                Dim UpdateQ = "DECLARE @TID AS INT;SET @TID=SCOPE_IDENTITY();UPDATE MMM_MST_CRM SET CurStatus=(SELECT curstatus FROM MMM_MST_DOC WHERE EID= " & Session("eid") & " AND tid= " & RetDocId(Session("EID")) & " ),Ordering=(select Top 1 Ordering FROM MMM_DOC_DTL WHERE tid=(SELECT lasttid FROM MMM_MST_DOC WHERE EID=46 AND tid= " & RetDocId(Session("EID")) & " )) where EID= " & Session("EID") & " AND tid=@TID;"
                FinalQry = FinalQry & UpdateQ

                oda.SelectCommand.CommandType = CommandType.Text
                oda.SelectCommand.CommandText = FinalQry
                If con.State <> ConnectionState.Open Then con.Open()
                Dim Add As String = oda.SelectCommand.ExecuteNonQuery().ToString
                If Convert.ToInt32(Add) > 0 Then
                    Dim retMsg As String = ob.ValidateAndGenrateQueryForControls("UPDATE", "UPDATE MMM_MST_DOC SET ", "", dt, pnlCRMFields, RetDocId(Session("EID")))
                    If Trim(Left(retMsg, 6)).ToUpper() = "PLEASE" Then
                        lblCRMAction.Text = retMsg
                    Else
                        retMsg = retMsg & " WHERE tid=" & RetDocId(Session("EID"))
                        If insertSql.Length > 1 Then
                            retMsg = insertSql & ";" & retMsg
                        End If
                        '' code to update action screen fields in main document. 
                        '' written by sunil on 25-mar-14 for document user selection in movement ( HCL)
                        If retMsg.Length > 45 Then
                            oda.SelectCommand.CommandType = CommandType.Text
                            oda.SelectCommand.CommandText = retMsg
                            If con.State <> ConnectionState.Open Then con.Open()
                            Dim R As String = oda.SelectCommand.ExecuteNonQuery().ToString
                        End If
                    End If
                    Dim ob1 As New DMSUtil()
                    dt.Dispose()
                    oda.Dispose()
                    Try
                        Trigger.ExecuteTriggerT(Session("ActionForm"), Session("EID"), RetDocId(Session("EID")), con, trans, TriggerNature:="Create")
                    Catch ex As Exception
                        Throw
                    End Try
                    trans.Commit()
                    BindCRM(Session("ActionForm"))
                    Call FillMainPage()
                    UpCRMGrid.Update()
                    MDLCRMAC.Hide()
                    updMain.Update()
                Else
                    lblCRMAction.Text = "Error occured at server.Please try again later."
                End If
            End If
            UpCRMACtion.Update()
        Catch ex As Exception
            trans.Rollback()
            lblCRMAction.Text = "Error occured at server.Please try again later."
        Finally
            con.Close()
            oda.Dispose()
            con.Dispose()
        End Try
    End Sub

    Public Sub BindCRM(ByVal DocumentType As String)
        Try
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim DS As New DataSet()
            Dim DSData As New DataSet()
            Dim StrQuery = ""
            Using con = New SqlConnection(conStr)
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Using da = New SqlDataAdapter("select * FROM MMM_MST_FIELDS  WITH (NOLOCK) where EID= " & Session("EID") & " AND DocumentType = '" & DocumentType & "' and invisible='0' order by displayOrder", con)
                    If Not con.State = ConnectionState.Open Then
                        con.Open()
                    End If
                    da.Fill(DS)
                End Using
            End Using
            If DS.Tables(0).Rows.Count > 0 Then
                StrQuery = GenerateQuery(DS.Tables(0))
                StrQuery = StrQuery.Replace(">", String.Empty).Replace("<", String.Empty)
                StrQuery = StrQuery & " order by D.tid DESC"
            End If
            'Code For getting data from database
            Using con = New SqlConnection(conStr)
                Using da = New SqlDataAdapter(StrQuery, con)
                    If Not con.State = ConnectionState.Open Then
                        con.Open()
                    End If
                    da.Fill(DSData)
                    If DSData.Tables(0).Rows.Count > 0 Then
                        GVCRM.DataSource = DSData
                        GVCRM.DataBind()
                        btnSendMail.Visible = True
                        'btnSendMessage.Visible = True
                    Else
                        btnSendMail.Visible = False
                        'btnSendMessage.Visible = False
                    End If

                End Using
            End Using
        Catch ex As Exception

        End Try
    End Sub

    Public Function GenerateQuery(ByVal theFlds1 As DataTable) As String
        Dim da As SqlDataAdapter = Nothing
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = Nothing
        Dim Sb As New StringBuilder()
        'Sb.Append(Sb1.ToString())
        Try
            Dim EID = Session("EID")

            If theFlds1.Rows.Count > 0 Then
                Sb.Append("SELECT tid,UserID,Convert(VARCHAR(20),ADate,106)'ActionDate'")
                For i As Integer = 0 To theFlds1.Rows.Count - 1
                    If theFlds1.Rows(i).Item("FieldType") = "Drop Down" And theFlds1.Rows(i).Item("DropDownType") = "MASTER VALUED" Then
                        Dim arr = theFlds1.Rows(i).Item("DropDown").ToString().Split("-")
                        Dim str = ""
                        Dim str1 = ""
                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                        If arr(1).ToUpper = "USER" Then
                            str1 = "(SELECT isnull([" & arr(2) & "],'') from MMM_MST_USER s  WITH (NOLOCK) WHERE CAST(s.[UID] AS VARCHAR)=CAST(D.[" & theFlds1.Rows(i).Item("FieldMapping") & "] AS VARCHAR))[" & theFlds1.Rows(i).Item("DisplayName") & "]"
                        Else
                            str = "SELECT DisplayName FROM MMM_MST_FIELDS  WITH (NOLOCK) WHERE EID=" & EID & "AND Documenttype='" & arr(1) & "' AND FieldMapping='" & arr(2) & "'"
                            con = New SqlConnection(conStr)
                            da = New SqlDataAdapter(str, con)
                            Dim ds1 As New DataSet()
                            da.Fill(ds1)
                            str1 = "(SELECT isnull([" & ds1.Tables(0).Rows(0).Item("Fieldmapping") & "],'')  from [V" & EID & arr(1).Replace(" ", "_") & "] s WHERE CAST(s.tid AS VARCHAR)=CAST(D.[" & theFlds1.Rows(i).Item("DisplayName") & "] AS VARCHAR))[" & theFlds1.Rows(i).Item("DisplayName") & "]"
                        End If
                        If Sb.ToString().Contains("<" & str1 & ">") Then
                        Else
                            Sb.Append(",").Append("<" & str1 & ">")
                        End If
                    Else
                        If Sb.ToString().Contains("<isnull(D.[" & theFlds1.Rows(i).Item("Fieldmapping") & "],'')'" & theFlds1.Rows(i).Item("DisplayName") & "'>") Then
                        Else
                            Sb.Append(",").Append("<isnull(D.[" & theFlds1.Rows(i).Item("Fieldmapping") & "],'')'" & theFlds1.Rows(i).Item("DisplayName") & "'>")
                        End If
                    End If
                Next
            End If
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
        Dim DocID As String = "0"
        If Request.QueryString.HasKeys Then
            If Not RetDocId(Session("EID")) Is Nothing Then
                DocID = RetDocId(Session("EID"))
            End If
        End If
        Sb.Append(" From MMM_MST_CRM D ")
        Sb.Append(" where EID= ").Append(Session("eid")).Append(" AND D.DOCID= ").Append(DocID)
        ',<isnull(D.[Dispatch Date],'')'Dispatch Date'>,<isnull(D.[Dispatch Remarks],'')'Dispatch Remarks'>,<isnull(D.[POD No],'')'POD No'>,<(SELECT isnull([Courier Name],'')  from [V46Courier_Details] s WHERE CAST(s.tid AS VARCHAR)=CAST(D.[Courier Name] AS VARCHAR))[Courier Name]>
        Return Sb.ToString()
    End Function
    'this code is commented 
    'Protected Sub btnSendMessage_Click(sender As Object, e As EventArgs) Handles btnSendMessage.Click
    '    Try
    '        Call ResetSendSMS()
    '        upSendMessage.Update()
    '        mdpPopUpSMS.Show()
    '    Catch ex As Exception

    '    End Try
    'End Sub

    Protected Sub btnSendMail_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnSendMail.Click
        Try
            Call ResetsendMail()
            txtBody.Visible = "true"
            mdlSendMail.Show()
        Catch ex As Exception
        End Try
    End Sub

    Protected Sub ResetsendMail()
        Try
            ddlFromMail.SelectedItem.Value = "0"
            txtToMail.Text = ""
            txtBody.Text = ""
            txtPassword.Text = ""
            'txtSMTP.Text = ""
            lblsendMSG.Text = ""
            txtCRMSub.Text = ""
            txtCRMBCC.Text = ""
            txtCC.Text = ""
            Me.UpSendMail.Update()
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub ResetSendSMS()
        Try
            lblSMSMessage.Text = ""
            txtMob.Text = ""
            txtMeaasge.Text = ""
        Catch ex As Exception
        End Try
    End Sub
    'Code is commented by Ajeet becouse send message service will no longer be available
    'Protected Sub btnSendSMS_Click(sender As Object, e As EventArgs) Handles btnSendSMS.Click
    '    lblSMSMessage.Text = ""
    '    Try
    '        Dim objCRM As New CRMBAL()
    '        Dim EID As Integer = 0
    '        Dim DOCID As Integer = 0
    '        Dim SMSText As String = ""
    '        Dim MobNumber As String = ""
    '        EID = Convert.ToInt32(Session("EID"))
    '        DOCID = Convert.ToInt32(RetDocId(Session("EID")))
    '        MobNumber = txtMob.Text.Trim()
    '        SMSText = txtMeaasge.Text.Trim()
    '        If MobNumber = "" Or SMSText = "" Then
    '            lblSMSMessage.Text = "Please fill all required field."
    '        Else
    '            Dim ret = objCRM.SetMessage(DOCID:=DOCID, EID:=EID, MobNumber:=MobNumber, SMSText:=SMSText)
    '            lblSMSMessage.Text = "Message sent successfully."
    '            Call ResetSendSMS()
    '        End If
    '    Catch ex As Exception
    '        lblSMSMessage.Text = "Sorry!!! Your request can not be completed at the moment.Try again later."
    '    End Try
    'End Sub

    Protected Sub btnSendmailHit_Click(ByVal sender As Object, ByVal e As EventArgs)
        'ddlFromMail txtPassword txtSMTP txtToMail txtBody lblsendMSG
        'SendMail(EID As Integer, DOCID As Integer, MailText As String, Fmail As String, Password As String, SMTP As String, Tomail As String)
        Try
            Dim FromMail As String = ""
            Dim Password As String = ""
            Dim SMTP As String = ""
            Dim ToMail As String = ""
            Dim Bcc As String = ""
            Dim Subject As String = ""

            Dim MailBody As String = ""
            Dim CC As String = ""
            Subject = txtCRMSub.Text.Trim
            Bcc = txtCRMBCC.Text.Trim
            FromMail = ddlFromMail.SelectedItem.Text
            ToMail = txtToMail.Text.Trim
            MailBody = txtBody.Text.Trim
            Password = txtPassword.Text.Trim
            SMTP = "" 'txtSMTP.Text.Trim
            CC = txtCC.Text.Trim()
            Dim EID = Convert.ToInt32(Session("EID"))
            Dim DOCID = Convert.ToInt32(RetDocId(Session("EID")))
            Dim objCRM As New CRMBAL()
            Dim ret = objCRM.SetMail(EID, DOCID, MailBody, FromMail, Password, SMTP, ToMail, Subject, CC, Bcc)
            lblsendMSG.Text = "Mail Sent successfully."
            Call ResetsendMail()
        Catch ex As Exception
            lblsendMSG.Text = "Sorry!!! Your request can not be completed at the moment.Try again later."
        End Try
    End Sub
    Protected Sub GetConversation(ByVal sender As Object, ByVal e As System.EventArgs)
        Try
            Dim btnDetails As Button = TryCast(sender, Button)
            Dim row As GridViewRow = DirectCast(btnDetails.NamingContainer, GridViewRow)
            Dim CRMID As Integer = Convert.ToString(Me.GVCRM.DataKeys(row.RowIndex).Value)
            Dim DOCID As Integer = 0
            DOCID = Convert.ToInt32(RetDocId(Session("EID")).ToString)
            Dim EID As Integer = Convert.ToInt32(Session("EID"))
            Dim objCRM As New CRMBAL()
            Dim ds As New DataSet()
            lblConver.Text = ""
            lblTomail.Text = ""
            lblMobNum.Text = ""
            ds = objCRM.GetConversation(EID:=EID, CRMID:=CRMID, DOCID:=DOCID)
            'lblConver lblTomail lblMobNum upCRMConver mdlCRMViewConver
            If ds.Tables(0).Rows.Count > 0 Then
                If Not String.IsNullOrEmpty(ds.Tables(0).Rows(0).Item("Message").ToString.Trim) Then
                    lblConver.Text = ds.Tables(0).Rows(0).Item("Message")
                Else
                    lblConver.Text = "NA"
                End If

                If Not String.IsNullOrEmpty(ds.Tables(0).Rows(0).Item("TomailID").ToString.Trim) Then
                    lblTomail.Text = ds.Tables(0).Rows(0).Item("TomailID")
                Else
                    lblTomail.Text = "NA"
                End If
                If Not String.IsNullOrEmpty(ds.Tables(0).Rows(0).Item("MobNum").ToString.Trim) Then
                    lblMobNum.Text = ds.Tables(0).Rows(0).Item("MobNum")
                Else
                    lblMobNum.Text = "NA"
                End If
            Else
                CRMMessage.Text = "No conversation found."
            End If
        Catch ex As Exception
            CRMMessage.Text = "Try again later."
        End Try
        upCRMConver.Update()
        mdlCRMViewConver.Show()
    End Sub

    Protected Sub gv_OnRowCreated(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            If e.Row.RowState = DataControlRowState.Alternate Then
                e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='#CAFF70';")
                e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#ffffff';")
            Else
                e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='#CAFF70';")
                e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#ffffff';")
            End If
        End If
    End Sub
    Protected Sub gvCRM_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles GVCRM.RowDataBound
        e.Row.Cells(1).Visible = False
    End Sub
#End Region
    ' Copy of document
    Protected Sub btnCopy_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCopy.Click
        ViewState("status") = "COPY"
        Session("DOCSTATUS") = "COPY"
        COPYHIT()
    End Sub
    Protected Sub COPYHIT()
        Dim pid As Integer = Convert.ToString(RetDocId(Session("EID")))
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select FF.*,FM.* from MMM_MST_FIELDS FF  WITH (NOLOCK) inner join MMM_MST_DOC M  WITH (NOLOCK) on FF.DocumentType =M.DocumentType INNER JOIN MMM_MST_FORMS FM  WITH (NOLOCK) ON FF.DOCUMENTTYPE=FM.FORMNAME  where FF.EID=" & Session("EID") & " and FM.EID=" & Session("EID") & "  AND M.tid =" & pid & " and FF.isactive=1 order by displayOrder", con)
        Dim ds As New DataSet()
        oda.Fill(ds, "fields")
        Dim ob As New DynamicForm
        ob._CallerPage = 1
        pnlFields.Controls.Clear()
        ob.CreateControlsOnPanel(ds.Tables("fields"), pnlFields, updatePanelEdit, btnActEdit, 0)
        Dim ROW1() As DataRow = ds.Tables("fields").Select("fieldtype='DROP DOWN' and (dropdowntype='MASTER VALUED' OR DROPDOWNTYPE='SESSION VALUED' OR DROPDOWNTYPE='CHILD VALUED') and lookupvalue is not null")
        If ROW1.Length > 0 Then
            For i As Integer = 0 To ROW1.Length - 1
                Dim DDL As DropDownList = TryCast(pnlFields.FindControl("fld" & ROW1(i).Item("FieldID").ToString()), DropDownList)
                DDL.AutoPostBack = True
                DDL.EnableViewState = True
                AddHandler DDL.TextChanged, AddressOf bindvalue
            Next
        End If

        '' optional para issplit=1 (last) is passed for Split doc feature 
        ob.FillControlsOnPanel(ds.Tables("fields"), pnlFields, "DOCUMENT", pid, , 1)
        Session("FIELDS") = ds.Tables("fields")
        Session("ACTION") = "EDIT"
        Session("AMENDMENT") = "COPYHIT"
        Session("ActionForm") = ds.Tables("fields").Rows(0).Item("documenttype").ToString()
        Dim dtchild As DataTable = ds.Tables("fields")
        Dim row() As DataRow = dtchild.Select("FieldType='CHILD ITEM'")
        If row.Length > 0 Then
            Dim btn1 As New Button
            For i As Integer = 0 To row.Length - 1
                '' removed frm here by sp 13-jan-14
                'btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                'AddHandler btn1.Click, AddressOf ShowChildForm
                Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                If PRitem.Length > 1 Then
                    Dim BTN2 As Button = pnlFields.FindControl("BTN" & PRitem(1).ToString & "-" & row(i).Item("FIELDID").ToString())
                    AddHandler BTN2.Click, AddressOf INSERTCHILDITEM
                End If

                Session("FNS") = Session("FNS") & PRitem(0).ToString() & ":" & row(i).Item("Fieldid").ToString() & ":"

                ' Dim array3Ds(,,) As String = New String(,,) {}

                Session("ITEM") = Nothing  ' ADDED FOR SESSION WHICH IS CREATED AT TIME OF FILTER 24 DEC 2014 
                Dim ColHEAD() As String = {}
                Dim DDLTXT() As String = {}
                Dim DDLVAL() As String = {}

                Session("COLHEAD") = ColHEAD
                Session("DDLTXT") = DDLTXT
                Session("DDLVAL") = DDLVAL
                '' by sunil for def value 16-dec-13 - ends


                Dim GRD As GridView = pnlFields.FindControl("GRD" & row(i).Item("Fieldid").ToString())
                ''AddHandler GRD.RowDataBound, AddressOf totalrow  '' moved frm here to below
                AddHandler GRD.RowCommand, AddressOf Delete
                AddHandler GRD.RowDeleting, AddressOf Deleting


                '' by sunil for def value insert for Aggrawal  16-dec-13 - starts

                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim strDF As String = "select * from mmm_mst_forms WITH (NOLOCK)  where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and  (isnull(IsDefaultRows,0)>0 or isnull(isinlineediting,0)=1)"
                Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
                Dim dtIsdv As New DataTable
                oda.SelectCommand.CommandText = strDF
                oda.Fill(dtIsdv)

                Dim dtIsDef As New DataTable
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim str As String = "select * from mmm_mst_forms  WITH (NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(IsDefaultRows,0)>0"
                oda.SelectCommand.CommandText = str
                oda.Fill(dtIsDef)

                If dtIsdv.Rows.Count = 1 OrElse dtIsDef.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                    ' Dim btnIDV As New Button
                    ' btnIDV = pnlFields.FindControl("BTN_" & row(i).Item("FieldID").ToString())  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
                    AddHandler GRD.RowDataBound, AddressOf gvData_InlineEdit
                    'balli 24 dec 2014 
                    If Session("EID") = 46 Or Session("EID") = 45 Then ' this is for button filter
                        Dim str1 = "BTNFLTER" & row(i).Item("FIELDID").ToString() & "_" & row(i).Item("DROPDOWN").ToString().Replace(" ", "_")
                        btn1 = pnlFields.FindControl(str1)
                        If Not btn1 Is Nothing Then
                            btn1.Visible = True
                            AddHandler btn1.Click, AddressOf Filter
                            Session("filterDropdown") = 1
                        End If
                    End If
                Else
                    AddHandler GRD.RowDataBound, AddressOf totalrow
                    btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                    If IsNothing(btn1) = False Then
                        AddHandler btn1.Click, AddressOf ShowChildForm
                    End If

                End If
                ' oda.Dispose()
                'dtIsdv.Dispose()

                Dim BTNUpload As New Button
                BTNUpload = pnlFields.FindControl("BTNUpload" & row(i).Item("FIELDID").ToString())
                If Not BTNUpload Is Nothing Then
                    BTNUpload.Visible = False
                End If


                If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                    'INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), ds.Tables("childDocid").Rows(0).Item("tid"))  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
                    If dtIsdv.Rows(0).Item("isinlineediting") = 1 Then
                        ShowDefaultValuesinGrid()
                    Else
                        INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsdv)
                    End If

                ElseIf dtIsDef.Rows.Count = 1 Then
                    INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pid, dtIsDef)
                Else
                    oda.SelectCommand.Parameters.Clear()
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.CommandText = "uspGetDetailITEMBYDOCID"
                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                    oda.SelectCommand.Parameters.AddWithValue("DOCID", pid)
                    oda.SelectCommand.Parameters.AddWithValue("FN", PRitem(0).ToString())
                    oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                    ds.Tables.Clear()
                    oda.Fill(ds, "ITEM")
                    oda.SelectCommand.CommandType = CommandType.Text

                    oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType,F1.Child_Specific_Text  FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH (NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid) inner join MMM_MST_DOC D  WITH (NOLOCK) ON F1.DOCUMENTTYPE=D.DOCUMENTTYPE  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType ='CHILD ITEM TOTAL' AND F2.DocumentType ='" & row(i).Item("dropdown").ToString() & "' AND D.TID=" & pid & " union all select fieldId,displayname,fieldtype,Child_specific_text from MMM_MST_FIELDS  WITH (NOLOCK) where eid=" & Session("EID") & " and DocumentType in (select documenttype from MMM_MST_DOC  WITH (NOLOCK) where eid=" & Session("EID") & " and tid=" & pid & ") and Child_Specific_text is not null"
                    oda.Fill(ds, "TOTAL")
                    'ob.BINDITEMGRID(ds.Tables("ITEM"), pnlFields, btn1.ID, updatePanelEdit, ds.Tables("TOTAL"))
                    ob.BINDITEMGRID1(ds.Tables("ITEM"), pnlFields, row(i).Item("FieldID"), updatePanelEdit, ds.Tables("TOTAL"), -1, -1, Session("Doctype"), Session("ChildDoctype"), Session("EID"))
                End If




            Next

            If Not Session("CHILD") Is Nothing Then
                pnlFields1.Controls.Clear()
                ob.CreateControlsOnPanel(Session("CHILD"), pnlFields1, updpnlchild, Button2, 0)
                Dim ROW2() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and lookupvalue is not null")
                If ROW2.Length > 0 Then
                    For i As Integer = 0 To ROW2.Length - 1
                        Dim DDL As DropDownList = TryCast(pnlFields1.FindControl("fld" & ROW2(i).Item("FieldID").ToString()), DropDownList)
                        DDL.AutoPostBack = True
                        AddHandler DDL.TextChanged, AddressOf bindvalue1
                    Next
                End If

                Dim ROW3() As DataRow = Session("CHILD").Select("fieldtype='DROP DOWN' and dropdowntype='MASTER VALUED' and kc_logic is not null And kc_logic <>''")
                If ROW3.Length > 0 Then
                    For i As Integer = 0 To ROW3.Length - 1
                        parentchild(ROW3(i).Item("FIELDID"), CInt(ROW3(i).Item("KC_LOGIC").ToString()))
                    Next
                End If
            End If
        End If
        updatePanelEdit.Update()
        ModalEditPopup.Show()
    End Sub


    Public Sub GridDdl_TextChanged(ByVal sender As Object, ByVal e As EventArgs)
        Dim ddl As DropDownList = TryCast(sender, DropDownList)
        Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
        Dim ar() As String = id.Split("_")
        Dim id1 As Integer = CInt(ar(0))
        Dim ob As New DynamicForm()
        ob.GridMultiLookup(ar(1), id1, ddl, lblDetail1, pnlFields)
        BindGRidLookup(ar(1), id1, ddl)
    End Sub

    Public Sub ActionGridDdl_TextChanged(ByVal sender As Object, ByVal e As EventArgs)
        Dim ddl As DropDownList = TryCast(sender, DropDownList)
        Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
        Dim ar() As String = id.Split("_")
        Dim id1 As Integer = CInt(ar(0))
        BindGRidLookup(ar(1), id1, ddl)
        Dim ob = New DynamicForm()
        ob.GridMultiLookup(ar(1), id1, ddl, lblTabApprove, pnlApprove)
        updatePanelApprove.Update()
        btnApprove_ModalPopupExtender.Show()
    End Sub

    Private Sub BindGRidLookup(ByVal rowIndex As Integer, ByVal ddlid As Integer, ByRef ddl As DropDownList)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select LOOKUPVALUE,dropdown,documenttype,dropdowntype from MMM_MST_FIELDS  WITH (NOLOCK) WHERE FIELDID=" & ddlid & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            Dim fldType As String = ""
            oda.Fill(DS, "data")
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("lookupvalue").ToString()
            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then

                    For iLookFld As Integer = 0 To lookfld.Length - 1
                        Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                        If fldPair.Length > 1 Then
                            Dim GRD As GridView = TryCast(ddl.Parent.Parent.Parent.Parent, GridView)
                            Dim grdRow As GridViewRow
                            Dim control As Control = Nothing

                            If IsNothing(GRD) = False Then
                                'WITH (NOLOCK) added by Himank on 28th sep 2015
                                oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WITH (NOLOCK)  WHERE FIELDID=" & fldPair(0) & "", con)
                                Dim dt As New DataTable
                                oda.Fill(dt)
                                If IsLookupField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString()) Then  '' check if control to be filled exists
                                    ' get fld dtl from fld master
                                    Dim STR As String = ""
                                    If fldPair(1).ToString.ToUpper = "C" Then    '' fldpair(0) = fieldid to be filled 
                                        Dim proc As String = dt.Rows(0).Item("CAL_FIELDS").ToString()
                                        If proc.Length > 1 Then
                                            Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                            Dim DDL0 As DropDownList
                                            If IsNothing(GRD) = False Then
                                                grdRow = GRD.Rows(rowIndex)
                                                Dim ctrlId As String = "fld" & DROPDOWN1
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                    If IsNothing(control) = True Then
                                                        DDL0 = CType(control, DropDownList)
                                                    End If
                                                Next
                                            End If

                                            ' = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                            If DDL0.SelectedItem.Text.ToUpper <> "SELECT" Then
                                                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                                oda.SelectCommand.Parameters.Clear()
                                                oda.SelectCommand.CommandText = proc
                                                oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                                                oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                                oda.SelectCommand.Parameters.AddWithValue("VALUE", ddl.SelectedValue)
                                                Dim dss As New DataTable
                                                oda.Fill(dss)
                                                Dim ddl1 As DropDownList '= TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                                If IsNothing(GRD) = False Then
                                                    grdRow = GRD.Rows(rowIndex)
                                                    Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                                    For i As Integer = 0 To grdRow.Cells.Count - 1
                                                        control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                        If IsNothing(control) = True Then
                                                            ddl1 = CType(control, DropDownList)
                                                        End If

                                                    Next
                                                End If
                                                If IsNothing(ddl1) = False Then
                                                    ddl1.Items.Clear()
                                                    ddl1.Items.Add("SELECT")
                                                    ddl1.Items(0).Value = "0"
                                                    For i As Integer = 0 To dss.Rows.Count - 1
                                                        ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                        ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                                    Next
                                                End If

                                            End If
                                        End If
                                    ElseIf fldPair(1).ToString.ToUpper = "R" Then
                                        Dim TAB1 As String = ""
                                        Dim TAB2 As String = ""
                                        Dim STID As String = ""
                                        Dim TID As String = ""
                                        If documenttype(0).ToString.ToUpper = "MASTER" Then
                                            TAB2 = "MMM_MST_MASTER"
                                            TID = "TID"
                                        ElseIf documenttype(0).ToString.ToUpper = "DOCUMENT" Then
                                            TAB2 = "MMM_MST_DOC"
                                            TID = "TID"
                                        ElseIf documenttype(1).ToString.ToUpper = "USER" Then
                                            TAB2 = "MMM_MST_USER"
                                            TID = "UID"
                                        End If
                                        Dim DOCTYPE() As String = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")
                                        If DOCTYPE(0).ToString.ToUpper = "MASTER" Then
                                            TAB1 = "MMM_MST_MASTER"
                                            STID = "TID"
                                        ElseIf DOCTYPE(0).ToString.ToUpper = "DOCUMENT" Then
                                            TAB1 = "MMM_MST_DOC"
                                            STID = "TID"
                                        ElseIf DOCTYPE(1).ToString.ToUpper = "USER" Then
                                            TAB1 = "MMM_MST_USER"
                                            STID = "UID"
                                        End If
                                        Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        ''Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.CommandText = "USP_GETMANNUALFILTER"
                                        oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                        oda.SelectCommand.Parameters.AddWithValue("@TAB1", TAB1)
                                        oda.SelectCommand.Parameters.AddWithValue("@TAB2", TAB2)
                                        oda.SelectCommand.Parameters.AddWithValue("@DOCUMENTTYPE", DOCTYPE(1).ToString)
                                        oda.SelectCommand.Parameters.AddWithValue("@FLDMAPPING", DOCTYPE(2).ToString)
                                        oda.SelectCommand.Parameters.AddWithValue("@AUTOFILTER", dt.Rows(0).Item("AUTOFILTER").ToString())
                                        oda.SelectCommand.Parameters.AddWithValue("@TID", TID)
                                        oda.SelectCommand.Parameters.AddWithValue("@STID", STID)
                                        oda.SelectCommand.Parameters.AddWithValue("@VAL", ddl.SelectedValue)
                                        Dim dss As New DataTable
                                        oda.Fill(dss)
                                        Dim ddl1 As DropDownList
                                        If IsNothing(GRD) = False Then
                                            grdRow = GRD.Rows(rowIndex)
                                            Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                            For i As Integer = 0 To grdRow.Cells.Count - 1
                                                control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                If IsNothing(control) = True Then
                                                    ddl1 = CType(control, DropDownList)
                                                End If

                                            Next
                                        End If
                                        If IsNothing(ddl1) = False Then
                                            ddl1.Items.Clear()
                                            ddl1.Items.Add("SELECT")
                                            ddl1.Items(0).Value = "0"
                                            For i As Integer = 0 To dss.Rows.Count - 1
                                                ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                            Next
                                        End If


                                    Else

                                        Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")  ' this contains to be filled values 
                                        Dim TABLENAME As String = ""
                                        Dim TID As String = "TID"
                                        If UCase(DROPDOWN(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "STATIC" Then
                                            If UCase(DROPDOWN(1).ToString()) = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf UCase(DROPDOWN(1).ToString()) = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                If DROPDOWN(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                    TID = "SID"
                                                Else
                                                    TID = "LOCID"
                                                End If
                                            Else
                                                TABLENAME = dt.Rows(0).Item("DBTABLENAME").ToString
                                            End If
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "SESSION" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        End If
                                        Dim SLVALUE As String() = ddl.SelectedValue.Split("|")
                                        If dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "AUTOCOMPLETE" Then

                                            If IsLookupField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString()) Then


                                                Dim txtBox As TextBox
                                                grdRow = GRD.Rows(rowIndex)
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.Cells(i).FindControl("fld" & Val(fldPair(0)).ToString())
                                                    If IsNothing(control) = True Then
                                                        txtBox = CType(control, TextBox)
                                                        txtBox.Text = String.Empty
                                                    End If

                                                Next


                                            End If

                                        ElseIf dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "DROP DOWN" Then
                                            Dim ob As New DynamicForm
                                            Dim AUTOFILTER As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                            Dim tids As String = ""

                                            ''Filter Data according to Userid
                                            tids = ob.UserDataFilter(DS.Tables("data").Rows(0).Item("documenttype").ToString(), DROPDOWN(1).ToString())
                                            If tids.Length > 2 Then
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                            Else
                                                xwhr = ""
                                            End If

                                            Dim ChildDoctype As String = ""

                                            If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                                Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                                ChildDoctype = ChildMid(1).ToString
                                            End If

                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.CommandText = "USP_BINDDDL"
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                            oda.SelectCommand.Parameters.AddWithValue("@TableName", TABLENAME)
                                            oda.SelectCommand.Parameters.AddWithValue("@Val", SLVALUE(0))
                                            oda.SelectCommand.Parameters.AddWithValue("@xwhr", xwhr)
                                            oda.SelectCommand.Parameters.AddWithValue("@tid", TID)
                                            If ChildDoctype.Length > 0 Then
                                                oda.SelectCommand.Parameters.AddWithValue("@documenttype", ChildDoctype)
                                            Else
                                                oda.SelectCommand.Parameters.AddWithValue("@documenttype", DROPDOWN(1))
                                            End If
                                            oda.SelectCommand.Parameters.AddWithValue("@fldmapping", DROPDOWN(2))
                                            oda.SelectCommand.Parameters.AddWithValue("@autofilter", AUTOFILTER)
                                            'oda.SelectCommand.CommandText = STR & " AND isAuth=1 " & xwhr & " Order by " & DROPDOWN(2).ToString()
                                            Dim dtFinal As New DataTable
                                            oda.Fill(dtFinal)
                                            Dim ddlo As DropDownList

                                            If IsNothing(GRD) = False Then
                                                grdRow = GRD.Rows(rowIndex)
                                                Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                                'For i As Integer = 0 To grdRow.Cells.Count - 1
                                                control = grdRow.FindControl(ctrlId & "_" & rowIndex)
                                                'control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                If IsNothing(control) = False Then
                                                    ddlo = CType(control, DropDownList)
                                                End If

                                                ' Next
                                            End If
                                            If IsNothing(ddlo) = False Then
                                                ddlo.Items.Clear()
                                                ddlo.Items.Add("SELECT")
                                                ddlo.Items(0).Value = "0"
                                                For i As Integer = 0 To dtFinal.Rows.Count - 1
                                                    ddlo.Items.Add(dtFinal.Rows(i).Item(0).ToString())
                                                    ddlo.Items(i + 1).Value = dtFinal.Rows(i).Item("tID")
                                                Next
                                            End If

                                        Else
                                            Dim TID1 As String() = ddl.SelectedValue.ToString.Split("|")
                                            Dim SELTID As String = ""
                                            If TID1.Length > 1 Then
                                                SELTID = TID1(1).ToString
                                            Else
                                                SELTID = TID1(0).ToString
                                            End If
                                            Dim value As String = ""
                                            Dim ChildDoctype As String = ""
                                            If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                                Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                                ChildDoctype = ChildMid(1).ToString
                                            End If

                                            If SELTID.ToString <> "0" And SELTID.ToString <> "" Then
                                                oda = New SqlDataAdapter("", con)
                                                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                                oda.SelectCommand.Parameters.Clear()
                                                oda.SelectCommand.CommandText = "uspGetMasterValue"
                                                oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                                                If ChildDoctype.Length > 0 Then
                                                    oda.SelectCommand.Parameters.AddWithValue("documentType", ChildDoctype)
                                                Else
                                                    oda.SelectCommand.Parameters.AddWithValue("documentType", documenttype(1))
                                                End If
                                                oda.SelectCommand.Parameters.AddWithValue("Type", documenttype(0))
                                                oda.SelectCommand.Parameters.AddWithValue("TID", SELTID)
                                                oda.SelectCommand.Parameters.AddWithValue("FLDMAPPING", fldPair(1))
                                                If con.State <> ConnectionState.Open Then
                                                    con.Open()
                                                End If
                                                value = oda.SelectCommand.ExecuteScalar().ToString()
                                            End If

                                            If IsLookupField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString()) Then

                                                Dim txtBox As TextBox
                                                grdRow = GRD.Rows(rowIndex)
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.FindControl("fld" & Val(fldPair(0) & rowIndex).ToString())
                                                    If IsNothing(control) = False Then
                                                        txtBox = CType(control, TextBox)
                                                        txtBox.Text = value
                                                    End If

                                                Next


                                            End If

                                        End If


                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If


        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try


    End Sub

    Private Function IsLookupField(ByVal rowIndex As Integer, ByVal grdId As String, ByVal ctrlId As String, ByVal fldType As String) As Boolean
        Try
            Dim GRD As GridView = TryCast(pnlFields.FindControl(grdId), GridView)
            Dim grdRow As GridViewRow
            Dim control As Control = Nothing

            If IsNothing(GRD) = False Then
                grdRow = GRD.Rows(rowIndex)
                If fldType = "Drop Down" Then
                    control = grdRow.FindControl(ctrlId & "_" & rowIndex)
                Else
                    control = grdRow.FindControl(ctrlId & rowIndex)
                End If

            End If
            If IsNothing(control) = False Then
                Return True
            Else
                Return False
            End If
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Function FillLookupField(ByVal rowIndex As Integer, ByVal grdId As String, ByVal ctrlId As String) As Boolean
        Try
            Dim GRD As GridView = TryCast(pnlFields.FindControl(grdId), GridView)
            Dim grdRow As GridViewRow
            Dim control As Control = Nothing

            If IsNothing(GRD) = False Then
                grdRow = GRD.Rows(rowIndex)
                For i As Integer = 0 To grdRow.Cells.Count - 1
                    control = grdRow.Cells(i).FindControl(ctrlId)
                    If IsNothing(control) = True Then
                        Return False
                    End If
                    Return True
                Next
            End If
            Return False
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Sub GetFiles()
        For Each ctrl As Control In pnlFields.Controls
            If TypeOf ctrl Is HiddenField Then
                Dim hdn As HiddenField = DirectCast(ctrl, HiddenField)
                If IsNothing(hdn) = False Then
                    Dim cid As String = DirectCast(ctrl, HiddenField).ID.ToString.Remove(0, 4)
                    Dim lbl As Label = TryCast(pnlFields.FindControl("lblf" & cid), Label)
                    If IsNothing(lbl) = False Then
                        lbl.Text = DirectCast(ctrl, HiddenField).Value
                    End If
                End If
            End If
        Next
    End Sub

    Private Sub ResetGrid()

        Dim grd As GridView = DirectCast(Session("Grid"), GridView)

        If IsNothing(grd) = False Then

            For Each row As GridViewRow In grd.Rows

                If row.RowIndex < grd.Rows.Count - 1 Then

                    For i As Integer = 0 To row.Cells.Count - 1
                        For Each ctl As Control In row.Cells(i).Controls
                            If TypeOf ctl Is FileUpload Then
                                Dim fld As New FileUpload
                                fld = DirectCast(ctl, FileUpload)
                                Dim ar = fld.ID.Split("_")
                                Dim hdn As HiddenField = DirectCast(row.FindControl("hdn_" & ar(1)), HiddenField)
                                Dim lbl As Label = DirectCast(row.FindControl("lblf_" & ar(1)), Label)
                                If IsNothing(hdn) = False Then
                                    Dim str As String = hdn.Value
                                    Dim id As String = hdn.ID
                                    lbl.Text = str
                                End If
                            End If
                        Next
                    Next

                End If
            Next

        End If

        grd = Nothing
        Session("Grid") = Nothing

    End Sub
    'Prashant_11_7
    Protected Sub CalculateFromGrid(ByVal sender As Object, ByVal e As EventArgs)
        ResetGrid()
        Dim btn As Button = DirectCast(sender, Button)
        Dim ar() = btn.ID.Split("_")
        Dim scrname As String = ViewState("MDOCTYPE").ToString()  'Request.QueryString("SC").ToString()
        scrname = scrname.Replace("+", " ")
        CalculateGRid(scrname, Convert.ToInt32(ar(1)))
    End Sub

    ' bkup 06 dec 14
    'Protected Sub CalculateGRid(ByVal Documenttype As String, ByVal fldId As Integer)
    '    Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con As SqlConnection = New SqlConnection(conStr)

    '    Dim Max As Integer = 0
    '    Dim Total As Integer = 0

    '    Dim tab As String


    '    If con.State <> ConnectionState.Open Then
    '        con.Open()
    '    End If

    '    Dim da As SqlDataAdapter = New SqlDataAdapter("SELECT  Dropdown from MMM_MST_FIELDS where fieldID=" & fldId, con)
    '    Dim dsp As New DataSet
    '    da.Fill(dsp, "fields")
    '    tab = dsp.Tables(0).Rows(0).Item("Dropdown").ToString()


    '    Dim GV As GridView = CType(pnlFields.FindControl("GRD" & fldId.ToString()), GridView)
    '    Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
    '    Dim con1 As SqlConnection = New SqlConnection(conStr1)
    '    Dim query As String = "Select F1.FieldID,F1.displayName,f1.fieldtype,F1.IsTotal,F1.DocumentType,f2.dropdown,F1.InLineEditing,f1.inlinemapping  from MMM_MST_FIELDS f1 join MMM_MST_FIELDS f2 on F1.DOCUMENTTYPE =F2.dropdown where F1.DocumentType ='" & tab & "' and f2.DocumentType ='" & Documenttype & "' and f1.EID=" & Session("EID") & " And f1.IsActive=1  and f2.IsActive=1 "
    '    Dim ODA As SqlDataAdapter = New SqlDataAdapter(query, con1)
    '    Dim dtFields1 As New DataTable
    '    ODA.Fill(dtFields1)



    '    'My
    '    Dim sqlFields As String = ""
    '    Dim fields As New DataTable
    '    Dim sqlFields1 As String = ""
    '    Dim fields1 As New DataTable
    '    Dim daFields As SqlDataAdapter = New SqlDataAdapter("select FieldID,fieldtype,DisplayName,IsTotal,FieldMapping,DisplayOrder,DocumentType,dropdown,InLineEditing from MMM_MST_Fields where documenttype='" & tab & "' and eid=" & Session("EID") & " and isActive=1 And inlinemapping is not null order by displayorder ", con)
    '    daFields.Fill(fields)

    '    daFields.SelectCommand.CommandText = "select FieldID,fieldtype,DisplayName,IsTotal,FieldMapping,DisplayOrder,DocumentType,dropdown,InLineEditing from MMM_MST_Fields where documenttype='" & tab & "' and eid=" & Session("EID") & " and isActive=1 And InLineEditing =1 order by displayorder"
    '    daFields.Fill(fields1)

    '    fields1.Merge(fields)
    '    Dim dv As DataView = fields1.DefaultView
    '    dv.Sort = "DisplayOrder ASC"
    '    Dim dtFields As DataTable = dv.ToTable


    '    'If dvtable.Rows.Count > 0 Then
    '    '    For i As Integer = 0 To dvtable.Rows.Count - 1
    '    '        sqlFields = sqlFields & " " & dvtable.Rows(i).Item("Fieldmapping").ToString() & "[" & dvtable.Rows(i).Item("displayname") & "],"
    '    '    Next
    '    'End If


    '    'sqlFields = sqlFields.Substring(0, sqlFields.Length - 1)

    '    'My

    '    Dim ds1 As DataTable = GV.DataSource
    '    If Not ds1 Is Nothing Then
    '        'Dim dr2 As DataRow = ds1.NewRow()
    '        If ds1.Rows.Count > 0 Then

    '            For i As Integer = 0 To ds1.Columns.Count - 1

    '                For j As Integer = 0 To dtFields.Rows.Count - 1

    '                    If dtFields.Rows(j).Item("displayName").ToString = ds1.Columns(i).ColumnName And Convert.ToInt32(dtFields.Rows(j).Item("IsTotal")) = 1 Then
    '                        Dim sum As Double = 0
    '                        For Each gr As GridViewRow In GV.Rows
    '                            If gr.RowIndex < GV.Rows.Count - 1 Then

    '                                If dtFields.Rows(j).Item("InLineEditing").ToString() = "1" Then
    '                                    Dim txt1 As TextBox = CType(gr.FindControl("fld" & dtFields.Rows(j).Item("FieldID").ToString() & gr.RowIndex.ToString), TextBox)
    '                                    If Not txt1 Is Nothing Then
    '                                        If Not String.IsNullOrEmpty(txt1.Text.Trim) And Not txt1.Text.Trim.ToUpper = "NAN" Then 'NaN
    '                                            sum += Convert.ToDouble(txt1.Text)
    '                                        End If
    '                                    End If
    '                                Else
    '                                    If Not String.IsNullOrEmpty(gr.Cells(i).Text.Trim) And Not gr.Cells(i).Text.Trim.ToUpper = "NAN" Then
    '                                        sum += Convert.ToDouble(gr.Cells(i).Text)
    '                                    End If
    '                                End If
    '                            End If

    '                        Next
    '                        'dr2(i) = sum
    '                        GV.Rows(GV.Rows.Count - 1).Cells(i).Text = sum
    '                    End If
    '                Next
    '            Next
    '        End If

    '    Else
    '        If GV.Rows.Count > 0 Then
    '            For i As Integer = 0 To GV.HeaderRow.Cells.Count - 1
    '                For j As Integer = 0 To GV.Rows.Count - 1

    '                    If dtFields.Rows(j).Item("displayName").ToString = GV.HeaderRow.Cells(i).Text And Convert.ToInt32(dtFields.Rows(j).Item("IsTotal")) = 1 Then
    '                        Dim sum As Double = 0
    '                        For Each gr As GridViewRow In GV.Rows
    '                            If gr.RowIndex < GV.Rows.Count - 1 Then

    '                                If dtFields.Rows(j).Item("InLineEditing").ToString() = "1" Then
    '                                    Dim txt1 As TextBox = CType(gr.FindControl("fld" & dtFields.Rows(j).Item("FieldID").ToString() & gr.RowIndex.ToString), TextBox)
    '                                    If Not txt1 Is Nothing Then
    '                                        If Not String.IsNullOrEmpty(txt1.Text.Trim) And Not txt1.Text.Trim.ToUpper = "NAN" Then
    '                                            sum += Convert.ToDouble(txt1.Text)
    '                                        End If
    '                                    End If
    '                                Else
    '                                    If Not String.IsNullOrEmpty(gr.Cells(i).Text.Trim) And Not gr.Cells(i).Text.Trim.ToUpper = "NAN" Then
    '                                        sum += Convert.ToDouble(gr.Cells(i).Text)
    '                                    End If
    '                                End If
    '                            End If

    '                        Next
    '                        'dr2(i) = sum
    '                        GV.Rows(GV.Rows.Count - 1).Cells(i).Text = sum
    '                    End If
    '                Next
    '            Next

    '        End If

    '    End If

    '    da = New SqlDataAdapter("SELECT  * from MMM_MST_FIELDS where EID=" & Session("EID").ToString() & " and Documenttype='" & Documenttype & "' and FieldType in ('Child Item Total','Child Item MAX') and isActive=1 order by displayOrder", con)

    '    Dim ds As New DataSet
    '    da.Fill(ds, "fields")
    '    Dim dt As DataTable = ds.Tables("fields")


    '    If dt.Rows.Count > 0 Then
    '        Dim grd As GridView = TryCast(pnlFields.FindControl("GRD" & fldId.ToString), GridView)
    '        If Not grd Is Nothing Then
    '            For Each dr As DataRow In dt.Rows
    '                Total = 0
    '                Dim lookupId As Integer = Convert.ToInt32(dr.Item("dropdown"))
    '                For Each gr As GridViewRow In grd.Rows
    '                    If gr.RowIndex < grd.Rows.Count - 1 Then

    '                        Dim txt1 As TextBox = CType(gr.FindControl("fld" & dr.Item("dropdown").ToString() & gr.RowIndex.ToString), TextBox)
    '                        If Not txt1 Is Nothing Then
    '                            ' cell = i
    '                            If dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then
    '                                If txt1.Text.Trim = "" Then
    '                                Else
    '                                    Total += Convert.ToInt32(txt1.Text)
    '                                End If
    '                            ElseIf dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM MAX" Then
    '                                If txt1.Text.Trim = "" Then
    '                                Else
    '                                    If Max < Convert.ToInt32(txt1.Text) Then
    '                                        Max = Convert.ToInt32(txt1.Text)
    '                                    End If
    '                                End If
    '                            End If
    '                        End If

    '                    End If
    '                Next

    '                ' for checking the calculation  child item only for inlinediting feature "child item total"  added by balli 
    '                da = New SqlDataAdapter("SELECT  * from MMM_MST_FIELDS where EID=" & Session("EID").ToString() & " and Documenttype='" & tab & "' and fieldid='" & dr.Item("dropdown") & "'  and inlineediting=1 ", con)
    '                da.SelectCommand.CommandType = CommandType.Text
    '                da.Fill(ds, "childData")
    '                If ds.Tables("childData").Rows.Count > 0 Then
    '                    If ds.Tables("childData").Rows(0).Item("FieldId").ToString() = dr.Item("dropdown").ToString() Then
    '                        Dim txt As TextBox = CType(pnlFields.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
    '                        If dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then
    '                            txt.Text = Total
    '                        ElseIf dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM MAX" Then
    '                            txt.Text = Max
    '                        End If
    '                    End If
    '                End If
    '                'Dim txt As TextBox = CType(pnlFields.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
    '                'If dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then
    '                '    txt.Text = Total
    '                'ElseIf dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM MAX" Then
    '                '    txt.Text = Max
    '                'End If
    '            Next

    '        End If

    '    End If

    'End Sub


    Protected Sub CalculateGRid(ByVal Documenttype As String, ByVal fldId As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim Max As Double = 0
        Dim Total As Double = 0
        Dim tab As String
        Try
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim da As SqlDataAdapter = New SqlDataAdapter("SELECT  Dropdown from MMM_MST_FIELDS  WITH (NOLOCK) where fieldID=" & fldId, con)
            Dim dsp As New DataSet
            da.Fill(dsp, "fields")
            tab = dsp.Tables(0).Rows(0).Item("Dropdown").ToString()
            Dim GV As GridView = CType(pnlFields.FindControl("GRD" & fldId.ToString()), GridView)
            Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con1 As SqlConnection = New SqlConnection(conStr1)
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim query As String = "Select F1.FieldID,F1.displayName,f1.fieldtype,F1.IsTotal,F1.DocumentType,f2.dropdown,F1.InLineEditing,F1.cal_text,F1.cal_fields  from MMM_MST_FIELDS f1 WITH (NOLOCK)  join MMM_MST_FIELDS f2  WITH (NOLOCK) on F1.DOCUMENTTYPE =F2.dropdown where F1.DocumentType ='" & tab & "' and f2.DocumentType ='" & Documenttype & "' and f1.EID=" & Session("EID") & " And f1.IsActive=1  and f2.IsActive=1"
            Dim ODA As SqlDataAdapter = New SqlDataAdapter(query, con1)
            Dim dtFields As New DataTable
            ODA.Fill(dtFields)

            Dim ds1 As DataTable = GV.DataSource
            If Not ds1 Is Nothing Then
                'Dim dr2 As DataRow = ds1.NewRow()
                If ds1.Rows.Count > 0 Then

                    For i As Integer = 0 To ds1.Columns.Count - 1

                        For j As Integer = 0 To dtFields.Rows.Count - 1

                            If dtFields.Rows(j).Item("displayName").ToString = ds1.Columns(i).ColumnName And Convert.ToInt32(dtFields.Rows(j).Item("IsTotal")) = 1 Then
                                Dim sum As Double = 0
                                For Each gr As GridViewRow In GV.Rows
                                    If gr.RowIndex < GV.Rows.Count - 1 Then

                                        If dtFields.Rows(j).Item("InLineEditing").ToString() = "1" Then

                                            If dtFields.Rows(j).Item("fieldtype").ToString() = "Calculative Field" Then
                                                Dim cal_text As String = ""
                                                Dim cal_mpng As String = ""
                                                Dim stringf As String = ""
                                                Dim fldmpng As String = ""
                                                Dim orignlfinalstr As String = ""
                                                Dim finalstrr As String = ""

                                                cal_text = dtFields.Rows(j).Item("cal_text").ToString()
                                                '      cal_mpng = dtFields.Rows(j).Item("fieldmapping").ToString()

                                                stringf = cal_text
                                                For l As Integer = 0 To dtFields.Rows.Count - 1
                                                    If cal_text.Trim().Contains("{" & dtFields.Rows(l).Item("displayname").ToString().Trim() & "}") Then
                                                        fldmpng = "fld" & dtFields.Rows(l).Item("FieldID").ToString().Trim()
                                                        stringf = stringf.Replace("{" & dtFields.Rows(l).Item("displayname").ToString().Trim() & "}", "{" & fldmpng.Trim() & "}")
                                                    End If
                                                Next
                                                stringf = stringf.Replace("{", "")
                                                stringf = stringf.Replace("}", "")
                                                Dim s As String() = Split(stringf, "=")
                                                Dim resultfldd As String = s(0)
                                                orignlfinalstr = s(1)
                                                finalstrr = orignlfinalstr
                                                Dim arr As String() = finalstrr.Split("*", "/", "-", "(", ")", "+", ",")
                                                Dim ghn As String = ""
                                                For p As Integer = 0 To arr.Length - 1
                                                    If arr(p).Contains("fld") Then
                                                        Dim txtBox1 As TextBox = CType(gr.FindControl(arr(p) & gr.RowIndex.ToString), TextBox)
                                                        ghn = txtBox1.Text
                                                        finalstrr = finalstrr.Replace(arr(p), ghn)
                                                    Else

                                                    End If
                                                    'finalstrr = finalstrr.Replace(arr(p), ghn)
                                                Next
                                                ' added by balli
                                                If Right(finalstrr, 1) = "," Then
                                                    finalstrr = Left(finalstrr, finalstrr.Length - 1)
                                                End If
                                                Dim res = New DataTable().Compute(finalstrr, 0).ToString()
                                                ' Dim res = "89"
                                                Dim txt1 As TextBox = CType(gr.FindControl("fld" & dtFields.Rows(j).Item("FieldID").ToString() & gr.RowIndex.ToString), TextBox)
                                                If Not txt1 Is Nothing Then
                                                    If Not String.IsNullOrEmpty(txt1.Text.Trim) And Not txt1.Text.Trim.ToUpper = "NAN" Then 'NaN
                                                        txt1.Text = res
                                                        sum += Convert.ToDouble(txt1.Text)
                                                    End If
                                                End If
                                            Else
                                                Dim txt1 As TextBox = CType(gr.FindControl("fld" & dtFields.Rows(j).Item("FieldID").ToString() & gr.RowIndex.ToString), TextBox)
                                                If Not txt1 Is Nothing Then
                                                    If Not String.IsNullOrEmpty(txt1.Text.Trim) And Not txt1.Text.Trim.ToUpper = "NAN" Then 'NaN
                                                        sum += Convert.ToDouble(txt1.Text)
                                                    End If
                                                End If
                                            End If




                                        Else
                                            If Not String.IsNullOrEmpty(gr.Cells(i).Text.Trim) And Not gr.Cells(i).Text.Trim.ToUpper = "NAN" Then
                                                sum += Convert.ToDouble(gr.Cells(i).Text)
                                            End If
                                        End If
                                    End If

                                Next
                                'dr2(i) = sum
                                GV.Rows(GV.Rows.Count - 1).Cells(i).Text = sum
                            End If
                        Next
                    Next
                End If
            Else
                If GV.Rows.Count > 0 Then
                    For i As Integer = 0 To GV.HeaderRow.Cells.Count - 1
                        For j As Integer = 0 To GV.Rows.Count - 1

                            If dtFields.Rows(j).Item("displayName").ToString = GV.HeaderRow.Cells(i).Text And Convert.ToInt32(dtFields.Rows(j).Item("IsTotal")) = 1 Then
                                Dim sum As Double = 0
                                For Each gr As GridViewRow In GV.Rows
                                    If gr.RowIndex < GV.Rows.Count - 1 Then

                                        If dtFields.Rows(j).Item("InLineEditing").ToString() = "1" Then
                                            Dim txt1 As TextBox = CType(gr.FindControl("fld" & dtFields.Rows(j).Item("FieldID").ToString() & gr.RowIndex.ToString), TextBox)
                                            If Not txt1 Is Nothing Then
                                                If Not String.IsNullOrEmpty(txt1.Text.Trim) And Not txt1.Text.Trim.ToUpper = "NAN" Then
                                                    sum += Convert.ToDouble(txt1.Text)
                                                End If
                                            End If
                                        Else
                                            If Not String.IsNullOrEmpty(gr.Cells(i).Text.Trim) And Not gr.Cells(i).Text.Trim.ToUpper = "NAN" Then
                                                sum += Convert.ToDouble(gr.Cells(i).Text)
                                            End If
                                        End If
                                    End If

                                Next
                                'dr2(i) = sum
                                GV.Rows(GV.Rows.Count - 1).Cells(i).Text = sum
                            End If
                        Next
                    Next

                End If

            End If
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            da = New SqlDataAdapter("SELECT  * from MMM_MST_FIELDS  WITH (NOLOCK) where EID=" & Session("EID").ToString() & " and Documenttype='" & Documenttype & "' and FieldType in ('Child Item Total','Child Item MAX') and isActive=1 order by displayOrder", con)
            Dim ds As New DataSet
            da.Fill(ds, "fields")
            Dim dt As DataTable = ds.Tables("fields")

            If dt.Rows.Count > 0 Then
                Dim grd As GridView = TryCast(pnlFields.FindControl("GRD" & fldId.ToString), GridView)
                If Not grd Is Nothing Then
                    For Each dr As DataRow In dt.Rows
                        Total = 0
                        Dim lookupId As Integer = Convert.ToDouble(dr.Item("dropdown"))
                        For Each gr As GridViewRow In grd.Rows
                            If gr.RowIndex < grd.Rows.Count - 1 Then

                                Dim txt1 As TextBox = CType(gr.FindControl("fld" & dr.Item("dropdown").ToString() & gr.RowIndex.ToString), TextBox)
                                If Not txt1 Is Nothing Then
                                    ' cell = i
                                    If dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then
                                        If txt1.Text.Trim = "" Then
                                        Else
                                            Total += Convert.ToDouble(txt1.Text)
                                        End If
                                    ElseIf dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM MAX" Then
                                        If txt1.Text.Trim = "" Then
                                        Else
                                            If Max < Convert.ToDouble(txt1.Text) Then
                                                Max = Convert.ToDouble(txt1.Text)
                                            End If
                                        End If
                                    End If
                                End If

                            End If
                        Next
                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                        da = New SqlDataAdapter("SELECT  * from MMM_MST_FIELDS WITH (NOLOCK)  where EID=" & Session("EID").ToString() & " and Documenttype='" & tab & "' and fieldid='" & dr.Item("dropdown") & "'  and inlineediting=1 ", con)
                        da.SelectCommand.CommandType = CommandType.Text
                        da.Fill(ds, "childData")
                        If ds.Tables("childData").Rows.Count > 0 Then
                            If ds.Tables("childData").Rows(0).Item("FieldId").ToString() = dr.Item("dropdown").ToString() Then
                                Dim txt As TextBox = CType(pnlFields.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                                If dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then
                                    txt.Text = Total
                                ElseIf dr.Item("FieldType").ToString().ToUpper = "CHILD ITEM MAX" Then
                                    txt.Text = Max
                                End If
                            End If
                        End If

                    Next

                End If
            End If
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
        End Try
    End Sub

    Protected Function ValidatingChildItem_DV(ByVal formname As String) As String
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dtField As New DataTable
        Dim updquery As String = "SAVE"

        'Prashant_22_7
        Dim dateFields As Integer = 0
        Dim Flag1 As Integer = 0
        Dim ErrFlag As String = ""
        Dim skipRow As Integer = 0
        Dim lastRow As Integer = 0
        'Prashant_22_7

        Dim ob As New DynamicForm()
        ' dtField = ViewState(formname)
        dtField = Session("D" & formname)
        Dim dtvalue As DataTable = Session(formname & "VAL")
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'Session("id")

        Dim MaxVal As Double = -999

        Dim dt As New DataTable
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        ODA.SelectCommand.CommandText = "select * from mmm_mst_fields  WITH (NOLOCK) where eid=" & Session("eid") & " and documenttype='" & Session("Doctype") & "' and dropdown='" & formname & "'"
        ODA.SelectCommand.CommandType = CommandType.Text
        ODA.SelectCommand.Parameters.Clear()
        ODA.Fill(dt)

        Dim dtTotal As New DataTable
        ODA.SelectCommand.CommandType = CommandType.Text
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        ODA.SelectCommand.CommandText = "SELECT F1.FieldID [MainFieldID],F2.FieldID [ChildFieldID],F2.displayName [CdisplayName],f1.fieldtype [MFIELDTYPE] ,F1.dropdown [mDropDown],F1.displayName [MdisplayName],F1.FieldMapping [MFieldMapping]  FROM MMM_MST_FIELDS F1  WITH (NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH (NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType in ('CHILD ITEM MAX','CHILD ITEM TOTAL') AND F2.DocumentType ='" & formname & "' AND F1.DOCUMENTTYPE='" & Session("Document") & "'"
        ODA.Fill(dtTotal)

        Dim isTotal As Boolean = False
        Dim cDispName As String = ""
        Dim Childtotal As Double = 0
        If dtTotal.Rows.Count = 1 Then
            isTotal = True
            cDispName = dtTotal.Rows(0).Item("cdisplayname").ToString
        End If

        Dim GID As String = dt.Rows(0).Item("fieldId").ToString
        Dim GV As GridView = CType(pnlFields.FindControl("GRD" & GID.ToString()), GridView)
        Dim cnt As Integer = 0
        For Each GR As GridViewRow In GV.Rows
            If GR.RowType = DataControlRowType.DataRow Then
                If GR.Cells(0).Text.ToUpper <> "TOTAL" Then

                    Dim STRFld As String = ""
                    Dim STRVal As String = ""

                    'Prashant_22_7
                    dateFields = 0
                    ErrFlag = ""
                    skipRow = 0
                    'Prashant_22_7

                    For j As Integer = 0 To dtField.Rows.Count - 1
                        STRFld &= dtField.Rows(j).Item("fieldmapping").ToString & ","
                        Dim colValue As String = ""
                        Dim FldID As String = ""
                        FldID = dtField.Rows(j).Item("fieldid").ToString()
                        If dtField.Rows(j).Item("inlineediting").ToString = "1" Then


                            Dim ftype As String = dtField.Rows(j).Item("fieldtype").ToString()
                            If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype = "MULTI LOOKUP" Then
                                If dtField.Rows(j).Item("datatype").ToString().ToUpper = "NUMERIC" And dtField.Rows(j).Item("isrequired") = 1 Then
                                    Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                    If cb IsNot Nothing Then
                                        colValue = cb.Text
                                        If cb.Text.Trim = "" Then
                                            'updquery = "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, should be greater than 0"
                                            'Return updquery
                                            'Exit Function
                                            ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                            Flag1 += 1
                                        ElseIf cb.Text.Trim = "0" Then
                                            dateFields += 1
                                        Else
                                            skipRow = 1
                                            lastRow = GR.RowIndex
                                        End If
                                    Else
                                        colValue = "0"
                                    End If
                                    If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                        If colValue <> "" Then
                                            Childtotal = Childtotal + Convert.ToDouble(colValue)
                                        End If
                                    End If

                                ElseIf dtField.Rows(j).Item("datatype").ToString().ToUpper = "DATETIME" Then
                                    dateFields += 1
                                ElseIf dtField.Rows(j).Item("datatype").ToString().ToUpper = "TEXT" And dtField.Rows(j).Item("isrequired") = 1 Then
                                    Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                    If cb IsNot Nothing Then
                                        If cb.Text.Trim = "" Then
                                            ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                            Flag1 += 1
                                        Else
                                            skipRow = 1
                                            lastRow = GR.RowIndex
                                        End If
                                    End If
                                ElseIf dtField.Rows(j).Item("datatype").ToString().ToUpper = "TEXT" And dtField.Rows(j).Item("isrequired") = 0 Then
                                    dateFields += 1
                                    Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                    If cb.Text.Trim <> "" Then
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If
                                ElseIf dtField.Rows(j).Item("datatype").ToString().ToUpper = "NUMERIC" And dtField.Rows(j).Item("isrequired") = 0 Then
                                    dateFields += 1
                                    Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                    If cb.Text.Trim <> "" And cb.Text.Trim <> "0" Then
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If

                                Else
                                    'skipRow = 1
                                    'lastRow = GR.RowIndex
                                End If
                            End If
                            If ftype.ToUpper() = "LOOKUPDDL" Or ftype.ToUpper() = "MULTI LOOKUPDDL" Then
                                Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
                                If dtField.Rows(j).Item("isrequired") = 1 Then
                                    If cb IsNot Nothing Then
                                        colValue = cb.SelectedValue.ToString
                                    Else
                                        colValue = "0"
                                    End If
                                    If colValue = "0" OrElse colValue = "" OrElse colValue.ToUpper().Trim() = "SELECT" Then
                                        ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                        Flag1 += 1
                                    Else
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If
                                Else
                                    colValue = cb.SelectedValue.ToString
                                    dateFields += 1
                                    If colValue <> "0" And colValue <> "" And colValue.ToUpper() <> "SELECT" Then
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If
                                End If
                            End If

                            If ftype.ToUpper() = "DROP DOWN" Then
                                Dim dtFilter As New DataTable

                                Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
                                If dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                    If dtField.Rows(j).Item("isrequired") = 1 Then

                                        If cb IsNot Nothing Then
                                            colValue = cb.SelectedValue.ToString

                                        Else
                                            colValue = "0"
                                        End If
                                        If colValue = "0" OrElse colValue = "" Then
                                            ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                            Flag1 += 1
                                        Else
                                        End If
                                    Else
                                        colValue = cb.SelectedValue.ToString
                                        dateFields += 1
                                        If colValue <> "0" And colValue <> "" Then
                                            skipRow = 1
                                            lastRow = GR.RowIndex
                                        End If
                                    End If

                                ElseIf dtField.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                    'Dim strQuery As String = "select SUBSTRING(KC_Logic,0,CHARINDEX('-', KC_Logic)) ParentDropdown,SUBSTRING(KC_Logic,CHARINDEX('-', KC_Logic) + 1,len(KC_Logic)- CHARINDEX(',', KC_Logic)-2) Childdropdown"
                                    'strQuery += "  from MMM_MST_fields where documenttype ='" & Session("Doctype") & "' and eid=" & Session("EID") & " and fieldtype='Child Item' and dropdown='" & formname & "'"
                                    'strQuery += " and  SUBSTRING(KC_Logic,CHARINDEX('-', KC_Logic) + 1,len(KC_Logic)- CHARINDEX(',', KC_Logic)-2)='" & FldID & "'"
                                    'ODA.SelectCommand.CommandText = strQuery
                                    'ODA.Fill(dtFilter)

                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                    Dim str = " Select * from MMM_MST_fields  WITH (NOLOCK)  where Eid=" & Session("Eid") & " and KC_Logic Like '%-" & FldID & "'"
                                    ODA.SelectCommand.CommandText = str
                                    Dim dtPr As New DataTable()
                                    ODA.Fill(dtPr)
                                    If dtPr.Rows.Count > 0 Then
                                        'WITH (NOLOCK) added by Himank on 28th sep 2015
                                        Dim strQuery As String = "select SUBSTRING(KC_Logic,0,CHARINDEX('-', KC_Logic)) ParentDropdown,SUBSTRING(KC_Logic,CHARINDEX('-', KC_Logic) + 1,len(KC_Logic)- CHARINDEX(',', KC_Logic)-2) Childdropdown"
                                        strQuery += "  from MMM_MST_fields  WITH (NOLOCK) where documenttype ='" & Session("Document") & "' and eid=" & Session("EID") & " and fieldtype='Child Item' and dropdown='" & formname & "'"
                                        strQuery += " and  SUBSTRING(KC_Logic,CHARINDEX('-', KC_Logic) + 1,len(KC_Logic)- CHARINDEX(',', KC_Logic)-2)=" & FldID
                                        ODA.SelectCommand.CommandText = strQuery
                                        ODA.Fill(dtFilter)
                                    Else
                                        dtFilter.Columns.Add("ParentDropdown")
                                        dtFilter.Columns.Add("Childdropdown")
                                    End If

                                    If dtFilter.Rows.Count = 0 Then

                                        If dtField.Rows(j).Item("isrequired") = 1 Then
                                            If cb IsNot Nothing Then
                                                colValue = cb.SelectedValue.ToString

                                            Else
                                                colValue = "0"
                                            End If
                                            If colValue = "0" OrElse colValue = "" OrElse colValue.ToUpper() = "SELECT" Then
                                                ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                                Flag1 += 1
                                            Else
                                                skipRow = 1
                                                lastRow = GR.RowIndex
                                            End If
                                        Else
                                            colValue = cb.SelectedValue.ToString
                                            dateFields += 1
                                            If colValue <> "0" And colValue <> "" And colValue.ToUpper() <> "SELECT" Then
                                                skipRow = 1
                                                lastRow = GR.RowIndex
                                            End If
                                        End If

                                    Else

                                        colValue = IIf(IsNothing(cb), "", cb.SelectedValue.ToString)
                                        dateFields += 1
                                    End If

                                End If

                            End If
                            If ftype.ToUpper() = "CHECKBOX LIST" Then
                                Dim cb As CheckBoxList = CType(GR.FindControl("fld" & FldID & "_" & cnt), CheckBoxList)

                                If dtField.Rows(j).Item("isrequired") = 1 Then
                                    If cb IsNot Nothing Then
                                        For Each item As ListItem In cb.Items
                                            If item.Selected Then
                                                colValue &= item.Value & ","
                                            End If
                                        Next
                                    Else
                                        colValue = ""
                                    End If

                                    If colValue = "" Then
                                        ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                        Flag1 += 1
                                        If j = dtField.Rows.Count - 1 Then
                                            dateFields -= 1
                                        End If
                                    Else

                                    End If
                                Else
                                    If cb IsNot Nothing Then
                                        For Each item As ListItem In cb.Items
                                            If item.Selected Then
                                                colValue &= item.Value & ","
                                            End If
                                        Next
                                    Else
                                        colValue = ""
                                    End If
                                    dateFields += 1
                                    If colValue <> "" Then
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If
                                End If

                            End If
                            If ftype.ToUpper() = "FILE UPLOADER" Then
                                Dim cell As Integer = -1
                                Dim txtBox As FileUpload = CType(GR.FindControl("fld_" & FldID & "_" & cnt), FileUpload)

                                'Prashant 30-6-2014
                                Dim txtBox1 As Label = CType(GR.FindControl("lblf_" & FldID), Label)

                                Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & FldID), HiddenField)
                                txtBox1.Text = hdn.Value

                                '    If txtBox.HasFile Then
                                '        Dim FN As String = ""
                                '        Dim ext As String = ""
                                '        Dim flag As Integer = 0
                                '        Dim Validext As String = ""
                                '        FN = Left(txtBox.FileName, txtBox.FileName.LastIndexOf("."))
                                '        ext = txtBox.FileName.Substring(txtBox.FileName.LastIndexOf("."), (txtBox.FileName.Length - txtBox.FileName.LastIndexOf(".")))
                                '        If IsDBNull(dtField.Rows(j).Item("UploadAllowedTypes")) = True OrElse Trim(dtField.Rows(j).Item("UploadAllowedTypes")) = "" Then
                                '        Else
                                '            Dim type As String() = Split(dtField.Rows(j).Item("UploadAllowedTypes").ToString(), ",")

                                '            For k As Integer = 0 To type.Length - 1
                                '                If type(k) = ext Then
                                '                    flag = 0 ' if file type is match then passed and saved into DB
                                '                    Exit For
                                '                Else
                                '                    flag = 1 ' check for type of the not matched 
                                '                    Validext &= type(k).ToString() & ","
                                '                End If
                                '            Next
                                '            If flag = 0 Then
                                '            Else
                                '                updquery = "Invalid file type in (" & formname & ") allowed file types are (" & Validext.Substring(0, Validext.Length - 1) & ")"
                                '                Return updquery
                                '                Exit Function
                                '            End If
                                '        End If
                                If txtBox1.Text IsNot "" Then
                                    'Prashant
                                    skipRow = 1
                                    lastRow = GR.RowIndex

                                    Dim ext As String = ""
                                    Dim flag As Integer = 0
                                    Dim Validext As String = ""
                                    Dim sourceFile As String = ""
                                    Dim curFileSize As Integer = 0
                                    If Not Request.QueryString("TID") Is Nothing Then
                                        sourceFile = Server.MapPath("~/DOCS/" & Session("EID") & "/" + txtBox1.Text)
                                        Dim finfo As New FileInfo(Server.MapPath("~/DOCS/" & Session("EID") & "/" + txtBox1.Text))

                                        ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
                                        curFileSize = finfo.Length
                                    Else
                                        sourceFile = Server.MapPath("~/DOCS/temp/" + txtBox1.Text)

                                        Dim finfo
                                        Dim hdnf As HiddenField = CType(GR.FindControl("hdnf_" & FldID), HiddenField)
                                        If hdnf.Value = "0" Then
                                            finfo = New FileInfo(Server.MapPath("~/DOCS/" & Session("EID") & "/" + txtBox1.Text))
                                        Else
                                            finfo = New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))
                                        End If
                                        ' Dim finfo As New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))

                                        ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
                                        curFileSize = finfo.Length
                                    End If
                                    If IsDBNull(dtField.Rows(j).Item("UploadAllowedTypes")) = True OrElse Trim(dtField.Rows(j).Item("UploadAllowedTypes")) = "" Then
                                    Else
                                        Dim type As String() = Split(dtField.Rows(j).Item("UploadAllowedTypes").ToString(), ",")
                                        For k As Integer = 0 To type.Length - 1
                                            If type(k) = ext Then
                                                flag = 0 ' if file type is match then passed and saved into DB
                                                Exit For
                                            Else
                                                flag = 1 ' check for type of the not matched
                                                Validext &= type(k).ToString() & ","
                                            End If
                                        Next
                                        If flag = 0 Then
                                        Else
                                            'updquery = "Invalid file type in (" & formname & ") allowed file types are (" & Validext.Substring(0, Validext.Length - 1) & ")"
                                            'Return updquery
                                            'Exit Function
                                            ErrFlag &= "Invalid file type in (" & formname & ") " & dtField.Rows(j).Item("displayName").ToString() & ", "
                                            Flag1 += 1
                                        End If
                                    End If

                                Else
                                    If dtField.Rows(j).Item("isrequired").ToString = "1" Then
                                        ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                        Flag1 += 1
                                    Else
                                        'colValue = txtBox1.Text.ToString
                                        dateFields += 1
                                        'If txtBox1.Text.ToString.Trim = "" Then
                                        '    skipRow = 1
                                        '    lastRow = GR.RowIndex
                                        'End If
                                    End If

                                End If
                            End If
                        End If
                    Next
                    cnt += 1
                End If
            End If

            If Flag1 < GV.Rows(0).Cells.Count - 1 - dateFields And ErrFlag.Trim <> "" Then
                If skipRow = 1 Then
                    updquery = ErrFlag
                    Return updquery.Substring(0, updquery.Length - 2)
                    Exit Function
                End If

            Else

                'For Rule Engin
                If GR.RowType = DataControlRowType.DataRow Then
                    If GR.Cells(0).Text.ToUpper <> "TOTAL" And GR.RowIndex <= lastRow Then

                        Dim retObj As New RuleResponse()
                        Dim lstData As New List(Of UserData)
                        lstData = CType(Session("pColl"), List(Of UserData))
                        Dim lstChildData As New List(Of UserData)
                        Dim obj As New DynamicForm()

                        'obj.CreateCollection(pnlFields, dtField)
                        Dim onlyFiltered As DataView = dtField.DefaultView
                        onlyFiltered.RowFilter = "InlineEditing='1'"
                        Dim dtFields As DataTable = onlyFiltered.Table.DefaultView.ToTable()

                        lstChildData = obj.CreateGVCollection(GR, dtFields, GR.RowIndex)
                        'Initialising Rule objects
                        Dim objRule As New RuleEngin(Session("EID"), formname, "CREATED", "Submit")
                        retObj = objRule.ExecuteRule(lstData, lstChildData, True)
                        If retObj.Success = False Then
                            Return retObj.Message
                            Exit Function
                        End If
                    End If
                End If

            End If

        Next
        ''Return "Child form validated validated ..." & lastRow
        'Now Code For Unique validation
        Dim objU As New UpdateData()

        Dim dskeys As New DataSet()

        Dim DisplayMsg = ""

        dskeys = objU.GetKeys(Session("EID"), formname)

        Dim Keys As String = ""
        Dim arrlist As New ArrayList()
        If dskeys.Tables(0).Rows.Count > 0 Then
            If dskeys.Tables(0).Rows.Count > 0 Then
                For Each GR As GridViewRow In GV.Rows
                    Keys = ""
                    If GR.RowIndex <= lastRow Then
                        If GR.RowType = DataControlRowType.DataRow Then
                            If GR.Cells(0).Text.ToUpper <> "TOTAL" Then
                                DisplayMsg = ""
                                For m As Integer = 0 To dskeys.Tables(0).Rows.Count - 1
                                    Dim FieldID = dskeys.Tables(0).Rows(m).Item("FieldID").ToString
                                    Dim FieldType = dskeys.Tables(0).Rows(m).Item("FieldType").ToString
                                    If DisplayMsg = "" Then
                                        DisplayMsg = dskeys.Tables(0).Rows(m).Item("DisplayName").ToString
                                    Else
                                        DisplayMsg = DisplayMsg & ", " & dskeys.Tables(0).Rows(m).Item("DisplayName").ToString
                                    End If
                                    Select Case FieldType.Trim.ToUpper
                                        Case "TEXT BOX"
                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID & GR.RowIndex), TextBox)
                                            Keys = Keys & txtBox.Text.Trim.ToUpper()
                                        Case "DROP DOWN"
                                            Dim DDL As DropDownList = CType(GR.FindControl("fld" & FieldID & "_" & GR.RowIndex), DropDownList)
                                            Keys = Keys & DDL.SelectedItem.Value
                                        Case "CALCULATIVE FIELD"
                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID & GR.RowIndex), TextBox)
                                            Keys = Keys & txtBox.Text.Trim.ToUpper()
                                        Case "LOOKUP"
                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID & GR.RowIndex), TextBox)
                                            Keys = Keys & txtBox.Text.Trim.ToUpper()
                                    End Select
                                Next
                                'Code For checking duplicate rows
                                Dim Test = Keys
                                Dim IsDuplicate = False
                                For Each item In arrlist
                                    If Keys.Trim.ToUpper = item.ToString.Trim.ToUpper Then
                                        IsDuplicate = True
                                    End If
                                Next
                                If IsDuplicate = False Then
                                    arrlist.Add(Test)
                                Else
                                    Return "Please check line number " & (GR.RowIndex + 1) & " of " & formname & "," & " Combination of " & DisplayMsg & " must be unique."
                                    Exit Function
                                End If
                            End If
                        End If
                    End If

                Next
            End If
        End If
        'Code for unique validation end here 
        Dim v = formname.Replace(" ", "_").Trim
        Session(v & "LastRow") = lastRow
        ViewState("LastRow") = lastRow
        ODA.Dispose()
        con.Close()
        con.Dispose()
        Return updquery

    End Function

    Public Sub insert_InlineEditing(ByVal FN As String, ByVal fldID As String, ByVal scrname As String)
        ' Dim scrname As String = Request.QueryString("SC").ToString()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim dss As New DataTable
        Try
            Dim formname As String = FN
            Dim FormnameDVM As String = ""
            'formname = Right(formname, formname.Length - 8).Trim()
            Session("FN") = formname

            'Dim ID() As String = btnDetails.ID.Split("_")
            Session("ID") = fldID.ToString  'ID(1).ToString
            ViewState("ID") = "BTN" & fldID.ToString  'ID(1).ToString
            Dim ob As New DynamicForm
            Dim DS As New DataSet
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim oda As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
            oda.Fill(DS, "CHILD")
            Session("CHILD") = DS.Tables("CHILD")
            Session("D" & formname) = DS.Tables("CHILD")

            Dim sqlStrF As String = ""
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            da.SelectCommand.CommandText = "select * from MMM_MST_forms  WITH (NOLOCK) where eid=" & Session("EID") & " and formname='" & FN & "'"
            'Dim DS As New DataSet
            Dim DSM As New DataTable
            Dim DSF As New DataTable
            Dim field As New DataTable
            Dim field1 As New DataTable
            da.Fill(DS, "inlineediting")
            If DS.Tables("inlineediting").Rows.Count > 0 Then
                Dim inlineSDoc As String = DS.Tables("inlineediting").Rows(0).Item("inlinesourceDoc").ToString
                Dim inlineType As String = DS.Tables("inlineediting").Rows(0).Item("inlineType").ToString
                Dim inlineFilter As String() = Split(DS.Tables("inlineediting").Rows(0).Item("inlinefilter"), "~")

                Dim tablename As String = ""
                Dim Pid As String = ""
                If inlineType.ToUpper = "MASTER" Then
                    tablename = "MMM_MST_MASTER"
                    Pid = "TID"
                ElseIf inlineType.ToUpper = "DOCUMENT" Then
                    tablename = "MMM_MST_DOC"
                    Pid = "TID"
                ElseIf inlineType.ToUpper = "DETAIL FORM" Then
                    tablename = "MMM_MST_DOC_ITEM"
                    Pid = "TID"
                End If

                Dim sqlStrM As String = ""
                Dim sqlStrMfld As String = ""
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                da.SelectCommand.CommandText = "select * from MMM_MST_Fields  WITH (NOLOCK) where documenttype='" & FN & "' and eid=" & Session("EID") & " and isActive=1 order by displayorder "
                da.Fill(field)
                Dim filterRows() As DataRow
                Dim filterRows1() As DataRow
                filterRows = field.Select("inlinemapping is not null and inlinemapping <>''", "DisplayOrder")
                filterRows1 = field.Select("InLineEditing=1 and inlinemapping is null", "DisplayOrder")
                If filterRows.Length > 0 Then
                    field = filterRows.CopyToDataTable()
                    If filterRows1.Length > 0 Then
                        field.Merge(filterRows1.CopyToDataTable())
                    End If
                Else
                    field = filterRows1.CopyToDataTable()
                End If

                Dim dtUniq As New DataTable()
                field = field.DefaultView.ToTable(True)

                If field.Rows.Count > 0 Then
                    For i As Integer = 0 To field.Rows.Count - 1
                        sqlStrM = sqlStrM & " " & field.Rows(i).Item("FieldMapping").ToString() & "[" & field.Rows(i).Item("displayname") & "],"
                        If Not Convert.ToString(field.Rows(i).Item("inlinemapping")) = "" Then
                            sqlStrMfld = sqlStrMfld & " |" & field.Rows(i).Item("inlinemapping").ToString() & "|,"
                        End If
                    Next
                    sqlStrM = Left(sqlStrM, sqlStrM.Length - 1)
                    sqlStrMfld = Left(sqlStrMfld, sqlStrMfld.Length - 1)
                    Dim filter As String = ""
                    Dim flag As Int16 = 0   ' flag for checking multiple condition and adding 'and' operator to the sql query 
                    For k As Integer = 0 To inlineFilter.Length - 1
                        Dim SD As String() = Split(inlineFilter(k), "-")  ' check for static or dynamic filter
                        Dim Opr As String() = Split(SD(1), "|")
                        If SD.Length > 1 Then
                            If SD(0).ToUpper = "S" Then  ' for static check S
                                If flag = 1 Then
                                    'filter &= " and " & " convert(float," & Opr(0) & ") " & Opr(1) & " '" & Opr(2) & "'"
                                    'filter &= " and " & " Cast(Replace(Replace(" & Opr(0) & ",',','.'),'.','') AS FLOAT) " & Opr(1) & " '" & Opr(2) & "'"
                                    filter &= " and " & Opr(0) & Opr(1) & " '" & Opr(2) & "'"
                                Else
                                    'filter = "convert(float," & Opr(0) & ") " & Opr(1) & " '" & Opr(2) & "'"
                                    'filter = "Cast(Replace(Replace(" & Opr(0) & ",',','.'),'.','') AS FLOAT) " & Opr(1) & " '" & Opr(2) & "'"
                                    filter = Opr(0) & Opr(1) & " '" & Opr(2) & "'"

                                End If
                                flag = 1

                            Else  ' for dynamic check D
                                If DynamicForm.GetControl(pnlFields, "fld" & Opr(2)) Then
                                    Dim ddl As New DropDownList
                                    ddl = pnlFields.FindControl("fld" & Opr(2))
                                    Session("BindGrdOnDdl") = Opr(2) & "-" & FN    ' this is used in page init and DynamicGrdFilter
                                    If flag = 1 Then
                                        filter &= "and " & Opr(0) & Opr(1) & " '" & IIf(DS.Tables("inlineediting").Rows(0).Item("InLineMathType").ToString.ToUpper = "VALUE", ddl.SelectedItem.Value.Trim, ddl.SelectedItem.Text.Trim) & "'"
                                        'If ViewState("ddlChange") = 1 Then
                                        '    filter &= "and " & Opr(0) & Opr(1) & " '" & IIf(DS.Tables("inlineediting").Rows(0).Item("InLineMathType").ToString.ToUpper = "VALUE", ddl.SelectedItem.Value.Trim, ddl.SelectedItem.Text.Trim) & "'"
                                        'Else
                                        '    Exit Sub
                                        'End If
                                    Else
                                        filter = Opr(0) & Opr(1) & " '" & IIf(DS.Tables("inlineediting").Rows(0).Item("InLineMathType").ToString.ToUpper = "VALUE", ddl.SelectedItem.Value.Trim, ddl.SelectedItem.Text.Trim) & "'"
                                        'If ViewState("ddlChange") = 1 Then
                                        '    filter = Opr(0) & Opr(1) & " '" & IIf(DS.Tables("inlineediting").Rows(0).Item("InLineMathType").ToString.ToUpper = "VALUE", ddl.SelectedItem.Value.Trim, ddl.SelectedItem.Text.Trim) & "'"
                                        'Else
                                        '    Exit Sub
                                        'End If
                                    End If
                                    flag = 1
                                End If
                            End If
                        End If

                    Next
                    da.SelectCommand.CommandText = "uspGetInlineValuesFromMaster_new1"
                    da.SelectCommand.CommandType = CommandType.StoredProcedure
                    da.SelectCommand.Parameters.AddWithValue("FN", inlineSDoc)
                    da.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                    da.SelectCommand.Parameters.AddWithValue("childDoctype", FN)
                    da.SelectCommand.Parameters.AddWithValue("sqlMfld", sqlStrMfld)
                    da.SelectCommand.Parameters.AddWithValue("tablename", tablename)
                    ' parameters for filtering 
                    da.SelectCommand.Parameters.AddWithValue("filter", filter)

                    DSM.Columns.Add("All", GetType(String)) ' adding checkbox for grid to select All
                    da.Fill(DSM)

                    If DSM.Rows.Count < 1 Then  ' if no data then dispose the Dynamic grid and show the message
                        Dim lbl As Label = CType(pnlFields.FindControl("LblGrd" & fldID.ToString), Label)
                        lbl.Text = "as per rule defined data not fined "
                        lbl.Visible = True
                        'UpdatePanel1.Update()
                        'Exit Sub
                    Else
                        Dim lbl As Label = CType(pnlFields.FindControl("LblGrd" & fldID.ToString), Label)
                        lbl.Text = ""
                        lbl.Visible = False
                    End If

                End If
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                da.SelectCommand.CommandText = "select * from MMM_MST_Fields  WITH (NOLOCK) where documenttype='" & FN & "' and eid=" & Session("EID") & " and inlineediting=1 order by InLineEditing, displayorder "
                da.SelectCommand.CommandType = CommandType.Text
                da.Fill(field1)
                If field1.Rows.Count > 0 Then
                    For i As Integer = 0 To field1.Rows.Count - 1
                        sqlStrF = sqlStrF & " " & field1.Rows(i).Item("fieldmapping").ToString() & "[" & field1.Rows(i).Item("displayname") & "],"
                    Next
                    sqlStrF = Left(sqlStrF, sqlStrF.Length - 1)
                    'da.SelectCommand.CommandText = "select " & sqlStrF & " from " & tablename & " where documenttype='" & inlineSDoc & "' and eid=" & Session("EID") & ""
                    'WITH(NOLOCK)  added by Himank at 28th sep 2015
                    da.SelectCommand.CommandText = "select " & sqlStrM & ", tid, cmasterTid from MMM_MST_DOC_ITEM  WITH (NOLOCK) where documenttype='" & FN & "' and DOCID=" & RetDocId(Session("EID"))
                    da.SelectCommand.CommandType = CommandType.Text
                    da.Fill(DSF)
                End If


                'For i As Integer = 0 To DSF.Rows.Count - 1
                '    If DSM.Rows.Count > 0 Then
                '        DSM.Rows.Remove(DSM.Rows(0))
                '    End If
                'Next

                For i As Integer = 0 To DSF.Rows.Count - 1
                    If DSM.Rows.Count > 0 Then
                        For j As Integer = 0 To DSM.Rows.Count - 1
                            If j < DSM.Rows.Count Then
                                If DSM.Rows(j).Item("cmastertid") = DSF.Rows(i).Item("cmastertid") Then
                                    DSM.Rows.Remove(DSM.Rows(j))
                                End If
                            End If
                        Next
                    End If
                Next

                Dim dtF As DataTable = DSM.Clone()
                dtF.Merge(DSF, True, MissingSchemaAction.Add)
                dtF.Merge(DSM)
                dtF.Columns.Item("cmastertid").SetOrdinal(dtF.Columns.Count - 1)
                dtF.Columns.Item("tid").SetOrdinal(dtF.Columns.Count - 1)
                dtF.DefaultView.ToTable()
                DSM = dtF
                'DSM.Merge(DSF, True, MissingSchemaAction.Add)
                'DSM.Columns.Item("cmastertid").SetOrdinal(DSM.Columns.Count - 1)
                'DSM.Columns.Item("tid").SetOrdinal(DSM.Columns.Count - 1)
                'DSM.DefaultView.ToTable()

            End If

            ADD_DV_ITEMSTOGRID(FN, DSM, DSM)
            '        Dim oda As New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF left outer JOIN MMM_MST_FORMS F on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
            da.Dispose()
            con.Close()
            ' DS.Dispose()

        Catch ex As Exception
            Throw ex
        Finally
            con.Dispose()
            da.Dispose()
            con.Close()
        End Try
    End Sub

    Public Sub insert_InlineEditing11(ByVal FN As String, ByVal fldID As String, ByVal scrname As String)
        ' Dim scrname As String = Request.QueryString("SC").ToString()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim dss As New DataTable
        Try
            Dim formname As String = FN
            Dim FormnameDVM As String = ""
            'formname = Right(formname, formname.Length - 8).Trim()
            Session("FN") = formname

            'Dim ID() As String = btnDetails.ID.Split("_")
            Session("ID") = fldID.ToString  'ID(1).ToString
            ViewState("ID") = "BTN" & fldID.ToString  'ID(1).ToString
            Dim ob As New DynamicForm
            Dim DS As New DataSet
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim oda As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH (NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH (NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
            oda.Fill(DS, "CHILD")
            Session("CHILD") = DS.Tables("CHILD")
            Session("D" & formname) = DS.Tables("CHILD")

            Dim sqlStrF As String = ""
            Dim sqlStrM As String = ""
            Dim sqlStrMfld As String = ""
            Dim DSM As New DataTable
            'My
            Dim sqlFields As String = ""
            Dim fields As New DataTable
            Dim sqlFields1 As String = ""
            Dim fields1 As New DataTable
            'DisplayName,FieldMapping,DisplayOrder,inlinemapping
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            Dim daFields As SqlDataAdapter = New SqlDataAdapter("select DisplayName,FieldMapping,DisplayOrder,inlinemapping,InLineEditing from MMM_MST_Fields  WITH (NOLOCK) where documenttype='" & FN & "' and eid=" & Session("EID") & " and isActive=1 And inlinemapping is not null order by displayorder ", con)
            daFields.Fill(fields)
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            daFields.SelectCommand.CommandText = "select DisplayName,FieldMapping,DisplayOrder,inlinemapping, InLineEditing from MMM_MST_Fields  WITH(NOLOCK) where documenttype='" & FN & "' and eid=" & Session("EID") & " and isActive=1 And InLineEditing =1 order by displayorder"
            daFields.Fill(fields1)

            fields1.Merge(fields)
            Dim dv As DataView = fields1.DefaultView
            dv.Sort = "DisplayOrder ASC"

            Dim dvtable As DataTable = dv.ToTable(True, "DisplayName", "FieldMapping", "DisplayOrder", "inlinemapping", "InLineEditing")

            Dim filterRows() As DataRow
            Dim filterRows1() As DataRow
            filterRows = dvtable.Select("inlinemapping is not null and inlinemapping <>''", "DisplayOrder")
            filterRows1 = dvtable.Select("InLineEditing=1 and inlinemapping is null", "DisplayOrder")
            If filterRows.Length > 0 Then
                dvtable = filterRows.CopyToDataTable()
                dvtable.Merge(filterRows1.CopyToDataTable())
            Else
                dvtable = filterRows1.CopyToDataTable()
            End If

            If dvtable.Rows.Count > 0 Then
                For i As Integer = 0 To dvtable.Rows.Count - 1
                    sqlFields = sqlFields & " " & dvtable.Rows(i).Item("Fieldmapping").ToString() & "[" & dvtable.Rows(i).Item("displayname") & "],"
                Next
            End If
            sqlFields = sqlFields.Substring(0, sqlFields.Length - 1)
            Dim dt As New DataTable
            Dim docid As Integer = Convert.ToString(RetDocId(Session("EID")))
            da.SelectCommand.CommandText = "select " & sqlFields & " ,convert(int ,cmasterTid)[cmasterTid],tid  from MMM_MST_DOC_ITEM where documenttype='" & FN & "' and docid=" + docid.ToString()
            da.SelectCommand.CommandType = CommandType.Text
            dt.Columns.Add("All", GetType(String))
            da.Fill(dt)
            Dim childid As String = ""
            For l As Integer = 0 To dt.Rows.Count - 1
                childid = childid & dt.Rows(l).Item("cMasterTid").ToString() & ","
            Next
            If childid.ToString.Length > 1 Then
                childid = Left(childid, childid.Length - 1)
            End If
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            da.SelectCommand.CommandText = "select * from MMM_MST_forms  WITH(NOLOCK) where eid=" & Session("EID") & " and formname='" & FN & "'"
            'Dim DS As New DataSet
            Dim DSF As New DataTable
            Dim field1 As New DataTable
            da.Fill(DS, "inlineediting")

            Dim inlineSDoc As String = DS.Tables("CHILD").Rows(0).Item("inlinesourceDoc").ToString
            Dim inlineType As String = DS.Tables("CHILD").Rows(0).Item("inlineType").ToString
            Dim inlineFilter As String() = Split(DS.Tables("CHILD").Rows(0).Item("inlinefilter"), "~")
            Dim tablename As String = ""
            Dim Pid As String = ""
            If inlineType.ToUpper = "MASTER" Then
                tablename = "MMM_MST_MASTER"
                Pid = "TID"
            ElseIf inlineType.ToUpper = "DOCUMENT" Then
                tablename = "MMM_MST_DOC"
                Pid = "TID"
            ElseIf inlineType.ToUpper = "DETAIL FORM" Then
                tablename = "MMM_MST_DOC_ITEM"
                Pid = "TID"
            End If
            Dim FIELD As New DataTable
            Dim sqlStrM1 As String = ""
            Dim sqlStrMfld1 As String = ""
            'WITH (NOLOCK) added by Himank on 28th sep 2015
            da.SelectCommand.CommandText = "select * from MMM_MST_Fields  WITH(NOLOCK) where documenttype='" & FN & "' and eid=" & Session("EID") & " and inlinemapping is not null order by displayorder "
            da.Fill(FIELD)
            If FIELD.Rows.Count > 0 Then
                For i As Integer = 0 To FIELD.Rows.Count - 1
                    sqlStrM1 = sqlStrM1 & " " & FIELD.Rows(i).Item("inlinemapping").ToString() & "[" & FIELD.Rows(i).Item("displayname") & "],"
                    sqlStrMfld1 = sqlStrMfld1 & " |" & FIELD.Rows(i).Item("inlinemapping").ToString() & "|,"
                Next
                sqlStrM1 = Left(sqlStrM1, sqlStrM1.Length - 1)
                sqlStrMfld1 = Left(sqlStrMfld1, sqlStrMfld1.Length - 1)

                Dim filter As String = ""
                Dim flag As Int16 = 0   ' flag for checking multiple condition and adding 'and' operator to the sql query 
                For k As Integer = 0 To inlineFilter.Length - 1
                    Dim SD As String() = Split(inlineFilter(k), "-")  ' check for static or dynamic filter
                    Dim Opr As String() = Split(SD(1), "|")
                    If SD.Length > 1 Then
                        If SD(0).ToUpper = "S" Then  ' for static check S
                            If flag = 1 Then
                                filter &= " and " & Opr(0) & Opr(1) & " '" & Opr(2) & "'"
                            Else
                                filter = Opr(0) & Opr(1) & " '" & Opr(2) & "'"
                            End If
                            flag = 1
                        Else
                            If DynamicForm.GetControl(pnlFields, "fld" & Opr(2)) Then
                                Dim ddl As New DropDownList
                                ddl = pnlFields.FindControl("fld" & Opr(2))
                                Session("BindGrdOnDdl") = Opr(2) & "-" & FN    ' this is used in page_init and DynamicGrdFilter
                                If flag = 1 Then
                                    'If ViewState("ddlChange") = 1 Then
                                    filter &= "and " & Opr(0) & Opr(1) & " '" & IIf(DS.Tables("inlineediting").Rows(0).Item("InLineMathType").ToString.ToUpper = "VAULE", ddl.SelectedItem.Value.Trim, ddl.SelectedItem.Text.Trim) & "'"
                                    'Else
                                    '    Exit Sub
                                    'End If
                                Else
                                    'If ViewState("ddlChange") = 1 Then
                                    filter = Opr(0) & Opr(1) & " '" & IIf(DS.Tables("inlineediting").Rows(0).Item("InLineMathType").ToString.ToUpper = "VAULE", ddl.SelectedValue, ddl.SelectedItem.Text) & "'"
                                    'Else
                                    'Exit Sub
                                End If

                            End If
                            flag = 1
                        End If
                    End If
                    'sqlStrMfld = Replace(Left(sqlStrMfld, sqlStrMfld.Length - 1), "'", "''")
                Next

                da.SelectCommand.CommandText = "uspGetInlineValuesFromMaster_new11"
                da.SelectCommand.CommandType = CommandType.StoredProcedure
                da.SelectCommand.Parameters.AddWithValue("FN", inlineSDoc)
                da.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
                da.SelectCommand.Parameters.AddWithValue("childDoctype", FN)
                da.SelectCommand.Parameters.AddWithValue("sqlMfld", sqlStrMfld1)
                da.SelectCommand.Parameters.AddWithValue("tablename", tablename)
                ' parameters for filtering 
                da.SelectCommand.Parameters.AddWithValue("filter", filter)
                da.SelectCommand.Parameters.AddWithValue("childId", childid)
                DSM.Columns.Add("All", GetType(String)) ' adding checkbox for grid to select All
                da.Fill(DSM)
            End If

            If Not Session("ITEM") Is Nothing Then  ' this is session for checking it is coming data from filter or fresh data
                dt = Session("ITEM")
                If Convert.ToBoolean(ViewState("Change")) Then
                    dt.Clear()
                    DSM.Columns.Remove("tid")
                    For i As Integer = 0 To dt.Rows.Count - 1
                        DSM.Rows.Remove(DSM.Rows(dt.Rows.Count - 1 - i))
                    Next
                    dt.Merge(DSM)
                End If
            Else
                If Convert.ToBoolean(ViewState("Change")) Then
                    dt.Clear()
                End If
                DSM.Columns.Remove("tid")
                For i As Integer = 0 To dt.Rows.Count - 1
                    DSM.Rows.Remove(DSM.Rows(dt.Rows.Count - 1 - i))
                Next
                dt.Merge(DSM)
            End If
            Session(FN) = dt

            ADD_DV_ITEMSTOGRID(FN, dt, dt)
            '        Dim oda As New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF left outer JOIN MMM_MST_FORMS F on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
            da.Dispose()
            con.Close()
            ' DS.Dispose()

        Catch ex As Exception
            Throw ex
        Finally
            con.Dispose()
            da.Dispose()
            con.Close()
        End Try
    End Sub



    Public Sub INSERT_DEFAULTVALUES(ByVal FN As String, ByVal fldID As String, ByVal DtForm As DataTable)
        '' new created for inserting def. values from master table in document on 17-Dec-13 by sunil pareek
        'Dim btnDetails As Button = TryCast(SENDER, Button)
        Dim formname As String = FN
        Dim FormnameDVM As String = ""
        'formname = Right(formname, formname.Length - 8).Trim()
        Session("FN") = formname
        'aaaa
        If DtForm.Rows(0).Item("hasdefaultvalue").ToString() = "1" Then
            ViewState("FN_DVM") = formname & "_MASTER"
            FormnameDVM = formname & "_MASTER"
        Else
            ViewState("FN_DVM") = formname
            FormnameDVM = formname
        End If

        'Dim ID() As String = btnDetails.ID.Split("_")
        Session("ID") = fldID.ToString  'ID(1).ToString
        ViewState("ID") = "BTN" & fldID.ToString  'ID(1).ToString

        'aaaa
        ViewState("Default") = DtForm.Rows(0).Item("IsDefaultRows").ToString() & "_" & DtForm.Rows(0).Item("hasdefaultvalue").ToString()



        ' Dim scrname As String = Request.QueryString("SC").ToString()
        Dim scrname As String = ViewState("sc").ToString()
        Dim ob As New DynamicForm
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim DS As New DataSet
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH(NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH(NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
        oda.Fill(DS, "CHILD")
        Session("CHILD") = DS.Tables("CHILD")
        Session("D" & formname) = DS.Tables("CHILD")
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If

        Dim dtfld = DS.Tables("CHILD")

        Dim filterRows() As DataRow 'By neha Thakar 
        filterRows = dtfld.Select("inlineEditing=1 or inlinemapping is not null and inlinemapping <>''", "InLineEditing, DisplayOrder")

        Dim dtfld1 = filterRows.CopyToDataTable()

        Dim filterRows1() As DataRow
        Dim filterRows2() As DataRow
        filterRows1 = dtfld1.Select("inlinemapping is not null and inlinemapping <>''", "DisplayOrder")
        filterRows2 = dtfld1.Select("InLineEditing=1 and inlinemapping is null", "DisplayOrder")

        If filterRows.Length > 0 Then
            If filterRows1.Length > 0 Then
                dtfld1 = filterRows1.CopyToDataTable()
                If filterRows2.Length > 0 Then
                    dtfld1.Merge(filterRows2.CopyToDataTable())
                End If
            Else
                If filterRows2.Length > 0 Then
                    dtfld1 = filterRows2.CopyToDataTable()
                End If
            End If
        Else
            dtfld1 = filterRows2.CopyToDataTable()
        End If

        Dim strFlds = ""
        For i As Integer = 0 To dtfld1.Rows.Count - 1
            strFlds &= dtfld1.Rows(i).Item("FieldMapping") & ","
        Next



        Dim DefValMastDoctype As String = ""
        Dim CdocType As String = ""
        DS.Tables.Clear()
        ' Dim ddl As DropDownList = TryCast(pnlFields.FindControl("fld" & ID(0).ToString()), DropDownList)
        ' Dim docid() As String = ddl.SelectedValue.ToString.Split("|")
        oda.SelectCommand.Parameters.Clear()
        oda.SelectCommand.CommandText = "uspGetDefValuesFromMaster1"
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("FN", FormnameDVM)
        oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
        oda.SelectCommand.Parameters.AddWithValue("flds", strFlds.Substring(0, strFlds.Length - 1))
        oda.Fill(DS, "ITEM")
        '  DS.Tables("ITEM").Columns.Add("All", GetType(String)).SetOrdinal(0) ' adding checkbox for grid to select All
        '' for values 
        oda.SelectCommand.Parameters.Clear()
        oda.SelectCommand.CommandText = "uspGetDefValuesFromMaster_Vals1"
        oda.SelectCommand.CommandType = CommandType.StoredProcedure
        oda.SelectCommand.Parameters.AddWithValue("FN", FormnameDVM)
        oda.SelectCommand.Parameters.AddWithValue("EID", Session("EID"))
        oda.SelectCommand.Parameters.AddWithValue("flds", strFlds.Substring(0, strFlds.Length - 1))
        oda.Fill(DS, "ITEM_VALS")


        oda.SelectCommand.CommandType = CommandType.Text
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        oda.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,F1.FieldType FROM MMM_MST_FIELDS F1 WITH(NOLOCK)  INNER JOIN MMM_MST_FIELDS F2  WITH(NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType  in ('CHILD ITEM MAX','CHILD ITEM TOTAL')  AND F2.DocumentType ='" & formname & "' AND F1.DOCUMENTTYPE='" & scrname & "'"
        oda.Fill(DS, "TOTAL")

        '' WRITE here func that will add row by row values in grid ' write new function by sunil
        ADD_DV_ITEMSTOGRID(formname, DS.Tables("ITEM"), DS.Tables("ITEM_VALS"))

        '' arrays for holding master valued column data 
        'Dim array3Ds(,,) As String = New String(,,) {}

        Dim ColHead() As String = {}
        Dim DDLTxt() As String = {}
        Dim DDLval() As String = {}
        Dim aCnt As Integer = 0

        Dim dtC As DataTable = Session("D" & formname) 'DS.Tables("CHILD")

        For j = 0 To dtC.Rows.Count - 1
            If dtC.Rows(j).Item("fieldtype").ToString = "DROP DOWN" And dtC.Rows(j).Item("DROPDOWNTYPE") = "MASTER VALUED" Then
                For i As Integer = 0 To DS.Tables("item").Rows.Count - 1
                    For k As Integer = 0 To DS.Tables("item").Columns.Count - 1
                        If DS.Tables("item").Columns(k).ColumnName = dtC.Rows(j).Item("displayname").ToString Then  '' matched col. (mast. val.) 
                            ColHead(aCnt) = formname & "_" & dtC.Rows(j).Item("displayname").ToString
                            DDLTxt(aCnt) = DS.Tables("item").Rows(i).Item(DS.Tables("item").Columns(k).ColumnName).ToString
                            DDLval(aCnt) = DS.Tables("ITEM_VALS").Rows(i).Item(DS.Tables("item").Columns(k).ColumnName).ToString
                        End If
                    Next
                Next
            End If
        Next

        Session("COLHEAD") = ColHead
        Session("DDLTXT") = DDLTxt
        Session("DDLVAL") = DDLval

        dtC.Dispose()
        oda.Dispose()
        DS.Dispose()
        con.Dispose()
    End Sub


    Public Shared Function After(ByVal value As String, ByVal a As String) As String
        Dim posA As Integer = value.LastIndexOf(a)
        If posA = -1 Then
            Return ""
        End If
        Dim adjustedPosA As Integer = posA + a.Length
        If adjustedPosA >= value.Length Then
            Return ""
        End If
        Return value.Substring(adjustedPosA)
    End Function


    Private Sub ShowDefaultValuesinGrid()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim row() As DataRow = Session("ALLCHILD")

        If row.Length > 0 Then
            Dim btn1 As New Button
            For i As Integer = 0 To row.Length - 1
                ' btn1 = pnlFields.FindControl("BTN" & row(i).Item("FieldID").ToString())
                ' AddHandler btn1.Click, AddressOf ShowChildForm
                Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                ViewState("sc") = row(i).Item("Documenttype").ToString()
                ViewState("MDOCTYPE") = row(i).Item("Documenttype").ToString()
                'aaaa   
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim strDF As String = "select * from mmm_mst_forms  WITH(NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(HasDefaultValue,0)=1"
                Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                Dim dtIsdv As New DataTable

                oda.SelectCommand.CommandText = strDF
                oda.Fill(dtIsdv)

                'aaaa
                Dim dtIsDef As New DataTable
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim str As String = "select * from mmm_mst_forms  WITH(NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(IsDefaultRows,0)>0"
                oda.SelectCommand.CommandText = str
                oda.Fill(dtIsDef)


                'aaaa 
                If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                    'If dtIsdv.Rows(0).Item("hasdefaultvalue").ToString() = "1" Then
                    INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), dtIsdv)  '  "BTN" & "_" & ROWCHILD(i).Item("FIELDID").ToString()
                    'End If
                ElseIf dtIsDef.Rows.Count = 1 Then
                    INSERT_DEFAULTVALUES(PRitem(0).ToString, row(i).Item("FieldID").ToString(), dtIsDef)
                Else
                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                    strDF = "select * from mmm_mst_forms  WITH(NOLOCK) where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & Session("EID").ToString() & " and isnull(isinlineediting,0)=1"
                    oda.SelectCommand.CommandText = strDF
                    oda.Fill(dtIsdv)
                    If dtIsdv.Rows.Count > 0 Then
                        insert_InlineEditing(PRitem(0).ToString, row(i).Item("FieldID").ToString(), row(i).Item("Documenttype").ToString())
                    End If
                End If
                oda.Dispose()
                dtIsdv.Dispose()
            Next
        End If
        con.Close()
    End Sub


    ' added on 24 dec 2014
    Public Sub Filter(ByVal sender As Object, ByVal e As EventArgs)
        Try

            ' Session("BindGrdOnDdl") = Nothing  ' once click disposing the session of dynamic filter
            Dim i = 0
            Dim btnFilter As Button = TryCast(sender, Button)
            Dim btnID = btnFilter.ID
            Dim FieldID As String = ""

            'btn ID Is seperated by _ 
            Dim arr = btnID.Split("_")
            FieldID = arr(0).Replace("BTNFLTER", String.Empty)
            Dim ChildItemName = ""
            For J As Integer = 1 To arr.Length - 1
                ChildItemName = ChildItemName & " " & arr(J)
            Next
            ChildItemName = ChildItemName.Trim()
            Dim grd As GridView = pnlFields.FindControl("GRD" & FieldID)
            Dim DS As DataTable = CType(Session(ChildItemName), DataTable)

            Dim dt As New DataTable()
            dt = DS.Clone()
            If Not grd Is Nothing Then

                If grd.Rows.Count > 0 Then
                    'loop through all rows of grid
                    Try
                        For Each row As GridViewRow In grd.Rows
                            If row.RowType = DataControlRowType.DataRow Then
                                Dim chkBox As CheckBox
                                chkBox = CType(row.FindControl("fld" & row.RowIndex), CheckBox)
                                If Not (chkBox Is Nothing) Then
                                    If chkBox.Checked = True Then
                                        Dim dr1 As DataRow = dt.NewRow()
                                        dr1 = DS.Rows(row.RowIndex)
                                        dt.Rows.Add(dr1.ItemArray)
                                    End If
                                End If
                            End If
                        Next
                        'Dim dr2 As DataRow = dt.NewRow()
                        'dr2 = DS.Rows(DS.Rows.Count - 1)
                        'dt.Rows.Add(dr2.ItemArray)
                    Catch ex As Exception

                    End Try

                End If
            End If

            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Using con = New SqlConnection(conStr)
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim sda As SqlDataAdapter = New SqlDataAdapter("select documenttype from MMM_MST_doc  WITH(NOLOCK) where eid=" & Session("EID") & " and tid=" & Session("pid") & "", con)
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                Dim scrname As String = sda.SelectCommand.ExecuteScalar()
                'Dim ChildItemName = "invoice details"
                'WITH (NOLOCK) added by Himank on 28th sep 2015
                Dim StrQuery = "SELECT F1.FieldID,F2.displayName,F1.FieldType FROM MMM_MST_FIELDS F1  WITH(NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH(NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & "  AND F1.FieldType  in ('CHILD ITEM MAX','CHILD ITEM TOTAL')   AND F2.DocumentType ='" & ChildItemName & "' AND F1.DOCUMENTTYPE='" & scrname & "'"
                'oda.Fill(DS, "TOTAL")

                Dim dsTotal As New DataSet()

                Using da = New SqlDataAdapter(StrQuery, con)
                    da.Fill(dsTotal, "TOTAL")
                End Using

                Session(ChildItemName) = dt
                Session("ITEM") = dt
                Dim ob As New DynamicForm()

                ob.BINDITEMGRID1(Session(ChildItemName), pnlFields, FieldID, updatePanelEdit, dsTotal.Tables("TOTAL"), -1, -1, scrname, ChildItemName, Convert.ToInt32(Session("EID")))


            End Using
            'grd.DataSource = dt
            'grd.DataBind()
            'UpdatePanel1.Update()



        Catch ex As Exception

        End Try
        Session("filterDropdown") = Nothing
    End Sub


    Protected Sub btnCloseApprove_Click(ByVal sender As Object, e As ImageClickEventArgs)
        Session("ActionForm") = Nothing
        btnApprove_ModalPopupExtender.Hide()

    End Sub

    Protected Sub btnAddRow_Click(ByVal SENDER As Object, ByVal E As System.EventArgs)
        Dim btn As Button = CType(SENDER, Button)
        Dim grd As GridView = TryCast(pnlApprove.FindControl("GRD_" & btn.ID.ToString().Replace("ADD", "")), GridView)
        Dim dt As DataTable = Session(btn.ID.ToString().Replace("__", " ").Replace("_", ".").Replace("ADD", "") & "VAL")
        Dim dr1 As DataRow
        dr1 = dt.NewRow()
        dt.Rows.Add(dr1)
        Session(btn.ID.ToString().Replace("__", " ").Replace("_", ".").Replace("ADD", "") & "VAL") = dt
        Dim Mdt As DataTable = Session(btn.ID.ToString().Replace("__", " ").Replace("_", ".").Replace("ADD", ""))
        Dim dr2 As DataRow
        dr2 = Mdt.NewRow()
        dr2.Item("tid") = 0 'Convert.ToInt32(Mdt.Rows(Mdt.Rows.Count - 1)("tid")) + 1
        Mdt.Rows.Add(dr2)
        Session(btn.ID.ToString().Replace("__", " ").Replace("_", ".").Replace("ADD", "")) = Mdt

        'Dim dts As DataTable = Mdt.Clone()

        'For Each gvr As GridViewRow In grd.Rows
        '    Dim dr As DataRow
        '    dr = dts.NewRow()
        '    For i As Integer = 0 To gvr.Cells.Count - 1
        '        dr(i) = gvr.Cells(i).Text
        '    Next
        '    dts.Rows.Add(dr)
        'Next

        grd.DataSource = Mdt
        grd.DataBind()
        btnApprove_ModalPopupExtender.Show()

    End Sub

    Public Sub AddRow(sender As Object, e As EventArgs)

        Dim i = 0
        Dim btnAddRow As Button = TryCast(sender, Button)
        Dim btnID = btnAddRow.ID
        Dim FieldID As String = ""
        Dim tab As String
        'btn ID Is seperated by _ 
        Dim arr = btnID.Split("_")
        FieldID = arr(0).Replace("BTNFLTER", String.Empty)

        Dim ChildItemName = ""
        For J As Integer = 1 To arr.Length - 1
            ChildItemName = ChildItemName & " " & arr(J)
        Next
        ChildItemName = ChildItemName.Trim()
        Dim grd As GridView = pnlFields.FindControl("GRD" & FieldID)
        Dim DS As DataTable = CType(Session(ChildItemName), DataTable)

        Dim DSq As New DataSet
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim da As SqlDataAdapter = New SqlDataAdapter("SELECT  Dropdown from MMM_MST_FIELDS WITH(NOLOCK)  where fieldID=" & ChildItemName, con)
        Dim dsp As New DataSet
        da.Fill(dsp, "fields")
        tab = dsp.Tables(0).Rows(0).Item("Dropdown").ToString()
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF  WITH(NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH(NOLOCK) on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & tab & "' order by displayOrder", con)
        oda.Fill(DSq, "CHILD")
        Session("CHILD") = DSq.Tables("CHILD")
        Session("D" & ChildItemName) = DSq.Tables("CHILD")
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Try
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If

            Dim GV As GridView = CType(pnlFields.FindControl("GRD" & ChildItemName.ToString()), GridView)
            Dim ds1 As DataTable = GV.DataSource

            Dim ob As New DynamicForm()
            Dim dtPrev = ob.GetChildItemValues(GV)

            Dim filterRows(1) As DataRow
            'filterRows = ds1.Select("All='Total'")

            For Each dr As DataRow In ds1.Rows
                If dr.Item(0).ToString.ToUpper = "TOTAL" Then
                    filterRows(0) = dr
                End If
            Next
            'filterRows = ds1

            If filterRows.Length > 0 Then
                ds1.Rows.Remove(filterRows.FirstOrDefault)
            End If

            ds1.Rows.Add(ds1.NewRow())

            Dim dictionary As New Dictionary(Of Integer, Integer)

            If Not IsNothing(Session("AddedRow")) Then
                dictionary = CType(Session("AddedRow"), Dictionary(Of Integer, Integer))
                'For c As Integer = 0 To dictionary.Count - 1
                'ds1.Rows.Add(ds1.NewRow())
                'Next
            End If
            dictionary.Add(ds1.Rows.Count - 1, ds1.Rows.Count - 1)
            Session("AddedRow") = dictionary
            Session("DS") = ds1
            ADD_DV_ITEMSTOGRID(tab, ds1, ds1, ChildItemName)

            ob.FillChildItemValues(GV, dtPrev)
            oda.Dispose()
            DSq.Dispose()
            con.Dispose()
        Catch
        End Try

    End Sub

    Protected Function ValidatingActionFormChildItem(ByVal formname As String) As String
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim dtField As New DataTable
        Dim updquery As String = "SAVE"

        'Prashant_22_7
        Dim dateFields As Integer = 0
        Dim Flag1 As Integer = 0
        Dim ErrFlag As String = ""
        Dim skipRow As Integer = 0
        Dim lastRow As Integer = 0
        'Prashant_22_7

        Dim ob As New DynamicForm()
        ' dtField = ViewState(formname)
        'dtField = Session("D" & formname)
        Dim dtvalue As DataTable = Session(formname & "VAL")
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'Session("id")

        Dim MaxVal As Double = -999

        Dim dt As New DataTable
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        ODA.SelectCommand.CommandText = "select * from mmm_mst_fields  WITH(NOLOCK) where eid=" & Session("eid") & " and documenttype='" & formname & "'"
        ODA.SelectCommand.CommandType = CommandType.Text
        ODA.SelectCommand.Parameters.Clear()
        ODA.Fill(dt)
        dtField = dt

        Dim dtTotal As New DataTable
        ODA.SelectCommand.CommandType = CommandType.Text
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        ODA.SelectCommand.CommandText = "SELECT F1.FieldID [MainFieldID],F2.FieldID [ChildFieldID],F2.displayName [CdisplayName],f1.fieldtype [MFIELDTYPE] ,F1.dropdown [mDropDown],F1.displayName [MdisplayName],F1.FieldMapping [MFieldMapping]  FROM MMM_MST_FIELDS F1  WITH(NOLOCK) INNER JOIN MMM_MST_FIELDS F2  WITH(NOLOCK) ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType in ('CHILD ITEM MAX','CHILD ITEM TOTAL') AND F2.DocumentType ='" & formname & "' AND F1.DOCUMENTTYPE='" & Session("Document") & "'"
        ODA.Fill(dtTotal)

        Dim isTotal As Boolean = False
        Dim cDispName As String = ""
        Dim Childtotal As Double = 0
        If dtTotal.Rows.Count = 1 Then
            isTotal = True
            cDispName = dtTotal.Rows(0).Item("cdisplayname").ToString
        End If

        Dim strs As String() = Session("CHILDACTIONSCREEN").ToString().Split(",")

        Dim GV As GridView = DirectCast(pnlApprove.FindControl("GRD_" & formname.Replace(" ", "__").Replace(".", "_")), GridView)
        If IsNothing(GV) Then
            Return ""
        End If

        Dim cnt As Integer = 0
        For Each GR As GridViewRow In GV.Rows
            If GR.RowType = DataControlRowType.DataRow Then
                If GR.Cells(0).Text.ToUpper <> "TOTAL" Then

                    Dim STRFld As String = ""
                    Dim STRVal As String = ""

                    dateFields = 0
                    ErrFlag = ""
                    skipRow = 0

                    For j As Integer = 0 To dtField.Rows.Count - 1
                        STRFld &= dtField.Rows(j).Item("fieldmapping").ToString & ","
                        Dim colValue As String = ""
                        Dim FldID As String = ""
                        FldID = dtField.Rows(j).Item("fieldid").ToString()
                        If dtField.Rows(j).Item("inlineediting").ToString = "1" Or 1 = 1 Then
                            Dim ftype As String = dtField.Rows(j).Item("fieldtype").ToString()
                            If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Then
                                If dtField.Rows(j).Item("datatype").ToString().ToUpper = "NUMERIC" And dtField.Rows(j).Item("isrequired") = 1 Then
                                    Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                    If cb IsNot Nothing Then
                                        colValue = cb.Text
                                        If cb.Text.Trim = "" Then
                                            ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                            Flag1 += 1
                                        ElseIf cb.Text.Trim = "0" Then
                                            dateFields += 1
                                        Else
                                            skipRow = 1
                                            lastRow = GR.RowIndex
                                        End If
                                    Else
                                        colValue = "0"
                                    End If
                                    If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                        If colValue <> "" Then
                                            Childtotal = Childtotal + Convert.ToDouble(colValue)
                                        End If
                                    End If
                                ElseIf dtField.Rows(j).Item("datatype").ToString().ToUpper = "DATETIME" Then
                                    dateFields += 1
                                ElseIf dtField.Rows(j).Item("datatype").ToString().ToUpper = "TEXT" And dtField.Rows(j).Item("isrequired") = 1 Then
                                    Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                    If cb IsNot Nothing Then
                                        If cb.Text.Trim = "" Then
                                            ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                            Flag1 += 1
                                        Else
                                            skipRow = 1
                                            lastRow = GR.RowIndex
                                        End If
                                    End If
                                ElseIf dtField.Rows(j).Item("datatype").ToString().ToUpper = "TEXT" And dtField.Rows(j).Item("isrequired") = 0 Then
                                    dateFields += 1
                                    Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                    If cb.Text.Trim <> "" Then
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If
                                ElseIf dtField.Rows(j).Item("datatype").ToString().ToUpper = "NUMERIC" And dtField.Rows(j).Item("isrequired") = 0 Then
                                    dateFields += 1
                                    Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                    If cb.Text.Trim <> "" And cb.Text.Trim <> "0" Then
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If

                                Else
                                    'skipRow = 1
                                    'lastRow = GR.RowIndex
                                End If
                            End If

                            If ftype.ToUpper() = "DROP DOWN" Then
                                Dim dtFilter As New DataTable

                                Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & cnt), DropDownList)
                                If dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                    If dtField.Rows(j).Item("isrequired") = 1 Then

                                        If cb IsNot Nothing Then
                                            colValue = cb.SelectedValue.ToString

                                        Else
                                            colValue = "0"
                                        End If
                                        If colValue = "0" OrElse colValue = "" Then
                                            ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                            Flag1 += 1
                                        Else
                                        End If
                                    Else
                                        colValue = cb.SelectedValue.ToString
                                        dateFields += 1
                                        If colValue <> "0" And colValue <> "" Then
                                            skipRow = 1
                                            lastRow = GR.RowIndex
                                        End If
                                    End If

                                ElseIf dtField.Rows(j).Item("dropdowntype").ToString() = "MASTER VALUED" Then
                                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                                    Dim strQuery As String = "select SUBSTRING(KC_Logic,0,CHARINDEX('-', KC_Logic)) ParentDropdown,SUBSTRING(KC_Logic,CHARINDEX('-', KC_Logic) + 1,len(KC_Logic)- CHARINDEX(',', KC_Logic)-2) Childdropdown"
                                    strQuery += "  from MMM_MST_fields  WITH(NOLOCK) where documenttype ='" & Session("Doctype") & "' and eid=" & Session("EID") & " and fieldtype='Child Item' and dropdown='" & formname & "'"
                                    strQuery += " and  SUBSTRING(KC_Logic,CHARINDEX('-', KC_Logic) + 1,len(KC_Logic)- CHARINDEX(',', KC_Logic)-2)='" & FldID & "'"
                                    ODA.SelectCommand.CommandText = strQuery
                                    ODA.Fill(dtFilter)

                                    If dtFilter.Rows.Count = 0 Then

                                        If dtField.Rows(j).Item("isrequired") = 1 Then
                                            If cb IsNot Nothing Then
                                                colValue = cb.SelectedValue.ToString

                                            Else
                                                colValue = "0"
                                            End If
                                            If colValue = "0" OrElse colValue = "" OrElse colValue.ToUpper() = "SELECT" Then
                                                ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                                Flag1 += 1
                                            Else
                                                skipRow = 1
                                                lastRow = GR.RowIndex
                                            End If
                                        Else
                                            colValue = cb.SelectedValue.ToString
                                            dateFields += 1
                                            If colValue <> "0" And colValue <> "" And colValue.ToUpper() <> "SELECT" Then
                                                skipRow = 1
                                                lastRow = GR.RowIndex
                                            End If
                                        End If

                                    Else

                                        colValue = IIf(IsNothing(cb), "", cb.SelectedValue.ToString)
                                        dateFields += 1
                                    End If

                                End If

                            End If
                            If ftype.ToUpper() = "MULTI LOOKUPDDL" Then
                                Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                If dtField.Rows(j).Item("isrequired") = 1 Then
                                    If cb IsNot Nothing Then
                                        colValue = cb.SelectedValue.ToString

                                    Else
                                        colValue = "0"
                                    End If
                                    If colValue = "0" OrElse colValue = "" OrElse colValue.ToUpper() = "SELECT" Then
                                        ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                        Flag1 += 1
                                    Else
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If
                                Else
                                    colValue = cb.SelectedValue.ToString
                                    dateFields += 1
                                    If colValue <> "0" And colValue <> "" And colValue.ToUpper() <> "SELECT" Then
                                        skipRow = 1
                                        lastRow = GR.RowIndex
                                    End If
                                End If
                            End If

                            If ftype.ToUpper() = "FILE UPLOADER" Then
                                Dim cell As Integer = -1
                                Dim txtBox As FileUpload = CType(GR.FindControl("fld_" & FldID & "_" & cnt), FileUpload)

                                'Prashant 30-6-2014
                                Dim txtBox1 As Label = CType(GR.FindControl("lblf_" & FldID), Label)

                                Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & FldID), HiddenField)
                                txtBox1.Text = hdn.Value


                                If txtBox1.Text IsNot "" Then
                                    'Prashant
                                    skipRow = 1
                                    lastRow = GR.RowIndex

                                    Dim ext As String = ""
                                    Dim flag As Integer = 0
                                    Dim Validext As String = ""
                                    Dim sourceFile As String = ""
                                    Dim curFileSize As Integer = 0
                                    If Not Request.QueryString("TID") Is Nothing Then
                                        sourceFile = Server.MapPath("~/DOCS/" & Session("EID") & "/" + txtBox1.Text)
                                        Dim finfo As New FileInfo(Server.MapPath("~/DOCS/" & Session("EID") & "/" + txtBox1.Text))

                                        ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
                                        curFileSize = finfo.Length
                                    Else
                                        sourceFile = Server.MapPath("~/DOCS/temp/" + txtBox1.Text)

                                        Dim finfo
                                        Dim hdnf As HiddenField = CType(GR.FindControl("hdnf_" & FldID), HiddenField)
                                        If hdnf.Value = "0" Then
                                            finfo = New FileInfo(Server.MapPath("~/DOCS/" & Session("EID") & "/" + txtBox1.Text))
                                        Else
                                            finfo = New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))
                                        End If
                                        ' Dim finfo As New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))

                                        ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
                                        curFileSize = finfo.Length
                                    End If
                                    If IsDBNull(dtField.Rows(j).Item("UploadAllowedTypes")) = True OrElse Trim(dtField.Rows(j).Item("UploadAllowedTypes")) = "" Then
                                    Else
                                        Dim type As String() = Split(dtField.Rows(j).Item("UploadAllowedTypes").ToString(), ",")
                                        For k As Integer = 0 To type.Length - 1
                                            If type(k) = ext Then
                                                flag = 0 ' if file type is match then passed and saved into DB
                                                Exit For
                                            Else
                                                flag = 1 ' check for type of the not matched
                                                Validext &= type(k).ToString() & ","
                                            End If
                                        Next
                                        If flag = 0 Then
                                        Else
                                            ErrFlag &= "Invalid file type in (" & formname & ") " & dtField.Rows(j).Item("displayName").ToString() & ", "
                                            Flag1 += 1
                                        End If
                                    End If

                                Else
                                    If dtField.Rows(j).Item("isrequired").ToString = "1" Then
                                        ErrFlag &= "Entered Child Value " & dtField.Rows(j).Item("displayName").ToString() & " is required, "
                                        Flag1 += 1
                                    Else
                                        'colValue = txtBox1.Text.ToString
                                        dateFields += 1
                                        'If txtBox1.Text.ToString.Trim = "" Then
                                        '    skipRow = 1
                                        '    lastRow = GR.RowIndex
                                        'End If
                                    End If

                                End If
                            End If
                        End If
                    Next
                    cnt += 1
                End If
            End If

            If Flag1 < GV.Rows(0).Cells.Count - 1 - dateFields And ErrFlag.Trim <> "" Then
                If skipRow = 1 Then
                    updquery = ErrFlag
                    Return updquery.Substring(0, updquery.Length - 2)
                    Exit Function
                End If

            Else

                'For Rule Engin
                'If GR.RowType = DataControlRowType.DataRow Then
                '    If GR.Cells(0).Text.ToUpper <> "TOTAL" And GR.RowIndex <= lastRow Then

                '        Dim retObj As New RuleResponse()
                '        Dim lstData As New List(Of UserData)
                '        lstData = CType(Session("pColl"), List(Of UserData))
                '        Dim lstChildData As New List(Of UserData)
                '        Dim obj As New DynamicForm()

                '        obj.CreateCollection(pnlFields, dtField)
                '        Dim onlyFiltered As DataView = dtField.DefaultView
                '        onlyFiltered.RowFilter = "InlineEditing='1'"
                '        Dim dtFields As DataTable = onlyFiltered.Table.DefaultView.ToTable()

                '        lstChildData = obj.CreateGVCollection(GR, dtFields, GR.RowIndex)
                '        'Initialising Rule objects
                '        Dim objRule As New RuleEngin(Session("EID"), formname, "CREATED", "Submit")
                '        retObj = objRule.ExecuteRule(lstData, lstChildData, True)
                '        If retObj.Success = False Then
                '            Return retObj.Message
                '            Exit Function
                '        End If
                '    End If
                'End If

            End If

        Next
        ''Return "Child form validated validated ..." & lastRow
        'Now Code For Unique validation
        Dim objU As New UpdateData()

        Dim dskeys As New DataSet()

        Dim DisplayMsg = ""

        dskeys = objU.GetKeys(Session("EID"), formname)

        Dim Keys As String = ""
        Dim arrlist As New ArrayList()
        If dskeys.Tables(0).Rows.Count > 0 Then
            If dskeys.Tables(0).Rows.Count > 0 Then
                For Each GR As GridViewRow In GV.Rows
                    Keys = ""
                    If GR.RowIndex <= lastRow Then
                        If GR.RowType = DataControlRowType.DataRow Then
                            If GR.Cells(0).Text.ToUpper <> "TOTAL" Then
                                DisplayMsg = ""
                                For m As Integer = 0 To dskeys.Tables(0).Rows.Count - 1
                                    Dim FieldID = dskeys.Tables(0).Rows(m).Item("FieldID").ToString
                                    Dim FieldType = dskeys.Tables(0).Rows(m).Item("FieldType").ToString
                                    If DisplayMsg = "" Then
                                        DisplayMsg = dskeys.Tables(0).Rows(m).Item("DisplayName").ToString
                                    Else
                                        DisplayMsg = DisplayMsg & ", " & dskeys.Tables(0).Rows(m).Item("DisplayName").ToString
                                    End If
                                    Select Case FieldType.Trim.ToUpper
                                        Case "TEXT BOX"
                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID & GR.RowIndex), TextBox)
                                            Keys = Keys & txtBox.Text.Trim.ToUpper()
                                        Case "DROP DOWN"
                                            Dim DDL As DropDownList = CType(GR.FindControl("fld" & FieldID & "_" & GR.RowIndex), DropDownList)
                                            Keys = Keys & DDL.SelectedItem.Value
                                        Case "CALCULATIVE FIELD"
                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID & GR.RowIndex), TextBox)
                                            Keys = Keys & txtBox.Text.Trim.ToUpper()
                                        Case "LOOKUP"
                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID & GR.RowIndex), TextBox)
                                            Keys = Keys & txtBox.Text.Trim.ToUpper()
                                    End Select
                                Next
                                'Code For checking duplicate rows
                                Dim Test = Keys
                                Dim IsDuplicate = False
                                For Each item In arrlist
                                    If Keys.Trim.ToUpper = item.ToString.Trim.ToUpper Then
                                        IsDuplicate = True
                                    End If
                                Next
                                If IsDuplicate = False Then
                                    arrlist.Add(Test)
                                Else
                                    Return "Please check line number " & (GR.RowIndex + 1) & " of " & formname & "," & " Combination of " & DisplayMsg & " must be unique."
                                    Exit Function
                                End If
                            End If
                        End If
                    End If

                Next
            End If
        End If
        'Code for unique validation end here 

        Session(formname & "LastRow") = lastRow
        ViewState("LastRow") = lastRow
        ODA.Dispose()
        con.Close()
        con.Dispose()
        Return updquery

    End Function

    Protected Sub SavingActionChildItem(ByVal formname As String, ByVal docid As Integer, con As SqlConnection, trans As SqlTransaction)
        Try
            Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
            ODA.SelectCommand.Transaction = trans
            Dim dtField As New DataTable
            ' Dim dtFD As New DataTable
            'Dim drnew As DataRow
            Dim updquery As String = ""
            Dim ob As New DynamicForm()
            If Session(formname & "VAL") Is Nothing Then
                Exit Sub
            End If

            ' dtField = ViewState(formname)
            'dtField = Session("D" & formname)
            Dim dtvalue As DataTable = Session(formname & "VAL")
            'Session("id")
            Dim dt As New DataTable
            ODA.SelectCommand.CommandText = "select * from mmm_mst_fields   where eid=" & Session("eid") & " and documenttype='" & formname & "' "
            ODA.SelectCommand.CommandType = CommandType.Text
            ODA.SelectCommand.Parameters.Clear()
            ODA.Fill(dt)
            dtField = dt
            Dim dtTotal As New DataTable
            ODA.SelectCommand.CommandType = CommandType.Text

            ODA.SelectCommand.CommandText = "SELECT F1.FieldID [MainFieldID],F2.FieldID [ChildFieldID],F2.displayName [CdisplayName] ,F1.dropdown [mDropDown],F1.displayName [MdisplayName],F1.FieldMapping [MFieldMapping],f1.fieldtype [MFIELDTYPE]  FROM MMM_MST_FIELDS F1   INNER JOIN MMM_MST_FIELDS F2   ON F1.dropdown =CONVERT(NVARCHAR(20),F2.Fieldid)  WHERE F1.EID=" & Session("EID") & " AND F1.FieldType in ('CHILD ITEM MAX','CHILD ITEM TOTAL') AND F2.DocumentType ='" & formname & "' AND F1.DOCUMENTTYPE='" & ViewState("MDOCTYPE") & "'"
            ODA.Fill(dtTotal)

            Dim isTotal As Boolean = False
            Dim cDispName As String = ""
            Dim Childtotal As Double = 0
            If dtTotal.Rows.Count = 1 Then
                isTotal = True
                cDispName = dtTotal.Rows(0).Item("cdisplayname").ToString
            End If

            Dim GID As String = dt.Rows(0).Item("fieldId").ToString
            Dim dataitem As DataTable = Session("ITEM")

            Dim GV As GridView = DirectCast(pnlApprove.FindControl("GRD_" & formname.Replace(" ", "__").Replace(".", "_")), GridView)

            If IsNothing(GV) Then
                Exit Sub
            End If
            'Prashant_21_7
            Dim gridCols As DataTable = GV.DataSource
            dataitem = gridCols
            Dim MaxVal As Double = -999
            'Prashant_17_7
            Dim LastRow As Integer = 0

            If IsNothing(Session(formname & "LastRow")) = False Then
                If Session(formname & "LastRow").ToString.Trim <> "" Then
                    LastRow = Convert.ToInt32(Session(formname & "LastRow"))
                Else
                    LastRow = GV.Rows.Count - 1
                End If
            Else
                LastRow = GV.Rows.Count - 1
            End If

            'Prashant_17_7
            Dim cnt As Integer = 0
            ' drnew = dtFD.NewRow()
            For Each GR As GridViewRow In GV.Rows
                If GR.RowIndex <= LastRow Then
                    If GR.RowType = DataControlRowType.DataRow Then
                        If GR.Cells(0).Text.ToUpper <> "TOTAL" Then

                            Dim str As String = ""
                            Dim STRFld As String = ""
                            Dim STRVal As String = ""
                            updquery = ""
                            ' 24 dec 2014 by ball start from here
                            Dim tid = 0 'IIf(IsNothing(dataitem.Rows(GR.RowIndex)), 0, dataitem.Rows(GR.RowIndex).Item("TID"))
                            If dataitem.Rows.Count > GR.RowIndex Then
                                tid = IIf(String.IsNullOrEmpty(dataitem.Rows(GR.RowIndex).Item("TID").ToString), 0, dataitem.Rows(GR.RowIndex).Item("TID"))
                            End If

                            If Val(tid) = 0 Then  ' here is the searching for tid for insertion or updation the record
                                str = "INSERT INTO MMM_MST_DOC_ITEM("
                                For j As Integer = 0 To dtField.Rows.Count - 1  ' decreasing 2 because we are not considering the total row data 
                                    STRFld &= dtField.Rows(j).Item("fieldmapping").ToString & ","  'adding  j+1 for incremental
                                    Dim colValue As String = ""
                                    Dim FldID As String = ""

                                    Dim DispName = dtField.Rows(j).Item("DisplayName").ToString

                                    FldID = dtField.Rows(j).Item("fieldid").ToString()
                                    If dtField.Rows(j).Item("inlineediting").ToString = "1" Or 1 = 1 Then

                                        Dim ftype As String = dtField.Rows(j).Item("fieldtype").ToString()
                                        If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Or ftype.ToUpper() = "LOOKUP" Or ftype.ToUpper() = "MULTI LOOKUP" Then
                                            Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                            If cb IsNot Nothing Then
                                                colValue = cb.Text.ToString
                                            Else
                                                colValue = "0"
                                            End If

                                            If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                                If colValue <> "" Then
                                                    If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
                                                        Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                    ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
                                                        If Convert.ToDouble(colValue) > MaxVal Then
                                                            MaxVal = Convert.ToDouble(colValue)
                                                            Childtotal = MaxVal
                                                        End If
                                                    End If
                                                End If
                                            End If
                                        ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then

                                            Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                            If cb IsNot Nothing Then
                                                colValue = cb.SelectedItem.Text.ToString
                                            Else
                                                colValue = "0"
                                            End If
                                        ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" Then
                                            Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                            If cb IsNot Nothing Then
                                                colValue = cb.SelectedItem.Value.ToString  ' use value bcoz it's mastervalued - needs tid
                                            Else
                                                colValue = "0"
                                            End If

                                        ElseIf ftype.ToUpper() = "CHECKBOX LIST" Then
                                            Dim cb As CheckBoxList = CType(GR.FindControl("fld" & FldID & "_" & cnt), CheckBoxList)
                                            If cb IsNot Nothing Then
                                                For Each item As ListItem In cb.Items
                                                    If item.Selected Then
                                                        colValue &= item.Value & ","
                                                    End If
                                                Next
                                                If colValue.Length > 0 Then
                                                    colValue = colValue.Substring(0, colValue.Length - 1)
                                                End If
                                            Else
                                                colValue = ""
                                            End If
                                        ElseIf ftype.ToUpper() = "MULTI LOOKUPDDL" Then
                                            Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                            If cb IsNot Nothing Then
                                                colValue = cb.SelectedItem.Value.ToString  ' use value bcoz it's mastervalued - needs tid
                                            Else
                                                colValue = "0"
                                            End If
                                        ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
                                            '' here to code for getting file 
                                            Dim txtBox As FileUpload = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), FileUpload)
                                            'Prashant 
                                            Dim txtBox1 As Label = CType(GR.FindControl("lblf_" & FldID), Label)

                                            Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & FldID), HiddenField)

                                            Dim hdnflg As HiddenField = CType(GR.FindControl("hdnf_" & FldID), HiddenField)
                                            txtBox1.Text = hdn.Value

                                            If txtBox1.Text IsNot "" And hdnflg.Value IsNot "0" Then
                                                Dim errormsg As String = ""
                                                Dim FN As String = ""
                                                Dim ext As String = ""
                                                Dim flag As Integer = 0
                                                Dim sourceFile As String = Server.MapPath("~/DOCS/temp/" + txtBox1.Text)
                                                Dim finfo As New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))
                                                Dim curFileSize As Integer = finfo.Length
                                                ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
                                                FN = Left(txtBox1.Text, txtBox1.Text.LastIndexOf("."))
                                                colValue = Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & "" & ext

                                                File.Copy(sourceFile, Server.MapPath("DOCS/") & Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & ext)

                                            ElseIf txtBox1.Text IsNot "" And hdnflg.Value IsNot "1" Then
                                                colValue = txtBox1.Text
                                            End If
                                        Else

                                            For index As Integer = 0 To gridCols.Columns.Count - 1
                                                If DispName = gridCols.Columns(index).ColumnName.ToString Then
                                                    colValue = GR.Cells(index).Text.ToString()
                                                    Exit For
                                                Else
                                                    colValue = ""
                                                End If
                                            Next


                                            If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                                If colValue <> "" Then
                                                    If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then  ' by sunil for maxval
                                                        Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                    ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
                                                        If Convert.ToDouble(colValue) > MaxVal Then
                                                            MaxVal = Convert.ToDouble(colValue)
                                                            Childtotal = MaxVal
                                                        End If
                                                    End If
                                                End If
                                            End If
                                        End If
                                    Else  ' if no inline editing 
                                        If dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" And dtField.Rows(j).Item("fieldtype") = "Drop Down" Then
                                            '' here code to get tid from session arrays by sp 13-jan-13
                                            Dim CH() As String = Session("COLHEAD")  ' {}
                                            Dim txt() As String = Session("DDLTXT") ' {}
                                            Dim Vals() As String = Session("DDLVAL") '{}
                                            Dim found As Boolean = False
                                            Dim searchHdr As String = formname & "_" & dtField.Rows(j).Item("displayname")
                                            For a As Integer = 0 To CH.Length - 1
                                                If CH(a).ToString = searchHdr And txt(a).ToString = GR.Cells(j).Text.ToString() Then ' if match found in array 
                                                    colValue = Vals(a).ToString
                                                    found = True
                                                    Exit For
                                                End If
                                            Next
                                            If found = False Then
                                                'Prashant_21_7
                                                For index As Integer = 0 To gridCols.Columns.Count - 1
                                                    If DispName = gridCols.Columns(index).ColumnName.ToString Then
                                                        colValue = dtvalue.Rows(cnt).Item(DispName).ToString()
                                                        Exit For
                                                    Else
                                                        colValue = ""
                                                    End If
                                                Next
                                                ' +1 IS ADDED FOR CELL ADJUSTMENT 
                                                'Else
                                                '    colValue = dtvalue.Rows(cnt).Item(j).ToString() ' added by balli on 2 june 
                                            End If
                                            'ElseIf dtField.Rows(j).Item("fieldtype") = "Child Item Total" Then

                                        Else

                                            For index As Integer = 0 To gridCols.Columns.Count - 1
                                                If DispName = gridCols.Columns(index).ColumnName.ToString Then
                                                    colValue = GR.Cells(index).Text.ToString()
                                                    Exit For
                                                Else
                                                    colValue = ""
                                                End If
                                            Next
                                            ' +1 IS ADDED FOR CELL ADJUSTMENT 
                                            If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                                If colValue <> "" Then
                                                    If dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM TOTAL" Then  ' by sunil for maxval
                                                        Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                    ElseIf dtTotal.Rows(0).Item("mfieldType").ToString().ToUpper = "CHILD ITEM MAX" Then  ' by sunil for maxval
                                                        If Convert.ToDouble(colValue) > MaxVal Then
                                                            MaxVal = Convert.ToDouble(colValue)
                                                            Childtotal = MaxVal
                                                        End If
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                    STRVal &= "'" & colValue & "'" & ","
                                Next
                                ' code for insertion of document 
                                STRFld &= "DOCID,documenttype,isauth,cmastertid)" ' 24 dec inserting cmastertid

                                Dim cMasterTid As String = ""
                                If dataitem.Rows.Count > GR.RowIndex Then
                                    Dim cols As DataColumnCollection = dataitem.Columns
                                    If cols.Contains("cmasterTid") Then
                                        cMasterTid = IIf(String.IsNullOrEmpty(dataitem.Rows(GR.RowIndex).Item("cmasterTid")), "", dataitem.Rows(GR.RowIndex).Item("cmasterTid").ToString())
                                    End If
                                End If
                                Dim orgDoc = formname.Split(".")
                                STRVal &= docid & "," & "'" & orgDoc(1) & "'" & ",1," & IIf(cMasterTid = "", "null", cMasterTid) & ")"
                                'STRVal &= docid & "," & "'" & formname & "'" & ",1," & gridCols.Columns("cmasterTid").ColumnName & ")"

                                str &= STRFld & "values(" & STRVal
                                ODA.SelectCommand.CommandText = str
                                ODA.SelectCommand.ExecuteNonQuery()
                            Else
                                str = "update MMM_MST_DOC_ITEM Set "
                                Dim querry As String = ""
                                For j As Integer = 0 To dtField.Rows.Count - 1
                                    STRFld &= dtField.Rows(j).Item("fieldmapping").ToString & ","
                                    Dim colValue As String = ""
                                    Dim FldID As String = ""
                                    FldID = dtField.Rows(j).Item("fieldid").ToString()
                                    If dtField.Rows(j).Item("inlineediting").ToString = "1" Or 1 = 1 Then
                                        '' new for getting child item total 
                                        Dim ftype As String = dtField.Rows(j).Item("fieldtype").ToString()
                                        Dim fldmapping As String = dtField.Rows(j).Item("fieldmapping").ToString()
                                        If ftype.ToUpper() = "TEXT BOX" Or ftype.ToUpper() = "CALCULATIVE FIELD" Then
                                            ' Dim cb As TextBox = CType(GR.FindControl("fld" & j.ToString() & "_" & cnt), TextBox)
                                            'Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & cnt), TextBox)
                                            Dim cb As TextBox = CType(GR.FindControl("fld" & FldID & GR.RowIndex), TextBox)
                                            If cb IsNot Nothing Then
                                                colValue = Replace(cb.Text.ToString, "'", "")
                                                querry = fldmapping & "='" & colValue & "' " & ","
                                            Else
                                                colValue = "0"
                                            End If
                                            str &= querry

                                            If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                                If colValue <> "" Then
                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                End If
                                            End If
                                        ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdowntype").ToString() = "FIX VALUED" Then
                                            'Dim cb As New DropDownList
                                            Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                            If cb IsNot Nothing Then
                                                colValue = cb.SelectedItem.Text.ToString
                                                querry = fldmapping & "='" & colValue & "' " & ","
                                            Else
                                                colValue = "0"
                                            End If

                                            str &= querry
                                        ElseIf ftype.ToUpper() = "DROP DOWN" And dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" Then
                                            Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                            If cb IsNot Nothing Then
                                                colValue = cb.SelectedItem.Value.ToString  ' use value bcoz it's mastervalued - needs tid
                                                querry = fldmapping & "='" & colValue & "' " & ","
                                            Else
                                                colValue = "0"
                                            End If

                                            str &= querry
                                        ElseIf ftype.ToUpper() = "MULTI LOOKUPDDL" Then
                                            Dim cb As DropDownList = CType(GR.FindControl("fld" & FldID & "_" & GR.RowIndex), DropDownList)
                                            If cb IsNot Nothing Then
                                                colValue = cb.SelectedItem.Value.ToString  ' use value bcoz it's mastervalued - needs tid
                                                querry = fldmapping & "='" & colValue & "' " & ","
                                            Else
                                                colValue = "0"
                                            End If
                                            str &= querry
                                        ElseIf ftype.ToUpper() = "CHECKBOX LIST" Then
                                            Dim cb As CheckBoxList = CType(GR.FindControl("fld" & FldID & "_" & cnt), CheckBoxList)
                                            If cb IsNot Nothing Then
                                                For Each item As ListItem In cb.Items
                                                    If item.Selected Then
                                                        colValue &= item.Value & ","
                                                    End If
                                                Next
                                                If colValue.Length > 0 Then
                                                    colValue = colValue.Substring(0, colValue.Length - 1)
                                                    querry = fldmapping & "='" & colValue & "' " & ","
                                                Else
                                                    colValue = ""
                                                End If
                                            Else
                                                colValue = ""
                                            End If
                                            str &= querry

                                        ElseIf ftype.ToUpper() = "FILE UPLOADER" Then
                                            '' here to code for getting file 
                                            Dim txtBox As FileUpload = CType(GR.FindControl("fld_" & FldID & "_" & GR.RowIndex), FileUpload)

                                            Dim txtBox1 As Label = CType(GR.FindControl("lblf_" & FldID), Label)
                                            Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & FldID), HiddenField)
                                            Dim hdnflg As HiddenField = CType(GR.FindControl("hdnf_" & FldID), HiddenField)

                                            txtBox1.Text = hdn.Value

                                            If txtBox1.Text IsNot "" And hdnflg.Value IsNot "0" Then
                                                Dim errormsg As String = ""
                                                Dim FN As String = ""
                                                Dim ext As String = ""
                                                Dim flag As Integer = 0
                                                Dim sourceFile As String = Server.MapPath("~/DOCS/temp/" + txtBox1.Text)
                                                Dim finfo As New FileInfo(Server.MapPath("~/DOCS/temp/" + txtBox1.Text))
                                                Dim curFileSize As Integer = finfo.Length
                                                ext = txtBox1.Text.Substring(txtBox1.Text.LastIndexOf("."), txtBox1.Text.Length - txtBox1.Text.LastIndexOf("."))
                                                FN = Left(txtBox1.Text, txtBox1.Text.LastIndexOf("."))
                                                colValue = Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & "" & ext
                                                File.Copy(sourceFile, Server.MapPath("DOCS/") & Session("EID").ToString() & "/" & getSafeString(FN) & "_" & Now.Day & Now.Month & Now.Year & Now.Minute & Now.Second & Now.Millisecond & dtField.Rows(j).Item("FieldID").ToString() & ext)
                                                querry = fldmapping & "='" & colValue & "' " & ","
                                            ElseIf txtBox1.Text IsNot "" And hdnflg.Value IsNot "1" Then
                                                colValue = Session("EID").ToString() & "/" & txtBox1.Text
                                                querry = fldmapping & "='" & colValue & "' " & ","
                                            Else
                                                colValue = ""
                                                querry = fldmapping & "='" & colValue & "' " & ","
                                            End If

                                            str &= querry

                                        Else
                                            colValue = GR.Cells(j).Text.ToString()
                                            querry = fldmapping & "='" & colValue & "' " & ","
                                            If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                                If colValue <> "" Then
                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                End If
                                            End If

                                        End If
                                    Else  ' if no inline editing 
                                        If dtField.Rows(j).Item("dropdownTYPE") = "MASTER VALUED" And dtField.Rows(j).Item("fieldtype") = "Drop Down" Then
                                            '' here code to get tid from session arrays by sp 13-jan-13
                                            Dim CH() As String = Session("COLHEAD")  ' {}
                                            Dim txt() As String = Session("DDLTXT") ' {}
                                            Dim Vals() As String = Session("DDLVAL") '{}
                                            Dim found As Boolean = False
                                            Dim searchHdr As String = formname & "_" & dtField.Rows(j).Item("displayname")
                                            For a As Integer = 0 To CH.Length - 1
                                                If CH(a).ToString = searchHdr And txt(a).ToString = GR.Cells(j).Text.ToString() Then ' if match found in array 
                                                    colValue = Vals(a).ToString
                                                    found = True
                                                    Exit For
                                                End If
                                            Next
                                            If found = False Then
                                                colValue = dtvalue.Rows(cnt).Item(j).ToString()
                                            End If
                                            'ElseIf dtField.Rows(j).Item("fieldtype") = "Child Item Total" Then

                                        Else
                                            colValue = GR.Cells(j).Text.ToString()
                                            If dtField.Rows(j).Item("displayname") = cDispName Then  '' new for getting child total
                                                If colValue <> "" Then
                                                    Childtotal = Childtotal + Convert.ToDouble(colValue)
                                                End If
                                            End If
                                        End If
                                    End If
                                    'STRVal &= "'" & colValue & "'" & ","
                                    colValue = colValue
                                Next
                                If Right(str, 1) = "," Then
                                    str = Left(str, str.Length - 1)
                                End If
                                Dim str1 As String = ""
                                str = str & "  where TID=" & dataitem.Rows(GR.RowIndex).Item("tid").ToString()
                                ODA.SelectCommand.CommandText = str
                                ODA.SelectCommand.ExecuteNonQuery()
                            End If
                            '  End If
                        End If
                    End If
                End If
            Next

            If isTotal Then
                Dim childTotalUpdstr As String = ""
                childTotalUpdstr = "UPDATE mmm_mst_doc set " & dtTotal.Rows(0).Item("mFieldMapping").ToString & "=" & Childtotal & " where tid=" & docid
                ODA.SelectCommand.CommandType = CommandType.Text
                ODA.SelectCommand.CommandText = childTotalUpdstr
                ODA.SelectCommand.ExecuteNonQuery()
            End If

            dt.Dispose()
            dtTotal.Dispose()
            dtField.Dispose()
            dtvalue.Dispose()

            Session(formname) = Nothing
            Session(formname & "VAL") = Nothing
            'ViewState("MDOCTYPE") = Nothing
            ODA.Dispose()
        Catch ex As Exception
            Throw New Exception(ex.ToString() & "Exception Occured in DocDetail.SavingActionChildItem")
        End Try
    End Sub

#Region "for autocomplete inline grid method by balli "
    Private Sub bindLookUp(ByVal id1 As Integer, ByVal ACROWS As GridViewRow, ByVal Acid As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'WITH (NOLOCK) added by Himank on 28th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select LOOKUPVALUE,dropdown,documenttype,dropdowntype from MMM_MST_FIELDS WITH(NOLOCK)  WHERE FIELDID=" & id1 & "", con)
        Dim DS As New DataSet
        Dim xwhr As String = ""
        oda.Fill(DS, "data")

        Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("lookupvalue").ToString()
        Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")

        If LOOKUPVALUE.Length > 0 Then
            Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
            If lookfld.Length > 0 Then
                For iLookFld As Integer = 0 To lookfld.Length - 1            '' loop for lookup vals 
                    Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                    If fldPair.Length > 1 Then
                        'Dim obj As DynamicForm = New DynamicForm()
                        '                        If DynamicForm.GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then   '' check if control to be filled exists
                        If Not IsNothing(ACROWS.FindControl("fld" & Val(fldPair(0)) & ACROWS.RowIndex)) Then
                            'WITH (NOLOCK) added by Himank on 28th sep 2015
                            oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS  WITH(NOLOCK) WHERE FIELDID=" & fldPair(0) & "", con)  ' get fld dtl from fld master
                            Dim dt As New DataTable
                            oda.Fill(dt)
                            Dim STR As String = ""
                            If fldPair(1).ToString.ToUpper = "C" Then    '' fldpair(0) = fieldid to be filled 
                                Dim proc As String = dt.Rows(0).Item("CAL_FIELDS").ToString()
                                If proc.Length > 1 Then
                                    Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                    Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                    ' bindsunil
                                    If DDL0.SelectedItem.Text.ToUpper <> "SELECT" Then
                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.CommandText = proc
                                        oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                                        oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                        oda.SelectCommand.Parameters.AddWithValue("VALUE", Acid)
                                        Dim dss As New DataTable
                                        oda.Fill(dss)
                                        Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                        ddl1.Items.Clear()
                                        ddl1.Items.Add("SELECT")
                                        ddl1.Items(0).Value = "0"
                                        For i As Integer = 0 To dss.Rows.Count - 1
                                            ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                            ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                        Next
                                    End If
                                End If
                            ElseIf fldPair(1).ToString.ToUpper = "R" Then
                                Dim TAB1 As String = ""
                                Dim TAB2 As String = ""
                                Dim STID As String = ""
                                Dim TID As String = ""
                                If documenttype(0).ToString.ToUpper = "MASTER" Then
                                    TAB2 = "MMM_MST_MASTER"
                                    TID = "TID"
                                ElseIf documenttype(0).ToString.ToUpper = "DOCUMENT" Then
                                    TAB2 = "MMM_MST_DOC"
                                    TID = "TID"
                                ElseIf documenttype(1).ToString.ToUpper = "USER" Then
                                    TAB2 = "MMM_MST_USER"
                                    TID = "UID"
                                End If
                                Dim DOCTYPE() As String = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")
                                If DOCTYPE(0).ToString.ToUpper = "MASTER" Then
                                    TAB1 = "MMM_MST_MASTER"
                                    STID = "TID"
                                ElseIf DOCTYPE(0).ToString.ToUpper = "DOCUMENT" Then
                                    TAB1 = "MMM_MST_DOC"
                                    STID = "TID"
                                ElseIf DOCTYPE(1).ToString.ToUpper = "USER" Then
                                    TAB1 = "MMM_MST_USER"
                                    STID = "UID"
                                End If
                                Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                ''Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                oda.SelectCommand.Parameters.Clear()
                                oda.SelectCommand.CommandText = "USP_GETMANNUALFILTER"
                                oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                oda.SelectCommand.Parameters.AddWithValue("@TAB1", TAB1)
                                oda.SelectCommand.Parameters.AddWithValue("@TAB2", TAB2)
                                oda.SelectCommand.Parameters.AddWithValue("@DOCUMENTTYPE", DOCTYPE(1).ToString)
                                oda.SelectCommand.Parameters.AddWithValue("@FLDMAPPING", DOCTYPE(2).ToString)
                                oda.SelectCommand.Parameters.AddWithValue("@AUTOFILTER", dt.Rows(0).Item("AUTOFILTER").ToString())
                                oda.SelectCommand.Parameters.AddWithValue("@TID", TID)
                                oda.SelectCommand.Parameters.AddWithValue("@STID", STID)
                                oda.SelectCommand.Parameters.AddWithValue("@VAL", Acid)
                                Dim dss As New DataTable
                                oda.Fill(dss)



                                Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                ddl1.Items.Clear()
                                ddl1.Items.Add("SELECT")
                                ddl1.Items(0).Value = "0"
                                For i As Integer = 0 To dss.Rows.Count - 1
                                    ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                    ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                Next
                            Else    '' else of case 'R' and 'C' lookup (for -fld)
                                Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")  ' this contains tobe filled values 
                                Dim TABLENAME As String = ""
                                Dim TID As String = "TID"
                                If UCase(DROPDOWN(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_MASTER"
                                ElseIf UCase(DROPDOWN(0).ToString()) = "DOCUMENT" Then
                                    TABLENAME = "MMM_MST_DOC"
                                ElseIf UCase(DROPDOWN(0).ToString()) = "CHILD" Then
                                    TABLENAME = "MMM_MST_DOC_ITEM"
                                ElseIf UCase(DROPDOWN(0).ToString()) = "STATIC" Then
                                    If UCase(DROPDOWN(1).ToString()) = "USER" Then
                                        TABLENAME = "MMM_MST_USER"
                                        TID = "UID"
                                    ElseIf UCase(DROPDOWN(1).ToString()) = "LOCATION" Then
                                        TABLENAME = "MMM_MST_LOCATION"
                                        If DROPDOWN(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                            TID = "SID"
                                        Else
                                            TID = "LOCID"
                                        End If
                                    Else
                                        TABLENAME = dt.Rows(0).Item("DBTABLENAME").ToString
                                    End If
                                ElseIf UCase(DROPDOWN(0).ToString()) = "SESSION" Then
                                    TABLENAME = "MMM_MST_USER"
                                    TID = "UID"
                                End If
                                ' Dim SLVALUE As String() = Acid ''ddl.SelectedValue.Split("|")

                                If dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "AUTOCOMPLETE" Then  '' check field type 
                                    If DynamicForm.GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then
                                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & Val(fldPair(0)).ToString()), TextBox)
                                        txtBox.Text = String.Empty
                                    End If

                                ElseIf dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "DROP DOWN" Then  '' check field type 
                                    Dim AUTOFILTER As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                    Dim tids As String = ""

                                    ''Filter Data according to Userid
                                    Dim obj As DynamicForm = New DynamicForm()
                                    tids = obj.UserDataFilter(DS.Tables("data").Rows(0).Item("documenttype").ToString(), DROPDOWN(1).ToString())
                                    If tids.Length > 2 Then
                                        xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                    Else
                                        xwhr = ""
                                    End If

                                    Dim ChildDoctype As String = ""

                                    If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                        Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                        ChildDoctype = ChildMid(1).ToString
                                    End If

                                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                    oda.SelectCommand.CommandText = "USP_BINDDDL"
                                    oda.SelectCommand.Parameters.Clear()
                                    oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                    oda.SelectCommand.Parameters.AddWithValue("@TableName", TABLENAME)
                                    oda.SelectCommand.Parameters.AddWithValue("@Val", Acid)
                                    oda.SelectCommand.Parameters.AddWithValue("@xwhr", xwhr)
                                    oda.SelectCommand.Parameters.AddWithValue("@tid", TID)
                                    If ChildDoctype.Length > 0 Then
                                        oda.SelectCommand.Parameters.AddWithValue("@documenttype", ChildDoctype)
                                    Else
                                        oda.SelectCommand.Parameters.AddWithValue("@documenttype", DROPDOWN(1))
                                    End If
                                    oda.SelectCommand.Parameters.AddWithValue("@fldmapping", DROPDOWN(2))
                                    oda.SelectCommand.Parameters.AddWithValue("@autofilter", AUTOFILTER)
                                    'oda.SelectCommand.CommandText = STR & " AND isAuth=1 " & xwhr & " Order by " & DROPDOWN(2).ToString()
                                    Dim dtFinal As New DataTable
                                    oda.Fill(dtFinal)

                                    Dim ddlo As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                    ddlo.Items.Clear()
                                    ddlo.Items.Add("SELECT")
                                    ddlo.Items(0).Value = "0"
                                    For i As Integer = 0 To dtFinal.Rows.Count - 1
                                        ddlo.Items.Add(dtFinal.Rows(i).Item(0).ToString())
                                        ddlo.Items(i + 1).Value = dtFinal.Rows(i).Item("tID")
                                    Next
                                Else
                                    'Dim TID1 As String() = "" ''ddl.SelectedValue.ToString.Split("|")
                                    'Dim SELTID As String = ""
                                    'If TID1.Length > 1 Then
                                    '    SELTID = TID1(1).ToString
                                    'Else
                                    '    SELTID = TID1(0).ToString
                                    'End If
                                    Dim value As String = ""

                                    '' below changes made by sunil for child valued lookup on 12-dec-13
                                    Dim ChildDoctype As String = ""
                                    If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                        Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                        ChildDoctype = ChildMid(1).ToString
                                    End If

                                    If Acid.ToString <> "0" And Acid.ToString <> "" Then
                                        oda = New SqlDataAdapter("", con)
                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.CommandText = "uspGetMasterValue"
                                        oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                                        If ChildDoctype.Length > 0 Then
                                            oda.SelectCommand.Parameters.AddWithValue("documentType", ChildDoctype)
                                        Else
                                            oda.SelectCommand.Parameters.AddWithValue("documentType", documenttype(1))
                                        End If
                                        oda.SelectCommand.Parameters.AddWithValue("Type", documenttype(0))
                                        oda.SelectCommand.Parameters.AddWithValue("TID", Acid)
                                        oda.SelectCommand.Parameters.AddWithValue("FLDMAPPING", fldPair(1))
                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        value = oda.SelectCommand.ExecuteScalar().ToString()
                                    End If
                                    Dim TXTBOX As TextBox = TryCast(ACROWS.FindControl("fld" & fldPair(0).ToString() & ACROWS.RowIndex), TextBox)
                                    TXTBOX.Text = value
                                    'Dim proc As String = dt.Rows(0).Item("dropdowntype").ToString()
                                    'If proc.Length > 1 Then
                                    '    Dim DROPDOWN1 As String = dt.Rows(0).Item("DROPDOWN").ToString()
                                    '    Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                    '    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                    '    oda.SelectCommand.Parameters.Clear()
                                    '    oda.SelectCommand.CommandText = proc
                                    '    oda.SelectCommand.Parameters.AddWithValue("VcNo", value)
                                    '    oda.SelectCommand.Parameters.AddWithValue("fldmapping", fldPair(1))
                                    '    oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                    '    oda.SelectCommand.Parameters.AddWithValue("VALUE", DDL0.SelectedValue)
                                    '    Dim dss As New DataTable
                                    '    oda.Fill(dss)
                                    '    Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & dt.Rows(0).Item("autofilter").ToString()), DropDownList)
                                    '    ddl1.Items.Clear()
                                    '    ddl1.Items.Add("SELECT")
                                    '    ddl1.Items(0).Value = "0"
                                    '    For i As Integer = 0 To dss.Rows.Count - 1
                                    '        ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                    '        ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                    '    Next
                                    'End If
                                End If
                            End If
                        End If
                    End If
                Next
            End If
        End If
        con.Dispose()
        oda.Dispose()



    End Sub
    Private Sub txtbox_TextChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim Ac As TextBox = TryCast(sender, TextBox)
            Dim id As String = Ac.ID
            Dim hdnID = id.Replace("fld", "HDN")
            Dim idsa As String = Ac.Parent.ToString
            Dim HDN As HiddenField = CType(Ac.Parent.FindControl(hdnID), HiddenField)
            Dim hdnVal As Integer = HDN.Value
            Dim tablename As String() = Split(HttpContext.Current.Session("tableTID"), "||")
            If tablename.Length > 1 Then
                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString.ToString()
                Dim con As New SqlConnection(conStr)
                Dim da As New SqlDataAdapter("select * from " & tablename(0) & " where eid=" & HttpContext.Current.Session("EID") & " and " & tablename(1) & "=" & hdnVal & " ", con)
                Dim ds As New DataSet
                da.Fill(ds, "fldID")
                If ds.Tables("fldID").Rows.Count = 1 Then
                    'WITH (NOLOCK) added by Himank on 28th sep 2015
                    da.SelectCommand.CommandText = "select * from MMM_MST_FIElds WITH(NOLOCK) where fieldid=" & HttpContext.Current.Session("fieldid") & ""
                    da.Fill(ds, "AcFldid")
                    Dim ddlText As String = ds.Tables("AcFldid").Rows(0).Item("dropdown").ToString()
                    Dim arr As String() = ddlText.Split("-")
                    If ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Length > 2 Then
                        Dim lookupvalue() As String = ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Split(",")
                        For ii As Integer = 0 To lookupvalue.Length - 1
                            If ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Contains("-S") Or ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Contains("-R") Or ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Contains("-C") Or ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Contains("-fld") Then
                                bindLookUp(ds.Tables("AcFldid").Rows(0).Item("FIELDID"), Ac.Parent.Parent, hdnVal)
                            End If
                        Next
                    End If

                End If
            End If
        Catch ex As Exception
            Exit Sub
        End Try

    End Sub
#End Region
End Class
