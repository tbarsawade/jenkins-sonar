Imports Microsoft.VisualBasic
Imports System.Data
Imports System.Data.SqlClient
Imports AjaxControlToolkit
Imports System.IO
Imports System.Web.UI.Page
Imports System.Web
Public Class DynamicForm

    Public _CallerPage As Integer
    Dim fileSize As Integer = 0
    Dim strImage As String = ""
    Dim counter As Integer = 0


#Region "for autocomplete"

    Public Sub bindDDlLookUpAC(ByVal id1 As Integer, ByRef pnlFields As Panel, ByRef AcID As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select DDllookupvalue,dropdown,documenttype,dropdowntype from MMM_MST_FIELDS WHERE FIELDID=" & id1 & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            oda.Fill(DS, "data")
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("DDllookupvalue").ToString()
            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1            '' loop for lookup vals 
                        Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                        If fldPair.Length > 1 Then
                            If GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then   '' check if control to be filled exists
                                oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WHERE FIELDID=" & fldPair(0) & "", con)  ' get fld dtl from fld master
                                Dim dt As New DataTable
                                oda.Fill(dt)
                                Dim STR As String = ""
                                If fldPair(1).ToString.ToUpper = "C" Then    '' fldpair(0) = fieldid to be filled 
                                    Dim proc As String = dt.Rows(0).Item("CAL_FIELDS").ToString()
                                    If proc.Length > 1 Then
                                        Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                        ' bindsunil
                                        If DDL0.SelectedItem.Text.ToUpper <> "SELECT" Then
                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.CommandText = proc
                                            oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                                            oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                            oda.SelectCommand.Parameters.AddWithValue("VALUE", AcID)
                                            Dim dss As New DataTable
                                            oda.Fill(dss)
                                            Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                            ddl1.Items.Clear()
                                            ddl1.Items.Add("SELECT")
                                            ddl1.Items(0).Value = "0"
                                            For i As Integer = 0 To dss.Rows.Count - 1
                                                ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                ddl1.Items(i + 1).Value = dss.Rows(i).Item(1)
                                            Next
                                        End If
                                    End If
                                ElseIf fldPair(1).ToString.ToUpper = "R" Then
                                    Dim TAB1 As String = ""
                                    Dim TAB2 As String = ""
                                    Dim STID As String = ""
                                    Dim TID As String = ""
                                    If documenttype(0).ToString.ToUpper = "MASTER" Then
                                        TAB2 = "MMM_MST_MASTER"
                                        TID = "TID"
                                    ElseIf documenttype(0).ToString.ToUpper = "DOCUMENT" Then
                                        TAB2 = "MMM_MST_DOC"
                                        TID = "TID"
                                    ElseIf documenttype(1).ToString.ToUpper = "USER" Then
                                        TAB2 = "MMM_MST_USER"
                                        TID = "UID"
                                    End If
                                    Dim DOCTYPE() As String = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")
                                    If DOCTYPE(0).ToString.ToUpper = "MASTER" Then
                                        TAB1 = "MMM_MST_MASTER"
                                        STID = "TID"
                                    ElseIf DOCTYPE(0).ToString.ToUpper = "DOCUMENT" Then
                                        TAB1 = "MMM_MST_DOC"
                                        STID = "TID"
                                    ElseIf DOCTYPE(1).ToString.ToUpper = "USER" Then
                                        TAB1 = "MMM_MST_USER"
                                        STID = "UID"
                                    End If
                                    Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                    ''Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                    oda.SelectCommand.Parameters.Clear()
                                    oda.SelectCommand.CommandText = "USP_GETMANNUALFILTER"
                                    oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                    oda.SelectCommand.Parameters.AddWithValue("@TAB1", TAB1)
                                    oda.SelectCommand.Parameters.AddWithValue("@TAB2", TAB2)
                                    oda.SelectCommand.Parameters.AddWithValue("@DOCUMENTTYPE", DOCTYPE(1).ToString)
                                    oda.SelectCommand.Parameters.AddWithValue("@FLDMAPPING", DOCTYPE(2).ToString)
                                    oda.SelectCommand.Parameters.AddWithValue("@AUTOFILTER", dt.Rows(0).Item("AUTOFILTER").ToString())
                                    oda.SelectCommand.Parameters.AddWithValue("@TID", TID)
                                    oda.SelectCommand.Parameters.AddWithValue("@STID", STID)
                                    oda.SelectCommand.Parameters.AddWithValue("@VAL", AcID)
                                    Dim dss As New DataTable
                                    oda.Fill(dss)
                                    Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                    ddl1.Items.Clear()
                                    ddl1.Items.Add("SELECT")
                                    ddl1.Items(0).Value = "0"
                                    For i As Integer = 0 To dss.Rows.Count - 1
                                        ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                        ddl1.Items(i + 1).Value = dss.Rows(i).Item(1)
                                    Next
                                Else    '' else of case 'R' and 'C' lookup (for -fld)
                                    Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")  ' this contains to be filled values 
                                    Dim TABLENAME As String = ""
                                    Dim TID As String = "TID"
                                    If UCase(DROPDOWN(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "DOCUMENT" Then
                                        TABLENAME = "MMM_MST_DOC"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "CHILD" Then
                                        TABLENAME = "MMM_MST_DOC_ITEM"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "STATIC" Then
                                        If UCase(DROPDOWN(1).ToString()) = "USER" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        ElseIf UCase(DROPDOWN(1).ToString()) = "LOCATION" Then
                                            TABLENAME = "MMM_MST_LOCATION"
                                            If DROPDOWN(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                TID = "SID"
                                            Else
                                                TID = "LOCID"
                                            End If
                                        Else
                                            TABLENAME = dt.Rows(0).Item("DBTABLENAME").ToString
                                        End If
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "SESSION" Then
                                        TABLENAME = "MMM_MST_USER"
                                        TID = "UID"
                                    End If
                                    'Dim SLVALUE As String() = DDL.SelectedValue.Split("|")


                                    If dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "AUTOCOMPLETE" Then  '' IF AUTOCOMPLETE THEN EXIT SUB  ' BY SUNIL
                                        '' DO NOTHING BECAUSE CONTROL TYPE IS AUTO COMPLETE   ' BY SUNIL - 19_apr_14
                                        If GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then
                                            Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & Val(fldPair(0)).ToString()), TextBox)
                                            txtBox.Text = String.Empty
                                        End If
                                    ElseIf dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "DROP DOWN" Then  '' check field type 
                                        Dim AUTOFILTER As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        Dim tids As String = ""

                                        ''Filter Data according to Userid
                                        tids = UserDataFilter(DS.Tables("data").Rows(0).Item("documenttype").ToString(), DROPDOWN(1).ToString())

                                        '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                        '' if found then restric no. of list as per rights
                                        Dim StrforRoleAssn As String = ""
                                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & DROPDOWN(1).ToString() & "'"
                                        If Not (tids.Length > 2) Then
                                            tids = CheckRoleAsgnmentDdn(DROPDOWN(1).ToString(), StrforRoleAssn)
                                        End If

                                        If tids.Length > 2 Then
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                        Else
                                            xwhr = ""
                                        End If

                                        Dim ChildDoctype As String = ""

                                        If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                            Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                            ChildDoctype = ChildMid(1).ToString
                                        End If

                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.CommandText = "USP_BINDDDL"
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                        oda.SelectCommand.Parameters.AddWithValue("@TableName", TABLENAME)
                                        oda.SelectCommand.Parameters.AddWithValue("@Val", AcID)
                                        oda.SelectCommand.Parameters.AddWithValue("@xwhr", xwhr)
                                        oda.SelectCommand.Parameters.AddWithValue("@tid", TID)
                                        If ChildDoctype.Length > 0 Then
                                            oda.SelectCommand.Parameters.AddWithValue("@documenttype", ChildDoctype)
                                        Else
                                            oda.SelectCommand.Parameters.AddWithValue("@documenttype", DROPDOWN(1))
                                        End If
                                        oda.SelectCommand.Parameters.AddWithValue("@fldmapping", DROPDOWN(2))
                                        oda.SelectCommand.Parameters.AddWithValue("@autofilter", AUTOFILTER)
                                        'oda.SelectCommand.CommandText = STR & " AND isAuth=1 " & xwhr & " Order by " & DROPDOWN(2).ToString()
                                        Dim dtFinal As New DataTable
                                        oda.Fill(dtFinal)

                                        Dim ddlo As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                        ddlo.Items.Clear()
                                        ddlo.Items.Add("SELECT")
                                        ddlo.Items(0).Value = "0"
                                        For i As Integer = 0 To dtFinal.Rows.Count - 1
                                            ddlo.Items.Add(dtFinal.Rows(i).Item(0).ToString())
                                            ddlo.Items(i + 1).Value = dtFinal.Rows(i).Item("tID")
                                        Next
                                    Else
                                        'Dim TID1 As String() = ddl.SelectedValue.ToString.Split("|")
                                        'Dim SELTID As String = ""
                                        'If TID1.Length > 1 Then
                                        '    SELTID = TID1(1).ToString
                                        'Else
                                        '    SELTID = TID1(0).ToString
                                        'End If
                                        Dim value As String = ""

                                        '' below changes made by sunil for child valued lookup on 12-dec-13
                                        Dim ChildDoctype As String = ""
                                        If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                            Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                            ChildDoctype = ChildMid(1).ToString
                                        End If

                                        If AcID.ToString() <> "0" And AcID.ToString() <> "" Then
                                            oda = New SqlDataAdapter("", con)
                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.CommandText = "uspGetMasterValue"
                                            oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                                            If ChildDoctype.Length > 0 Then
                                                oda.SelectCommand.Parameters.AddWithValue("documentType", ChildDoctype)
                                            Else
                                                oda.SelectCommand.Parameters.AddWithValue("documentType", documenttype(1))
                                            End If
                                            oda.SelectCommand.Parameters.AddWithValue("Type", documenttype(0))
                                            oda.SelectCommand.Parameters.AddWithValue("TID", AcID)
                                            oda.SelectCommand.Parameters.AddWithValue("FLDMAPPING", fldPair(1))
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If
                                            value = oda.SelectCommand.ExecuteScalar().ToString()
                                        End If
                                        Dim ddllukup As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString().Trim()), DropDownList)
                                        ddllukup.SelectedIndex = ddllukup.Items.IndexOf(ddllukup.Items.FindByText(value))
                                        bindMultiLookUP(fldPair(0), pnlFields, ddllukup)
                                        bindddlMultiLookUP(fldPair(0), pnlFields, ddllukup)
                                        ddllukup.BackColor = Drawing.Color.Gray
                                        ddllukup.ForeColor = Drawing.Color.White
                                        ddllukup.Font.Bold = True
                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub

    Private Sub bindLookUp(ByVal id1 As Integer, ByVal pnlFields As Panel, ByVal Acid As Integer, Optional ByVal isDocDetail As Boolean = False)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Try

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim oda As SqlDataAdapter = New SqlDataAdapter("select LOOKUPVALUE,dropdown,documenttype,dropdowntype from MMM_MST_FIELDS WHERE FIELDID=" & id1 & "", con)
            Dim DS As New DataSet
            Dim xwhr As String = ""
            oda.Fill(DS, "data")
            Dim ScreenName As String = DS.Tables("data").Rows(0).Item("documenttype").ToString()
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("lookupvalue").ToString()
            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1            '' loop for lookup vals 
                        Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                        If fldPair.Length > 1 Then
                            If GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then   '' check if control to be filled exists
                                oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WHERE FIELDID=" & fldPair(0) & "", con)  ' get fld dtl from fld master
                                Dim dt As New DataTable
                                oda.Fill(dt)
                                Dim STR As String = ""
                                If fldPair(1).ToString.ToUpper = "C" Then    '' fldpair(0) = fieldid to be filled 
                                    Dim proc As String = dt.Rows(0).Item("CAL_FIELDS").ToString()
                                    If proc.Length > 1 Then
                                        Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                        ' bindsunil
                                        If DDL0.SelectedItem.Text.ToUpper <> "SELECT" Then
                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.CommandText = proc
                                            oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                                            oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                            oda.SelectCommand.Parameters.AddWithValue("VALUE", Acid)
                                            Dim dss As New DataTable
                                            oda.Fill(dss)
                                            Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                            ddl1.Items.Clear()
                                            ddl1.Items.Add("SELECT")
                                            ddl1.Items(0).Value = "0"
                                            For i As Integer = 0 To dss.Rows.Count - 1
                                                ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                ddl1.Items(i + 1).Value = dss.Rows(i).Item(1)
                                            Next
                                        End If
                                    End If
                                ElseIf fldPair(1).ToString.ToUpper = "R" Then
                                    Dim TAB1 As String = ""
                                    Dim TAB2 As String = ""
                                    Dim STID As String = ""
                                    Dim TID As String = ""
                                    If documenttype(0).ToString.ToUpper = "MASTER" Then
                                        TAB2 = "MMM_MST_MASTER"
                                        TID = "TID"
                                    ElseIf documenttype(0).ToString.ToUpper = "DOCUMENT" Then
                                        TAB2 = "MMM_MST_DOC"
                                        TID = "TID"
                                    ElseIf documenttype(1).ToString.ToUpper = "USER" Then
                                        TAB2 = "MMM_MST_USER"
                                        TID = "UID"
                                    End If
                                    Dim DOCTYPE() As String = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")
                                    If DOCTYPE(0).ToString.ToUpper = "MASTER" Then
                                        TAB1 = "MMM_MST_MASTER"
                                        STID = "TID"
                                    ElseIf DOCTYPE(0).ToString.ToUpper = "DOCUMENT" Then
                                        TAB1 = "MMM_MST_DOC"
                                        STID = "TID"
                                    ElseIf DOCTYPE(1).ToString.ToUpper = "USER" Then
                                        TAB1 = "MMM_MST_USER"
                                        STID = "UID"
                                    End If
                                    Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                    ''Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                    oda.SelectCommand.Parameters.Clear()
                                    oda.SelectCommand.CommandText = "USP_GETMANNUALFILTER"
                                    oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                    oda.SelectCommand.Parameters.AddWithValue("@TAB1", TAB1)
                                    oda.SelectCommand.Parameters.AddWithValue("@TAB2", TAB2)
                                    oda.SelectCommand.Parameters.AddWithValue("@DOCUMENTTYPE", DOCTYPE(1).ToString)
                                    oda.SelectCommand.Parameters.AddWithValue("@FLDMAPPING", DOCTYPE(2).ToString)
                                    oda.SelectCommand.Parameters.AddWithValue("@AUTOFILTER", dt.Rows(0).Item("AUTOFILTER").ToString())
                                    oda.SelectCommand.Parameters.AddWithValue("@TID", TID)
                                    oda.SelectCommand.Parameters.AddWithValue("@STID", STID)
                                    oda.SelectCommand.Parameters.AddWithValue("@VAL", Acid)
                                    Dim dss As New DataTable
                                    oda.Fill(dss)

                                    Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                    If Not IsNothing(ddl1) Then
                                        ddl1.Items.Clear()
                                        ddl1.Items.Add("SELECT")
                                        ddl1.Items(0).Value = "0"
                                        For i As Integer = 0 To dss.Rows.Count - 1
                                            ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                            ddl1.Items(i + 1).Value = dss.Rows(i).Item(1)
                                        Next
                                        If dss.Rows.Count = 1 Then
                                            ddl1.SelectedIndex = 1
                                        End If
                                        If dss.Rows.Count = 1 Then
                                            ddl1.SelectedIndex = 1
                                            Dim idTemp As String = Right(ddl1.ID, ddl1.ID.Length - 3)
                                            bind(idTemp, pnlFields, ddl1)
                                            bindlookupddl(idTemp, pnlFields, ddl1)
                                        End If
                                        ddl1.BackColor = Drawing.Color.Gray
                                        ddl1.ForeColor = Drawing.Color.White
                                        ddl1.Font.Bold = True
                                    Else
                                        Dim txtBox As TextBox = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), TextBox)
                                        If Not IsNothing(txtBox) Then
                                            If dss.Rows.Count > 0 Then
                                                txtBox.Text = dss.Rows(0)(DOCTYPE(2))
                                                Dim HDN As HiddenField = CType(pnlFields.FindControl("HDN" & fldPair(0).ToString()), HiddenField)
                                                HDN.Value = dss.Rows(0)("tID")
                                                HttpContext.Current.Session("Fieldid") = fldPair(0).ToString()
                                                Dim autofilExtender As AjaxControlToolkit.AutoCompleteExtender = CType(pnlFields.FindControl("extenderID" & fldPair(0).ToString()), AjaxControlToolkit.AutoCompleteExtender)
                                                oda.SelectCommand.Parameters.Clear()
                                                oda.SelectCommand.CommandType = CommandType.Text
                                                oda.SelectCommand.CommandText = " select * from mmm_mst_fields where fieldid =" & fldPair(0) & " and eid =" & HttpContext.Current.Session("EID")
                                                Dim dtfld As New DataTable()
                                                oda.Fill(dtfld)
                                                If dtfld.Rows.Count > 0 Then
                                                    autofilExtender.ContextKey = dtfld.Rows(0).Item("dropdown").ToString() & "-" & dtfld.Rows(0).Item("FieldID").ToString() & "-" & dtfld.Rows(0).Item("dropdowntype").ToString() & "-" & dtfld.Rows(0).Item("autofilter").ToString() & "-" & dtfld.Rows(0).Item("InitialFilter").ToString()
                                                    HttpContext.Current.Session("tableTID") = TAB1 & "||" & TID
                                                    txtbox_TextChanged(txtBox, New EventArgs())
                                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                                    'txtBox.ForeColor = Drawing.Color.White
                                                    txtBox.Font.Bold = True
                                                    txtBox.Attributes.Add("readonly", "readonly")
                                                End If
                                            ElseIf dss.Rows.Count = 0 Then
                                                'Add Code for HCL autofilter is not clear after postback
                                                Dim HDN As HiddenField = CType(pnlFields.FindControl("HDN" & fldPair(0).ToString()), HiddenField)
                                                HDN.Value = ""
                                                txtBox.Text = ""

                                                txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                                'txtBox.ForeColor = Drawing.Color.White
                                                txtBox.Font.Bold = True
                                                txtBox.Attributes.Add("readonly", "readonly")
                                            End If
                                        Else
                                            'For Check Box list'
                                            Dim chkBoxList As CheckBoxList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), CheckBoxList)
                                            If Not IsNothing(chkBoxList) Then
                                                If chkBoxList.Items.Count > 0 Then
                                                    chkBoxList.Items.Clear()
                                                End If
                                                chkBoxList.DataSource = dss
                                                chkBoxList.DataTextField = dss.Columns(0).ToString()
                                                chkBoxList.DataValueField = dss.Columns(1).ToString()
                                                chkBoxList.DataBind()
                                                chkBoxList.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                                'chkBoxList.ForeColor = Drawing.Color.White
                                                chkBoxList.Font.Bold = True
                                                ' For Each li As ListItem In chkBoxList.Items
                                                '  li.Selected = True
                                                ' Next
                                            End If
                                        End If
                                    End If
                                Else    '' else of case 'R' and 'C' lookup (for -fld)
                                    Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")  ' this contains tobe filled values 
                                    Dim TABLENAME As String = ""
                                    Dim TID As String = "TID"
                                    If UCase(DROPDOWN(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "DOCUMENT" Then
                                        TABLENAME = "MMM_MST_DOC"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "CHILD" Then
                                        TABLENAME = "MMM_MST_DOC_ITEM"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "STATIC" Then
                                        If UCase(DROPDOWN(1).ToString()) = "USER" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        ElseIf UCase(DROPDOWN(1).ToString()) = "LOCATION" Then
                                            TABLENAME = "MMM_MST_LOCATION"
                                            If DROPDOWN(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                TID = "SID"
                                            Else
                                                TID = "LOCID"
                                            End If
                                        Else
                                            TABLENAME = dt.Rows(0).Item("DBTABLENAME").ToString
                                        End If
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "SESSION" Then
                                        TABLENAME = "MMM_MST_USER"
                                        TID = "UID"
                                    End If
                                    ' Dim SLVALUE As String() = Acid ''ddl.SelectedValue.Split("|")

                                    If dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "AUTOCOMPLETE" Then  '' check field type 
                                        If GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then
                                            Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & Val(fldPair(0)).ToString()), TextBox)
                                            txtBox.Text = String.Empty
                                        End If

                                    ElseIf dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "DROP DOWN" Then  '' check field type 
                                        Dim AUTOFILTER As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        Dim tids As String = ""

                                        ''Filter Data according to Userid
                                        tids = UserDataFilter(DS.Tables("data").Rows(0).Item("documenttype").ToString(), DROPDOWN(1).ToString())

                                        '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                        '' if found then restric no. of list as per rights
                                        Dim StrforRoleAssn As String = ""
                                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & DROPDOWN(1).ToString() & "'"
                                        If Not (tids.Length > 2) Then
                                            tids = CheckRoleAsgnmentDdn(DROPDOWN(1).ToString(), StrforRoleAssn)
                                        End If

                                        If tids.Length > 2 Then
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                        Else
                                            xwhr = ""
                                        End If

                                        Dim ChildDoctype As String = ""

                                        If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                            Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                            ChildDoctype = ChildMid(1).ToString
                                        End If

                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.CommandText = "USP_BINDDDL"
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                        oda.SelectCommand.Parameters.AddWithValue("@TableName", TABLENAME)
                                        oda.SelectCommand.Parameters.AddWithValue("@Val", Acid)
                                        oda.SelectCommand.Parameters.AddWithValue("@xwhr", xwhr)
                                        oda.SelectCommand.Parameters.AddWithValue("@tid", TID)
                                        If ChildDoctype.Length > 0 Then
                                            oda.SelectCommand.Parameters.AddWithValue("@documenttype", ChildDoctype)
                                        Else
                                            oda.SelectCommand.Parameters.AddWithValue("@documenttype", DROPDOWN(1))
                                        End If
                                        oda.SelectCommand.Parameters.AddWithValue("@fldmapping", DROPDOWN(2))
                                        oda.SelectCommand.Parameters.AddWithValue("@autofilter", AUTOFILTER)
                                        'oda.SelectCommand.CommandText = STR & " AND isAuth=1 " & xwhr & " Order by " & DROPDOWN(2).ToString()
                                        Dim dtFinal As New DataTable
                                        oda.Fill(dtFinal)

                                        Dim ddlo As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                        ddlo.Items.Clear()
                                        ddlo.Items.Add("SELECT")
                                        ddlo.Items(0).Value = "0"
                                        For i As Integer = 0 To dtFinal.Rows.Count - 1
                                            ddlo.Items.Add(dtFinal.Rows(i).Item(0).ToString())
                                            ddlo.Items(i + 1).Value = dtFinal.Rows(i).Item("tID")
                                        Next
                                    Else
                                        'Dim TID1 As String() = "" ''ddl.SelectedValue.ToString.Split("|")
                                        'Dim SELTID As String = ""
                                        'If TID1.Length > 1 Then
                                        '    SELTID = TID1(1).ToString
                                        'Else
                                        '    SELTID = TID1(0).ToString
                                        'End If
                                        Dim value As String = ""

                                        '' below changes made by sunil for child valued lookup on 12-dec-13
                                        Dim ChildDoctype As String = ""
                                        If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                            Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                            ChildDoctype = ChildMid(1).ToString
                                        End If

                                        If Acid.ToString <> "0" And Acid.ToString <> "" Then
                                            oda = New SqlDataAdapter("", con)
                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.CommandText = "uspGetMasterValue"
                                            oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                                            If ChildDoctype.Length > 0 Then
                                                oda.SelectCommand.Parameters.AddWithValue("documentType", ChildDoctype)
                                            Else
                                                oda.SelectCommand.Parameters.AddWithValue("documentType", documenttype(1))
                                            End If
                                            oda.SelectCommand.Parameters.AddWithValue("Type", documenttype(0))
                                            oda.SelectCommand.Parameters.AddWithValue("TID", Acid)
                                            oda.SelectCommand.Parameters.AddWithValue("FLDMAPPING", fldPair(1))
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If
                                            value = oda.SelectCommand.ExecuteScalar().ToString()
                                        End If
                                        Dim TXTBOX As TextBox = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString().Trim()), TextBox)
                                        If Not IsNothing(TXTBOX) Then
                                            TXTBOX.Text = value
                                            TXTBOX.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                            'txtBox.ForeColor = Drawing.Color.White
                                            TXTBOX.Font.Bold = True
                                        Else
                                            Dim CHKBOX As CheckBox = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString().Trim()), CheckBox)
                                            If value.ToUpper = "YES" Then
                                                CHKBOX.Checked = True
                                            Else
                                                CHKBOX.Checked = False
                                            End If
                                            CHKBOX.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                            'CHKBOX.ForeColor = Drawing.Color.White
                                        End If

                                        'Dim proc As String = dt.Rows(0).Item("dropdowntype").ToString()
                                        'If proc.Length > 1 Then
                                        '    Dim DROPDOWN1 As String = dt.Rows(0).Item("DROPDOWN").ToString()
                                        '    Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                        '    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        '    oda.SelectCommand.Parameters.Clear()
                                        '    oda.SelectCommand.CommandText = proc
                                        '    oda.SelectCommand.Parameters.AddWithValue("VcNo", value)
                                        '    oda.SelectCommand.Parameters.AddWithValue("fldmapping", fldPair(1))
                                        '    oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                        '    oda.SelectCommand.Parameters.AddWithValue("VALUE", DDL0.SelectedValue)
                                        '    Dim dss As New DataTable
                                        '    oda.Fill(dss)
                                        '    Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & dt.Rows(0).Item("autofilter").ToString()), DropDownList)
                                        '    ddl1.Items.Clear()
                                        '    ddl1.Items.Add("SELECT")
                                        '    ddl1.Items(0).Value = "0"
                                        '    For i As Integer = 0 To dss.Rows.Count - 1
                                        '        ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                        '        ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                        '    Next
                                        'End If
                                    End If
                                End If
                            End If
                        End If
                    Next
                    oda = New SqlDataAdapter("", con)
                    oda.SelectCommand.CommandText = "select * from mmm_mst_fields where documenttype='" & ScreenName & "' and eid=" & HttpContext.Current.Session("EID") & " and isActive=1"
                    Dim dts As New DataTable
                    oda.Fill(dts)
                    ExecuteControllevelRule(id1, pnlFields, Nothing, ScreenName, dts, Nothing, Nothing, False)
                End If
            End If
        Catch ex As Exception
            ex.ToString()
        Finally
            con.Dispose()
        End Try



    End Sub

    Private Sub txtbox_TextChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim Ac As TextBox = TryCast(sender, TextBox)
            Ac.Focus()
            Dim panelfields As Panel = HttpContext.Current.Session("pnlFields")
            Dim HDN As HiddenField = CType(panelfields.FindControl("HDN" & HttpContext.Current.Session("fieldid")), HiddenField)
            Dim hdnVal As Integer = HDN.Value
            Dim tablename As String() = Split(HttpContext.Current.Session("tableTID"), "||")
            If tablename.Length > 1 Then
                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString.ToString()
                Dim con As New SqlConnection(conStr)
                Dim da As New SqlDataAdapter("select * from " & tablename(0) & " where eid=" & HttpContext.Current.Session("EID") & " and " & tablename(1) & "=" & hdnVal & " ", con)
                Dim ds As New DataSet
                da.Fill(ds, "fldID")
                If ds.Tables("fldID").Rows.Count = 1 Then
                    da.SelectCommand.CommandText = "select * from MMM_MST_FIElds where fieldid=" & HttpContext.Current.Session("fieldid") & ""
                    da.Fill(ds, "AcFldid")
                    Dim ddlText As String = ds.Tables("AcFldid").Rows(0).Item("dropdown").ToString()
                    Dim arr As String() = ddlText.Split("-")
                    If ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Length > 2 Then
                        Dim lookupvalue() As String = ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Split(",")
                        'For ii As Integer = 0 To lookupvalue.Length - 1
                        If ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Contains("-S") Or ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Contains("-R") Or ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Contains("-C") Or ds.Tables("AcFldid").Rows(0).Item("lookupvalue").ToString.Contains("-fld") Then
                            bindLookUp(ds.Tables("AcFldid").Rows(0).Item("FIELDID"), HttpContext.Current.Session("pnlFields"), hdnVal)
                            bindDDlLookUpAC(ds.Tables("AcFldid").Rows(0).Item("FIELDID"), HttpContext.Current.Session("pnlFields"), hdnVal)
                        End If
                        'Next
                    End If

                End If
            End If
        Catch ex As Exception
            Exit Sub
        End Try

    End Sub
#End Region

    Public Sub GetConditionalBasedPanel(ByVal ds As DataTable, ByRef pnlFields As Panel, ByRef UpdatePanel1 As UpdatePanel, ByRef btnActEdit As Button, ByVal autolayout As Integer, Optional ByRef ddown As DropDownList = Nothing, Optional ByVal amendment As String = Nothing, Optional ByVal IsDocDetail As Boolean = False, Optional ByVal IsCallingFromMainHome As Boolean = False, Optional ByVal IsTabPanel As Boolean = False, Optional ByVal TabName As String = "Defalut", Optional isTabCallable As Boolean = False, Optional ByVal docpanelID As Integer = 0, Optional ByVal tabContainer As AjaxControlToolkit.TabContainer = Nothing, Optional ByVal tabIndex As Integer = 0, Optional ByRef isOnlyTabChild As Boolean = False, Optional ByVal TotaltabIndex As Integer = 0, Optional ByVal isDrf As Integer = 0)

        Dim oda As SqlDataAdapter = Nothing
        Dim oda1 As SqlDataAdapter = Nothing
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = Nothing
        Dim objDC As New DataClass()
        If ds.Rows.Count > 0 Then
            HttpContext.Current.Session("pnlFields") = pnlFields
            Dim newScreenWidth As Integer = 0
            Dim newScreenHeight As Integer = 0
            con = New SqlConnection(conStr)
            Dim layout As String = ds.Rows(0).Item("LayoutType").ToString()
            If UCase(layout) = "CUSTOM" Then
                CreateControlOnCustom(ds, pnlFields, UpdatePanel1, btnActEdit, autolayout)
            ElseIf UCase(layout) = "TICKET" Then
                CreateControlForTicket(ds, pnlFields, UpdatePanel1, btnActEdit, autolayout)
            Else
                'Added for Tab Control
                Dim tabContent As New Control()

                If IsTabPanel And Not isOnlyTabChild Then
                    pnlFields.Controls.Add(New LiteralControl("<div class='maindivTabs'  id='myDIV" & tabIndex & "'>"))
                    pnlFields.Controls.Add(New LiteralControl("<table class=""table""><tbody>"))
                Else
                    pnlFields.Controls.Add(New LiteralControl("<div class=""form""><table width="" 100%"" cellspacing="" 5px"" border="" 0px"" cellpadding="" 0px"">"))
                End If

                Dim screenWidth As Integer = pnlFields.Width.Value

                Dim lblWidth As Integer
                Dim controlWdth As Integer

                If screenWidth > 0 Then
                    If layout = "DOUBLE COLUMN" Then
                        lblWidth = 130
                        controlWdth = 240
                        newScreenWidth = (lblWidth + controlWdth + 30) * 2
                    ElseIf layout = "TRIPLE COLUMN" Then
                        lblWidth = 130
                        controlWdth = 240
                        newScreenWidth = (lblWidth + controlWdth + 30) * 3
                    Else
                        lblWidth = 210
                        controlWdth = 540
                        newScreenWidth = (lblWidth + controlWdth + 30)
                    End If
                End If

                Dim datatype As String = ""
                If Not isOnlyTabChild Then
                    For i As Integer = 0 To ds.Rows.Count - 1
                        'Add for Tab Functionality
                        newScreenHeight = newScreenHeight + 30
                        If ds.Rows(i).Item("FieldType").ToString().ToUpper() = "SEPARATOR" Then
                            If layout = "DOUBLE COLUMN" Then
                                If i Mod 2 = 0 Then
                                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                                End If
                            ElseIf layout = "TRIPLE COLUMN" Then
                                If i Mod 3 = 0 Then
                                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                                End If
                            Else
                                pnlFields.Controls.Add(New LiteralControl("<tr>"))
                            End If
                            Dim dropdown() As String = ds.Rows(i).Item("dropdown").ToString().Split(",")
                            pnlFields.Controls.Add(New LiteralControl("<td style="" width:" & lblWidth & "px; text-align:left"">"))
                            pnlFields.Controls.Add(New LiteralControl(" <div style="" width:" & lblWidth & "px; font-weight: bold; " & dropdown(0) & "; border-color:#" & dropdown(1) & ";"" ></div>"))
                            pnlFields.Controls.Add(New LiteralControl("</td><td style="" width:" & controlWdth & "px;text-align:left"">"))
                        Else
                            Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                            Dim lbl As New Label
                            lbl.ID = "lbl" & ds.Rows(i).Item("FieldID").ToString()
                            If ds.Rows(i).Item("isrequired").ToString() = "1" Then
                                dispName &= "*"
                            End If
                            lbl.Text = dispName
                            lbl.Font.Bold = True
                            If layout = "DOUBLE COLUMN" Then
                                If i Mod 2 = 0 Then
                                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                                End If
                            ElseIf layout = "TRIPLE COLUMN" Then
                                If i Mod 3 = 0 Then
                                    If IsTabPanel Then
                                        'tabContent.Controls.Add(New LiteralControl("<tr>"))
                                        'tabContainer.Controls(tabIndex).Controls.Add(New LiteralControl("<tr>"))
                                        pnlFields.Controls.Add(New LiteralControl("<tr>"))
                                    Else
                                        pnlFields.Controls.Add(New LiteralControl("<tr>"))
                                    End If

                                End If
                            Else
                                pnlFields.Controls.Add(New LiteralControl("<tr>"))
                            End If

                            If IsTabPanel Then
                                pnlFields.Controls.Add(New LiteralControl("<td style="" width:" & lblWidth & "px; text-align:left"">"))
                                'tabContainer.Controls(tabIndex).Controls.Add(New LiteralControl("<td style="" width:" & lblWidth & "px; text-align:left"">"))
                                'tabContent.Controls.Add(New LiteralControl("<td style="" width:" & lblWidth & "px; text-align:left"">"))
                            Else
                                pnlFields.Controls.Add(New LiteralControl("<td style="" width:" & lblWidth & "px; text-align:left"">"))
                            End If

                            'don't add label for child grid

                            If ds.Rows(i).Item("FieldType").ToString().ToUpper() = "CHILD ITEM" Then
                            Else
                                'For Grofers

                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim lblcss As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    lbl.Attributes.Add("Style", lblcss(0))
                                Else
                                End If
                                If IsTabPanel Then
                                    'tabContainer.Controls(tabIndex).Controls.Add(lbl)
                                    pnlFields.Controls.Add(lbl)
                                Else
                                    pnlFields.Controls.Add(lbl)
                                End If

                            End If
                            If IsTabPanel Then
                                'tabContent.Controls.Add(New LiteralControl("</td><td style="" width:" & controlWdth & "px;text-align:left"">"))
                                'tabContainer.Controls(tabIndex).Controls.Add(New LiteralControl("</td><td style="" width:" & controlWdth & "px;text-align:left"">"))
                                pnlFields.Controls.Add(New LiteralControl("</td><td style="" width:" & controlWdth & "px;text-align:left"">"))
                            Else
                                pnlFields.Controls.Add(New LiteralControl("</td><td style="" width:" & controlWdth & "px;text-align:left"">"))
                            End If


                        End If


                        Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                            Case "SEPARATOR"
                                Dim dropdown() As String = ds.Rows(i).Item("dropdown").ToString().Split(",")
                                pnlFields.Controls.Add(New LiteralControl(" <div style=""" & dropdown(0) & "; font-weight: bold; border-color:#" & dropdown(1) & "; width:" & controlWdth - 10 & "px; "" ></div>"))

                            Case "MULTI LOOKUP"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10

                                If ds.Rows(i).Item("isEditable").ToString() = "1" Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.Enabled = False
                                End If
                                pnlFields.Controls.Add(txtBox)
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "LOOKUP"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim FieldType As String = ""
                                'Changes for Check box if having there
                                Dim CheckControl As DataView = ds.AsDataView
                                CheckControl.RowFilter = "lookupvalue Like" & "'%" & ds.Rows(i).Item("Fieldid") & "-%'"
                                Dim tempdt As DataTable = CheckControl.ToTable()
                                If tempdt.Rows.Count > 0 Then
                                    Dim arr() As String = Convert.ToString(tempdt.Rows(0)("lookupvalue")).Split(",")
                                    Dim fldmapping As String = ""
                                    If arr.Length > 0 Then
                                        For XYZ As Integer = 0 To arr.Length - 1
                                            If Convert.ToString(arr(XYZ)).Contains(ds.Rows(i).Item("Fieldid") & "-") Then
                                                fldmapping = arr(XYZ)
                                                Exit For
                                            End If
                                        Next
                                        Dim finalFld As String() = fldmapping.Split("-")
                                        Dim dropdown As String() = Convert.ToString(tempdt.Rows(0)("dropdown")).Split("-")
                                        Try
                                            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                            da.SelectCommand.CommandType = CommandType.Text
                                            da.SelectCommand.CommandText = "select FieldType from mmm_mst_fields where documenttype='" & dropdown(1) & "' and fieldMapping='" & finalFld(1) & "' and eid=" & HttpContext.Current.Session("EID")
                                            If con.State = ConnectionState.Closed Then
                                                con.Open()
                                            End If

                                            FieldType = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                            con.Close()
                                        Catch ex As Exception
                                            con.Dispose()
                                        End Try
                                    End If
                                End If
                                If FieldType.Trim() = "Check Box" Then
                                    Dim chkBox As New CheckBox
                                    chkBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                    chkBox.Width = controlWdth - 10
                                    'txtBox.CssClass = "txtBox"
                                    If ds.Rows(i).Item("isEditable").ToString() = "1" Then
                                        chkBox.Enabled = True
                                    Else
                                        chkBox.Enabled = False
                                    End If
                                    pnlFields.Controls.Add(chkBox)
                                    'For Grofers
                                    If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                        Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                        chkBox.Attributes.Add("style", txt(1))
                                    Else
                                        chkBox.CssClass = ""
                                    End If
                                Else
                                    Dim txtBox As New TextBox
                                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                    txtBox.Width = controlWdth - 10
                                    'txtBox.CssClass = "txtBox"
                                    If ds.Rows(i).Item("isEditable").ToString() = "1" Then
                                        txtBox.Enabled = True
                                    Else
                                        txtBox.Enabled = False
                                        txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                        'txtBox.ForeColor = Drawing.Color.White
                                        txtBox.Font.Bold = True
                                    End If
                                    If datatype = "NUMERIC" Then
                                        txtBox.CssClass = "txtHeaderNumber"
                                        txtBox.Text = "0"
                                    End If

                                    pnlFields.Controls.Add(txtBox)

                                    If datatype.ToUpper = "DATETIME" And ds.Rows(i).Item("isEditable").ToString() = "1" Then
                                        Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                        CLNDR.Controls.Clear()
                                        CLNDR.ID = "CLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                        CLNDR.Format = "dd/MM/yy"
                                        CLNDR.TargetControlID = txtBox.ID
                                        txtBox.Enabled = True
                                        txtBox.Text = ""
                                        txtBox.Attributes.Add("placeholder", "")
                                        If HttpContext.Current.Session("EDITonEDIT") Is Nothing Then ' this session is inittialized on doc detail page by balli  in order to check this is coming from edit option  or not 
                                            Dim img As New Image
                                            img.ID = "img" & ds.Rows(i).Item("FieldID").ToString()
                                            img.ImageUrl = "~\images\Cal.png"
                                            txtBox.Width = controlWdth - 40
                                            pnlFields.Controls.Add(img)
                                            CLNDR.PopupButtonID = "img" & ds.Rows(i).Item("FieldID").ToString()
                                            pnlFields.Controls.Add(CLNDR)
                                        Else
                                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then  ' this session is inittialized on doc detail page by balli 
                                                If ds.Rows(i).Item("alloweditonedit") = 1 And ds.Rows(i).Item("iseditable") = 1 Then
                                                    Dim img As New Image
                                                    img.ID = "img" & ds.Rows(i).Item("FieldID").ToString()
                                                    img.ImageUrl = "~\images\Cal.png"
                                                    txtBox.Width = controlWdth - 40
                                                    pnlFields.Controls.Add(img)
                                                    CLNDR.PopupButtonID = "img" & ds.Rows(i).Item("FieldID").ToString()
                                                    pnlFields.Controls.Add(CLNDR)
                                                Else
                                                    txtBox.Enabled = False
                                                End If
                                            End If
                                        End If
                                    End If
                                    'For Grofers
                                    If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                        Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                        txtBox.Attributes.Add("style", txt(1))
                                    Else
                                        If datatype = "NUMERIC" Then
                                            txtBox.CssClass = "txtBox txtHeaderNumber"
                                            txtBox.Text = "0"
                                        Else
                                            txtBox.CssClass = "txtBox"
                                            If ds.Rows(i).Item("isEditable").ToString() = "1" And (btnActEdit.ID = "btnApprove" Or btnActEdit.ID = "btnReject" Or btnActEdit.ID = "btnPerReject" Or isDrf = 1 Or IsDocDetail = "True") And counter = 0 And datatype = "TEXT" Then
                                                counter += 1
                                                txtBox.Focus()
                                            End If
                                        End If

                                    End If

                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If



                            Case "CHILD ITEM TOTAL"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                'txtBox.CssClass = "txtBox"
                                txtBox.Text = "0"
                                txtBox.Enabled = False
                                If datatype = "NUMERIC" Then
                                    txtBox.CssClass = "txtHeaderNumber"
                                End If
                                pnlFields.Controls.Add(txtBox)
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox calnum"
                                End If
                                txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                'txtBox.ForeColor = Drawing.Color.White
                                txtBox.Font.Bold = True
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "CHILD ITEM MAX"  ' by sunil 04_jul_14
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                'txtBox.CssClass = "txtBox"
                                txtBox.Enabled = False
                                If datatype = "NUMERIC" Then
                                    txtBox.CssClass = "txtHeaderNumber"
                                End If
                                pnlFields.Controls.Add(txtBox)
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                            Case "ADVANCE FORMULA"
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                'txtBox.CssClass = "txtBox"
                                txtBox.Enabled = False
                                If datatype = "NUMERIC" Then
                                    txtBox.CssClass = "txtHeaderNumber"
                                End If
                                pnlFields.Controls.Add(txtBox)
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "CALCULATIVE FIELD"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                ''txtBox.Enabled = False
                                'txtBox.ReadOnly = True
                                If HttpContext.Current.Session("DOCSTATUS") = "SPLIT" Then
                                Else
                                    txtBox.Attributes.Add("READONLY", "READONLY")
                                    txtBox.Style.Add("COLOR", "GRAY")
                                End If
                                txtBox.CssClass = "txtBox calnum"
                                If ds.Rows(i).Item("defaultfieldval").ToString.Length > 0 Then
                                    txtBox.Text = ds.Rows(i).Item("defaultfieldval")
                                Else
                                    If datatype = "NUMERIC" Then
                                        txtBox.Text = "0"
                                        txtBox.CssClass = "txtHeaderNumber"
                                        txtBox.Attributes.Add("AllowDecimalValue", ds.Rows(i).Item("AllowDecimalDigit"))

                                    End If
                                End If
                                txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                txtBox.Font.Bold = True

                                pnlFields.Controls.Add(txtBox)
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox calnum"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "TEXT BOX"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                'Add condition for dynamic Jquery
                                If Not String.IsNullOrEmpty(ds.Rows(i).Item("DJqueryMethod").ToString()) Then
                                    If Convert.ToString(ds.Rows(i).Item("DJqueryMethod")).ToUpper = "ONCHANGE" Then
                                        txtBox.Attributes.Add("onchange", Convert.ToString(ds.Rows(i).Item("DJquery")))
                                    ElseIf Convert.ToString(ds.Rows(i).Item("DJqueryMethod")).ToUpper = "ONKEYUP" Then
                                        txtBox.Attributes.Add("onkeyup", Convert.ToString(ds.Rows(i).Item("DJquery")))
                                    End If
                                End If

                                'txtBox.CssClass = "txtBox"
                                If ds.Rows(i).Item("defaultfieldval").ToString.Length > 0 Then
                                    txtBox.Text = ds.Rows(i).Item("defaultfieldval").ToString
                                Else
                                    If datatype = "NUMERIC" Then
                                        txtBox.Text = "0"
                                        txtBox.CssClass = "txtHeaderNumber"
                                        txtBox.Attributes.Add("AllowDecimalValue", ds.Rows(i).Item("AllowDecimalDigit"))
                                    End If
                                End If
                                If Val(ds.Rows(i).Item("isDescription").ToString()) = 1 Then
                                    txtBox.ToolTip = ds.Rows(i).Item("Description").ToString()
                                    txtBox.Text = String.Empty
                                    txtBox.Attributes.Add("placeholder", "Please Enter " & ds.Rows(i).Item("displayname"))
                                End If
                                If Val(ds.Rows(i).Item("iseditable").ToString()) = 0 Then
                                    txtBox.Enabled = False
                                End If
                                If IsTabPanel Then
                                    'tabContainer.Controls(tabIndex).Controls.Add(txtBox)
                                    pnlFields.Controls.Add(txtBox)
                                    'tabContent.Controls.Add(txtBox)
                                Else
                                    pnlFields.Controls.Add(txtBox)
                                End If

                                If datatype = "DATETIME" Then
                                    Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                    CLNDR.Controls.Clear()
                                    CLNDR.ID = "CLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                    CLNDR.Format = "dd/MM/yy"
                                    CLNDR.TargetControlID = txtBox.ID
                                    txtBox.Enabled = True
                                    If Not txtBox.ToolTip.ToUpper = "BLANK" Then
                                        'preeti
                                        txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                        If Val(ds.Rows(i).Item("iseditable").ToString()) = 0 Then
                                            txtBox.Attributes.Add("readonly", "readonly")
                                        End If
                                    Else
                                        txtBox.Text = ""
                                        txtBox.Attributes.Add("placeholder", "")
                                    End If
                                    If HttpContext.Current.Session("EDITonEDIT") Is Nothing Then ' this session is inittialized on doc detail page by balli  in order to check this is coming from edit option  or not 
                                        If ds.Rows(i).Item("iseditable") = 1 Then
                                            Dim img As New Image
                                            img.ID = "img" & ds.Rows(i).Item("FieldID").ToString()
                                            img.ImageUrl = "~\images\Cal.png"
                                            txtBox.Width = controlWdth - 40
                                            pnlFields.Controls.Add(img)
                                            CLNDR.PopupButtonID = "img" & ds.Rows(i).Item("FieldID").ToString()
                                            pnlFields.Controls.Add(CLNDR)
                                        Else
                                            txtBox.Enabled = False
                                        End If
                                    Else
                                        If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then  ' this session is inittialized on doc detail page by balli 
                                            If ds.Rows(i).Item("alloweditonedit") = 1 And ds.Rows(i).Item("iseditable") = 1 Then
                                                Dim img As New Image
                                                img.ID = "img" & ds.Rows(i).Item("FieldID").ToString()
                                                img.ImageUrl = "~\images\Cal.png"
                                                txtBox.Width = controlWdth - 40
                                                pnlFields.Controls.Add(img)
                                                CLNDR.PopupButtonID = "img" & ds.Rows(i).Item("FieldID").ToString()
                                                pnlFields.Controls.Add(CLNDR)
                                            Else
                                                txtBox.Enabled = False
                                            End If
                                        End If
                                    End If

                                ElseIf datatype = "NEW DATETIME" Then
                                    'Data -field = "datetime"
                                    txtBox.Enabled = True
                                    'txtBox.ReadOnly = True
                                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                    txtBox.Attributes.Add("data-field", "datetime")
                                    txtBox.Attributes.Add("readonly", "readonly")
                                    'readonly
                                    txtBox.Width = controlWdth - 10
                                    pnlFields.Controls.Add(txtBox)
                                ElseIf datatype = "TIME" Then
                                    'Data -field = "datetime"
                                    txtBox.Enabled = True
                                    'txtBox.ReadOnly = True
                                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                    '  txtBox.Attributes.Add("data-field", "time")
                                    '  txtBox.Attributes.Add("readonly", "readonly")
                                    'readonly
                                    txtBox.Width = controlWdth - 10
                                    pnlFields.Controls.Add(txtBox)
                                ElseIf datatype = "FY START" Then 'To Render FY Start  (Pallavi) on 29th Apr 15
                                    'Data -field = "datetime"
                                    txtBox.Enabled = False
                                    'txtBox.ReadOnly = True
                                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                    '  txtBox.Attributes.Add("data-field", "FYStart")
                                    txtBox.Attributes.Add("readonly", "readonly")
                                    'readonly
                                    txtBox.Width = controlWdth - 10
                                    Dim da As SqlDataAdapter = New SqlDataAdapter("select StartMonth +'-' + convert(varchar, datepart(year,Getdate())) from mmm_mst_entity where eid =" & HttpContext.Current.Session("EID"), con)
                                    Dim dt As DataTable = New DataTable
                                    da.Fill(dt)
                                    If (dt.Rows.Count > 0) Then
                                        txtBox.Text = Convert.ToString(dt.Rows(0)(0))
                                    Else : txtBox.Text = ""
                                    End If
                                    pnlFields.Controls.Add(txtBox) '-- To Render FY Start End
                                ElseIf datatype = "FY END" Then 'To Render FY End (Pallavi) on 29th Apr 15
                                    'Data -field = "datetime"
                                    txtBox.Enabled = False
                                    'txtBox.ReadOnly = True
                                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                    '  txtBox.Attributes.Add("data-field", "FYStart")
                                    txtBox.Attributes.Add("readonly", "readonly")
                                    'readonly
                                    txtBox.Width = controlWdth - 10
                                    Dim da As SqlDataAdapter = New SqlDataAdapter("select replace( convert(varchar(50), dateadd(day,-1, dateadd(year,1 ,convert(datetime, StartMonth +'-' + convert(varchar, datepart(year,Getdate())),106))),106),' ','-') from mmm_mst_entity where eid =" & HttpContext.Current.Session("EID"), con)
                                    Dim dt As DataTable = New DataTable
                                    da.Fill(dt)
                                    If (dt.Rows.Count > 0) Then
                                        txtBox.Text = Convert.ToString(dt.Rows(0)(0))
                                    Else : txtBox.Text = ""
                                    End If
                                    pnlFields.Controls.Add(txtBox) '-- To Render FY End End
                                ElseIf datatype = "SCHEDULER" Then
                                    Dim CLNDR As New AjaxControlToolkit.TextBoxWatermarkExtender
                                    CLNDR.Controls.Clear()
                                    CLNDR.ID = "watermark" & ds.Rows(i).Item("FieldID").ToString()
                                    CLNDR.TargetControlID = txtBox.ID
                                    CLNDR.WatermarkText = "*|*|*|*|*"
                                    CLNDR.Enabled = True
                                    pnlFields.Controls.Add(CLNDR)
                                Else
                                    Dim KC_Value As String = ds.Rows(i).Item("Cal_Fields").ToString()
                                    If ds.Rows(i).Item("Cal_Fields").ToString().Length() > 10 Then
                                        If _CallerPage <> 1 Or isDrf = 1 Then
                                            txtBox.Attributes.Add("onblur", ds.Rows(i).Item("Cal_Fields").ToString())
                                        Else
                                            KC_Value = KC_Value.Replace("ContentPlaceHolder1_", "")
                                            txtBox.Attributes.Add("onblur", KC_Value)
                                        End If
                                        If IsDocDetail And Not (IsCallingFromMainHome) Then
                                            KC_Value = KC_Value.Replace("ContentPlaceHolder1_", "")
                                            Dim script = GetScript(HttpContext.Current.Session("Eid").ToString(), ds.Rows(i).Item("Documenttype"), ds.Rows(i).Item("FieldID"))
                                            script = script.Replace("ContentPlaceHolder1_", "")
                                            txtBox.Attributes.Add("onblur", script)
                                        End If
                                    End If
                                End If
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    If datatype = "NUMERIC" Then
                                        txtBox.CssClass = "txtBox txtHeaderNumber"
                                        txtBox.Attributes.Add("AllowDecimalValue", ds.Rows(i).Item("AllowDecimalDigit"))
                                    Else
                                        txtBox.CssClass = "txtBox"
                                        ' preeti for textbox and datatype=text
                                        If Val(ds.Rows(i).Item("iseditable").ToString()) = 1 And counter = 0 And (btnActEdit.ID = "btnApprove" Or btnActEdit.ID = "btnReject" Or btnActEdit.ID = "btnPerReject" Or isDrf = 1 Or IsDocDetail = "True") And datatype = "TEXT" Then
                                            counter += 1
                                            txtBox.Focus()
                                        End If
                                    End If
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" And Convert.ToString(ds.Rows(i).Item("description")).ToUpper <> "BLANK" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "AUTO NUMBER"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                txtBox.CssClass = "txtBox"
                                txtBox.Text = ds.Rows(i).Item("dropdown").ToString() & ds.Rows(i).Item("MaxLen").ToString()
                                txtBox.Enabled = False
                                pnlFields.Controls.Add(txtBox)
                                txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                'txtBox.ForeColor = Drawing.Color.White
                                txtBox.Font.Bold = True
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                                'calculate Button by Komal on 18March2014
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "FORMULA FIELD"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                'txtBox.CssClass = "txtBox"
                                pnlFields.Controls.Add(txtBox)
                                txtBox.Enabled = False
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "GEO POINT"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                'txtBox.CssClass = "txtBox"
                                txtBox.Enabled = True
                                pnlFields.Controls.Add(txtBox)
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "GEO FENCE"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                Dim txtWtr As New AjaxControlToolkit.TextBoxWatermarkExtender
                                txtWtr.Controls.Clear()
                                txtWtr.ID = "txtwtr" & ds.Rows(i).Item("FieldID").ToString()
                                txtWtr.TargetControlID = txtBox.ID
                                txtWtr.WatermarkText = "Please enter comma saperated value"
                                pnlFields.Controls.Add(txtWtr)
                                txtBox.Width = controlWdth - 10
                                'txtBox.CssClass = "txtBox"
                                txtBox.Enabled = True
                                pnlFields.Controls.Add(txtBox)
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "AUTOCOMPLETE" 'AutoComplete
                                '' by balli for autoCompletefilter
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtbox As New TextBox
                                txtbox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtbox.Width = controlWdth - 10
                                'txtbox.CssClass = "txtBox"
                                txtbox.Attributes.Add("placeholder", "Please begin typing a " & ds.Rows(i).Item("displayname"))

                                txtbox.AutoPostBack = True
                                AddHandler txtbox.TextChanged, AddressOf txtbox_TextChanged
                                ' adding handler for binding lookup or other dropdown or filter

                                Dim autofilExtender As New AjaxControlToolkit.AutoCompleteExtender
                                autofilExtender.ID = "extenderID" & ds.Rows(i).Item("FieldID").ToString()

                                autofilExtender.TargetControlID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                autofilExtender.ServiceMethod = "GetCompletionList" ' THIS SERVICE METHOD IS WRITTEN ON DOCUMENT PAGE 
                                autofilExtender.DelimiterCharacters = ""
                                'autofilExtender.ContextKey = ds.Rows(i).Item("dropdown").ToString() & "-" & ds.Rows(i).Item("FieldID").ToString() & "-" & ds.Rows(i).Item("dropdowntype").ToString() & "-" & ds.Rows(i).Item("autofilter").ToString() & "-" & ds.Rows(i).Item("InitialFilter").ToString()
                                autofilExtender.ContextKey = ds.Rows(i).Item("dropdown").ToString() & "-" & ds.Rows(i).Item("FieldID").ToString() & "-" & ds.Rows(i).Item("dropdowntype").ToString() & "-" & ds.Rows(i).Item("autofilter").ToString() & "-" & ds.Rows(i).Item("InitialFilter").ToString() & "-" & Convert.ToString(ds.Rows(i).Item("conditionalFilter"))
                                'context key contain  : dropdown-fieldid-dropdowntype-autofilter-InitialFilter' adding the fieldid in context key because later on we need id of field in web method 
                                autofilExtender.Enabled = True
                                autofilExtender.CompletionSetCount = 5
                                autofilExtender.OnClientShown = "onDataShown"  ' by sunil
                                '   autofilExtender.CompletionListElementID = "ACsugestlist"
                                autofilExtender.MinimumPrefixLength = 1  ' start searching when entered one characters
                                'autofilExtender.OnClientItemSelected = "ace_itemSelected('" & ds.Rows(i).Item("FieldID").ToString() & "')"
                                autofilExtender.OnClientItemSelected = "ace_itemSelected"
                                autofilExtender.CompletionListCssClass = "autocomplete_completionListElement"

                                pnlFields.Controls.Add(txtbox)

                                Dim hdnfld As New HiddenField
                                hdnfld.ID = "HDN" & ds.Rows(i).Item("FieldID").ToString()
                                pnlFields.Controls.Add(hdnfld)
                                'pnlFields.Controls.Add(img)
                                'pnlFields.Controls.Add(prgBar)
                                pnlFields.Controls.Add(autofilExtender)
                                If Convert.ToString(ds.Rows(i).Item("History_DisplayField")) <> "" Then
                                    Dim img As New ImageButton()
                                    img.ID = "btnHistory_" & ds.Rows(i).Item("FieldID").ToString()
                                    img.ImageUrl = "~/images/history.jpg"
                                    img.Height = 20
                                    img.Width = 20
                                    pnlFields.Controls.Add(img)
                                End If
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtbox.Attributes.Add("style", txt(1))
                                Else
                                    txtbox.CssClass = "txtBox"
                                End If

                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtbox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "MULTI LOOKUPDDL"
                                'datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                'Dim fieldtypee As String = ds.Rows(i).Item("FieldType").ToString().ToUpper()
                                'Dim ddl As New DropDownList
                                'ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                'ddl.Width = controlWdth - 10
                                'ddl.CssClass = "txtBox"

                                Dim ddl As New DropDownList
                                Dim ddlText1 As String = ds.Rows(i).Item("dropdown").ToString()
                                Dim od As SqlDataAdapter = New SqlDataAdapter("", con)
                                'Dim od As SqlDataAdapter = New SqlDataAdapter("select dropdown from MMM_MST_FIELDS where FieldID in('" & ddlText & "'", con)
                                ' Dim dsMonth As New DataSet
                                Dim dt As New DataTable
                                Dim dtval As New DataTable

                                'od.Fill(dt)
                                Dim fieldid As String()
                                Dim ddlval As String()
                                If (ddlText1.ToString() <> String.Empty) Then
                                    fieldid = ddlText1.ToString().Split(",")
                                    od.SelectCommand.CommandText = "select ddlMultilookupval from mmm_mst_fields where fieldid = " & fieldid(0).ToString() & ""
                                    'od.SelectCommand.Connection = con
                                    od.Fill(dtval)
                                    If (dtval.Rows.Count > 0) Then
                                        If (dtval.Rows(0)("ddlMultilookupval") <> String.Empty) Then
                                            ddlval = dtval.Rows(0)("ddlMultilookupval").ToString().Split(",")
                                            For q As Integer = 0 To ddlval.Length - 1
                                                If (ddlval(q).ToString().Contains("-" & ds.Rows(i).Item("FieldID").ToString())) Then
                                                    Dim temp() As String = ddlval(q).ToString().Split("-")
                                                    od.SelectCommand.CommandText = "select * from MMM_MST_FIELDS where DOCUMENTTYPE='" & temp(0).ToString() & "' and eid=" & HttpContext.Current.Session("EID") & " and fieldmapping in('" & temp(1).ToString() & "')"
                                                    'od.SelectCommand.Connection = con
                                                    If con.State = ConnectionState.Closed Then
                                                        con.Open()
                                                    End If
                                                    Dim checkval As New DataTable
                                                    od.Fill(checkval)



                                                    'Changing here for Dropdown


                                                    ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                                    ddl.Width = controlWdth - 2
                                                    ''Add Condition By mayank dropdown should be no editable in case of child specific text has some value
                                                    'If (ds.Rows(i).Item("child_specific_text").ToString() <> String.Empty) Then
                                                    '    ddl.Enabled = False
                                                    'End If
                                                    ddl.CssClass = "txtBox"
                                                    Dim ddlText As String = checkval.Rows(0).Item("dropdown").ToString()
                                                    Dim dropdowntype As String = checkval.Rows(0).Item("dropdowntype").ToString()
                                                    Dim arr() As String
                                                    Dim arrMid() As String
                                                    'If UCase(dropdowntype) = "FIX VALUED" Then
                                                    '    arr = ddlText.Split(",")
                                                    '    ddl.Items.Add("SELECT")
                                                    '    For ii As Integer = 0 To arr.Count - 1
                                                    '        ddl.Items.Add(arr(ii).ToUpper().Trim())
                                                    '    Next
                                                    If UCase(dropdowntype) = "MASTER VALUED" Then
                                                        'If ds.Rows(i).Item("FORMSOURCE").ToString().ToUpper.Trim() = "DETAIL FORM" And ds.Rows(i).Item("KC_LOGIC").ToString().Length > 1 Then
                                                        'Else
                                                        arr = ddlText.Split("-")
                                                        Dim TID As String = "TID"
                                                        Dim TABLENAME As String = ""
                                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                                            TABLENAME = "MMM_MST_MASTER"
                                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                            TABLENAME = "MMM_MST_DOC"
                                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                                            If arr(1).ToString.ToUpper = "USER" Then
                                                                TABLENAME = "MMM_MST_USER"
                                                                TID = "UID"
                                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                                TABLENAME = "MMM_MST_LOCATION"
                                                                TID = "LOCID"
                                                            End If
                                                        End If
                                                        Dim lookUpqry As String = ""
                                                        Dim str As String = ""
                                                        If arr(0).ToUpper() = "CHILD" Then
                                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        Else
                                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                                                            Else
                                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                            End If
                                                        End If

                                                        Dim xwhr As String = ""
                                                        Dim tids As String = ""
                                                        Dim Rtids As String = ""   ' for prerole data filter
                                                        'Dim tidarr() As String

                                                        ''FILTER THE DATA ACCORDING TO USER 
                                                        tids = UserDataFilter(checkval.Rows(0).Item("documenttype").ToString(), arr(1).ToString())

                                                        '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                                        '' if found then restric no. of list as per rights
                                                        Dim StrforRoleAssn As String = ""
                                                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & arr(1).ToString() & "'"
                                                        If Not (tids.Length > 2) Then
                                                            tids = CheckRoleAsgnmentDdn(arr(1).ToString(), StrforRoleAssn)
                                                        End If

                                                        Rtids = UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                                                        If Rtids.Length > 2 Then
                                                            tids = ""
                                                        End If

                                                        '' for multiuse of document by sp on 08_apr_15
                                                        Dim Sdtype As String = arr(1).ToString
                                                        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                                        da.SelectCommand.CommandType = CommandType.Text
                                                        da.SelectCommand.CommandText = "select isnull(Allowmultiuse,0) from mmm_mst_forms where eid='" & HttpContext.Current.Session("EID").ToString & "' AND FORMNAME='" & Sdtype & "'"
                                                        If con.State <> ConnectionState.Open Then
                                                            con.Open()
                                                        End If
                                                        Dim isMultiUse As Integer = Convert.ToInt32(da.SelectCommand.ExecuteScalar())

                                                        Dim CurrDoctype As String = checkval.Rows(0).Item("documenttype").ToString()
                                                        Dim CurrFieldMapping As String = checkval.Rows(0).Item("fieldmapping").ToString()

                                                        Dim qry As String = ""
                                                        Dim MTids As String = ""
                                                        If UCase(arr(0).ToString()) <> "CHILD" And UCase(arr(0).ToString) <> "STATIC" Then
                                                            da.SelectCommand.CommandType = CommandType.Text
                                                            da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR," & CurrFieldMapping & ")  FROM " & TABLENAME & " where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & CurrDoctype & "'" & " FOR XML PATH('')),2,20000) AS CSV"
                                                            MTids = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                                        End If

                                                        ''ends  for multiuse of document by sp on 08_apr_15


                                                        If tids.Length >= 2 Then
                                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                                        ElseIf tids = "0" Then
                                                            pnlFields.Visible = False
                                                            btnActEdit.Visible = False
                                                            UpdatePanel1.Update()
                                                            xwhr = ""
                                                        End If

                                                        ''ends  for multiuse of document by sp on 08_apr_15
                                                        '' new by sunil for pre role data filter 22-feb
                                                        If Rtids <> "" Then
                                                            If xwhr.ToString = "" Then
                                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                                            Else
                                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                                            End If
                                                        End If

                                                        '' new by sunil for multiuse of docs
                                                        If MTids.Length > 2 And isMultiUse = 1 Then
                                                            If Right(MTids, 1) = "," Then
                                                                MTids = Left(MTids, Len(MTids) - 1)
                                                            End If
                                                            xwhr = xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") "
                                                        End If
                                                        '' new by sunil for multiuse of docs

                                                        If amendment = "AMENDMENT" Then
                                                            str = str & "   " & xwhr & " order by " & arr(2).ToString()
                                                        Else
                                                            'str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()  ' prev
                                                            str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                                            ' str = str & "  AND (M.isauth=1 or M.isauth=2) " & xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") " & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                                        End If

                                                        Dim AutoFilter As String = checkval.Rows(0).Item("AutoFilter").ToString()
                                                        Dim InitFilterArr As String() = checkval.Rows(0).Item("InitialFilter").ToString().Split(":")
                                                        ' If InitFilter.Length > 0 Then
                                                        ' Dim initFilArr As String() = ds.Rows(i).Item("InitialFilter").ToString().Split(":")
                                                        '  End If


                                                        If AutoFilter.Length > 0 Then
                                                            If arr(0).ToUpper() = "CHILD" Then
                                                                If AutoFilter.ToUpper = "DOCID" Then
                                                                    str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                                                Else
                                                                    str = GetQuery(arr(1).ToString, arr(2).ToString)
                                                                End If
                                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                                str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                                            Else
                                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                                str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                                            End If
                                                        ElseIf InitFilterArr.Length > 1 Then
                                                            '' for getting def. value from field master
                                                            'Bakcup for Panel Configuration
                                                            'Dim row() As DataRow = dsFields.Select("fieldid=" & InitFilterArr(0).ToString())
                                                            Dim row() As DataRow = ds.Select("fieldid=" & InitFilterArr(0).ToString())
                                                            If arr(0).ToUpper() = "DOCUMENT" Or arr(0).ToUpper() = "MASTER" Then
                                                                If row.Length > 0 Then
                                                                    str = " Select " & arr(2).ToString() & ", convert(nvarchar(10),tid) [TID] FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                                    str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                                                    If amendment = "AMENDMENT" Then
                                                                        str = str & "  " & xwhr & " order by " & arr(2).ToString()
                                                                    Else
                                                                        str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                                                    End If
                                                                End If
                                                            ElseIf arr(0).ToUpper() = "STATIC" Then
                                                                If row.Length > 0 Then
                                                                    str = " Select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " "
                                                                    str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                                                    str = str & " AND (M.isauth>0) " & xwhr
                                                                    ' to be used for apm user bind from role assignment also 12_sep_14
                                                                    str = str & " union Select  " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " where convert(nvarchar(10)," & TID & ") in (select uid from MMM_Ref_Role_User where eid=" & HttpContext.Current.Session("EID") & " and rolename='" & row(0).Item("defaultFieldVal").ToString & "') order by " & arr(2).ToString() & ""
                                                                End If
                                                            End If
                                                        End If


                                                        '' prev code bkup by sp on 17_feb
                                                        'If AutoFilter.Length > 0 Then
                                                        '    If arr(0).ToUpper() = "CHILD" Then
                                                        '        If AutoFilter.ToUpper = "DOCID" Then
                                                        '            str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                                        '        Else
                                                        '            str = GetQuery(arr(1).ToString, arr(2).ToString)
                                                        '        End If
                                                        '    ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                        '        str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                        '        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                        '    Else
                                                        '        str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                        '        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                        '    End If
                                                        'End If
                                                        oda = New SqlDataAdapter("", con)
                                                        Dim dss As New DataSet

                                                        If str.Length > 0 Then
                                                            oda.SelectCommand.CommandText = str
                                                            oda.Fill(dss, "FV")
                                                            Dim isAddJquery As Integer = 0
                                                            ddl.Items.Add("Select")
                                                            ddl.Items(0).Value = "0"
                                                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                                ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                                                Dim lookddlVal As String = dss.Tables("FV").Rows(J).Item(1).ToString()
                                                                ddl.Items(J + 1).Value = lookddlVal
                                                            Next
                                                            dss.Dispose()
                                                            If isAddJquery = 1 Then
                                                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i <r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 <l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i <x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                                            End If
                                                        End If

                                                        ' NEW ADDED BY SUNIL ON 07-12-13 FOR CHILD-CHILD FILTERING
                                                    ElseIf UCase(dropdowntype) = "CHILD VALUED" Then
                                                        ' you are here on 09-dec-13
                                                        arr = ddlText.Split("-")
                                                        Dim Midstr As String = arr(1).ToString()
                                                        Dim TID As String = "TID"
                                                        Dim TABLENAME As String = ""
                                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                                            TABLENAME = "MMM_MST_MASTER"
                                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                                            TABLENAME = "MMM_MST_DOC"
                                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                                            arrMid = arr(1).Split(":")

                                                        End If
                                                        Dim lookUpqry As String = ""
                                                        Dim str As String = ""
                                                        If arr(0).ToUpper() = "CHILD" Then
                                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arrMid(1).ToString() & "'"
                                                        End If

                                                        Dim xwhr As String = ""
                                                        Dim tids As String = ""

                                                        ''FILTER THE DATA ACCORDING TO USER 
                                                        tids = UserDataFilter(ds.Rows(i).Item("documenttype").ToString(), arrMid(1).ToString())

                                                        If tids.Length >= 2 Then
                                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                                        ElseIf tids = "0" Then
                                                            pnlFields.Visible = False
                                                            btnActEdit.Visible = False
                                                            UpdatePanel1.Update()
                                                            xwhr = ""
                                                        End If
                                                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                        'Dim AutoFilter As String = ds.Rows(i).Item("AutoFilter").ToString()
                                                        Dim AutoFilter As String = arrMid(0).ToString()
                                                        If AutoFilter.Length > 0 Then
                                                            If arr(0).ToUpper() = "CHILD" Then
                                                                ' str = GetQuery(arrMid(1).ToString, arr(2).ToString)
                                                                'new added by sunil on 11-dec for child-child filter
                                                                ' str = BindForChild1(ds.Rows(i).Item("FieldID").ToString(), pnlFields)
                                                                str = BindForChild1(ds.Rows(i).Item("FieldID").ToString(), pnlFields, ddown)
                                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                            Else
                                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                                            End If
                                                        End If

                                                        oda = New SqlDataAdapter("", con)
                                                        Dim dss As New DataSet

                                                        If str.Length > 0 Then
                                                            oda.SelectCommand.CommandText = str
                                                            oda.Fill(dss, "FV")
                                                            Dim isAddJquery As Integer = 0
                                                            ddl.Items.Add("Select")
                                                            ddl.Items(0).Value = "0"
                                                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                                ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                                                Dim lookddlVal As String = dss.Tables("FV").Rows(J).Item(1).ToString()
                                                                ddl.Items(J + 1).Value = lookddlVal
                                                            Next
                                                            oda.Dispose()
                                                            dss.Dispose()
                                                            If isAddJquery = 1 Then
                                                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i <r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 <l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i <x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                                                'ddl.Attributes.Add("onchange", JQuertStr)
                                                            End If
                                                        End If
                                                        'End If
                                                    ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                                                        oda1 = New SqlDataAdapter("", con)
                                                        Dim ds1 As New DataSet
                                                        Dim QRY As String = ""
                                                        Dim DROPDOWN As String() = checkval.Rows(0).Item("DROPDOWN").ToString().Split("-")
                                                        If DROPDOWN(1).ToString.ToUpper = "USER" Then
                                                            QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                                                        ElseIf DROPDOWN(1).ToString.ToUpper = "LOCATION" Then
                                                            QRY = "SELECT LOCATIONNAME ,LOCID FROM MMM_MST_LOCATION WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                                                        End If
                                                        oda1.SelectCommand.CommandText = QRY
                                                        oda1.Fill(ds1, "SESSION")
                                                        ddl.Items.Clear()
                                                        For iI As Integer = 0 To ds1.Tables("SESSION").Rows.Count - 1
                                                            ddl.Items.Add(ds1.Tables("SESSION").Rows(iI).Item(0))
                                                            ddl.Items(iI).Value = ds1.Tables("SESSION").Rows(iI).Item(1)
                                                        Next
                                                        ddl.Items.Insert(0, "SELECT")
                                                    End If
                                                    pnlFields.Controls.Add(ddl)
                                                    'For Grofers
                                                    If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                                        Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                                        ddl.Attributes.Add("style", txt(1))
                                                    Else
                                                        ddl.CssClass = "txtBox"
                                                    End If
                                                    Exit For

                                                End If
                                            Next

                                        End If

                                    End If
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    ddl.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "LOOKUPDDL"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim fieldtypee As String = ds.Rows(i).Item("FieldType").ToString().ToUpper()
                                Dim ddl As New DropDownList
                                ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                ddl.Width = controlWdth - 10
                                ddl.CssClass = "txtBox"
                                Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                                Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                                Dim od As SqlDataAdapter = New SqlDataAdapter("select dropdown,DDllookupvalue from MMM_MST_FIELDS where FieldID='" & ddlText & "'", con)
                                ' Dim dsMonth As New DataSet
                                Dim dt As New DataTable
                                od.Fill(dt)
                                Dim arr() As String
                                Dim darr() As String
                                Dim type As String = dt.Rows(0).Item("dropdown").ToString()
                                arr = type.Split("-")
                                Dim documenttype As String = arr(1).ToString()
                                Dim field As String = dt.Rows(0).Item("DDllookupvalue").ToString()
                                field = field.Substring(0, field.Length - 1)
                                darr = field.Split(",")
                                For k As Integer = 0 To darr.Count - 1
                                    Dim fieldmping As String
                                    Dim str As String = ""
                                    Dim feild As String
                                    Dim s = darr(k).Split("-")
                                    feild = s(0).ToString()
                                    fieldmping = s(1).ToString()

                                    Dim TID As String = "TID"
                                    Dim TABLENAME As String = ""
                                    Dim str1 As String = ""
                                    Dim lookUpqry As String = ""

                                    Dim xwhr As String = ""
                                    Dim tids As String = ""
                                    Dim Rtids As String = ""   ' for prerole data filter


                                    If feild = ds.Rows(i).Item("FieldID").ToString() Then
                                        'If arr(0) = "SESSION" And Not (fieldmping.Contains("fld")) Then
                                        '    If arr(1).ToString.ToUpper = "USER" Then
                                        '        TABLENAME = "MMM_MST_USER"
                                        '        TID = "UID"
                                        '    End If
                                        '    ' str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                        '    str1 = "select " & fieldmping.ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                        'Else
                                        od.SelectCommand.CommandText = "select dropdown from MMM_MST_FIELDS where EID=" & HttpContext.Current.Session("EID") & " and documenttype='" & documenttype & "' and FieldMapping in('" & fieldmping & "')"
                                        Dim dt1 As New DataTable
                                        od.Fill(dt1)
                                        Dim dropdown As String = dt1.Rows(0).Item("dropdown").ToString()
                                        arr = dropdown.Split("-")

                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                            If arr(1).ToString.ToUpper = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                TID = "LOCID"
                                            End If
                                        End If

                                        If arr(0).ToUpper() = "CHILD" Then
                                            str1 = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        Else
                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                str1 = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                                            Else
                                                str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            End If
                                        End If
                                        '  End If

                                        'Dim tidarr() As String

                                        ''FILTER THE DATA ACCORDING TO USER 
                                        tids = UserDataFilter(ds.Rows(i).Item("documenttype").ToString(), arr(1).ToString())

                                        '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                        '' if found then restric no. of list as per rights
                                        Dim StrforRoleAssn As String = ""
                                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & arr(1).ToString() & "'"
                                        If Not (tids.Length > 2) Then
                                            tids = CheckRoleAsgnmentDdn(arr(1).ToString(), StrforRoleAssn)
                                        End If

                                        Rtids = UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                                        If Rtids.Length > 2 Then
                                            tids = ""
                                        End If

                                        '' for multiuse of document by sp on 08_apr_15
                                        Dim Sdtype As String = arr(1).ToString
                                        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                        da.SelectCommand.CommandType = CommandType.Text
                                        da.SelectCommand.CommandText = "select isnull(Allowmultiuse,0) from mmm_mst_forms where eid='" & HttpContext.Current.Session("EID").ToString & "' AND FORMNAME='" & Sdtype & "'"
                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        Dim isMultiUse As Integer = Convert.ToInt32(da.SelectCommand.ExecuteScalar())

                                        Dim CurrDoctype As String = ds.Rows(i).Item("documenttype").ToString()
                                        Dim CurrFieldMapping As String = ds.Rows(i).Item("fieldmapping").ToString()

                                        Dim qry As String = ""
                                        Dim MTids As String = ""
                                        If UCase(arr(0).ToString()) <> "CHILD" And UCase(arr(0).ToString) <> "STATIC" Then
                                            da.SelectCommand.CommandType = CommandType.Text
                                            da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR," & CurrFieldMapping & ")  FROM " & TABLENAME & " where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & CurrDoctype & "'" & " FOR XML PATH('')),2,20000) AS CSV"
                                            MTids = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                        End If
                                        ''ends  for multiuse of document by sp on 08_apr_15


                                        If tids.Length >= 2 Then
                                            If UCase(arr(0).ToString) = "STATIC" Then
                                                xwhr = " AND CONVERT(NVARCHAR(10),UID ) IN (" & tids & ")"
                                            Else
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                            End If
                                        ElseIf tids = "0" Then
                                            pnlFields.Visible = False
                                            btnActEdit.Visible = False
                                            UpdatePanel1.Update()
                                            xwhr = ""
                                        End If
                                        '' new by sunil for pre role data filter 22-feb
                                        If Rtids <> "" Then
                                            If xwhr.ToString = "" Then
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                            Else
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                            End If
                                        End If

                                        '' new by sunil for multiuse of docs
                                        If MTids.Length > 2 And isMultiUse = 1 Then
                                            If Right(MTids, 1) = "," Then
                                                MTids = Left(MTids, Len(MTids) - 1)
                                            End If
                                            xwhr = xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") "
                                        End If
                                        '' new by sunil for multiuse of docs

                                        str1 = str1 & "  AND M.isauth>0 " & xwhr & " order by " & arr(2).ToString()
                                        'Dim documenttype2 As String = arr1(1).ToString()
                                        'Dim fieldmping2 As String = arr1(2).ToString()
                                        'pnlFields.Controls.Add(ddl)
                                        Dim dt2 As New DataTable
                                        'oda.SelectCommand.CommandText = "select " & fieldmping2 & " from " & TABLENAME & " where EID=" & HttpContext.Current.Session("EID") & " and documenttype = '" & documenttype2 & "'"

                                        If str1.Length > 0 Then
                                            pnlFields.Controls.Add(ddl)
                                            od.SelectCommand.CommandText = str1
                                            od.Fill(dt2)
                                            Dim isAddJquery As Integer = 0
                                            ddl.Items.Add("Select")
                                            ddl.Items(0).Value = "0"
                                            For J As Integer = 0 To dt2.Rows.Count - 1
                                                ddl.Items.Add(dt2.Rows(J).Item(0).ToString())
                                                Dim lookddlVal As String = dt2.Rows(J).Item(1).ToString()
                                                ddl.Items(J + 1).Value = lookddlVal
                                            Next
                                            dt2.Dispose()
                                        End If
                                        If ds.Rows(i).Item("isEditable").ToString() = "1" Then
                                            ddl.Enabled = True
                                        Else
                                            ddl.Enabled = False
                                        End If
                                    End If
                                Next
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    ddl.Attributes.Add("style", txt(1))
                                Else
                                    ddl.CssClass = "txtBox"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    ddl.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "DROP DOWN"
                                Dim ddl As New DropDownList
                                ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                'Add Condition By mayank dropdown should be no editable in case of child specific text has some value
                                If (ds.Rows(i).Item("child_specific_text").ToString() <> String.Empty) Then
                                    ddl.Enabled = False
                                Else
                                    If ds.Rows(i).Item("isEditable").ToString() = "1" Then
                                        ddl.Enabled = True
                                    Else
                                        ddl.Enabled = False
                                    End If
                                End If
                                ddl.Width = controlWdth - 10
                                ddl.CssClass = "txtBox"
                                Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                                Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                                Dim arr() As String
                                Dim arrMid() As String
                                If UCase(dropdowntype) = "FIX VALUED" Then
                                    arr = ddlText.Split(",")
                                    ddl.Items.Add("Select")
                                    For ii As Integer = 0 To arr.Count - 1
                                        ddl.Items.Add(arr(ii).Trim())
                                    Next
                                ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                    'If ds.Rows(i).Item("FORMSOURCE").ToString().ToUpper.Trim() = "DETAIL FORM" And ds.Rows(i).Item("KC_LOGIC").ToString().Length > 1 Then
                                    'Else
                                    arr = ddlText.Split("-")
                                    Dim TID As String = "TID"
                                    Dim TABLENAME As String = ""
                                    If UCase(arr(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                        TABLENAME = "MMM_MST_DOC"
                                    ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                        TABLENAME = "MMM_MST_DOC_ITEM"
                                    ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                        If arr(1).ToString.ToUpper = "USER" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                            TABLENAME = "MMM_MST_LOCATION"
                                            TID = "LOCID"
                                        End If
                                    End If
                                    Dim lookUpqry As String = ""
                                    Dim str As String = ""
                                    Dim StrforRoleAssn As String = ""
                                    If arr(0).ToUpper() = "CHILD" Then
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    ElseIf arr(0).ToUpper() <> "STATIC" Then
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & arr(1).ToString() & "'"
                                    Else
                                        If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                            str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                                        Else
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                        End If
                                    End If

                                    Dim xwhr As String = ""
                                    Dim tids As String = ""
                                    Dim Rtids As String = ""   ' for prerole data filter
                                    'Dim tidarr() As String

                                    ''FILTER THE DATA ACCORDING TO USER 
                                    tids = UserDataFilter(ds.Rows(i).Item("documenttype").ToString(), arr(1).ToString())
                                    '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                    '' if found then restric no. of list as per rights
                                    If Not (tids.Length > 2) Then
                                        tids = CheckRoleAsgnmentDdn(arr(1).ToString(), StrforRoleAssn, IsDocDetail)
                                    End If

                                    Rtids = UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                                    If Rtids.Length > 2 Then
                                        tids = ""
                                    End If

                                    '' for multiuse of document by sp on 08_apr_15
                                    Dim Sdtype As String = arr(1).ToString
                                    Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                    da.SelectCommand.CommandType = CommandType.Text
                                    da.SelectCommand.CommandText = "select isnull(Allowmultiuse,0) from mmm_mst_forms where eid='" & HttpContext.Current.Session("EID").ToString & "' AND FORMNAME='" & Sdtype & "'"
                                    If con.State <> ConnectionState.Open Then
                                        con.Open()
                                    End If
                                    Dim isMultiUse As Integer = Convert.ToInt32(da.SelectCommand.ExecuteScalar())

                                    Dim CurrDoctype As String = ds.Rows(i).Item("documenttype").ToString()
                                    Dim CurrFieldMapping As String = ds.Rows(i).Item("fieldmapping").ToString()

                                    Dim qry As String = ""
                                    Dim MTids As String = ""
                                    If UCase(arr(0).ToString()) <> "CHILD" And UCase(arr(0).ToString) <> "STATIC" Then
                                        da.SelectCommand.CommandType = CommandType.Text
                                        da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR," & CurrFieldMapping & ")  FROM " & TABLENAME & " where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & CurrDoctype & "'" & " FOR XML PATH('')),2,20000) AS CSV"
                                        MTids = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                    End If

                                    ''ends  for multiuse of document by sp on 08_apr_15


                                    If tids.Length >= 2 Then
                                        xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                    ElseIf tids = "0" Then
                                        pnlFields.Visible = False
                                        btnActEdit.Visible = False
                                        UpdatePanel1.Update()
                                        xwhr = ""
                                    End If

                                    ''ends  for multiuse of document by sp on 08_apr_15
                                    '' new by sunil for pre role data filter 22-feb
                                    If Rtids <> "" Then
                                        If xwhr.ToString = "" Then
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                        Else
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                        End If
                                    End If

                                    '' new by sunil for multiuse of docs
                                    If MTids.Length > 2 And isMultiUse = 1 Then
                                        If Right(MTids, 1) = "," Then
                                            MTids = Left(MTids, Len(MTids) - 1)
                                        End If
                                        xwhr = xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") "
                                    End If
                                    '' new by sunil for multiuse of docs

                                    If amendment = "AMENDMENT" Or IsDocDetail = True Then  '' added isdocdetail by sunil on 22-sep-18
                                        If TABLENAME = "MMM_MST_DOC" Then
                                            str = str & "   " & xwhr & " order by " & arr(2).ToString()
                                        Else
                                            str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                        End If
                                    Else
                                        'str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()  ' prev
                                        str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                        ' str = str & "  AND (M.isauth=1 or M.isauth=2) " & xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") " & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                    End If

                                    Dim AutoFilter As String = ds.Rows(i).Item("AutoFilter").ToString()
                                    Dim InitFilterArr As String() = ds.Rows(i).Item("InitialFilter").ToString().Split(":")
                                    Dim SessionFieldvalue As String = Convert.ToString(ds.Rows(i).Item("SessionFieldVal"))
                                    ' If InitFilter.Length > 0 Then
                                    ' Dim initFilArr As String() = ds.Rows(i).Item("InitialFilter").ToString().Split(":")
                                    '  End If


                                    If AutoFilter.Length > 0 Then
                                        If arr(0).ToUpper() = "CHILD" Then
                                            If AutoFilter.ToUpper = "DOCID" Then
                                                str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                            Else
                                                str = GetQuery(arr(1).ToString, arr(2).ToString)
                                            End If
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            If amendment = "AMENDMENT" Or IsDocDetail = True Then  '' added isdocdetail by sunil on 22-sep-18
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                str = str & "" & xwhr & " order by " & arr(2).ToString()
                                            Else
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                            End If

                                        Else
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                        End If
                                    ElseIf SessionFieldvalue.Length > 0 Then
                                        Dim val As String() = SessionFieldvalue.ToString().Split("-")
                                        If arr(0).ToUpper() = "CHILD" Then
                                            If AutoFilter.ToUpper = "DOCID" Then
                                                str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                            Else
                                                str = GetQuery(arr(1).ToString, arr(2).ToString)
                                            End If
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            da.SelectCommand.Parameters.Clear()
                                            da.SelectCommand.CommandText = "select isnull(" & val(0) & ",0) from mmm_mst_user where eid=" & HttpContext.Current.Session("EID") & " and uid=" & HttpContext.Current.Session("UID")
                                            If con.State = ConnectionState.Closed Then
                                                con.Open()
                                            End If
                                            Dim Conval As String = Replace(Convert.ToString(da.SelectCommand.ExecuteScalar), ",", "','")
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid] from " & TABLENAME & " M WHERE  EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            If Conval.Length > 1 Then
                                                If SessionFieldvalue.Contains("-") Then
                                                    str = str & "  AND (M.isauth>0) " & xwhr & " and " & val(2) & " in('" & Conval & "') order by " & arr(2).ToString()
                                                Else
                                                    str = str & "  AND (M.isauth>0) " & xwhr & " and tid in ('" & Conval & "') order by " & arr(2).ToString()
                                                End If

                                            Else
                                                str = str & "  AND (M.isauth>0) " & xwhr & "  order by " & arr(2).ToString()
                                            End If

                                        Else
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                        End If

                                    ElseIf InitFilterArr.Length > 1 Then
                                        '' for getting def. value from field master
                                        'Backup values 22-Mar-2017
                                        'Dim row() As DataRow = dsFields.Select("fieldid=" & InitFilterArr(0).ToString())
                                        Dim row() As DataRow = ds.Select("fieldid=" & InitFilterArr(0).ToString())
                                        If arr(0).ToUpper() = "DOCUMENT" Or arr(0).ToUpper() = "MASTER" Then
                                            If row.Length > 0 Then
                                                str = " Select " & arr(2).ToString() & ", convert(nvarchar(10),tid) [TID] FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                                If amendment = "AMENDMENT" Or IsDocDetail = True Then  '' added isdocdetail by sunil on 22-sep-18
                                                    str = str & "  " & xwhr & " order by " & arr(2).ToString()
                                                Else
                                                    str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                                End If
                                            End If
                                        ElseIf arr(0).ToUpper() = "STATIC" Then
                                            If row.Length > 0 Then
                                                str = " Select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " "
                                                str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                                str = str & " AND (M.isauth>0) " & xwhr
                                                ' to be used for apm user bind from role assignment also 12_sep_14
                                                str = str & " union Select  " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " where convert(nvarchar(10)," & TID & ") in (select uid from MMM_Ref_Role_User where eid=" & HttpContext.Current.Session("EID") & " and rolename='" & row(0).Item("defaultFieldVal").ToString & "') order by " & arr(2).ToString() & ""
                                            End If
                                        End If
                                    End If
                                    '' hard code by sp on 15 may for HCL vendor portal for non availability of particular filter
                                    If IsDocDetail = False Then
                                        'If HttpContext.Current.Session("EID") = "46" And arr(1).ToUpper() = "INVOICE TYPE MASTER" Then  ' prev
                                        If (HttpContext.Current.Session("EID") = "46" And arr(1).ToUpper() = "INVOICE TYPE MASTER") Or arr(1).ToUpper() = "INVOICE TYPE SELECTION" Then
                                            str = " Select  " & arr(2).ToString() & ", convert(nvarchar(10)," & TID & ")  [tid] " & "FROM " & TABLENAME & " where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'" & " and ','+ fld2 +',' like '%," & HttpContext.Current.Session("USERROLE") & ",%'"
                                            ' str &= " and ','+ fld2 +',' like '%," & HttpContext.Current.Session("USERROLE") & ",%'"                                       
                                        End If
                                    End If
                                    '' prev code bkup by sp on 17_feb
                                    'If AutoFilter.Length > 0 Then
                                    '    If arr(0).ToUpper() = "CHILD" Then
                                    '        If AutoFilter.ToUpper = "DOCID" Then
                                    '            str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                    '        Else
                                    '            str = GetQuery(arr(1).ToString, arr(2).ToString)
                                    '        End If
                                    '    ElseIf arr(0).ToUpper() <> "STATIC" Then
                                    '        str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    '        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                    '    Else
                                    '        str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                    '        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                    '    End If
                                    'End If
                                    oda = New SqlDataAdapter("", con)
                                    Dim dss As New DataSet

                                    If str.Length > 0 Then
                                        oda.SelectCommand.CommandText = str
                                        oda.Fill(dss, "FV")
                                        Dim isAddJquery As Integer = 0
                                        ddl.Items.Add("Select")
                                        ddl.Items(0).Value = "0"
                                        For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                            ddl.Items.Add(HttpUtility.HtmlDecode(dss.Tables("FV").Rows(J).Item(0).ToString()))
                                            Dim lookddlVal As String = dss.Tables("FV").Rows(J).Item(1).ToString()
                                            ddl.Items(J + 1).Value = lookddlVal
                                        Next
                                        dss.Dispose()
                                        If isAddJquery = 1 Then
                                            Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i <r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 <l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i <x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                        End If
                                    End If

                                    ' NEW ADDED BY SUNIL ON 07-12-13 FOR CHILD-CHILD FILTERING
                                ElseIf UCase(dropdowntype) = "CHILD VALUED" Then
                                    ' you are here on 09-dec-13
                                    arr = ddlText.Split("-")
                                    Dim Midstr As String = arr(1).ToString()
                                    Dim TID As String = "TID"
                                    Dim TABLENAME As String = ""
                                    If UCase(arr(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                        TABLENAME = "MMM_MST_DOC"
                                    ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                        TABLENAME = "MMM_MST_DOC_ITEM"
                                        arrMid = arr(1).Split(":")

                                    End If
                                    Dim lookUpqry As String = ""
                                    Dim str As String = ""
                                    If arr(0).ToUpper() = "CHILD" Then
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arrMid(1).ToString() & "'"
                                    End If

                                    Dim xwhr As String = ""
                                    Dim tids As String = ""

                                    ''FILTER THE DATA ACCORDING TO USER 
                                    tids = UserDataFilter(ds.Rows(i).Item("documenttype").ToString(), arrMid(1).ToString())

                                    If tids.Length >= 2 Then
                                        xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                    ElseIf tids = "0" Then
                                        pnlFields.Visible = False
                                        btnActEdit.Visible = False
                                        UpdatePanel1.Update()
                                        xwhr = ""
                                    End If
                                    If amendment = "AMENDMENT" Or IsDocDetail = True Then  '' added isdocdetail by sunil on 22-sep-18
                                        If TABLENAME = "MMM_MST_DOC" Then
                                            str = str & xwhr & " order by " & arr(2).ToString()
                                        Else
                                            str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                        End If
                                    Else
                                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                    End If

                                    'Dim AutoFilter As String = ds.Rows(i).Item("AutoFilter").ToString()
                                    Dim AutoFilter As String = arrMid(0).ToString()
                                    If AutoFilter.Length > 0 Then
                                        If arr(0).ToUpper() = "CHILD" Then
                                            ' str = GetQuery(arrMid(1).ToString, arr(2).ToString)
                                            'new added by sunil on 11-dec for child-child filter
                                            ' str = BindForChild1(ds.Rows(i).Item("FieldID").ToString(), pnlFields)
                                            str = BindForChild1(ds.Rows(i).Item("FieldID").ToString(), pnlFields, ddown)
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                        Else
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                        End If
                                    End If

                                    oda = New SqlDataAdapter("", con)
                                    Dim dss As New DataSet

                                    If str.Length > 0 Then
                                        oda.SelectCommand.CommandText = str
                                        oda.Fill(dss, "FV")
                                        Dim isAddJquery As Integer = 0
                                        ddl.Items.Add("Select")
                                        ddl.Items(0).Value = "0"
                                        For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                            ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                            Dim lookddlVal As String = dss.Tables("FV").Rows(J).Item(1).ToString()
                                            ddl.Items(J + 1).Value = lookddlVal
                                        Next
                                        oda.Dispose()
                                        dss.Dispose()
                                        If isAddJquery = 1 Then
                                            Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i <r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 <l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i <x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                            'ddl.Attributes.Add("onchange", JQuertStr)
                                        End If
                                    End If
                                    'End If
                                ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                                    oda1 = New SqlDataAdapter("", con)
                                    Dim ds1 As New DataSet
                                    Dim QRY As String = ""
                                    Dim DROPDOWN As String() = ds.Rows(i).Item("DROPDOWN").ToString().Split("-")
                                    If DROPDOWN(1).ToString.ToUpper = "USER" Then
                                        QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                                    ElseIf DROPDOWN(1).ToString.ToUpper = "LOCATION" Then
                                        QRY = "SELECT LOCATIONNAME ,LOCID FROM MMM_MST_LOCATION WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                                    End If
                                    oda1.SelectCommand.CommandText = QRY
                                    oda1.Fill(ds1, "SESSION")
                                    ddl.Items.Clear()
                                    For iI As Integer = 0 To ds1.Tables("SESSION").Rows.Count - 1
                                        ddl.Items.Add(ds1.Tables("SESSION").Rows(iI).Item(0))
                                        ddl.Items(iI).Value = ds1.Tables("SESSION").Rows(iI).Item(1)
                                    Next
                                    ddl.Items.Insert(0, "SELECT")
                                End If
                                If IsTabPanel Then
                                    'tabContainer.Controls(tabIndex).Controls.Add(ddl)
                                    'tabContent.Controls.Add(ddl)
                                    pnlFields.Controls.Add(ddl)
                                Else
                                    pnlFields.Controls.Add(ddl)
                                End If

                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    ddl.Attributes.Add("style", txt(1))
                                Else
                                    ddl.CssClass = "txtBox"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    ddl.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "CHECKBOX LIST"
                                newScreenHeight = newScreenHeight + 60
                                Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                                dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                                Dim chklist As New CheckBoxList
                                chklist.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                chklist.CssClass = "txtbox"
                                Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                                Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                                Dim arr() As String
                                If UCase(dropdowntype) = "FIX VALUED" Then
                                    arr = ddlText.Split(",")
                                    For ii As Integer = 0 To arr.Count - 1
                                        chklist.Items.Add(arr(ii).ToUpper())
                                    Next
                                ElseIf UCase(dropdowntype) = "CUSTOM VALUED" Then
                                    Dim Expression As String = Convert.ToString(ds.Rows(i).Item("CustomQuery"))
                                    If Expression <> "" Then
                                        If Expression.ToUpper.Contains("[SESSION(") Then
                                            Dim stringSeparators() As String = New String() {"[SESSION("}
                                            Dim results() As String
                                            ' ...
                                            results = Expression.ToUpper.Split(stringSeparators, StringSplitOptions.None)
                                            For ik As Integer = 0 To results.Length - 1
                                                If results(ik).ToString().Contains(")]") Then
                                                    Dim value As String = HttpContext.Current.Session("" & results(ik).Substring(1, results(ik).IndexOf("]") - 3) & "")
                                                    Expression = Expression.ToUpper.Replace("[SESSION(""" & results(ik).Substring(1, results(ik).IndexOf("]") - 3) & """)]", value)
                                                End If
                                            Next
                                            Dim objDTCheckBoxList As New DataTable()
                                            objDTCheckBoxList = objDC.ExecuteQryDT(Expression)
                                            If objDTCheckBoxList.Rows.Count > 0 Then
                                                chklist.DataSource = objDTCheckBoxList
                                                chklist.DataTextField = "TEXT"
                                                chklist.DataValueField = "VALUE"
                                                chklist.DataBind()
                                            End If
                                        End If
                                    End If
                                ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                    arr = ddlText.Split("-")
                                    Dim TID As String = "TID"
                                    Dim TABLENAME As String = ""
                                    If UCase(arr(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                        TABLENAME = "MMM_MST_DOC"
                                    ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                        TABLENAME = "MMM_MST_DOC_ITEM"
                                    ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                        If arr(1).ToString.ToUpper = "USER" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                            TABLENAME = "MMM_MST_LOCATION"
                                            TID = "LOCID"
                                        End If
                                    End If
                                    Dim lookUpqry As String = ""
                                    Dim str As String = ""
                                    If arr(0).ToUpper() = "CHILD" Then
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    ElseIf arr(0).ToUpper() <> "STATIC" Then
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    Else
                                        If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                            str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                                        Else
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                        End If
                                    End If
                                    'Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    oda = New SqlDataAdapter("", con)
                                    Dim dss As New DataSet
                                    oda.SelectCommand.CommandText = str
                                    oda.Fill(dss, "FV")
                                    For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                        chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                        chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                    Next
                                    oda.Dispose()
                                    dss.Dispose()
                                End If
                                Dim width = controlWdth - 10 & "px"
                                'chklist.Style.Add("width", "100px")
                                '  dynmdiv.Style.Add(HtmlTextWriterStyle.Width, "400px")
                                dynmdiv.Style.Add(HtmlTextWriterStyle.Width, width)
                                dynmdiv.Style.Add(HtmlTextWriterStyle.Height, "100px")
                                dynmdiv.Style.Add(HtmlTextWriterStyle.Overflow, "Scroll")
                                dynmdiv.Controls.Add(chklist)
                                pnlFields.Controls.Add(dynmdiv)
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "LIST BOX"
                                newScreenHeight = newScreenHeight + 60
                                Dim ddl As New ListBox
                                ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                ddl.Width = controlWdth - 2
                                ddl.CssClass = "txtBox"
                                Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                                Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                                Dim arr() As String
                                If UCase(dropdowntype) = "FIX VALUED" Then
                                    arr = ddlText.Split(",")
                                    ddl.Items.Add("")
                                    For ii As Integer = 0 To arr.Count - 1
                                        ddl.Items.Add(arr(ii).ToUpper())
                                    Next
                                ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                    arr = ddlText.Split("-")
                                    Dim TABLENAME As String = ""
                                    If UCase(arr(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    Else
                                        TABLENAME = "MMM_MST_DOC"
                                    End If
                                    Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    oda = New SqlDataAdapter("", con)
                                    Dim dss As New DataSet
                                    oda.SelectCommand.CommandText = str
                                    oda.Fill(dss, "FV")
                                    For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                        ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                        ddl.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                    Next
                                    dss.Dispose()
                                End If
                                ddl.SelectionMode = ListSelectionMode.Multiple
                                pnlFields.Controls.Add(ddl)
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "TEXT AREA"
                                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                txtBox.TextMode = TextBoxMode.MultiLine
                                If datatype.ToUpper = "MSGBODY" Then
                                    newScreenHeight = newScreenHeight + 100
                                    txtBox.Height = 180 'newScreenHeight
                                    txtBox.CssClass = "msgbody"
                                Else
                                    txtBox.CssClass = "txtBox"
                                    newScreenHeight = newScreenHeight + 60
                                    txtBox.Height = "80"
                                End If


                                If ds.Rows(i).Item("defaultfieldval").ToString.Length > 0 Then
                                    txtBox.Text = ds.Rows(i).Item("defaultfieldval")
                                Else
                                    If datatype = "NUMERIC" Then
                                        txtBox.Text = "0"
                                        txtBox.CssClass = "txtHeaderNumber"
                                    End If
                                End If
                                pnlFields.Controls.Add(txtBox)
                                If Not datatype.ToUpper = "MSGBODY" Then
                                    'For Grofers
                                    If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                        Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                        txtBox.Attributes.Add("style", txt(1))
                                    Else
                                        txtBox.CssClass = "txtBox"
                                        If Val(ds.Rows(i).Item("iseditable").ToString()) = 1 And counter = 0 And (btnActEdit.ID = "btnApprove" Or btnActEdit.ID = "btnReject" Or btnActEdit.ID = "btnPerReject" Or isDrf = 1 Or IsDocDetail = "True") And datatype = "TEXT" Then
                                            counter += 1
                                            txtBox.Focus()
                                        End If
                                    End If
                                End If

                                If datatype.ToUpper = "MSGBODY" Then
                                    'Dim htmlExt As New AjaxControlToolkit.HtmlEditorExtender
                                    'htmlExt.ID = "msgbody" & ds.Rows(i).Item("FieldID").ToString()
                                    'htmlExt.DisplaySourceTab = True
                                    'htmlExt.TargetControlID = txtBox.ID
                                    'htmlExt.EnableSanitization = False
                                    'pnlFields.Controls.Add(htmlExt)
                                    If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                        txtBox.Attributes.Add("placeholder", Convert.ToString(ds.Rows(i).Item("description")))
                                    End If
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "SELF REFERENCE"
                                Dim txtBox As New Menu
                                txtBox.ID = "fld" & ds.Rows(i).Item("fieldid").ToString()
                                txtBox.Width = controlWdth - 10
                                txtBox.Orientation = Orientation.Vertical
                                txtBox.BackColor = Drawing.Color.Aquamarine
                                txtBox.CssClass = "txtBox"
                                LoadWorkGroupMenu(ds.Rows(i).Item("DROPDOWN").ToString(), ds.Rows(i).Item("fieldmapping"), txtBox, ds.Rows(i).Item("FIELDTYPE").ToString())
                                pnlFields.Controls.Add(New LiteralControl("<div style="" width:" & controlWdth - 10 & "px;""><div style="" float:left;"">"))
                                pnlFields.Controls.Add(txtBox)
                                pnlFields.Controls.Add(New LiteralControl("</div><div style="" float:right;"" >"))
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "MenuBox"
                                End If
                                Dim textBox As New TextBox
                                textBox.Width = controlWdth / 2 - 10
                                textBox.ID = "fld" & ds.Rows(i).Item("fieldid").ToString() & "RES"
                                textBox.CssClass = "MenuBox"
                                pnlFields.Controls.Add(textBox)
                                pnlFields.Controls.Add(New LiteralControl("</div></div>"))
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "PARENT FIELD"
                                Dim txtBox As New Menu
                                txtBox.ID = "fld" & ds.Rows(i).Item("fieldid").ToString()
                                txtBox.Width = controlWdth / 2 - 10
                                txtBox.Orientation = Orientation.Vertical
                                txtBox.BackColor = Drawing.Color.Aquamarine
                                txtBox.CssClass = "MenuBox"
                                LoadWorkGroupMenu(ds.Rows(i).Item("DROPDOWN").ToString(), ds.Rows(i).Item("fieldmapping"), txtBox, ds.Rows(i).Item("FIELDTYPE").ToString())
                                pnlFields.Controls.Add(New LiteralControl("<div style="" width:" & controlWdth - 10 & "px;""><div style="" float:left;"">"))
                                pnlFields.Controls.Add(txtBox)
                                pnlFields.Controls.Add(New LiteralControl("</div><div style="" float:right;"" >"))
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "MenuBox"
                                End If
                                Dim textBox As New TextBox
                                textBox.Width = controlWdth / 2 - 10
                                textBox.ID = "fld" & ds.Rows(i).Item("fieldid").ToString() & "RES"
                                textBox.CssClass = "MenuBox"
                                pnlFields.Controls.Add(textBox)
                                pnlFields.Controls.Add(New LiteralControl("</div></div>"))
                                'Added funcitonality for LT Lookup
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "LT LOOKUP"
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                txtBox.CssClass = "txtBox"
                                pnlFields.Controls.Add(txtBox)
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "CHECK BOX"
                                Dim chkbox As New CheckBox
                                chkbox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                'chkbox.Text = "&nbsp;" & ds.Rows(i).Item("dropdown")
                                chkbox.Width = controlWdth - 10
                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    chkbox.CssClass = txt(1)
                                Else
                                End If
                                pnlFields.Controls.Add(chkbox)
                                ' For tooltip
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then
                                    chkbox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                            Case "FILE UPLOADER"
                                Dim txtBox As New FileUpload

                                Dim textBox1 As New HiddenField
                                Dim lbl1 As New Label
                                lbl1.ID = "lblf" & ds.Rows(i).Item("FieldID").ToString()
                                Dim LabelId As String = lbl1.ID
                                lbl1.Text = ""
                                lbl1.Attributes.Add("style", "display:inline-block;word-wrap:break-word;white-space: normal")

                                lbl1.ClientIDMode = ClientIDMode.Static

                                textBox1.ID = "hdnf" & ds.Rows(i).Item("FieldID").ToString()
                                textBox1.Value = ""
                                textBox1.ClientIDMode = ClientIDMode.Static
                                'If Convert.ToInt32(objDC.ExecuteQryScaller("select count(*) from  mmm_hdmail_schdule where  eid=" & ds.Rows(i).Item("EID").ToString() & " and DocumentType in(select documenttype from mmm_mst_fields where dropdown='" & ds.Rows(i).Item("documenttype").ToString() & "' and eid=" & ds.Rows(i).Item("EID").ToString() & ")")) > 0 Then
                                '    txtBox.Attributes.Add("onchange", "TicketUtils.UploadFile1(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                                'Else
                                '    'txtBox.Attributes.Add("onchange", "UtilJs.UploadFile(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                                '    If IsDocDetail Or HttpContext.Current.Session("ISDRAFT") = True Then
                                '        txtBox.Attributes.Add("onchange", "UtilJs.UploadFile1(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                                '    Else
                                '        txtBox.Attributes.Add("onchange", "UtilJs.UploadFile(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                                '    End If
                                'End If

                                'Add condition for downlaoad fields

                                If IsDocDetail Or HttpContext.Current.Session("ISDRAFT") = True Then
                                    txtBox.Attributes.Add("onchange", "UtilJs.UploadFile1(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                                Else
                                    txtBox.Attributes.Add("onchange", "UtilJs.UploadFile(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                                End If
                                'txtBox.CssClass = "txtBox"
                                txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                pnlFields.Controls.Add(txtBox)
                                Dim downloadImage As New ImageButton
                                downloadImage.ID = "downloadImage" & ds.Rows(i).Item("FieldID").ToString()
                                downloadImage.ImageUrl = "~/Images/DownloadImage.png"
                                downloadImage.ToolTip = "View Attachment"

                                'For Grofers
                                If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                    'lbl.Attributes.Add("style", txt(0))
                                Else
                                    txtBox.CssClass = "txtBox"
                                End If
                                'manvendra 19/11/2019
                                Dim dynImg As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("image")
                                dynImg.ID = "imgresset_" & ds.Rows(i).Item("FieldID").ToString()
                                dynImg.Attributes.Add("class", "DCB")
                                dynImg.Attributes.Add("attrfileupid", txtBox.ID)
                                dynImg.Attributes.Add("attrlblid", lbl1.ID)
                                dynImg.Attributes.Add("attrhdnid", textBox1.ID)
                                dynImg.Attributes.Add("src", "images\kdelete_icon.png")
                                dynImg.Attributes.Add("OnClick", "ClearFields('" & txtBox.ID & "','" & lbl1.ID & "','" & textBox1.ID & "')")

                                ' For tooltip
                                Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                If Convert.ToString(ds.Rows(i).Item("description")) <> "" Then

                                    dynSpan.ID = "span" & ds.Rows(i).Item("FieldID").ToString()
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div>"

                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.Rows(i).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.Rows(i).Item("description")) & "</div></span>"))
                                End If
                                'Dim img As New Image
                                'img.ID = "imgresset"
                                'img.ImageUrl = "~\images\kdelete_icon.png"
                                'img.Attributes.Add("onClick", "ClearFields('" & txtBox.ID & "','" & LabelId & "','" & textBox1.ID & "'); return false;")
                                'pnlFields.Controls.Add(CLNDR)
                                'pnlFields.Controls.Add("<button id=""btn-example-file-reset"" type=""button"" Text=""Reset""></button>")

                                Dim hdnflag As New HiddenField
                                hdnflag.ID = "hdnflg_" & ds.Rows(i).Item("FieldID").ToString()
                                If IsDocDetail Or HttpContext.Current.Session("ISDRAFT") = True Then
                                    hdnflag.Value = "0"
                                Else
                                    hdnflag.Value = "1"
                                End If
                                'Added By Manvendra 26-11-2019
                                txtBox.Width = controlWdth - 40
                                pnlFields.Controls.Add(textBox1)
                                pnlFields.Controls.Add(lbl1)
                                pnlFields.Controls.Add(hdnflag)
                                pnlFields.Controls.Add(downloadImage)
                                pnlFields.Controls.Add(dynImg)
                                pnlFields.Controls.Add(dynSpan)
                                If Convert.ToString(HttpContext.Current.Session("DRAFT")).ToUpper = "ISDRAFT" Then
                                    downloadImage.Visible = True
                                Else
                                    downloadImage.Visible = False
                                End If

                                Dim pstback As New PostBackTrigger
                                pstback.ControlID = btnActEdit.ID
                                UpdatePanel1.Triggers.Add(pstback)

                                If ds.Rows(i).Item("isEditable").ToString() = "1" Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.Enabled = False
                                End If

                        End Select
                        If IsTabPanel Then
                            pnlFields.Controls.Add(New LiteralControl("</td>"))
                            'tabContainer.Controls(tabIndex).Controls.Add(New LiteralControl("</td>"))
                            'tabContent.Controls.Add(New LiteralControl("</td>"))
                        Else
                            pnlFields.Controls.Add(New LiteralControl("</td>"))
                        End If


                        If layout = "DOUBLE COLUMN" Then
                            If i Mod 2 = 1 Then
                                pnlFields.Controls.Add(New LiteralControl("</tr>"))
                            End If
                        ElseIf layout = "TRIPLE COLUMN" Then
                            If i Mod 3 = 2 Then
                                If IsTabPanel Then
                                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                                    'tabContainer.Controls(tabIndex).Controls.Add(New LiteralControl("</tr>"))
                                    'tabContent.Controls.Add(New LiteralControl("</tr>"))
                                Else
                                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                                End If

                            End If
                        Else
                            pnlFields.Controls.Add(New LiteralControl("</tr>"))
                        End If
                        'End If
                    Next
                End If
                ' Changing for tab panel 25-Mar-2017
                If Not IsTabPanel Then
                    BindChildItem(ds:=ds, pnlFields:=pnlFields, con:=con, newScreenHeight:=newScreenHeight, layout:=layout)
                ElseIf IsTabPanel = True And isOnlyTabChild Then
                    BindChildItem(ds:=ds, pnlFields:=pnlFields, con:=con, newScreenHeight:=newScreenHeight, layout:=layout)
                End If

                HttpContext.Current.Session("pnlFields") = pnlFields  ' this panel field is initialized and used in bindvlaueLookup
                ''ADD CHILD ITEM IN TAB CONTROL
                '' modified by sunil for inserting default values from master

                Dim FLU As DataRow() = ds.Select("Fieldtype='File Uploader'")
                'Comment for Last Rendering file uploader on last 30-Oct-2015
                'If FLU.Length > 0 Then
                '    Dim i As Integer = 0
                '    For Each dr As DataRow In FLU
                '        If layout = "DOUBLE COLUMN" Then
                '            If i Mod 2 = 0 Then
                '                pnlFields.Controls.Add(New LiteralControl("<tr>"))
                '            End If
                '        Else
                '            pnlFields.Controls.Add(New LiteralControl("<tr>"))
                '        End If
                '        Dim dispName As String = dr.Item("displayname").ToString()
                '        Dim lbl As New Label
                '        lbl.ID = "lbl" & dr.Item("FieldID").ToString()
                '        If dr.Item("isrequired").ToString() = "1" Then
                '            dispName &= "*"
                '        End If
                '        lbl.Text = dispName
                '        lbl.Font.Bold = True
                '        pnlFields.Controls.Add(New LiteralControl("<td style="" width:" & lblWidth & "px;text-align:left"">"))
                '        pnlFields.Controls.Add(lbl)
                '        pnlFields.Controls.Add(New LiteralControl("</td><td style="" width:" & controlWdth & "px;text-align:left"">"))

                '        Dim txtBox As New FileUpload

                '        Dim textBox1 As New HiddenField
                '        Dim lbl1 As New Label
                '        lbl1.ID = "lblf" & dr.Item("FieldID").ToString()
                '        lbl1.Text = ""

                '        lbl1.ClientIDMode = ClientIDMode.Static

                '        textBox1.ID = "hdnf" & dr.Item("FieldID").ToString()
                '        textBox1.Value = ""
                '        textBox1.ClientIDMode = ClientIDMode.Static

                '        'txtBox.Attributes.Add("onchange", "UtilJs.UploadFile(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                '        If IsDocDetail Or HttpContext.Current.Session("ISDRAFT") = True Then
                '            txtBox.Attributes.Add("onchange", "UtilJs.UploadFile1(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                '        Else
                '            txtBox.Attributes.Add("onchange", "UtilJs.UploadFile(this,'" & textBox1.ID.ToString() & "','" & lbl1.ID.ToString() & "')")
                '        End If

                '        'txtBox.CssClass = "txtBox"
                '        txtBox.ID = "fld" & dr.Item("FieldID").ToString()
                '        txtBox.Width = controlWdth - 10
                '        pnlFields.Controls.Add(txtBox)
                '        'For Grofers
                '        If Convert.ToString(ds.Rows(i).Item("Style")) <> "" Then
                '            Dim txt As String() = Convert.ToString(ds.Rows(i).Item("Style")).Split(",")
                '            txtBox.Attributes.Add("style", txt(1))
                '            lbl.Attributes.Add("style", txt(0))
                '        Else
                '            txtBox.CssClass = "txtBox"
                '        End If
                '        pnlFields.Controls.Add(textBox1)
                '        pnlFields.Controls.Add(lbl1)

                '        Dim hdnflag As New HiddenField
                '        hdnflag.ID = "hdnflg_" & dr.Item("FieldID").ToString()
                '        If IsDocDetail Or HttpContext.Current.Session("ISDRAFT") = True Then
                '            hdnflag.Value = "0"
                '        Else
                '            hdnflag.Value = "1"
                '        End If
                '        pnlFields.Controls.Add(hdnflag)

                '        Dim pstback As New PostBackTrigger
                '        pstback.ControlID = btnActEdit.ID
                '        UpdatePanel1.Triggers.Add(pstback)
                '        pnlFields.Controls.Add(New LiteralControl("</td>"))
                '        If layout = "DOUBLE COLUMN" Then
                '            If i Mod 2 = 1 Then
                '                pnlFields.Controls.Add(New LiteralControl("</tr>"))
                '            End If
                '        Else
                '            pnlFields.Controls.Add(New LiteralControl("</tr>"))
                '        End If
                '        i += 1
                '    Next
                'End If
                If ds.Rows(0).Item("Iscalendar").ToString() = "1" Then
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                    pnlFields.Controls.Add(New LiteralControl("<td>"))
                    Dim btn As New Button
                    btn.ID = "BTNCLNDR"
                    btn.CssClass = "btnDyn"
                    btn.Text = "AddTask"
                    pnlFields.Controls.Add(btn)
                    pnlFields.Controls.Add(New LiteralControl("</td>"))
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                    pnlFields.Controls.Add(New LiteralControl("<td colspan="" 4"">"))
                    Dim GRD As New GridView
                    GRD.ID = "GRDCLNDR"
                    GRD.CssClass = "mGrid"
                    GRD.AutoGenerateColumns = True
                    GRD.DataKeyNames = New String() {"UID"}
                    pnlFields.Controls.Add(GRD)
                    pnlFields.Controls.Add(New LiteralControl("</td>"))
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                End If

                'pnlFields.Controls.Add(New LiteralControl("</table></div>"))

                If layout = "DOUBLE COLUMN" Then
                    newScreenHeight = newScreenHeight / 2
                ElseIf layout = "TRIPLE COLUMN" Then
                    newScreenHeight = newScreenHeight / 3
                End If

                If newScreenHeight > 800 Then
                    newScreenHeight = 800
                End If

                If autolayout = 1 Then
                    pnlFields.Width = newScreenWidth
                    pnlFields.Height = newScreenHeight
                End If
                If IsTabPanel Then
                    pnlFields.Controls.Add(New LiteralControl("</tbody></table><table class=""table""><div class=""form-group pull-right"">"))
                    If tabIndex <> 1 Then
                        If IsTabPanel And Not isOnlyTabChild Then
                            pnlFields.Controls.Add(New LiteralControl("<button type=""button""  class=""btn btn-primary submit"" onclick=""myFunction('myDIV" & tabIndex - 1 & "')"" style=""height: 30px; width: 100px;"" value=""Log In"">Previous</button>"))
                        Else
                            ' We don't need previous next button for child item
                        End If

                    End If
                    If tabIndex <> TotaltabIndex Then
                        pnlFields.Controls.Add(New LiteralControl("<button type=""button"" class=""btn btn-success submit"" onclick=""myFunction('myDIV" & tabIndex + 1 & "')"" style=""height: 30px; width: 100px;"" value=""Log In"">Next</button>"))
                    End If
                    pnlFields.Controls.Add(New LiteralControl("</table></div></div>"))
                Else
                    pnlFields.Controls.Add(New LiteralControl("</table></div>"))
                End If

            End If
        End If
    End Sub

    Protected Sub BindChildItem(ByVal ds As DataTable, Optional ByRef pnlFields As Panel = Nothing, Optional ByRef con As SqlConnection = Nothing, Optional ByRef newScreenHeight As Integer = 0, Optional ByRef layout As String = "")
        Dim oda As SqlDataAdapter = Nothing
        Dim dtHasChildUP As New DataTable
        Dim ROWCHILD() As DataRow = ds.Select("FIELDTYPE='CHILD ITEM'")
        If ROWCHILD.Length > 0 Then
            pnlFields.Controls.Add(New LiteralControl("<tr>"))
            If Convert.ToString(layout).ToUpper.Trim = "TRIPLE COLUMN" Then
                pnlFields.Controls.Add(New LiteralControl("<td colspan='6'>"))
            Else
                pnlFields.Controls.Add(New LiteralControl("<td colspan='4'>"))
            End If

            pnlFields.Controls.Add(New LiteralControl("<div id=""tabs"" ><ul>"))

            'Dim up As New UpdatePanel()
            'up.UpdateMode = UpdatePanelUpdateMode.Conditional
            'up.ContentTemplateContainer.Controls.Add(New LiteralControl("<div id=""tabs"" runat=""server""><ul><li><a href=""#tabPending"">" & arr1(0).ToString() & "<asp:Label ID=""lblpending"" runat=""server""></a></li></ul><div id=""tabPending""style=""min-height:300px;""></div></div>"))

            For j As Integer = 0 To ROWCHILD.Length - 1
                Dim arr1() As String = ROWCHILD(j).Item("dropdown").ToString().Split("-")
                pnlFields.Controls.Add(New LiteralControl("<li><a href=""#tabPending" & j.ToString() & """>" & arr1(0).ToString() & "<asp:Label ID=""lblpending" & j & " "" runat=""server""></asp:Label></a></li>"))
            Next
            pnlFields.Controls.Add(New LiteralControl("</ul>"))
            For i As Integer = 0 To ROWCHILD.Length - 1
                Dim arr1() As String = ROWCHILD(i).Item("dropdown").ToString().Split("-")
                ' removed by sunil on 06_may_14
                'pnlFields.Controls.Add(New LiteralControl("<div id=""tabPending" & i.ToString() & """style=""min-height:300px; overflow:scroll;"">"))
                pnlFields.Controls.Add(New LiteralControl("<div id=""tabPending" & i.ToString() & """style=""min-height:300px;overflow-x:scroll;overflow-y:scroll;max-width:1300px;"">"))
                Dim upd As New UpdatePanel
                upd.ID = "upd" & i.ToString
                upd.UpdateMode = UpdatePanelUpdateMode.Conditional
                '' removed frm here by sp 13-jan-14
                'Dim BTNADD As New Button
                'BTNADD.ID = "BTN" & ROWCHILD(i).Item("FieldID").ToString()
                'BTNADD.UseSubmitBehavior = False
                'BTNADD.Text = " ADD " & arr1(0).ToString() & " "
                'BTNADD.CssClass = "btnDyn"
                If arr1.Length > 1 Then
                    Dim BTNREF As New Button
                    BTNREF.ID = "BTN" & arr1(1).ToString() & "-" & ROWCHILD(i).Item("FIELDID").ToString()
                    BTNREF.Text = " Retrive " & arr1(0).ToString() & " "
                    BTNREF.CssClass = "btnDyn"
                    pnlFields.Controls.Add(BTNREF)
                End If
                '' by sunil for def value 16-dec-13 - starts
                Dim strDF As String = "select * from mmm_mst_forms where formname='" & arr1(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & HttpContext.Current.Session("EID") & " and (isnull(HasDefaultValue,0)=1 or isnull(isinlineediting,0)=1)"
                oda = New SqlDataAdapter("", con)
                Dim dtIsdv As New DataTable
                oda.SelectCommand.CommandText = strDF
                oda.Fill(dtIsdv)
                If dtIsdv.Rows.Count = 1 Then '' found hasdefvalue prop. true proceed to display button 
                    'Code By Ajeet Kumar for filter button
                    Dim hasinlineEdit = Convert.ToString(dtIsdv.Rows(0).Item("isinlineediting"))
                    If hasinlineEdit.Trim = "1" Then
                        pnlFields.Controls.Add(New LiteralControl("<div>"))
                        Dim BTNFilter As New Button
                        BTNFilter.ID = "BTNFLTER" & ROWCHILD(i).Item("FIELDID").ToString() & "_" & ROWCHILD(i).Item("DROPDOWN").ToString().Replace(" ", "_")
                        BTNFilter.Text = " Filter "
                        BTNFilter.CssClass = "btnDyn"

                        Dim grdLbl As New Label
                        grdLbl.ID = "LblGrd" & ROWCHILD(i).Item("FIELDID").ToString()
                        grdLbl.Visible = False
                        grdLbl.ForeColor = Drawing.Color.Red
                        pnlFields.Controls.Add(BTNFilter)
                        pnlFields.Controls.Add(grdLbl)
                        pnlFields.Controls.Add(New LiteralControl("</div>"))
                    End If
                    'prashant_16_7
                    strDF = "select * from mmm_mst_forms where formname='" & arr1(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & HttpContext.Current.Session("EID") & " and isnull(ShowUploader,0)=1"
                    oda = New SqlDataAdapter("", con)
                    'Dim dtHasChildUP As New DataTable
                    oda.SelectCommand.CommandText = strDF
                    oda.Fill(dtHasChildUP)
                    If dtHasChildUP.Rows.Count > 0 Then
                        Dim BTNUpload As New Button
                        BTNUpload.ID = "BTNUpload" & ROWCHILD(i).Item("FieldID").ToString()
                        BTNUpload.UseSubmitBehavior = False
                        BTNUpload.Text = " UPLOAD " & arr1(0).ToString() & " "
                        BTNUpload.CssClass = "btnDyn"
                        upd.ContentTemplateContainer.Controls.Add(BTNUpload)
                        Dim btnExportError As New ImageButton()
                        btnExportError.ID = "btnExportError" & ROWCHILD(i).Item("FieldID").ToString()
                        btnExportError.ImageUrl = "~/images/excel.png"
                        btnExportError.Height = 20
                        btnExportError.Width = 20
                        upd.ContentTemplateContainer.Controls.Add(btnExportError)
                        Dim pstback As New PostBackTrigger
                        pstback.ControlID = btnExportError.ID
                        upd.Triggers.Add(pstback)
                    End If
                    'prashant_16_7
                Else

                    Dim str As String = "select * from mmm_mst_forms where formname='" & arr1(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & HttpContext.Current.Session("EID") & " and isnull(IsDefaultRows,0)>0"
                    Dim dtIsDef As New DataTable
                    oda.SelectCommand.CommandText = str
                    oda.Fill(dtIsDef)
                    If dtIsDef.Rows.Count = 1 Then
                        'prashant_10_7
                        strDF = "select * from mmm_mst_forms where formname='" & arr1(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & HttpContext.Current.Session("EID") & " and isnull(ShowUploader,0)=1"
                        oda = New SqlDataAdapter("", con)
                        'Dim dtHasChildUP As New DataTable
                        oda.SelectCommand.CommandText = strDF
                        oda.Fill(dtHasChildUP)
                        If dtHasChildUP.Rows.Count > 0 Then
                            Dim BTNUpload As New Button
                            BTNUpload.ID = "BTNUpload" & ROWCHILD(i).Item("FieldID").ToString()
                            BTNUpload.UseSubmitBehavior = False
                            BTNUpload.Text = " UPLOAD " & arr1(0).ToString() & " "
                            BTNUpload.CssClass = "btnDyn"
                            upd.ContentTemplateContainer.Controls.Add(BTNUpload)
                            Dim btnExportError As New ImageButton()
                            btnExportError.ID = "btnExportError" & ROWCHILD(i).Item("FieldID").ToString()
                            btnExportError.ImageUrl = "~/images/excel.png"
                            btnExportError.Height = 20
                            btnExportError.Width = 20
                            upd.ContentTemplateContainer.Controls.Add(btnExportError)
                            Dim pstback As New PostBackTrigger
                            pstback.ControlID = btnExportError.ID
                            upd.Triggers.Add(pstback)
                        End If
                        'prashant_10_7
                    Else
                        Dim BTNADD As New Button
                        BTNADD.ID = "BTN" & ROWCHILD(i).Item("FieldID").ToString()
                        BTNADD.UseSubmitBehavior = False
                        BTNADD.Text = " ADD " & arr1(0).ToString() & " "
                        BTNADD.CssClass = "btnDyn"
                        upd.ContentTemplateContainer.Controls.Add(BTNADD)

                        'Code by Ajeet For creating child item bulk uploader button

                        strDF = "select * from mmm_mst_forms where formname='" & arr1(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & HttpContext.Current.Session("EID") & " and isnull(ShowUploader,0)=1"
                        oda = New SqlDataAdapter("", con)
                        'Dim dtHasChildUP As New DataTable
                        oda.SelectCommand.CommandText = strDF
                        oda.Fill(dtHasChildUP)
                        If dtHasChildUP.Rows.Count > 0 Then
                            Dim BTNUpload As New Button
                            BTNUpload.ID = "BTNUpload" & ROWCHILD(i).Item("FieldID").ToString()
                            BTNUpload.UseSubmitBehavior = False
                            BTNUpload.Text = " UPLOAD " & arr1(0).ToString() & " "
                            BTNUpload.CssClass = "btnDyn"
                            upd.ContentTemplateContainer.Controls.Add(BTNUpload)
                            Dim btnExportError As New ImageButton()
                            btnExportError.ID = "btnExportError" & ROWCHILD(i).Item("FieldID").ToString()
                            btnExportError.ImageUrl = "~/images/excel.png"
                            btnExportError.Height = 20
                            btnExportError.Width = 20
                            upd.ContentTemplateContainer.Controls.Add(btnExportError)
                            Dim pstback As New PostBackTrigger
                            pstback.ControlID = btnExportError.ID
                            upd.Triggers.Add(pstback)

                        End If
                    End If

                End If
                'HasDefaultValues                        
                oda.Dispose()
                dtIsdv.Dispose()
                '' by sunil for def value 16-dec-13 - ends
                Dim GRDCHLDVIEW As New GridView
                GRDCHLDVIEW.AutoGenerateColumns = "TRUE"
                GRDCHLDVIEW.ID = "GRD" & ROWCHILD(i).Item("FieldID").ToString()
                GRDCHLDVIEW.Width = "800"
                GRDCHLDVIEW.CssClass = "mGrid"
                GRDCHLDVIEW.DataKeyNames = New String() {"tid"}
                GRDCHLDVIEW.AlternatingRowStyle.CssClass = "alt"

                'Prashant_11_7
                'Dim btnCal As New Button
                'btnCal.ID = "bntCalFromGrid_" & ROWCHILD(i).Item("FieldID").ToString()
                'btnCal.Text = "Calculate"
                'btnCal.CssClass = "btnDyn"





                'Prashant_11_7

                ' upd.ContentTemplateContainer.Controls.Add(BTNADD)
                upd.ContentTemplateContainer.Controls.Add(GRDCHLDVIEW)

                Dim objDC As New DataClass
                Dim isCalculatebtn As Int32 = objDC.ExecuteQryScaller(" select showCalculateBtn from mmm_mst_forms where formname='" & arr1(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & HttpContext.Current.Session("EID") & "")
                If isCalculatebtn = 1 Then
                    Dim btnCal As New Button
                    btnCal.ID = "bntCalFromGrid_" & ROWCHILD(i).Item("FieldID").ToString()
                    btnCal.Text = "Calculate"
                    btnCal.CssClass = "btnDyn"
                    upd.ContentTemplateContainer.Controls.Add(btnCal)
                End If



                'neha thakar 03/02/15
                Dim strDF1 As String = "select * from mmm_mst_forms where formname='" & arr1(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & HttpContext.Current.Session("EID") & " and (isnull(HasDefaultValue,0)=1 or isnull(isinlineediting,0)=1 or isnull(isDefaultRows,0)>=1)"
                oda = New SqlDataAdapter("", con)
                Dim dtIsdv1 As New DataTable
                oda.SelectCommand.CommandText = strDF1
                oda.Fill(dtIsdv1)

                If dtIsdv1.Rows.Count = 1 Then
                    Dim hasinlineEdit1 = Convert.ToString(dtIsdv1.Rows(0).Item("isinlineediting"))
                    Dim HasDefaultValue1 = Convert.ToString(dtIsdv1.Rows(0).Item("HasDefaultValue"))
                    Dim IsDefaultRows1 = Convert.ToString(dtIsdv1.Rows(0).Item("IsDefaultRows"))
                    hasinlineEdit1 = IIf(String.IsNullOrEmpty(hasinlineEdit1), "0", hasinlineEdit1)
                    HasDefaultValue1 = IIf(String.IsNullOrEmpty(HasDefaultValue1), "0", HasDefaultValue1)
                    IsDefaultRows1 = IIf(String.IsNullOrEmpty(IsDefaultRows1), "0", IsDefaultRows1)

                    If Convert.ToInt32(hasinlineEdit1.Trim) > 0 Or Convert.ToInt32(HasDefaultValue1.Trim) > 0 Or Convert.ToInt32(IsDefaultRows1.Trim) > 0 Then
                        Dim BtnAddRow As New Button
                        BtnAddRow.ID = "BtnAddRow_" & ROWCHILD(i).Item("FIELDID").ToString()
                        BtnAddRow.Text = " Add Row "
                        BtnAddRow.CssClass = "btnnew"

                        Dim qry = "Select EnableAddRow from mmm_mst_Forms where formName='" & ROWCHILD(i).Item("Dropdown") & "' and Eid=" & HttpContext.Current.Session("Eid")
                        oda.SelectCommand.CommandText = qry
                        If con.State = ConnectionState.Closed Then
                            con.Open()
                        End If
                        Dim enable As Integer = Convert.ToInt32(oda.SelectCommand.ExecuteScalar)

                        If enable = 0 Then
                            BtnAddRow.Visible = False
                        End If
                        upd.ContentTemplateContainer.Controls.Add(BtnAddRow)
                    End If

                End If
                'neha thakar 03/02/15

                'Code By Ajeet For showing error after upload
                If dtHasChildUP.Rows.Count > 0 Then
                    Dim lblupError As New Label()
                    lblupError.ID = "lblUpError" & ROWCHILD(i).Item("DropDown").ToString()
                    upd.ContentTemplateContainer.Controls.Add(lblupError)
                End If


                pnlFields.Controls.Add(upd)
                'pnlFields.Controls.Add(BTNADD)
                'pnlFields.Controls.Add(GRDCHLDVIEW)
                If layout = "DOUBLE COLUMN" Then
                    newScreenHeight = newScreenHeight + (Val(GRDCHLDVIEW.Height.ToString()) * 2)
                ElseIf layout = "TRIPLE COLUMN" Then
                    newScreenHeight = newScreenHeight + (Val(GRDCHLDVIEW.Height.ToString()) * 3)
                Else
                    newScreenHeight = newScreenHeight + Val(GRDCHLDVIEW.Height.ToString())
                End If
                pnlFields.Controls.Add(New LiteralControl("</div>"))
            Next
            pnlFields.Controls.Add(New LiteralControl("</div></td>"))
            pnlFields.Controls.Add(New LiteralControl("</tr>"))
        End If
    End Sub


    Public Sub CreateControlsOnPanel(ByVal dsFields As DataTable, ByRef pnlFields As Panel, ByRef UpdatePanel1 As UpdatePanel, ByRef btnActEdit As Button, ByVal autolayout As Integer, Optional ByRef ddown As DropDownList = Nothing, Optional ByVal amendment As String = Nothing, Optional ByVal IsDocDetail As Boolean = False, Optional ByVal IsCallingFromMainHome As Boolean = False, Optional ByVal isDraft As Integer = 0, Optional ByRef lbltab As Label = Nothing)  ' Optional ByRef ddown As DropDownList = Nothing
        pnlFields.Controls.Clear()
        Dim oda As SqlDataAdapter = Nothing
        Dim oda1 As SqlDataAdapter = Nothing
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = Nothing
        Dim objDC As New DataClass
        Try
            'Add New Row For Check Boxes

            Dim onlyFiltered As New DataView()
            onlyFiltered = dsFields.DefaultView()
            If Not HttpContext.Current.Session("AMENDMENT") Is Nothing Then
                If HttpContext.Current.Session("AMENDMENT") = "AMENDMENT" Then
                    onlyFiltered.RowFilter = "Invisible=0 or iseditonamend=1 or showondocdetail=1"
                ElseIf HttpContext.Current.Session("AMENDMENT") = "COPYHIT" Then
                    onlyFiltered.RowFilter = "Invisible=0 "
                Else
                    onlyFiltered.RowFilter = "Invisible=0 "
                End If
            Else
                onlyFiltered.RowFilter = "Invisible=0"
            End If

            ' onlyFiltered.RowFilter = "Invisible=0 and FieldType<>'Check Box'"
            Dim ds As DataTable
            Dim dtPanel As New DataTable()
            dtPanel = objDC.ExecuteQryDT("select * from docPanel where documenttype='" & dsFields.Rows(0)("documenttype") & "' and eid=" & HttpContext.Current.Session("EID") & " order by displayorder")
            If dtPanel.Rows.Count > 0 Then
                Dim IsTabCallable As Boolean = False
                Dim tabContainers As New AjaxControlToolkit.TabContainer
                pnlFields.Controls.Add(New LiteralControl("<div class=""wizardContainer"">"))
                pnlFields.Controls.Add(New LiteralControl("<div Class="" form_wizard"">"))
                'pnlFields.Controls.Add(New LiteralControl("<div class=""container maincontainer"">"))
                'pnlFields.Controls.Add(New LiteralControl("<div class=""col-xs-12 col-sm-12 col-md-12 extra pull-left"">"))


                'pnlFields.Controls.Add(New LiteralControl("<div class="" form""><table width="" 100%"" cellspacing="" 5px"" border="" 0px"" cellpadding="" 0px"">"))
                'pnlFields.Controls.Add(New LiteralControl("<tr>"))
                'pnlFields.Controls.Add(New LiteralControl("<td colspan="" 6"">"))
                'pnlFields.Controls.Add(New LiteralControl("<div id="" doctabs"">"))
                'pnlFields.Controls.Add(New LiteralControl("<ul>"))
                pnlFields.Controls.Add(New LiteralControl("<div id=""wizard"" class=""form_wizard wizard_horizontal"">"))
                pnlFields.Controls.Add(New LiteralControl("<ul class=""wizard_steps anchor"">"))
                Dim count As Integer = 0
                For Each drpanel As DataRow In dtPanel.Rows
                    'Dim tabpnl As New TabPanel
                    'tabpnl.ID = "tab" & drpanel("docpanelID")
                    'tabpnl.HeaderText = Convert.ToString(drpanel("PanelName"))
                    'tabContainers.Controls.Add(tabpnl)
                    count += 1
                    pnlFields.Controls.Add(New LiteralControl("<li><a href='#' class='formtab' rel='" & count.ToString() & "'> <span class=""step_no"">" & count.ToString() & "</span> <span class=""step_descr"">" & Convert.ToString(drpanel("PanelName")) & "</span></a></li>"))
                    'pnlFields.Controls.Add(New LiteralControl("<li><a href=""#doctabPending" & count.ToString() & """>" & Convert.ToString(drpanel("PanelName")) & "<asp:Label ID="" doclblpending" & count.ToString() & " "" runat="" server""></asp:Label></a></li>"))
                Next
                pnlFields.Controls.Add(New LiteralControl("</ul>"))
                pnlFields.Controls.Add(New LiteralControl("</div>"))
                For panelIndex As Integer = 0 To dtPanel.Rows.Count - 1
                    ds = onlyFiltered.Table.DefaultView.ToTable()
                    Dim FinalFiltered As New DataView()
                    FinalFiltered = ds.DefaultView()
                    FinalFiltered.RowFilter = "displaypanelid=" & dtPanel.Rows(panelIndex)("docpanelID")
                    ds = FinalFiltered.Table.DefaultView.ToTable()
                    GetConditionalBasedPanel(ds, pnlFields, UpdatePanel1:=UpdatePanel1, btnActEdit:=btnActEdit, autolayout:=autolayout, ddown:=ddown, amendment:=amendment, IsDocDetail:=IsDocDetail, IsCallingFromMainHome:=IsCallingFromMainHome, IsTabPanel:=True, TabName:=Convert.ToString(dtPanel.Rows(panelIndex)("PanelName")), isTabCallable:=IsTabCallable, docpanelID:=dtPanel.Rows(panelIndex)("docpanelID"), tabContainer:=tabContainers, tabIndex:=panelIndex + 1, TotaltabIndex:=dtPanel.Rows.Count())
                    'tabContainers.Tabs(panelIndex).Controls.Add(New LiteralControl("</table></div>"))
                    IsTabCallable = True
                Next
                If dtPanel.Rows.Count > 0 Then
                    pnlFields.Controls.Add(New LiteralControl("</div>"))

                Else
                    pnlFields.Controls.Add(New LiteralControl("</div></td></tr>"))
                    pnlFields.Controls.Add(New LiteralControl("</table></div>"))
                End If

                GetConditionalBasedPanel(onlyFiltered.Table.DefaultView.ToTable(), pnlFields, UpdatePanel1:=UpdatePanel1, btnActEdit:=btnActEdit, autolayout:=autolayout, ddown:=ddown, amendment:=amendment, IsDocDetail:=IsDocDetail, IsCallingFromMainHome:=IsCallingFromMainHome, IsTabPanel:=True, TabName:="", isTabCallable:=IsTabCallable, docpanelID:=0, tabContainer:=tabContainers, tabIndex:=0, isOnlyTabChild:=True, isDrf:=isDraft)

                'pnlFields.Controls.Add(tabContainers)
            Else
                ds = onlyFiltered.Table.DefaultView.ToTable()
                GetConditionalBasedPanel(ds, pnlFields, UpdatePanel1:=UpdatePanel1, btnActEdit:=btnActEdit, autolayout:=autolayout, ddown:=ddown, amendment:=amendment, IsDocDetail:=IsDocDetail, IsCallingFromMainHome:=IsCallingFromMainHome, IsTabPanel:=False, isDrf:=isDraft)
                'pnlFields.Controls.Add(New LiteralControl("</table></div>"))
            End If
            ds = onlyFiltered.Table.DefaultView.ToTable()

            'Now Added only Check Boxes
            'Dim onlyChkBoxFiltered As DataView = dsFields.DefaultView
            'onlyChkBoxFiltered.RowFilter = "Invisible=0 and FieldType='Check Box'"
            'Dim dsCheck As DataTable = onlyChkBoxFiltered.Table.DefaultView.ToTable()
            'If dsCheck.Rows.Count > 0 Then
            '    Dim newScreenWidth As Integer = 0
            '    Dim newScreenHeight As Integer = 0
            '    con = New SqlConnection(conStr)
            '    Dim layout As String = dsCheck.Rows(0).Item("LayoutType").ToString()
            '    If UCase(layout) = "CUSTOM" Then
            '    Else
            '        'pnlFields.Controls.Add(New LiteralControl("<div class=""form""><table width=""100%"" cellspacing=""5px"" border=""0px"" cellpadding=""0px"">"))
            '        Dim screenWidth As Integer = pnlFields.Width.Value
            '        Dim lblWidth As Integer
            '        Dim controlWdth As Integer
            '        If screenWidth > 0 Then
            '            If layout = "DOUBLE COLUMN" Then
            '                lblWidth = 130
            '                controlWdth = 240
            '                newScreenWidth = (lblWidth + controlWdth + 30) * 2
            '            Else
            '                lblWidth = 210
            '                controlWdth = 540
            '                newScreenWidth = (lblWidth + controlWdth + 30)
            '            End If
            '        End If
            '        For i As Integer = 0 To dsCheck.Rows.Count - 1
            '            newScreenHeight = newScreenHeight + 30
            '            If layout = "DOUBLE COLUMN" Then
            '                pnlFields.Controls.Add(New LiteralControl("<tr> <td colspan='4' style=""width:" & 4 * lblWidth & "px;text-align:left;padding-left:" & lblWidth + 20 & "px;"">"))
            '                Dim chkbox As New CheckBox
            '                chkbox.ID = "fld" & dsCheck.Rows(i).Item("FieldId")
            '                chkbox.Text = "&nbsp;" & dsCheck.Rows(i).Item("dropdown")
            '                pnlFields.Controls.Add(chkbox)
            '                pnlFields.Controls.Add(New LiteralControl("</td>"))
            '                pnlFields.Controls.Add(New LiteralControl("</tr>"))
            '            Else
            '                pnlFields.Controls.Add(New LiteralControl("<tr> <td colspan='2' style=""width:" & 2 * lblWidth & "px;text-align:left;padding-left:" & lblWidth + 20 & "px;"">"))
            '                Dim chkbox As New CheckBox
            '                chkbox.ID = "fld" & dsCheck.Rows(i).Item("FieldId")
            '                chkbox.Text = "&nbsp;" & dsCheck.Rows(i).Item("dropdown")
            '                pnlFields.Controls.Add(chkbox)
            '                pnlFields.Controls.Add(New LiteralControl("</td>"))
            '                pnlFields.Controls.Add(New LiteralControl("</tr>"))
            '            End If

            '        Next
            '    End If
            'End If

            RenderInvisibleField(dsFields, pnlFields, IsDocDetail:=IsDocDetail)

            '' code for filling lookup/filter on contol cration by sunil on 04th oct 14
            For i As Integer = 0 To ds.Rows.Count - 1
                Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "DROP DOWN"
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            Dim ddl As New DropDownList
                            If ds.Rows(i).Item("ddlval").ToString().Length > 1 Then
                                ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                                Dim dropdowntypeFill As String = ds.Rows(i).Item("ddlval").ToString().ToUpper()
                                ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByText(dropdowntypeFill))
                            End If

                            If ddl.Items.Count = 2 Then  '' perform here action of selecting only one item and firing filters
                                ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.Item(1))
                                ddl.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                'ddl.ForeColor = Drawing.Color.White
                                ddl.Font.Bold = True
                            End If

                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            If ds.Rows(i).Item("ddlval").ToString().Length > 1 Then
                                Dim ddl As New DropDownList
                                ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                                Dim dropdowntypeFill As String = ds.Rows(i).Item("ddlval").ToString().ToUpper().Trim()
                                'changes by vinod 28/05/2021 for if does not exist ddlval in ddl.
                                Dim ddlvalindex As Integer = ddl.Items.IndexOf(ddl.Items.FindByValue(dropdowntypeFill))
                                If (ddlvalindex <> -1) Then
                                    ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dropdowntypeFill))
                                End If
                                '------------------------------------------------------

                                'ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dropdowntypeFill))
                                '''''For filling lookup and lookupddl according drop down'''''''
                                Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
                                Dim id1 As Integer = CInt(id)
                                bind(id, pnlFields, ddl, IsDocDetail)
                                bindlookupddl(id, pnlFields, ddl)
                            Else   '' new by sunil on 21_Oct_14
                                Dim ddl As New DropDownList
                                ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                                If ddl.Items.Count = 2 Then  '' perform here action of selecting only one item and firing filters
                                    ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.Item(1))
                                    Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
                                    Dim id1 As Integer = CInt(id)
                                    bind(id, pnlFields, ddl)
                                    bindlookupddl(id, pnlFields, ddl)
                                    bindMultiLookUP(id, pnlFields, ddl)
                                    bindddlMultiLookUP(id, pnlFields, ddl)
                                    ddl.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'ddl.ForeColor = Drawing.Color.White
                                    ddl.Font.Bold = True
                                    If HttpContext.Current.Session("ALLCHILD") IsNot Nothing Then
                                        DynamicGrdFilter(pnlFields, UpdatePanel1, lbltab)

                                    End If
                                End If
                            End If
                        ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                            ''code for filling lookup/filter etc. if session valued..  by sunil
                            Dim ddl As New DropDownList
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                            Dim dropdowntypeFill As String = ds.Rows(i).Item("dropdowntype").ToString()
                            ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.Item(1))

                            Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
                            Dim id1 As Integer = CInt(id)
                            bind(id, pnlFields, ddl)
                            bindlookupddl(id, pnlFields, ddl)
                            bindMultiLookUP(id, pnlFields, ddl)
                            bindddlMultiLookUP(id, pnlFields, ddl)
                            ddl.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                            'ddl.ForeColor = Drawing.Color.White
                            ddl.Font.Bold = True
                        End If

                        'code for autocomplete default selected before loaded the screen by Mayank 12-01-2017
                    Case "AUTOCOMPLETE"
                        Dim contextKey As String = ds.Rows(i).Item("dropdown").ToString() & "-" & ds.Rows(i).Item("FieldID").ToString() & "-" & ds.Rows(i).Item("dropdowntype").ToString() & "-" & ds.Rows(i).Item("autofilter").ToString() & "-" & ds.Rows(i).Item("InitialFilter").ToString() & "-" & Convert.ToString(ds.Rows(i).Item("conditionalFilter"))
                        Dim arr() As String
                        arr = contextKey.Split("-")
                        Dim TID As String = "TID"
                        Dim TABLENAME As String = ""
                        If UCase(arr(0).ToString()) = "MASTER" Then
                            TABLENAME = "MMM_MST_MASTER"
                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                            TABLENAME = "MMM_MST_DOC"
                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                            TABLENAME = "MMM_MST_DOC_ITEM"
                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                            If arr(1).ToString.ToUpper = "USER" Then
                                TABLENAME = "MMM_MST_USER"
                                TID = "UID"
                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                TABLENAME = "MMM_MST_LOCATION"
                                TID = "LOCID"
                            End If
                        End If
                        HttpContext.Current.Session("tableTID") = TABLENAME & "||" & TID  ' this is initializing because we need this at textbox changed event  in dynamic class
                        Dim panelfields As Panel = HttpContext.Current.Session("pnlFields")
                        Dim updpanel As UpdatePanel = HttpContext.Current.Session("updatepanel1")
                        Dim lookUpqry As String = ""
                        Dim str As String = ""
                        If arr(0).ToUpper() = "CHILD" Then
                            str = "select top 50  " & arr(2).ToString() & " As [name]," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                            str = "select top 50  " & arr(2).ToString() & " As [name]," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                        Else
                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                str = "select DISTINCT " & arr(2).ToString() & " As [name],SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                            Else
                                str = "select " & arr(2).ToString() & " As [name]," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                            End If
                        End If

                        Dim xwhr As String = ""
                        Dim tids As String = ""
                        Dim Rtids As String = ""   ' for prerole data filter
                        'Dim tidarr() As String

                        ''FILTER THE DATA ACCORDING TO USER 
                        Dim ob As New DynamicForm
                        tids = ob.UserDataFilter(contextKey.Split("-").ElementAt(1).ToString(), arr(1).ToString())

                        '' below new func  by sunil for checking Role assignment fields in any master dropdown
                        '' if found then restric no. of list as per rights
                        Dim StrforRoleAssn As String = ""
                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & arr(1).ToString() & "'"
                        If Not (tids.Length > 2) Then
                            tids = CheckRoleAsgnmentDdn(arr(1).ToString(), StrforRoleAssn)
                        End If

                        Rtids = ob.UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                        If tids.Length >= 2 Then
                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                        End If

                        If Rtids.Length >= 2 Then
                            If xwhr.ToString = "" Then
                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                            Else
                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                            End If
                        End If

                        str = str & "  AND M.isauth=1 " & xwhr
                        Dim AutoFilter As String = arr(5) 'ds.Rows(i).Item("AutoFilter").ToString()
                        Dim InitFilterArr As String() = arr(6).Split(":") 'ds.Rows(i).Item("InitialFilter").ToString().Split(":")
                        'Dim da1 As New SqlDataAdapter(, con)
                        'If con.State = ConnectionState.Closed Then
                        '    con.Open()
                        'End If
                        'Dim SessionFieldvalue As String = Convert.ToString(da1.SelectCommand.ExecuteScalar())
                        Dim SessionFieldvalue As String = Convert.ToString(objDC.ExecuteQryScaller("select isnull(sessionfieldVal,0) as sessionfieldVal from mmm_mst_fields where fieldid=" & arr(3) & " and eid=" & HttpContext.Current.Session("EID")))
                        If AutoFilter.Length > 0 Then
                            Dim filteriD As String = arr(3)
                            Dim mval As String = ""
                            Dim filterMasVal As String = ""
                            'Dim ODA As New SqlDataAdapter("", con)
                            ' ODA.SelectCommand.CommandText = "select top 1 * from MMM_MSt_Fields where eid='" & HttpContext.Current.Session("EID") & "' and fieldtype in ('Drop Down','AutoComplete') and lookupvalue like '%" & filteriD & "-S%'"
                            'With(nolock) added by Himank on 29th sep 2015
                            'oda.SelectCommand.CommandText =
                            Dim dt As New DataTable()
                            dt = objDC.ExecuteQryDT("select top 1 * from MMM_MSt_Fields  WITH(NOLOCK)  where eid='" & HttpContext.Current.Session("EID") & "' and fieldtype in ('Drop Down','AutoComplete') and lookupvalue like '%" & filteriD & "-S%'")
                            'oda.Fill(dt, "filtrId")
                            If dt.Rows.Count > 0 Then
                                Dim fieldtype As String = dt.Rows(0).Item("fieldtype").ToString
                                If fieldtype.ToUpper = "DROP DOWN" Then
                                    If dt.Rows(0).Item("DropDownType").ToString = "SESSION VALUED" Then
                                        ' 16 march balli  
                                        'str = "select " & arr(2).ToString() & " As [name]," & TID & "[tid]" & lookUpqry & " from MMM_MST_USER M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        'Dim ddl As DropDownList = CType(panelfields.FindControl("fld" & dt.Tables("filtrId").Rows(0).Item("fieldid")), DropDownList)
                                        'mval = ddl.SelectedItem.Value
                                        'filterMasVal = " AND CONVERT(NVARCHAR(10)," & AutoFilter & ") = '" & mval & "' "
                                    Else
                                        Dim ddl As DropDownList = CType(panelfields.FindControl("fld" & dt.Rows(0).Item("fieldid")), DropDownList)
                                        mval = ddl.SelectedItem.Value
                                        filterMasVal = " AND CONVERT(NVARCHAR(10)," & AutoFilter & ") = '" & mval & "' "
                                    End If
                                Else
                                    Dim ddl As HiddenField = CType(panelfields.FindControl("HDN" & dt.Rows(0).Item("fieldid")), HiddenField)  ' for hidden field
                                    'Dim ddl As TextBox = CType(panelfields.FindControl("fld" & dt.Tables("filtrId").Rows(0).Item("fieldid")), TextBox)
                                    'Dim MId As String() = Split(ddl.Text, "-")
                                    'mval = Replace(MId(1), "[", "")
                                    'mval = mval.Replace("]", "")
                                    ' filterMasVal = " AND CONVERT(NVARCHAR(10)," & AutoFilter & ") = '" & mval & "' "
                                    filterMasVal = " AND CONVERT(NVARCHAR(10)," & AutoFilter & ") = '" & Val(ddl.Value) & "' "
                                End If
                            End If
                            ' for binding autocomplete with the selection of dropdo
                            If arr(0).ToUpper() = "CHILD" Then
                                If AutoFilter.ToUpper = "DOCID" Then
                                    str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                Else
                                    str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                End If
                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                'With(nolock) added by Himank on 29th sep 2015
                                str = "select top 50 " & arr(2).ToString() & " As [name],convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M   WITH(NOLOCK) WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                str = str & "  AND M.isauth=1 " & xwhr
                                If filterMasVal.Length > 1 Then
                                    str = str & filterMasVal
                                End If
                            Else
                                'With(nolock) added by Himank on 29th sep 2015
                                str = "select top 50 " & arr(2).ToString() & " As [name],convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M  WITH(NOLOCK)  WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                str = str & "  AND M.isauth=1 " & xwhr
                                If filterMasVal.Length > 1 Then
                                    str = str & filterMasVal
                                End If
                            End If
                        ElseIf SessionFieldvalue.Length > 0 Then
                            Dim val As String() = SessionFieldvalue.ToString().Split("-")
                            If arr(0).ToUpper() = "CHILD" Then
                                If AutoFilter.ToUpper = "DOCID" Then
                                    str = ob.GetQuery1(arr(1).ToString, arr(2).ToString())
                                Else
                                    str = ob.GetQuery(arr(1).ToString, arr(2).ToString)
                                End If
                            ElseIf arr(0).ToUpper() <> "STATIC" Then

                                Dim Conval As String = Replace(Convert.ToString(objDC.ExecuteQryScaller("select isnull(" & val(0) & ",0) from mmm_mst_user where eid=" & HttpContext.Current.Session("EID") & " and uid=" & HttpContext.Current.Session("UID"))), ",", "','")
                                str = "select " & arr(2).ToString() & "  As [name],convert(nvarchar(10)," & TID & ")  [tid] from " & TABLENAME & " M WHERE  EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                If Conval.Length > 1 Then
                                    If SessionFieldvalue.Contains("-") Then
                                        str = str & "  AND (M.isauth>0) " & xwhr & " and " & val(2) & " in('" & Conval & "') "
                                    Else
                                        str = str & "  AND (M.isauth>0) " & xwhr & " and  tid in ('" & Conval & "') "
                                    End If

                                Else
                                    str = str & "  AND (M.isauth>0) " & xwhr
                                End If

                            Else
                                str = "select " & arr(2).ToString() & "  As [name],convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                str = str & "  AND (M.isauth>0) " & xwhr
                            End If
                        ElseIf InitFilterArr.Length > 1 Then
                            Dim daa As New SqlDataAdapter("select * from MMM_MST_Fields where fieldid=" & InitFilterArr(0) & "", con)
                            Dim dss As New DataSet
                            daa.Fill(dss, "data")
                            Dim row() As DataRow = dss.Tables("data").Select("fieldid=" & InitFilterArr(0).ToString())
                            If arr(0).ToUpper() = "DOCUMENT" Or arr(0).ToUpper() = "MASTER" Then
                                If row.Length > 0 Then
                                    'With(nolock) added by Himank on 29th sep 2015
                                    str = " Select top 50 " & arr(2).ToString() & "  As [name], convert(nvarchar(10),tid) [TID] FROM " & TABLENAME & " M  WITH(NOLOCK)  where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                    str = str & "  AND M.isauth=1 " & xwhr
                                End If
                            ElseIf arr(0).ToUpper() = "STATIC" Then
                                If row.Length > 0 Then
                                    'With(nolock) added by Himank on 29th sep 2015
                                    str = " Select top 50 " & arr(2).ToString() & "As [name],convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " M  WITH(NOLOCK)  where EID=" & HttpContext.Current.Session("EID") & " "
                                    str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                    str = str & "  AND M.isauth=1 " & xwhr
                                End If
                            End If
                            dss.Dispose()
                            daa.Dispose()
                        End If
                        ' Dim da As New SqlDataAdapter("select top 50 " & contextKey.Split("-").ElementAt(2) & " As [name] , tid from " & TABLENAME & "  where EID ='" & HttpContext.Current.Session("EID") & "' and documenttype ='" & contextKey.Split("-").ElementAt(1).ToString() & "' and " & contextKey.Split("-").ElementAt(2).ToString() & " like '" & prefixText & "%' ", con)
                        ' for hidden field value check
                        'Dim pnlHdnfld As HiddenField = CType(panelfields.FindControl("HDN" & arr(3)), HiddenField)


                        ' Dim da As New SqlDataAdapter(str & " and " & contextKey.Split("-").ElementAt(2).ToString() & " like '%" & prefixText & "%'  order by " & arr(2).ToString(), con)
                        'Dim da As New SqlDataAdapter(, con)
                        Dim dsdata As New DataTable()
                        dsdata = objDC.ExecuteQryDT(str & "  order by LEN(" & arr(2).ToString() & ") ")
                        Dim items As New List(Of String)
                        Dim items1 As String = String.Empty
                        If dsdata.Rows.Count = 1 Then
                            items1 = AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(dsdata.Rows(0).Item("name").ToString(), dsdata.Rows(0).Item("tid").ToString())
                            items.Add(items1)
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            HttpContext.Current.Session("fieldid") = contextKey.Split("-").ElementAt(3)  ' this session id we need dynamic form for calculation the other field
                            txtBox.Text = dsdata.Rows(0).Item("name").ToString()
                            Dim HDN As HiddenField = CType(panelfields.FindControl("HDN" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                            HDN.Value = dsdata.Rows(0).Item("tid").ToString()
                            txtbox_TextChanged(txtBox, New EventArgs())
                        End If
                End Select
            Next
            '' code for filling lookup/filter on contol cration
            Dim onlyColorFiltered As New DataView()
            onlyColorFiltered = dsFields.DefaultView()
            onlyColorFiltered.RowFilter = "(FieldType='LookupDDL' or FieldType='Multi LookupDDL') and  isEditable=0"
            Dim dtcolorfilter As DataTable = onlyColorFiltered.ToTable()
            For z As Integer = 0 To dtcolorfilter.Rows.Count - 1
                Dim ddl As New DropDownList
                ddl = CType(pnlFields.FindControl("fld" & dtcolorfilter.Rows(z).Item("FieldID").ToString()), DropDownList)
                ddl.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                'ddl.ForeColor = Drawing.Color.White
                ddl.Font.Bold = True
            Next


        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
            If Not oda1 Is Nothing Then
                oda1.Dispose()
            End If
        End Try
    End Sub

    Public Sub RenderInvisibleField(ByVal ds2 As DataTable, ByRef pnlFields As Panel, Optional ByRef IsDocDetail As Boolean = False)
        ' Dim onlyFiltered As DataView = ds2.DefaultView
        Dim onlyFiltered As New DataView()
        onlyFiltered = ds2.DefaultView()
        If Not HttpContext.Current.Session("AMENDMENT") Is Nothing Then
            If HttpContext.Current.Session("AMENDMENT") = "AMENDMENT" Then
                onlyFiltered.RowFilter = "Invisible=1 and iseditonamend=0 and showondocdetail=0 "
            ElseIf HttpContext.Current.Session("AMENDMENT") = "COPYHIT" Then
                onlyFiltered.RowFilter = "Invisible=1"
            Else
                onlyFiltered.RowFilter = "Invisible=1"
            End If
        Else
            onlyFiltered.RowFilter = "Invisible=1"
        End If
        '    onlyFiltered.RowFilter = "Invisible=1"
        Dim ds As DataTable = onlyFiltered.Table.DefaultView.ToTable()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        For i As Integer = 0 To ds.Rows.Count - 1
            'don't add label for child grid
            Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                Case "MULTI LOOKUP"
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    '   txtBox.Width = controlWidth - 10
                    txtBox.CssClass = "txtBox"
                    pnlFields.Controls.Add(txtBox)
                    'Case "LOOKUP"
                    '    Dim txtBox As New TextBox
                    '    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    '    pnlFields.Controls.Add(txtBox)
                    '    txtBox.CssClass = "invisible"
                Case "LOOKUP"
                    'Dim txtBox As New TextBox
                    'txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    'pnlFields.Controls.Add(txtBox)
                    'txtBox.CssClass = "invisible"

                    Dim FieldType As String = ""
                    'Changes for Check box if having there
                    Dim CheckControl As DataView = ds2.AsDataView
                    CheckControl.RowFilter = "lookupvalue Like" & "'%" & ds.Rows(i).Item("Fieldid") & "-%'"
                    Dim tempdt As DataTable = CheckControl.ToTable()
                    If tempdt.Rows.Count > 0 Then
                        Dim arr() As String = Convert.ToString(tempdt.Rows(0)("lookupvalue")).Split(",")
                        Dim fldmapping As String = ""
                        If arr.Length > 0 Then
                            For XYZ As Integer = 0 To arr.Length - 1
                                If Convert.ToString(arr(XYZ)).Contains(ds.Rows(i).Item("Fieldid") & "-") Then
                                    fldmapping = arr(XYZ)
                                    Exit For
                                End If
                            Next
                            Dim finalFld As String() = fldmapping.Split("-")
                            Dim dropdown As String() = Convert.ToString(tempdt.Rows(0)("dropdown")).Split("-")
                            Try
                                Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                da.SelectCommand.CommandType = CommandType.Text
                                da.SelectCommand.CommandText = "select FieldType from mmm_mst_fields where documenttype='" & dropdown(1) & "' and fieldMapping='" & finalFld(1) & "' and eid=" & HttpContext.Current.Session("EID")
                                If con.State = ConnectionState.Closed Then
                                    con.Open()
                                End If

                                FieldType = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                con.Close()
                            Catch ex As Exception
                                con.Dispose()
                            End Try
                        End If
                    End If
                    If FieldType.Trim() = "Check Box" Then
                        Dim chkBox As New CheckBox
                        chkBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                        chkBox.CssClass = "invisible"
                        pnlFields.Controls.Add(chkBox)
                    Else
                        Dim txtBox As New TextBox
                        txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                        'txtBox.CssClass = "txtBox"
                        If ds.Rows(i).Item("isEditable").ToString() = "1" Then
                            txtBox.Enabled = True
                        Else
                            txtBox.Enabled = False
                            txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                            'txtBox.ForeColor = Drawing.Color.White
                            txtBox.Font.Bold = True
                        End If
                        txtBox.CssClass = "invisible"
                        pnlFields.Controls.Add(txtBox)
                    End If
                Case "CHECK BOX"
                    Dim chkbox As New CheckBox
                    chkbox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    chkbox.CssClass = "invisible"
                    pnlFields.Controls.Add(chkbox)
                Case "CHILD ITEM TOTAL"
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    pnlFields.Controls.Add(txtBox)
                    txtBox.CssClass = "invisible calnum"
                    txtBox.Text = "0"
                Case "ADVANCE FORMULA"
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    txtBox.CssClass = "invisible"
                    pnlFields.Controls.Add(txtBox)

                Case "CHILD ITEM MAX"  ' BY SUNIL 04_JUL_14
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    pnlFields.Controls.Add(txtBox)
                    txtBox.CssClass = "invisible"
                    txtBox.Text = "0"
                Case "CALCULATIVE FIELD"
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    Dim Datatype As String = ds.Rows(i).Item("datatype").ToString()
                    txtBox.CssClass = "invisible"
                    If Datatype.ToUpper().Trim() = "NUMERIC" Then
                        txtBox.Text = "0"
                    End If
                    pnlFields.Controls.Add(txtBox)
                Case "TEXT BOX"
                    ' Dim txtBox As New TextBox
                    ' txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    ' Dim Datatype As String = ds.Rows(i).Item("datatype").ToString()
                    ' txtBox.CssClass = "invisible"
                    ' If Datatype = "NUMERIC" Then
                    '     txtBox.Text = "0"
                    ' End If
                    ' 'pnlFields.Controls.Add(txtBox)
                    ' If Datatype.ToUpper = "DATETIME" Then
                    '     txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                    ' End If
                    ' pnlFields.Controls.Add(txtBox)
                    '' new for default value filling 
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    Dim Datatype As String = ds.Rows(i).Item("datatype").ToString()
                    txtBox.CssClass = "invisible"
                    If Datatype.ToUpper().Trim() = "NUMERIC" Then
                        txtBox.Text = "0"
                    End If
                    'pnlFields.Controls.Add(txtBox)
                    If Datatype.ToUpper = "DATETIME" Then
                        txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                    End If
                    If Val(ds.Rows(i).Item("invisible").ToString()) = 1 Then
                        If ds.Rows(i).Item("defaultfieldval").ToString().Length > 0 Then
                            txtBox.Text = ds.Rows(i).Item("defaultfieldval").ToString()
                        End If
                    End If

                    pnlFields.Controls.Add(txtBox)

                Case "AUTO NUMBER"
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    txtBox.Text = ds.Rows(i).Item("dropdown").ToString() & ds.Rows(i).Item("MaxLen").ToString()
                    pnlFields.Controls.Add(txtBox)
                    txtBox.CssClass = "invisible"
                    'Added By Komal On 27March2014 for Formula Field Invisible 
                Case "FORMULA FIELD"
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    Dim Datatype As String = ds.Rows(i).Item("datatype").ToString()
                    txtBox.CssClass = "invisible"
                    pnlFields.Controls.Add(txtBox)
                Case "LOOKUPDDL"
                    Dim Datatype As String = ds.Rows(i).Item("datatype").ToString().ToUpper()
                    Dim fieldtypee As String = ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Dim ddl As New DropDownList
                    ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    'ddl.Width = controlWdth - 10
                    Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                    Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                    Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                    'Dim dss As New DataSet
                    oda.SelectCommand.CommandText = "select dropdown,DDllookupvalue from MMM_MST_FIELDS where FieldID='" & ddlText & "'"
                    ' Dim dsMonth As New DataSet
                    Dim dt As New DataTable
                    oda.Fill(dt)
                    Dim arr() As String
                    Dim darr() As String
                    Dim type As String = dt.Rows(0).Item("dropdown").ToString()
                    arr = type.Split("-")
                    Dim documenttype As String = arr(1).ToString()
                    Dim field As String = dt.Rows(0).Item("DDllookupvalue").ToString()
                    field = field.Substring(0, field.Length - 1)
                    darr = field.Split(",")
                    For k As Integer = 0 To darr.Count - 1
                        Dim fieldmping As String
                        Dim str As String = ""
                        Dim feild As String
                        Dim s = darr(k).Split("-")
                        feild = s(0).ToString()
                        fieldmping = s(1).ToString()
                        If feild = ds.Rows(i).Item("FieldID").ToString() Then
                            oda.SelectCommand.CommandText = "select dropdown from MMM_MST_FIELDS where EID=" & HttpContext.Current.Session("EID") & " and documenttype='" & documenttype & "' and FieldMapping in('" & fieldmping & "')"
                            Dim dt1 As New DataTable
                            oda.Fill(dt1)
                            Dim dropdown As String = dt1.Rows(0).Item("dropdown").ToString()
                            Dim arr1() As String
                            arr1 = dropdown.Split("-")
                            Dim TID As String = "TID"
                            Dim TABLENAME As String = ""
                            If UCase(arr1(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            ElseIf UCase(arr1(0).ToString()) = "DOCUMENT" Then
                                TABLENAME = "MMM_MST_DOC"
                            ElseIf UCase(arr1(0).ToString()) = "CHILD" Then
                                TABLENAME = "MMM_MST_DOC_ITEM"
                            ElseIf UCase(arr1(0).ToString) = "STATIC" Then
                                If arr1(1).ToString.ToUpper = "USER" Then
                                    TABLENAME = "MMM_MST_USER"
                                    TID = "UID"
                                ElseIf arr1(1).ToString().ToUpper = "LOCATION" Then
                                    TABLENAME = "MMM_MST_LOCATION"
                                    TID = "LOCID"
                                End If
                            End If
                            Dim lookUpqry As String = ""
                            Dim str1 As String = ""
                            If arr1(0).ToUpper() = "CHILD" Then
                                str1 = "select " & arr1(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr1(1).ToString() & "'"
                            ElseIf arr1(0).ToUpper() <> "STATIC" Then
                                str1 = "select " & arr1(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr1(1).ToString() & "'"
                            Else
                                If arr1(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                    str1 = "select DISTINCT " & arr1(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                                Else
                                    str1 = "select " & arr1(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                End If
                            End If

                            Dim xwhr As String = ""
                            Dim tids As String = ""
                            Dim Rtids As String = ""   ' for prerole data filter
                            'Dim tidarr() As String

                            ''FILTER THE DATA ACCORDING TO USER 
                            tids = UserDataFilter(ds.Rows(i).Item("documenttype").ToString(), arr1(1).ToString())

                            '' below new func  by sunil for checking Role assignment fields in any master dropdown
                            '' if found then restric no. of list as per rights
                            Dim StrforRoleAssn As String = ""
                            StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & arr(1).ToString() & "'"
                            If Not (tids.Length > 2) Then
                                tids = CheckRoleAsgnmentDdn(arr(1).ToString(), StrforRoleAssn)
                            End If

                            Rtids = UserDataFilter_PreRole(arr1(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                            If Rtids.Length > 2 Then
                                tids = ""
                            End If

                            If tids.Length >= 2 Then
                                If UCase(arr(0).ToString) = "STATIC" Then
                                    xwhr = " AND CONVERT(NVARCHAR(10),UID ) IN (" & tids & ")"
                                Else
                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                End If
                            ElseIf tids = "0" Then
                                pnlFields.Visible = False
                                '  btnActEdit.Visible = False
                                '  UpdatePanel1.Update()
                                xwhr = ""
                            End If
                            '' new by sunil for pre role data filter 22-feb
                            If Rtids <> "" Then
                                If xwhr.ToString = "" Then
                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                Else
                                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                End If
                            End If
                            str1 = str1 & "  AND M.isauth=1 " & xwhr & " order by " & arr1(2).ToString()
                            'Dim documenttype2 As String = arr1(1).ToString()
                            'Dim fieldmping2 As String = arr1(2).ToString()
                            'pnlFields.Controls.Add(ddl)
                            Dim dt2 As New DataTable
                            'oda.SelectCommand.CommandText = "select " & fieldmping2 & " from " & TABLENAME & " where EID=" & HttpContext.Current.Session("EID") & " and documenttype = '" & documenttype2 & "'"

                            ddl.Items.Add("Select")
                            If str1.Length > 0 Then
                                pnlFields.Controls.Add(ddl)
                                ddl.CssClass = "invisible"
                                oda.SelectCommand.CommandText = str1
                                oda.Fill(dt2)
                                Dim isAddJquery As Integer = 0
                                ddl.Items.Add("Select")
                                ddl.Items(0).Value = "0"
                                For J As Integer = 0 To dt2.Rows.Count - 1
                                    ddl.Items.Add(dt2.Rows(J).Item(0).ToString())
                                    Dim lookddlVal As String = dt2.Rows(J).Item(1).ToString()
                                    ddl.Items(J + 1).Value = lookddlVal
                                Next
                                dt2.Dispose()
                            End If
                            If ds.Rows(i).Item("isEditable").ToString() = "1" Then
                                ddl.Enabled = True
                            Else
                                ddl.Enabled = False
                            End If
                        End If
                    Next
                Case "DROP DOWN"
                    Dim ddl As New DropDownList
                    ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                    Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                    Dim arr() As String
                    Dim arrMid() As String
                    If UCase(dropdowntype) = "FIX VALUED" Then
                        arr = ddlText.Split(",")
                        ddl.Items.Add("SELECT")
                        For ii As Integer = 0 To arr.Count - 1
                            ddl.Items.Add(arr(ii).ToUpper())
                        Next
                    ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                        'If ds.Rows(i).Item("FORMSOURCE").ToString().ToUpper.Trim() = "DETAIL FORM" And ds.Rows(i).Item("KC_LOGIC").ToString().Length > 1 Then
                        'Else
                        arr = ddlText.Split("-")
                        Dim TID As String = "TID"
                        Dim TABLENAME As String = ""
                        If UCase(arr(0).ToString()) = "MASTER" Then
                            TABLENAME = "MMM_MST_MASTER"
                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                            TABLENAME = "MMM_MST_DOC"
                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                            TABLENAME = "MMM_MST_DOC_ITEM"
                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                            If arr(1).ToString.ToUpper = "USER" Then
                                TABLENAME = "MMM_MST_USER"
                                TID = "UID"
                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                TABLENAME = "MMM_MST_LOCATION"
                                TID = "LOCID"
                            End If
                        End If
                        Dim lookUpqry As String = ""
                        Dim str As String = ""
                        If arr(0).ToUpper() = "CHILD" Then
                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                        Else
                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                            Else
                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                            End If
                        End If

                        Dim xwhr As String = ""
                        Dim tids As String = ""
                        'Dim tidarr() As String

                        ''FILTER THE DATA ACCORDING TO USER 
                        tids = UserDataFilter(ds.Rows(i).Item("documenttype").ToString(), arr(1).ToString())

                        '' below new func  by sunil for checking Role assignment fields in any master dropdown
                        '' if found then restric no. of list as per rights
                        Dim StrforRoleAssn As String = ""
                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & arr(1).ToString() & "'"
                        If Not (tids.Length > 2) Then
                            tids = CheckRoleAsgnmentDdn(arr(1).ToString(), StrforRoleAssn)
                        End If

                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                        Dim AutoFilter As String = ds.Rows(i).Item("AutoFilter").ToString()
                        If AutoFilter.Length > 0 Then
                            If arr(0).ToUpper() = "CHILD" Then
                                If AutoFilter.ToUpper = "DOCID" Then
                                    str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                Else
                                    str = GetQuery(arr(1).ToString, arr(2).ToString)
                                End If
                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                            Else
                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                            End If
                        End If

                        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                        Dim dss As New DataSet

                        If str.Length > 0 Then
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            Dim isAddJquery As Integer = 0
                            ddl.Items.Add("Select")
                            ddl.Items(0).Value = "0"
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                Dim lookddlVal As String = dss.Tables("FV").Rows(J).Item(1).ToString()
                                ddl.Items(J + 1).Value = lookddlVal
                            Next
                            oda.Dispose()
                            dss.Dispose()
                            If isAddJquery = 1 Then
                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                            End If
                        End If

                        ' NEW ADDED BY SUNIL ON 07-12-13 FOR CHILD-CHILD FILTERING
                    ElseIf UCase(dropdowntype) = "CHILD VALUED" Then
                        ' you are here on 09-dec-13
                        arr = ddlText.Split("-")
                        Dim Midstr As String = arr(1).ToString()
                        Dim TID As String = "TID"
                        Dim TABLENAME As String = ""
                        If UCase(arr(0).ToString()) = "MASTER" Then
                            TABLENAME = "MMM_MST_MASTER"
                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                            TABLENAME = "MMM_MST_DOC"
                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                            TABLENAME = "MMM_MST_DOC_ITEM"
                            arrMid = arr(1).Split(":")

                        End If
                        Dim lookUpqry As String = ""
                        Dim str As String = ""
                        If arr(0).ToUpper() = "CHILD" Then
                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arrMid(1).ToString() & "'"
                        End If

                        Dim xwhr As String = ""
                        Dim tids As String = ""

                        ''FILTER THE DATA ACCORDING TO USER 
                        tids = UserDataFilter(ds.Rows(i).Item("documenttype").ToString(), arrMid(1).ToString())

                        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                        'Dim AutoFilter As String = ds.Rows(i).Item("AutoFilter").ToString()
                        Dim AutoFilter As String = arrMid(0).ToString()
                        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
                        Dim dss As New DataSet

                        If str.Length > 0 Then
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            Dim isAddJquery As Integer = 0
                            ddl.Items.Add("Select")
                            ddl.Items(0).Value = "0"
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                Dim lookddlVal As String = dss.Tables("FV").Rows(J).Item(1).ToString()
                                ddl.Items(J + 1).Value = lookddlVal
                            Next
                            oda.Dispose()
                            dss.Dispose()
                            If isAddJquery = 1 Then
                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i < r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 < l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i < x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                'ddl.Attributes.Add("onchange", JQuertStr)
                            End If
                        End If
                        'End If
                    ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                        Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
                        Dim ds1 As New DataSet
                        Dim QRY As String = ""

                        Dim DROPDOWN As String() = ds.Rows(i).Item("DROPDOWN").ToString().Split("-")
                        If DROPDOWN(1).ToString.ToUpper = "USER" Then
                            If Not IsDocDetail Then
                                QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                            Else
                                QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE uid=0 "
                            End If


                        ElseIf DROPDOWN(1).ToString.ToUpper = "LOCATION" Then
                            QRY = "SELECT LOCATIONNAME ,LOCID FROM MMM_MST_LOCATION WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                        End If
                        oda1.SelectCommand.CommandText = QRY
                        oda1.Fill(ds1, "SESSION")

                        ddl.Items.Clear()
                        For iI As Integer = 0 To ds1.Tables("SESSION").Rows.Count - 1
                            ddl.Items.Add(ds1.Tables("SESSION").Rows(iI).Item(0))
                            ddl.Items(iI).Value = ds1.Tables("SESSION").Rows(iI).Item(1)
                        Next
                        ddl.Items.Insert(0, "SELECT")
                    End If
                    pnlFields.Controls.Add(ddl)
                    ddl.CssClass = "invisible"
                    'chklist.Style.Add("width", "100px")
                Case "TEXT AREA"
                    ' Dim txtBox As New TextBox
                    ' txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    ' txtBox.TextMode = TextBoxMode.MultiLine
                    ' pnlFields.Controls.Add(txtBox)
                    ' txtBox.CssClass = "invisible"

                    ' new for def. value filling 12_mar_14
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    txtBox.TextMode = TextBoxMode.MultiLine
                    If Val(ds.Rows(i).Item("invisible").ToString()) = 1 Then
                        If ds.Rows(i).Item("defaultfieldval").ToString().Length > 0 Then
                            txtBox.Text = ds.Rows(i).Item("defaultfieldval").ToString()
                        End If
                    End If
                    pnlFields.Controls.Add(txtBox)
                    txtBox.CssClass = "invisible"


                Case "SELF REFERENCE"
                    Dim txtBox As New Menu
                    txtBox.ID = "fld" & ds.Rows(i).Item("fieldid").ToString()
                    txtBox.Orientation = Orientation.Vertical
                    txtBox.BackColor = Drawing.Color.Aquamarine
                    LoadWorkGroupMenu(ds.Rows(i).Item("DROPDOWN").ToString(), ds.Rows(i).Item("fieldmapping"), txtBox, ds.Rows(i).Item("FIELDTYPE").ToString())
                    pnlFields.Controls.Add(txtBox)
                    txtBox.CssClass = "invisible"
                Case "PARENT FIELD"
                    Dim txtBox As New Menu
                    txtBox.ID = "fld" & ds.Rows(i).Item("fieldid").ToString()
                    txtBox.Orientation = Orientation.Vertical
                    txtBox.CssClass = "txtBox"
                    LoadWorkGroupMenu(ds.Rows(i).Item("DROPDOWN").ToString(), ds.Rows(i).Item("fieldmapping"), txtBox, ds.Rows(i).Item("FIELDTYPE").ToString())
                    pnlFields.Controls.Add(txtBox)
                    txtBox.CssClass = "invisible"
                Case "GEO POINT"
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    pnlFields.Controls.Add(txtBox)
                    txtBox.CssClass = "invisible"
                Case "GEO FENCE"
                    Dim txtBox As New TextBox
                    txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                    txtBox.CssClass = "txtBox"
                    pnlFields.Controls.Add(txtBox)
                    txtBox.CssClass = "invisible"

            End Select
        Next

        '' code for filling lookup/filter on contol cration by sunil on 04th oct 14
        For i As Integer = 0 To ds.Rows.Count - 1
            Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                Case "DROP DOWN"
                    Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                    Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                    If UCase(dropdowntype) = "FIX VALUED" Then
                        Dim ddl As New DropDownList
                        If ds.Rows(i).Item("ddlval").ToString().Length > 1 Then
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                            Dim dropdowntypeFill As String = ds.Rows(i).Item("ddlval").ToString().ToUpper()
                            ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByText(dropdowntypeFill))
                        End If

                    ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                        Dim ddl As New DropDownList
                        If ds.Rows(i).Item("ddlval").ToString().Length > 1 Then
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                            Dim dropdowntypeFill As String = ds.Rows(i).Item("ddlval").ToString().ToUpper().Trim()
                            ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dropdowntypeFill))

                            '''''For fill lookup and lookupddl according drop down'''''''
                            Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
                            Dim id1 As Integer = CInt(id)
                            'Dim ob As New DynamicForm()
                            bind(id, pnlFields, ddl)
                            bindlookupddl(id, pnlFields, ddl)
                        End If

                    ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                        Dim ddl As New DropDownList
                        ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                        Dim dropdowntypeFill As String = ds.Rows(i).Item("dropdowntype").ToString()

                        ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.Item(1))

                        '' code for filling lookup/filter etc. if session valued.. 
                        'Dim ddl As DropDownList = TryCast(sender, DropDownList)
                        Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
                        Dim id1 As Integer = CInt(id)
                        'Dim ob As New DynamicForm()
                        bind(id, pnlFields, ddl)
                        bindlookupddl(id, pnlFields, ddl)
                    End If
            End Select
        Next
        '' code for filling lookup/filter on contol cration

    End Sub

    Public Function ExecuteScalervalue(ByVal tblname As String, ByVal strFirstquery As String, ByVal strconditionqry As String) As String
        Dim con As SqlConnection = Nothing
        Dim oda As SqlDataAdapter = Nothing
        Try
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            con = New SqlConnection(conStr)
            oda = New SqlDataAdapter("", con)
            oda.SelectCommand.CommandText = "select " & strFirstquery & " from " & tblname & " where  " & strconditionqry
            If con.State = ConnectionState.Closed Then
                con.Open()
            End If
            Return Convert.ToString(oda.SelectCommand.ExecuteScalar())
        Catch ex As Exception

        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try




    End Function

    Public Sub FillControlsOnPanel(ByVal ds As DataTable, ByRef pnlFields As Panel, ByVal type As String, ByVal pid As Integer, Optional ByRef isdrafton As Boolean = False, Optional ByVal IsAmend As Integer = 0, Optional ByVal Issplit As Integer = 0, Optional ByVal IsDocDetail As Boolean = False)
        Dim con As SqlConnection = Nothing
        Dim oda As SqlDataAdapter = Nothing
        Try
            If ds.Rows.Count > 0 Then
                Dim strcol As String = ""
                Dim strqry As String = ""

                Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                con = New SqlConnection(conStr)
                oda = New SqlDataAdapter("", con)
                Dim dss As New DataSet
                For Each rw As DataRow In ds.Rows
                    strcol &= rw.Item("fieldmapping").ToString & ","
                Next
                strcol = strcol.Substring(0, strcol.Length - 1)
                If UCase(type) = "MASTER" Then
                    strqry = "Select " & strcol & " from MMM_MST_MASTER WHERE TID=" & pid & ""
                ElseIf UCase(type) = "DOCUMENT" Then
                    If HttpContext.Current.Session("DRAFT") Is Nothing Then
                        strqry = "Select " & strcol & " from MMM_MST_DOC WHERE TID=" & pid & ""
                    Else
                        If HttpContext.Current.Session("DRAFT") = "ISDRAFT" Then
                            If isdrafton = True Then
                                strqry = "Select " & strcol & " from MMM_MST_DOC_draft WHERE TID=" & pid & ""
                            Else
                                strqry = "Select " & strcol & " from MMM_MST_DOC WHERE TID=" & pid & ""
                            End If
                        End If
                    End If

                ElseIf UCase(type) = "USER" Then
                    strqry = "Select " & strcol & " from MMM_MST_USER WHERE UID=" & pid & ""
                ElseIf UCase(type) = "CHILDITEM" Then
                    If isdrafton = True Then
                        strqry = "Select " & strcol & " from MMM_MST_DOC_ITEM_draft WHERE TID=" & pid & ""
                    Else
                        strqry = "Select " & strcol & " from MMM_MST_DOC_ITEM WHERE TID=" & pid & ""
                    End If

                End If
                oda.SelectCommand.CommandText = strqry
                oda.Fill(dss, "data")

                For i As Integer = 0 To ds.Rows.Count - 1
                    Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()

                        Case "TEXT BOX"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            '' change here for filling current date if datatype is date and field value is blank/null
                            '' by sunil
                            If ds.Rows(i).Item("datatype").ToString.ToUpper = "DATETIME" Then
                                If dss.Tables("data").Rows(0).Item(i).ToString() = "" Then
                                    txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                Else
                                    If HttpContext.Current.Session("DRAFT") = "ISDRAFT" And ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                        txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                    Else
                                        txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                                    End If
                                End If
                            Else
                                txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                                '' new add by sunil for default value in numric fields on action scr if fld value is blank 25_apr_14
                                If ds.Rows(i).Item("datatype").ToString.ToUpper = "NUMERIC" And Trim(txtBox.Text) = "" Then
                                    txtBox.Text = "0"
                                Else
                                    If txtBox.Text = "" Or IsNothing(txtBox.Text) Then
                                        txtBox.Text = ds.Rows(i).Item("defaultfieldval").ToString()
                                    End If
                                End If
                                '' new add by sunil for default value in numric fields on action scr if fld value is blank 25_apr_14
                            End If

                            '' upto here changes - 05-apr
                            If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If
                            If IsAmend = 1 Then
                                If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                                    txtBox.Enabled = False
                                End If
                            End If
                            If Issplit = 1 Then
                                If ds.Rows(i).Item("splittable").ToString() = "0" Then
                                    txtBox.Enabled = False
                                End If
                            End If
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                                If ds.Rows(i).Item("datatype").ToString().ToUpper() = "NUMERIC" Then
                                    txtBox.CssClass = "txtHeaderNumber"
                                End If
                            End If

                        Case "AUTOCOMPLETE"   '' added by balli  8 JULY 15 
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            Dim hdnfld As New HiddenField
                            hdnfld = CType(pnlFields.FindControl("HDN" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)

                            'find master data
                            Dim dtV As New DataTable
                            If IsDBNull(dss.Tables("data").Rows(0).Item(i)) Then
                                dtV = ReturnMastervalues(Convert.ToInt32(ds.Rows(i).Item("FieldID")), ds.Rows(i).Item("dropdown").ToString(), 0)
                            ElseIf String.IsNullOrEmpty(dss.Tables("data").Rows(0).Item(i)) Then
                                dtV = ReturnMastervalues(Convert.ToInt32(ds.Rows(i).Item("FieldID")), ds.Rows(i).Item("dropdown").ToString(), 0)
                            Else
                                dtV = ReturnMastervalues(Convert.ToInt32(ds.Rows(i).Item("FieldID")), ds.Rows(i).Item("dropdown").ToString(), Convert.ToInt32(dss.Tables("data").Rows(0).Item(i)))
                            End If

                            If dtV.Rows.Count = 1 Then
                                txtBox.Text = dtV.Rows(0).Item(0).ToString()
                                'Chnges because value does not exist in our database
                                'hdnfld.Value = dss.Tables("data").Rows(0).Item(i).ToString()
                                hdnfld.Value = dtV.Rows(0).Item(1).ToString()
                            End If

                            If ds.Rows(i).Item("iseditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If
                            If IsAmend = 1 Then
                                If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                                    txtBox.Enabled = False
                                End If
                            End If

                        Case "DROP DOWN"
                            Dim ddl As New DropDownList
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                            Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()


                            If dropdowntype.ToUpper = "FIX VALUED" Then
                                ddl.SelectedIndex = 0     ' ddl.Items.IndexOf(ddl.Items.FindByText(dss.Tables("data").Rows(0).Item(i).ToString()))

                                Dim lc As Integer = 0
                                For Each li As ListItem In ddl.Items
                                    If String.Compare(li.Text, dss.Tables("data").Rows(0).Item(i).ToString(), True) = 0 Then
                                        ddl.SelectedIndex = lc
                                        Exit For
                                    End If
                                    lc += 1
                                Next
                            ElseIf dropdowntype.ToUpper = "MASTER VALUED" Then
                                '' write here to change if mode is edit then fill ddl from db (removed session filtered values) by sunil pareek
                                If IsAmend = 1 Or Issplit = 1 Then
                                    Dim dtV As New DataTable
                                    dtV = ReturnMastervalues(ds.Rows(i).Item("FieldID").ToString(), ds.Rows(i).Item("dropdown").ToString(), dss.Tables("data").Rows(0).Item(i).ToString())
                                    If dtV.Rows.Count <> 0 Then
                                        If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                                            ddl.Items.Clear()
                                            For ii As Integer = 0 To dtV.Rows.Count - 1
                                                ddl.Items.Add(dtV.Rows(ii).Item(0))
                                                ddl.Items(ii).Value = dtV.Rows(ii).Item(1)
                                            Next
                                            ddl.Items.Insert(0, "SELECT")
                                        End If
                                    End If
                                End If
                                '' write here to change if mode is - ends here


                                'If ds.Rows(i).Item("ddlval").ToString.ToUpper <> "SELECT" And ds.Rows(i).Item("ddlval").ToString.Length > 0 Then
                                '    ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(ds.Rows(i).Item("ddlval").ToString()))
                                'Else
                                '    ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dss.Tables("data").Rows(0).Item(i).ToString()))
                                'End If
                                If Not IsNothing(ddl.Items.FindByValue(dss.Tables("data").Rows(0).Item(i).ToString())) Then
                                    ddl.ClearSelection()
                                    ddl.Items.FindByValue(dss.Tables("data").Rows(0).Item(i).ToString()).Selected = True
                                End If

                                If ddl.SelectedIndex <> 0 Then
                                    If ds.Rows(i).Item("lookupvalue").ToString.Length > 2 Then
                                        'Dim lookupvalue() As String = ds.Rows(i).Item("lookupvalue").ToString.Split(",")
                                        ' For ii As Integer = 0 To lookupvalue.Length - 1
                                        If ds.Rows(i).Item("lookupvalue").ToString.Contains("-S") Or ds.Rows(i).Item("lookupvalue").ToString.Contains("-C") Or ds.Rows(i).Item("lookupvalue").ToString.Contains("-fld") Then
                                            bind(ds.Rows(i).Item("FIELDID"), pnlFields, ddl, IsDocDetail)
                                        End If
                                        ' Next
                                    End If
                                End If



                                'ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dss.Tables("data").Rows(0).Item(i).ToString()))

                            ElseIf dropdowntype.ToUpper = "CHILD VALUED" Then
                                ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dss.Tables("data").Rows(0).Item(i).ToString()))
                                If ddl.SelectedIndex <> 0 Then
                                    If ds.Rows(i).Item("lookupvalue").ToString.Length > 2 Then
                                        Dim lookupvalue() As String = ds.Rows(i).Item("lookupvalue").ToString.Split(",")
                                        For ii As Integer = 0 To lookupvalue.Length - 1 '' change below line to use array var instead of dt column
                                            If ds.Rows(i).Item("lookupvalue").ToString.Contains("-S") Or ds.Rows(i).Item("lookupvalue").ToString.Contains("-C") Or ds.Rows(i).Item("lookupvalue").ToString.Contains("-fld") Then
                                                bind(ds.Rows(i).Item("FIELDID"), pnlFields, ddl)  ' bindLookupChilds
                                            End If
                                        Next
                                    End If
                                End If
                            ElseIf dropdowntype.ToUpper = "SESSION VALUED" Then
                                '' new added by sunil for edit/split mode on 04_feb_14
                                Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
                                Dim ds1 As New DataSet
                                Dim QRY As String = ""

                                '' changed here for session valued not filling issue 06 may by sunil
                                If IsAmend = 1 Or Issplit = 1 Or HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                    QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE EID=" & HttpContext.Current.Session("EID") & " AND UID='" & dss.Tables("data").Rows(0).Item(i).ToString() & "'"
                                Else
                                    QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE EID=" & HttpContext.Current.Session("EID") & " AND UID='" & HttpContext.Current.Session("UID") & "'"
                                End If

                                oda1.SelectCommand.CommandText = QRY
                                oda1.Fill(ds1, "SESSION")
                                ddl.Items.Clear()
                                For ii As Integer = 0 To ds1.Tables("SESSION").Rows.Count - 1
                                    ddl.Items.Add(ds1.Tables("SESSION").Rows(ii).Item(0))
                                    ddl.Items(ii).Value = ds1.Tables("SESSION").Rows(ii).Item(1)
                                Next
                                ddl.Items.Insert(0, "SELECT")

                                ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dss.Tables("data").Rows(0).Item(i).ToString()))

                                oda1.Dispose()
                                ds1.Dispose()
                                '' ends here new added
                                ' prev used b4 04_feb_14 - ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dss.Tables("data").Rows(0).Item(i).ToString()))
                            End If
                            If ds.Rows(i).Item("iseditable").ToString() = "0" Then
                                ddl.Enabled = False
                            End If
                            If IsAmend = 1 Then
                                If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                                    ddl.Enabled = False
                                End If
                            End If
                            If Issplit = 1 Then
                                If ds.Rows(i).Item("splittable").ToString() = "0" Then
                                    ddl.Enabled = False
                                End If
                            End If
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    ddl.Enabled = True
                                Else
                                    ddl.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'ddl.ForeColor = Drawing.Color.White
                                    ddl.Font.Bold = True
                                    ddl.Enabled = False
                                End If
                            End If

                        Case "AUTO NUMBER"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            txtBox.Enabled = False

                            If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                txtBox.Enabled = True
                            Else
                                txtBox.Enabled = False
                            End If

                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                            End If

                            '    txtBox.Text = ds.Rows(i).Item("dropdown").ToString() & ds.Rows(i).Item("MaxLen").ToString()
                            '    txtBox.Enabled = False

                        Case "LOOKUPDDL"
                            Dim ddl As New DropDownList
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                            ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByValue(dss.Tables("data").Rows(0).Item(i).ToString()))

                            If ddl.SelectedIndex <> 0 Then
                                If ds.Rows(i).Item("DDllookupvalue").ToString.Length > 2 Then
                                    Dim lookupvalue() As String = ds.Rows(i).Item("DDllookupvalue").ToString.Split(",")
                                    For ii As Integer = 0 To lookupvalue.Length - 1
                                        If ds.Rows(i).Item("DDllookupvalue").ToString.Contains("-S") Or ds.Rows(i).Item("DDllookupvalue").ToString.Contains("-C") Or ds.Rows(i).Item("DDllookupvalue").ToString.Contains("-fld") Then
                                            bindlookupddl(ds.Rows(i).Item("FIELDID"), pnlFields, ddl)
                                        End If
                                    Next
                                End If
                            End If
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    ddl.Enabled = True
                                Else
                                    ddl.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'ddl.ForeColor = Drawing.Color.White
                                    ddl.Font.Bold = True
                                    ddl.Enabled = False
                                End If
                            End If

                        Case "CHECKBOX LIST"
                            Dim chklist As New CheckBoxList
                            chklist = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBoxList)

                            If dss.Tables("data").Rows(0).Item(i).ToString().Length > 1 Then
                                Dim AR() As String = dss.Tables("data").Rows(0).Item(i).ToString().Split(",")
                                If ds.Rows(i).Item("DROPDOWNType").ToString().ToUpper() = "FIX VALUED" Then
                                    For ii As Integer = 0 To AR.Length - 1
                                        If AR(ii) <> "-1" Then
                                            chklist.Items.FindByText(AR(ii).ToString()).Selected = True
                                        End If
                                    Next
                                Else
                                    If AR.Length > 0 Then
                                        For ii As Integer = 0 To AR.Length - 1
                                            If AR(ii) <> "-1" Then
                                                chklist.Items.FindByValue(AR(ii).ToString()).Selected = True
                                            End If
                                        Next
                                    End If
                                End If
                            End If

                            If Issplit = 1 Then
                                If ds.Rows(i).Item("splittable").ToString() = "0" Then
                                    chklist.Enabled = False
                                End If
                            End If

                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    chklist.Enabled = True
                                Else
                                    chklist.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'ddl.ForeColor = Drawing.Color.White
                                    chklist.Font.Bold = True
                                    chklist.Enabled = False
                                End If
                            End If

                        Case "LIST BOX"
                            Dim ddl As New ListBox
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)
                            Dim ARR1() As String = dss.Tables("data").Rows(0).Item(i).ToString().Split(",")

                            If ds.Rows(i).Item("DROPDOWNType").ToString().ToUpper() = "FIX VALUED" Then
                                For ii As Integer = 0 To ARR1.Length - 1
                                    ddl.Items.FindByText(ARR1(ii).ToString()).Selected = True
                                Next
                            Else
                                For ii As Integer = 0 To ARR1.Length - 1
                                    ddl.Items.FindByValue(ARR1(ii).ToString()).Selected = True
                                Next
                            End If
                            If Issplit = 1 Then
                                If ds.Rows(i).Item("splittable").ToString() = "0" Then
                                    ddl.Enabled = False
                                End If
                            End If

                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    ddl.Enabled = True
                                Else
                                    ddl.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'ddl.ForeColor = Drawing.Color.White
                                    ddl.Font.Bold = True

                                    ddl.Enabled = False
                                End If
                            End If


                        Case "TEXT AREA"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            If Issplit = 1 Then
                                If ds.Rows(i).Item("splittable").ToString() = "0" Then
                                    txtBox.Enabled = False
                                End If
                            End If
                            If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                txtBox.Enabled = True
                            Else
                                txtBox.Enabled = False
                            End If
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                            End If


                        Case "CALCULATIVE FIELD"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            If Issplit = 1 Then
                                If ds.Rows(i).Item("splittable").ToString() = "0" Then
                                    txtBox.Enabled = False
                                Else
                                    '     txtBox.ReadOnly = False
                                    '    txtBox.Enabled = True
                                End If
                            End If
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then

                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                            End If

                            'removed on 12_may_14 
                        Case "LOOKUP", "MULTI LOOKUP"
                            Dim txtBox As New TextBox
                            Try
                                txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            Catch ex As Exception
                            End Try
                            If txtBox Is Nothing Then
                                Dim chkBox As New CheckBox
                                chkBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBox)
                                If Convert.ToString(dss.Tables("data").Rows(0).Item(i)).ToUpper = "YES" Then
                                    chkBox.Checked = True
                                Else
                                    chkBox.Checked = False
                                End If
                                If IsAmend = 1 Then
                                    If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                                        chkBox.Enabled = False
                                    Else
                                        chkBox.Enabled = True
                                    End If
                                End If
                                If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                    If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                        chkBox.Enabled = True
                                    Else
                                        chkBox.Enabled = False
                                    End If
                                End If
                            Else
                                txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                                If IsAmend = 1 Then
                                    If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                                        txtBox.Enabled = False
                                    Else
                                        txtBox.Enabled = True
                                    End If
                                End If
                                If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                    If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                        txtBox.Enabled = True
                                    Else
                                        txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                        'txtBox.ForeColor = Drawing.Color.White
                                        txtBox.Font.Bold = True
                                        txtBox.Enabled = False
                                    End If
                                End If
                            End If
                            'removed on 12_may_14 
                        Case "CHILD ITEM TOTAL"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Enabled = False
                            'added on 12_may_14 
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                            End If

                        Case "CHILD ITEM MAX"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            txtBox.Enabled = False
                            'added on 04_jul_14  by sunil
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then

                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                            End If
                        Case "FORMULA FIELD"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            txtBox.Enabled = False
                            'added on 12_may_14 
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then

                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                            End If
                        Case "GEO POINT"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            '' change here for filling current date if datatype is date and field value is blank/null
                            '' by sunil
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            '' upto here changes - 05-apr
                            If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If
                            If IsAmend = 1 Then
                                If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                                    txtBox.Enabled = False
                                End If
                            End If
                            If Issplit = 1 Then
                                If ds.Rows(i).Item("splittable").ToString() = "0" Then
                                    txtBox.Enabled = False
                                End If
                            End If
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = "1" Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                            End If
                        Case "FILE UPLOADER"
                            Dim fileup As New FileUpload
                            Dim lbl As New Label
                            fileup = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), FileUpload)
                            lbl = CType(pnlFields.FindControl("lblf" & ds.Rows(i).Item("FieldID").ToString()), Label)
                            Dim hdnval As New HiddenField
                            hdnval = CType(pnlFields.FindControl("hdnf" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                            'Dim lblfile As Label = CType(pnlFields.FindControl("lblf" & ds.Rows(i).Item("FieldID").ToString()), Label)
                            Dim hdnflg As New HiddenField
                            If (dss.Tables("data").Rows(0)(ds.Rows(i).Item("FieldMapping").ToString()).ToString() <> "") Then
                                IsDocDetail = True
                                lbl.Text = dss.Tables("data").Rows(0)(ds.Rows(i).Item("FieldMapping").ToString()).ToString()
                                Dim hdn As HiddenField = CType(pnlFields.FindControl("hdnf" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                                hdn.Value = dss.Tables("data").Rows(0)(ds.Rows(i).Item("FieldMapping").ToString()).ToString()
                            Else
                                lbl.Text = ""
                            End If

                            Dim downloadImage As New ImageButton()
                            downloadImage = CType(pnlFields.FindControl("downloadImage" & ds.Rows(i).Item("FieldID").ToString()), ImageButton)
                            If Not IsNothing(downloadImage) Then
                                If (dss.Tables("data").Rows(0)(ds.Rows(i).Item("FieldMapping").ToString()).ToString() <> "") Then
                                    'downloadImage.PostBackUrl = "viewpdf.aspx?docid=" & pid & "&EidPage=" & dss.Tables("data").Rows(0)(ds.Rows(i).Item("FieldMapping").ToString()).ToString()
                                    downloadImage.OnClientClick = "Javascript:window.open('viewpdf.aspx?docid=" & pid & "&EidPage=" & dss.Tables("data").Rows(0)(ds.Rows(i).Item("FieldMapping").ToString()).ToString() & "','_blank'); return false;"
                                Else
                                    downloadImage.Visible = False
                                End If

                                'downloadImage.OnClientClick = "Javascript:return window.open('viewpdf.aspx?docid=" & pid & "&EidPage=" & ds.Rows(i).Item("FieldMapping").ToString().ToString() & "',''CustomPopUp'', ''width=600, height=600, menubar=no, resizable=yes'');""
                            End If

                            If IsDocDetail Or isdrafton = True Then
                                hdnflg = CType(pnlFields.FindControl("hdnflg_" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                                Dim str = dss.Tables("data").Rows(0).Item(i).ToString()
                                str = After(str, "/")
                                lbl.Text = "<br/>" & str
                                hdnval.Value = str
                                If lbl.Text.Trim().Replace("<br/>", "") <> "" Then
                                    hdnflg.Value = "0"
                                End If
                            End If
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = "1" Then
                                    fileup.Enabled = True
                                    fileup.Attributes.Remove("disabled")
                                Else
                                    fileup.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'fileup.ForeColor = Drawing.Color.White
                                    fileup.Font.Bold = True
                                    fileup.Enabled = False
                                End If
                            End If

                        Case "GEO POINT"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            '' change here for filling current date if datatype is date and field value is blank/null
                            '' by sunil
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            '' upto here changes - 05-apr
                            If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If
                            If IsAmend = 1 Then
                                If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                                    txtBox.Enabled = False
                                End If
                            End If
                            If Issplit = 1 Then
                                If ds.Rows(i).Item("splittable").ToString() = "0" Then
                                    txtBox.Enabled = False
                                End If
                            End If
                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then
                                If ds.Rows(i).Item("alloweditonedit").ToString() = 1 Then
                                    txtBox.Enabled = True
                                Else
                                    txtBox.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                    'txtBox.ForeColor = Drawing.Color.White
                                    txtBox.Font.Bold = True
                                    txtBox.Enabled = False
                                End If
                            End If
                        Case "ADVANCE FORMULA"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            txtBox.Enabled = False
                        Case "CHECK BOX"
                            Dim chk As New CheckBox
                            chk = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBox)
                            Dim data = Convert.ToString(dss.Tables("data").Rows(0).Item(i).ToString())
                            If (data.Trim.ToUpper = "YES") Then
                                chk.Checked = True
                            Else
                                chk.Checked = False
                            End If
                    End Select
                Next
                dss.Dispose()
            End If
            ds.Dispose()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
                HttpContext.Current.Session("DRAFT") = Nothing
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
                HttpContext.Current.Session("DRAFT") = Nothing
            End If
        End Try
    End Sub


    Public Function ReturnMastervalues(ByVal fldID As Integer, ByVal ddn As String, ByVal Ftid As Integer) As DataTable
        Dim ddlText As String = ddn
        Dim dropdowntype As String = "MASTER VALUED"
        Dim arr() As String = ddn.Split("-")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = Nothing
        Try
            Dim dtR As New DataTable
            If UCase(dropdowntype) = "MASTER VALUED" Then
                arr = ddlText.Split("-")
                Dim TID As String = "TID"
                Dim TABLENAME As String = ""
                If UCase(arr(0).ToString()) = "MASTER" Then
                    TABLENAME = "MMM_MST_MASTER"
                ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                    TABLENAME = "MMM_MST_DOC"
                ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                    TABLENAME = "MMM_MST_DOC_ITEM"
                ElseIf UCase(arr(0).ToString) = "STATIC" Then
                    If arr(1).ToString.ToUpper = "USER" Then
                        TABLENAME = "MMM_MST_USER"
                        TID = "UID"
                    ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                        TABLENAME = "MMM_MST_LOCATION"
                        TID = "LOCID"
                    End If
                End If
                Dim lookUpqry As String = ""
                Dim str As String = ""
                If arr(0).ToUpper() = "CHILD" Then
                    str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                ElseIf arr(0).ToUpper() <> "STATIC" Then
                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                Else
                    str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                End If

                Dim xwhr As String = ""
                Dim tids As String = ""

                ''FILTER THE DATA ACCORDING TO USER 
                tids = Ftid

                If tids.Length >= 2 Then
                    xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                End If
                ' str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()  commented on 18_mar_14 - removed isauth=1 condition for amendment
                str = str & xwhr & " order by " & arr(2).ToString()
                oda = New SqlDataAdapter("", con)
                If str.Length > 0 Then
                    oda.SelectCommand.CommandText = str
                    oda.Fill(dtR)
                End If

            End If
            Return dtR
        Catch ex As Exception
            Throw
        Finally
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
            If con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
        End Try
    End Function

    Public Function ValidateAndGenrateQueryForControls(ByVal qryType As String, ByVal qryField As String, ByVal dataField As String, ByVal ds As DataTable, ByRef pnlFields As Panel, ByVal tid As Integer) As String
        Dim errorMsg As String = "Please Ensure Following"
        'Dim errorlist As New ArrayList
        Dim autono As String = ""
        Dim updquery As String = ""

        Dim allowedSize As Integer = 0
        Dim fileSize As Integer = 0
        Dim flagFsize As Integer = 0
        If ds.Rows.Count > 0 Then
            For i = 0 To ds.Rows.Count - 1
                Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                Dim lbl As Label = CType(pnlFields.FindControl("lbl" & ds.Rows(i).Item("FieldID").ToString()), Label)
                If IsNothing(lbl) = False Then
                    lbl.ForeColor = Drawing.Color.Black
                    lbl.BackColor = Drawing.Color.White
                End If
                Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "LT LOOKUP"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If txtBox IsNot Nothing Then
                            If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                If txtBox.Text.Trim() <> "" Then
                                    If ds.Rows(i).Item("isunique").ToString() = "1" Then
                                        txtBox.Text = getSafeString(txtBox.Text)
                                        If checkduplicate(qryType, tid, ds.Rows(i).Item("DBTABLENAME").ToString, ds.Rows(i).Item("Fieldmapping").ToString(), txtBox.Text, ds.Rows(i).Item("DOCUMENTTYPE").ToString) Then
                                            errorMsg &= "<br/>" & "unique " & dispName & " ,"
                                            'Exit For
                                            Continue For
                                        End If
                                    End If
                                End If
                            End If
                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.Text & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                            End If
                        End If

                    Case "MULTI LOOKUP"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        If txtBox IsNot Nothing Then
                            If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                                    errorMsg &= "<br/>" & dispName & " is Mandatory"
                                End If
                                '' new code for checking min and max len on lookup  by sunil - 16-june-14 - starts
                                If txtBox.Text.Length < CInt(ds.Rows(i).Item("minlen").ToString) And txtBox.Text.Length > 0 Then
                                    errorMsg &= "<br/>" & "Minimum  " & ds.Rows(i).Item("minlen").ToString() & " character in " & dispName & ","
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    'Exit For
                                    Continue For
                                End If
                                If txtBox.Text.Length > CInt(ds.Rows(i).Item("maxlen").ToString) And txtBox.Text.Length > 0 Then
                                    errorMsg &= "<br/>" & "Maximum  " & ds.Rows(i).Item("maxlen").ToString() & " character in " & dispName & ","
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    'Exit For
                                    Continue For
                                End If

                                '' new code for checking min and max len on lookup  by sunil - 16-june-14 - ends
                                If txtBox.Text.Trim() <> "" Then
                                    If ds.Rows(i).Item("isunique").ToString() = "1" Then
                                        txtBox.Text = getSafeString(txtBox.Text)
                                        If checkduplicate(qryType, tid, ds.Rows(i).Item("DBTABLENAME").ToString, ds.Rows(i).Item("Fieldmapping").ToString(), txtBox.Text, ds.Rows(i).Item("DOCUMENTTYPE").ToString) Then
                                            errorMsg &= "<br/>" & "unique " & dispName & " ,"
                                            'Exit For
                                            Continue For
                                        End If
                                    End If
                                End If
                            End If
                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.Text & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                            End If
                        End If

                    Case "MULTI LOOKUPDDL"
                        Dim txtBox As DropDownList = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                        If txtBox IsNot Nothing Then
                            If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.ToUpper = "SELECT" Then
                                    errorMsg &= "<br/>" & dispName & " is Mandatory"
                                    Continue For
                                End If
                            End If
                            If qryType = "ADD" Then
                                If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                    updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                    If txtBox.SelectedItem.Text.ToUpper() = "SELECT" Then
                                        dataField &= "'',"  '' new by sp 10_may
                                    Else
                                        dataField &= "'" & txtBox.SelectedItem.Text & "',"
                                    End If
                                Else
                                    Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                    If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                        'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                        dataField &= "'" & fldpair(0).ToString() & "',"
                                    Else
                                        'dataField &= "'" & txtBox.SelectedValue.ToString() & "',"
                                        dataField &= "'" & fldpair(0).ToString() & "',"
                                    End If
                                End If
                            Else
                                If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                    If txtBox.SelectedItem.Text.ToUpper() = "SELECT" Then
                                        qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'',"  '' new by sp 10_may
                                    Else
                                        qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.SelectedItem.Text & "',"
                                    End If
                                Else
                                    Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                    If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                        'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                        qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & fldpair(0).ToString() & "',"
                                    Else
                                        qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & fldpair(0).ToString() & "',"
                                        'qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.SelectedItem.Value & "',"
                                    End If
                                End If
                            End If
                        End If

                    Case "TEXT BOX"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        Dim RegExObject As New Regex("^([a-zA-Z0-9  ,\./<>\?;':""[\]\\{}\|`~!@#\$%\^&\*()-_=\+]*)$")
                        If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                            If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                                errorMsg &= "<br/>" & dispName & " is Mandatory"
                                If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                Continue For
                            ElseIf (RegExObject.IsMatch(txtBox.Text.Trim) = False) Then
                                Dim WordCharacter As Regex = New Regex("\W")
                                Dim Whitespace As Regex = New Regex("\s+")
                                txtBox.Text = WordCharacter.Replace(txtBox.Text.ToString, " ")
                                txtBox.Text = Whitespace.Replace(txtBox.Text.ToString, " ").Trim()
                                'errorMsg &= "<br/>" & dispName & " Enter Valid Text"
                            End If
                            ''Code for HTML encoder''
                            If Regex.IsMatch(txtBox.Text, "<.*?>") = True Then
                                txtBox.Text = HttpContext.Current.Server.HtmlEncode(txtBox.Text)
                            End If

                            If ds.Rows(i).Item("datatype") = "Datetime" Then
                                If ds.Rows(i).Item("isrequired") = 1 And txtBox.Text.Trim() <> "" Then

                                    Dim str1 As String() = Split(txtBox.Text, "/")
                                    If str1.Length = 3 Then
                                        Dim strDate1 As String = str1(1) & "/" & str1(0) & "/" & str1(2)
                                        txtBox.Text = strDate1
                                    Else
                                        errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        'Exit For
                                        Continue For
                                    End If
                                    If Not IsDate(txtBox.Text) Then
                                        errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        txtBox.Text = str1(0) & "/" & str1(1) & "/" & str1(2)
                                        'Exit For
                                        Continue For
                                    Else
                                        txtBox.Text = Format(Convert.ToDateTime(txtBox.Text.ToString), "dd/MM/yy")
                                        Dim str As String() = Split(txtBox.Text, "/")
                                        Dim strDate As String = str(0).PadLeft(2, "0") & "/" & str(1).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")
                                        txtBox.Text = strDate
                                    End If
                                Else
                                    txtBox.Text = Trim(txtBox.Text)
                                    If txtBox.Text = "" Then

                                    Else
                                        Dim str1 As String() = Split(txtBox.Text, "/")
                                        If str1.Length = 3 Then
                                            Dim strDate1 As String = str1(1) & "/" & str1(0) & "/" & str1(2)
                                            txtBox.Text = strDate1
                                        Else
                                            errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            'Exit For
                                            Continue For
                                        End If
                                        If Not IsDate(txtBox.Text) Then
                                            errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            txtBox.Text = str1(0) & "/" & str1(1) & "/" & str1(2)
                                            'Exit For
                                            Continue For
                                        Else
                                            txtBox.Text = Format(Convert.ToDateTime(txtBox.Text.ToString), "dd/MM/yy")
                                            Dim str As String() = Split(txtBox.Text, "/")
                                            Dim strDate As String = str(0).PadLeft(2, "0") & "/" & str(1).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")
                                            txtBox.Text = strDate
                                        End If
                                    End If
                                End If
                                ' here is for time 
                            ElseIf ds.Rows(i).Item("datatype").ToString.ToUpper = "TIME" Then
                                If ds.Rows(i).Item("isrequired") = 1 Then
                                    Dim arr As String() = Split(txtBox.Text, ":")
                                    If arr.Length > 1 Then
                                        If (Not IsNumeric(arr(0)) Or Not IsNumeric(arr(1))) And arr.Length < 2 And IsNothing(Trim(txtBox.Text)) = True Then
                                            errorMsg &= "<br/>" & dispName & " is Mandatory"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            'Exit For
                                            Continue For
                                        End If
                                        If arr(0) > 23 And arr(0) < 0 Then
                                            errorMsg &= "<br/>" & dispName & " is Mandatory"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            'Exit For
                                            Continue For
                                        End If
                                        If arr(1) > 59 And arr(1) < 0 Then
                                            errorMsg &= "<br/>" & dispName & " is Mandatory"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            'Exit For
                                            Continue For
                                        End If
                                    End If
                                Else
                                    Dim arr As String() = Split(txtBox.Text, ":")
                                    If arr.Length > 1 Then
                                        If IsNothing(Trim(txtBox.Text)) Then
                                        ElseIf (Not IsNumeric(arr(0)) Or Not IsNumeric(arr(1))) Then
                                            errorMsg &= "<br/>" & dispName & " is Mandatory"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            'Exit For
                                            Continue For
                                        ElseIf arr(0) > 23 And arr(0) < 0 Then
                                            errorMsg &= "<br/>" & dispName & " is Mandatory"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            'Exit For
                                            Continue For
                                        ElseIf arr(1) > 59 And arr(1) < 0 Then
                                            errorMsg &= "<br/>" & dispName & " is Mandatory"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            'Exit For
                                            Continue For
                                        End If
                                    End If
                                End If
                            ElseIf ds.Rows(i).Item("datatype").ToString.ToUpper = "NEW DATETIME" Then
                                If ds.Rows(i).Item("isrequired") = 1 Then
                                    Dim str1 As String() = Split(txtBox.Text, "-")
                                    If str1.Length = 3 Then
                                        Dim strDate1 As String = str1(1) & "-" & str1(0) & "-" & str1(2)
                                        txtBox.Text = strDate1
                                    Else
                                        errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        ' Exit For
                                        Continue For
                                    End If
                                    If Not IsDate(txtBox.Text) Then
                                        errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        txtBox.Text = str1(0) & "-" & str1(1) & "-" & str1(2)
                                        'Exit For
                                        Continue For
                                    Else
                                        Dim str As String() = Split(txtBox.Text, "-")
                                        Dim dt As String() = Split(str(2), " ")
                                        txtBox.Text = Format(Convert.ToDateTime(str1(0) & "-" & str1(1) & "-" & dt(0)), "dd-MM-yy")
                                        txtBox.Text &= " " & dt(1)
                                        'Dim strDate As String = Str(0).PadLeft(2, "0") & "/" & Str(1).PadLeft(2, "0") & "/" & Str(2).PadLeft(2, "0")
                                        'txtBox.Text = strDate
                                    End If
                                Else
                                    Dim str1 As String() = Split(txtBox.Text, "-")
                                    If str1.Length = 3 Then
                                        Dim strDate1 As String = str1(1) & "-" & str1(0) & "-" & str1(2)
                                        txtBox.Text = strDate1
                                    Else
                                        errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        'Exit For
                                        Continue For
                                    End If
                                    If Not IsDate(txtBox.Text) Then
                                        errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        txtBox.Text = str1(0) & "-" & str1(1) & "-" & str1(2)
                                        'Exit For
                                        Continue For
                                    Else
                                        Dim str As String() = Split(txtBox.Text, "-")
                                        Dim dt As String() = Split(str(2), " ")
                                        txtBox.Text = Format(Convert.ToDateTime(str1(0) & "-" & str1(1) & "-" & dt(0)), "dd-MM-yy")
                                        txtBox.Text &= " " & dt(1)
                                        'Dim strDate As String = str(0).PadLeft(2, "0") & "/" & str(1).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")
                                        'txtBox.Text = strDate
                                    End If
                                End If
                            End If
                            '' taken to outside from above if by sunil on 23_apr_14
                            If ds.Rows(i).Item("datatype") = "Numeric" Then
                                If IsNumeric(txtBox.Text) = False Then
                                    errorMsg &= "<br/>" & " NUMERIC data at " & dispName & ","
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    'Exit For
                                    Continue For
                                Else
                                    If Not IsNothing(ds.Rows(i).Item("RoundOff")) Then
                                        Dim numberOfDecimalPlaces As Integer = Convert.ToString(ds.Rows(i).Item("RoundOff"))
                                        If numberOfDecimalPlaces <> -1 Then
                                            Dim before As Double = txtBox.Text
                                            Dim after As Double = Math.Round(before)
                                            Dim formatstring As String = String.Concat("{0:F", numberOfDecimalPlaces, "}")
                                            txtBox.Text = String.Format(formatstring, after)
                                        End If
                                    End If
                                End If
                                txtBox.Text = Replace(txtBox.Text, ",", "")
                            End If
                            If ds.Rows(i).Item("datatype") = "Text" Then 'shalini
                                Dim DropDown As String = ds.Rows(i).Item("dropdown").ToString()
                                If DropDown = "Uper Case" Then
                                    txtBox.Text = txtBox.Text.ToUpper()
                                ElseIf DropDown = "Lower Case" Then
                                    txtBox.Text = txtBox.Text.ToLower()
                                ElseIf DropDown = "Proper Case" Then
                                    txtBox.Text = StrConv(txtBox.Text, VbStrConv.ProperCase)
                                End If
                                If IsDBNull(ds.Rows(i).Item("isMail")) = True OrElse Trim(ds.Rows(i).Item("isMail")) = "" Then
                                Else
                                    If ds.Rows(i).Item("isMail") = "1" And ds.Rows(i).Item("isrequired").ToString() = 1 Then
                                        'Dim EmailRegEx As New Regex("^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$")
                                        If (ValidateEmail(txtBox.Text.Trim) = False) Then
                                            errorMsg &= "<br/> Please Enter Valid Email"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        End If
                                    ElseIf ds.Rows(i).Item("isMail") = "1" And ds.Rows(i).Item("isrequired").ToString() = 0 And txtBox.Text.Length > 1 Then
                                        'Dim EmailRegEx As New Regex("^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$")
                                        If (ValidateEmail(txtBox.Text.Trim) = False) Then
                                            errorMsg &= "<br/> Please Enter Valid Email"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        End If
                                    End If
                                End If
                            End If
                            'for GST No. Validation
                            If ds.Rows(i).Item("datatype") = "Text" Then
                                Dim DropDown As String = ds.Rows(i).Item("dropdown").ToString()
                                If DropDown = "Uper Case" Then
                                    txtBox.Text = txtBox.Text.ToUpper()
                                ElseIf DropDown = "Lower Case" Then
                                    txtBox.Text = txtBox.Text.ToLower()
                                ElseIf DropDown = "Proper Case" Then
                                    txtBox.Text = StrConv(txtBox.Text, VbStrConv.ProperCase)
                                End If
                                If IsDBNull(ds.Rows(i).Item("isValidGST")) = True OrElse Trim(ds.Rows(i).Item("isValidGST")) = "" Then
                                Else
                                    If ds.Rows(i).Item("isValidGST").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "1" Then
                                        If ds.Rows(i).Item("excludeGSTCondition").ToString().Length > 0 Then
                                            Dim exclcondition As String = ds.Rows(i).Item("excludeGSTCondition").ToString().ToUpper()
                                            Dim exclword As String() = exclcondition.Split(","c)
                                            Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                            If (strWord = False) And (GSTValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid GST No."
                                            End If
                                        Else
                                            If (GSTValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid GST No."
                                            End If
                                        End If
                                    ElseIf ds.Rows(i).Item("isValidGST").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "0" And txtBox.Text.Length > 1 Then
                                        If ds.Rows(i).Item("excludeGSTCondition").ToString().Length > 0 Then
                                            Dim exclcondition As String = ds.Rows(i).Item("excludeGSTCondition").ToString().ToUpper()
                                            Dim exclword As String() = exclcondition.Split(","c)
                                            Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                            If (strWord = False) And (GSTValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid GST No."
                                            End If
                                        Else
                                            If (GSTValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid GST No."
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                            'for PAN No. Validation
                            If ds.Rows(i).Item("datatype") = "Text" Then
                                Dim DropDown As String = ds.Rows(i).Item("dropdown").ToString()
                                If DropDown = "Uper Case" Then
                                    txtBox.Text = txtBox.Text.ToUpper()
                                ElseIf DropDown = "Lower Case" Then
                                    txtBox.Text = txtBox.Text.ToLower()
                                ElseIf DropDown = "Proper Case" Then
                                    txtBox.Text = StrConv(txtBox.Text, VbStrConv.ProperCase)
                                End If
                                If IsDBNull(ds.Rows(i).Item("isValidPAN")) = True OrElse Trim(ds.Rows(i).Item("isValidPAN")) = "" Then
                                Else
                                    If (ds.Rows(i).Item("isValidPAN").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "1") Then
                                        If ds.Rows(i).Item("excludePanCondition").ToString().Length > 0 Then
                                            Dim exclcondition As String = ds.Rows(i).Item("excludePanCondition").ToString().ToUpper()
                                            Dim exclword As String() = exclcondition.Split(","c)
                                            Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                            If (strWord = False) And (PanCardValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid PAN Card No."
                                            End If
                                        Else
                                            If (PanCardValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid PAN Card No."
                                            End If
                                        End If
                                    ElseIf ds.Rows(i).Item("isValidPAN").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "0" And txtBox.Text.Length > 1 Then
                                        If ds.Rows(i).Item("excludePanCondition").ToString().Length > 0 Then
                                            Dim exclcondition As String = ds.Rows(i).Item("excludePanCondition").ToString().ToUpper()
                                            Dim exclword As String() = exclcondition.Split(","c)
                                            Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                            If (strWord = False) And (PanCardValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid PAN Card No."
                                            End If
                                        Else
                                            If (PanCardValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid PAN Card No."
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                            ' for IFSC code validation
                            If ds.Rows(i).Item("datatype") = "Text" Then
                                Dim DropDown As String = ds.Rows(i).Item("dropdown").ToString()
                                If DropDown = "Uper Case" Then
                                    txtBox.Text = txtBox.Text.ToUpper()
                                ElseIf DropDown = "Lower Case" Then
                                    txtBox.Text = txtBox.Text.ToLower()
                                ElseIf DropDown = "Proper Case" Then
                                    txtBox.Text = StrConv(txtBox.Text, VbStrConv.ProperCase)
                                End If
                                If IsDBNull(ds.Rows(i).Item("isValidIFSC")) = True OrElse Trim(ds.Rows(i).Item("isValidIFSC")) = "" Then
                                Else
                                    If ds.Rows(i).Item("isValidIFSC").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "1" Then
                                        If ds.Rows(i).Item("excludeIFSCCondition").ToString().Length > 0 Then
                                            Dim exclcondition As String = ds.Rows(i).Item("excludeIFSCCondition").ToString().ToUpper()
                                            Dim exclword As String() = exclcondition.Split(","c)
                                            Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                            If (strWord = False) And (IFSCValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid IFSC Code"
                                            End If
                                        Else
                                            If (IFSCValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid IFSC Code"
                                            End If
                                        End If
                                    ElseIf ds.Rows(i).Item("isValidIFSC").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "0" And txtBox.Text.Length > 1 Then
                                        If ds.Rows(i).Item("excludeIFSCCondition").ToString().Length > 0 Then
                                            Dim exclcondition As String = ds.Rows(i).Item("excludeIFSCCondition").ToString().ToUpper()
                                            Dim exclword As String() = exclcondition.Split(","c)
                                            Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                            If (strWord = False) And (IFSCValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid IFSC Code"
                                            End If
                                        Else
                                            If (IFSCValidation(txtBox.Text.Trim) = False) Then
                                                errorMsg &= "<br/> Please Enter Valid IFSC Code"
                                            End If
                                        End If
                                    End If
                                End If
                            End If

                            If txtBox.Text.Length < CInt(ds.Rows(i).Item("minlen").ToString) And txtBox.Text.Length > 0 And ds.Rows(i).Item("datatype").ToString.ToUpper <> "DATETIME" Then
                                errorMsg &= "<br/>" & "Minimum  " & ds.Rows(i).Item("minlen").ToString() & " character in " & dispName & ","
                                If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                ' Exit For
                                Continue For
                            End If
                            If txtBox.Text.Length > CInt(ds.Rows(i).Item("maxlen").ToString) And txtBox.Text.Length > 0 And ds.Rows(i).Item("datatype").ToString.ToUpper <> "DATETIME" Then
                                errorMsg &= "<br/>" & "Maximum  " & ds.Rows(i).Item("maxlen").ToString() & " character in " & dispName & ","
                                If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                'Exit For
                                Continue For
                            End If
                            If txtBox.Text.Trim() <> "" Then
                                If ds.Rows(i).Item("isunique").ToString() = "1" Then
                                    If checkduplicate(qryType, tid, ds.Rows(i).Item("DBTABLENAME").ToString, ds.Rows(i).Item("Fieldmapping").ToString(), txtBox.Text, ds.Rows(i).Item("DOCUMENTTYPE").ToString) Then
                                        errorMsg &= "<br/>" & "unique " & dispName & " ,"
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        'Exit For
                                        Continue For
                                    End If
                                End If
                            End If
                        End If
                        If qryType = "ADD" Then

                            If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                            End If
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & getSafeString(txtBox.Text) & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & getSafeString(txtBox.Text) & "',"
                        End If

                    Case "DROP DOWN", "AUTOCOMPLETE", "LOOKUPDDL"
                        If ds.Rows(i).Item("FieldType").ToString().ToUpper() = "AUTOCOMPLETE" Then
                            Dim txtbox As HiddenField = CType(pnlFields.FindControl("HDN" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                            Dim txtboxval As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            If txtboxval IsNot Nothing And txtbox IsNot Nothing Then
                                If txtboxval.CssClass.ToString().ToUpper <> "INVISIBLE" Then

                                    If ds.Rows(i).Item("isrequired").ToString() = 1 Then
                                        If txtbox.Value.ToString.Length < 1 Then
                                            errorMsg &= "<br/>" & dispName & " is Mandatory"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            Continue For
                                        End If
                                    End If
                                End If
                            End If
                            If txtbox IsNot Nothing Then
                                If qryType = "ADD" Then
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                    If txtbox.Value = String.Empty Then
                                        dataField &= "NULL,"
                                    Else
                                        dataField &= "'" & txtbox.Value & "',"
                                    End If
                                Else
                                    ' qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtbox.Value & "',"
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & IIf(txtbox.Value.ToString.Length = 0, "0", txtbox.Value) & "',"
                                End If
                            End If

                        Else
                            Dim txtBox As DropDownList = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                            If txtBox IsNot Nothing Then

                                If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.ToUpper = "SELECT" And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                        errorMsg &= "<br/>" & dispName & " is Mandatory"
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        Continue For

                                    End If
                                End If
                                If qryType = "ADD" Then
                                    If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                        updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                    If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                        If txtBox.SelectedItem.Text.ToUpper() = "SELECT" Then
                                            dataField &= "'',"  '' new by sp 10_may
                                        Else
                                            dataField &= "'" & txtBox.SelectedItem.Text & "',"
                                        End If
                                    Else
                                        Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                        If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                            'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                            If fldpair(0).ToString().ToUpper.Trim() = "SELECT" Then
                                                dataField &= "null,"
                                            Else
                                                dataField &= "'" & fldpair(0).ToString() & "',"
                                            End If
                                        Else
                                            If fldpair(0).ToString().ToUpper.Trim() = "SELECT" Then
                                                dataField &= "null,"
                                            Else
                                                dataField &= "'" & fldpair(0).ToString() & "',"
                                            End If
                                            ''dataField &= "'" & txtBox.SelectedValue.ToString() & "',"
                                            'dataField &= "'" & fldpair(0).ToString() & "',"
                                        End If
                                    End If



                                    'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                    'If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                    '    'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                    '    dataField &= "'" & fldpair(0).ToString() & "',"
                                    'Else
                                    '    'dataField &= "'" & txtBox.SelectedValue.ToString() & "',"
                                    '    dataField &= "'" & fldpair(0).ToString() & "',"
                                    'End If
                                    'End If
                                Else
                                    If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                        If txtBox.SelectedItem.Text.ToUpper() = "SELECT" Then
                                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'',"  '' new by sp 10_may
                                        Else
                                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.SelectedItem.Text & "',"
                                        End If
                                    Else
                                        Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                        If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                            'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & fldpair(0).ToString() & "',"
                                        Else
                                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & fldpair(0).ToString() & "',"
                                            'qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.SelectedItem.Value & "',"
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    Case "CHECKBOX LIST"
                        Dim txtBox As CheckBoxList = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBoxList)
                        If txtBox IsNot Nothing Then
                            If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem Is Nothing Then
                                    errorMsg &= "<br/>" & dispName & " is Mandatory"
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    Continue For
                                End If
                            End If
                        End If
                        Dim livalue As String = ""
                        If txtBox IsNot Nothing Then
                            If qryType = "ADD" Then
                                If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                    updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Text & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                    dataField &= "'" & livalue & "',"
                                ElseIf UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "CUSTOM VALUED" Then
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    If livalue.Length > 0 Then
                                        livalue = Left(livalue, livalue.Length - 1)
                                    End If
                                    dataField &= "'" & livalue & "',"

                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    If livalue.Length > 0 Then
                                        livalue = Left(livalue, livalue.Length - 1)
                                    End If
                                    dataField &= "'" & livalue & "',"
                                End If
                            Else
                                If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Text & ","
                                        End If
                                    Next
                                    If livalue.Length > 0 Then
                                        livalue = Left(livalue, livalue.Length - 1)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                                ElseIf UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "CUSTOM VALUED" Then
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    If livalue.Length > 0 Then
                                        livalue = Left(livalue, livalue.Length - 1)
                                    End If
                                    dataField &= "'" & livalue & "',"
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    If livalue.Length > 0 Then
                                        livalue = Left(livalue, livalue.Length - 1)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                                End If
                            End If
                        End If

                    Case "LIST BOX"
                        Dim txtBox As ListBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)
                        If txtBox IsNot Nothing Then
                            If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                                errorMsg &= "<br/>" & dispName & " is Mandatory"
                                If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                Continue For
                            End If
                            Dim livalue As String = ""
                            If qryType = "ADD" Then

                                If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                    updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                                End If


                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Text & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                    dataField &= "'" & livalue & "',"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                    dataField &= "'" & livalue & "',"
                                End If
                            Else
                                If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Text & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                                End If
                            End If
                        End If


                    Case "TEXT AREA"
                        Dim RegExObject As New Regex("^([a-zA-Z0-9\n|\r|\r\n  ,\./<>\?;':""[\]\\{}\|`~!@#\$%\^&\*()-_=\+]*)$")
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        Dim datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        If txtBox IsNot Nothing Then
                            If datatype.ToUpper = "MSGBODY" Then
                                If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                                        errorMsg &= "<br/>" & dispName & " is Mandatory"
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        Continue For
                                    End If
                                End If
                            Else
                                If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                                        errorMsg &= "<br/>" & dispName & " is Mandatory"
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        Continue For
                                    ElseIf (RegExObject.IsMatch(txtBox.Text.Trim) = False) Then
                                        errorMsg &= "<br/>" & dispName & " Enter Valid Text"
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        Continue For
                                    End If
                                End If
                            End If
                            ''Code for HTML encoder''
                            If Regex.IsMatch(txtBox.Text, "<.*?>") = True Then
                                txtBox.Text = HttpContext.Current.Server.HtmlEncode(txtBox.Text)
                            End If

                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & getSafeString(txtBox.Text) & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & getSafeString(txtBox.Text) & "',"
                            End If
                            'Mayank Added for Check Box for save and update check box field
                        End If

                    Case "CHECK BOX"
                        Dim chkbox As CheckBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBox)
                        If chkbox IsNot Nothing Then
                            If chkbox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And chkbox.Checked = False Then
                                    errorMsg &= "<br/>" & dispName & " is Mandatory"
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    Continue For
                                End If
                            End If
                        End If
                        Dim strval As String
                        If chkbox IsNot Nothing Then
                            If (chkbox.Checked = True) Then
                                strval = "Yes"
                            Else
                                strval = "No"
                            End If
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & strval & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & strval & "',"
                        End If
                    Case "FILE UPLOADER"
                        Dim txtBox As FileUpload = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), FileUpload)
                        '' new added for mel.file upload vulnarebility   17_may_17 
                        If Not IsNothing(txtBox) Then
                            If Not IsNothing(txtBox.PostedFile) Then
                                Dim fileName As String = System.IO.Path.GetExtension(txtBox.PostedFile.FileName)
                                If fileName <> "" Then
                                    Dim currentMimeType As String = txtBox.PostedFile.ContentType.ToString()
                                    ' This function used to check file exntension--date:-29-04-2021--In IT Meeting.
                                    If Not (IsFileTypeAllowed(fileName)) Then
                                        errorMsg &= "<br/>" & dispName & " file mime type is not allowed"
                                        If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        Continue For
                                    End If

                                    If txtBox.PostedFile.FileName.ToString().Contains(":") Then
                                        errorMsg &= "<br/>" & dispName & " file name : is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains("*") Then
                                        errorMsg &= "<br/>" & dispName & " file name * is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains("?") Then
                                        errorMsg &= "<br/>" & dispName & " file name ? is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains("<") Then
                                        errorMsg &= "<br/>" & dispName & " file name < is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains(">") Then
                                        errorMsg &= "<br/>" & dispName & " file name > is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains("|") Then
                                        errorMsg &= "<br/>" & dispName & " file name | is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains("/") Then
                                        errorMsg &= "<br/>" & dispName & " file name / is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains("\\") Then
                                        errorMsg &= "<br/>" & dispName & " file name \\ is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains("%") Then
                                        errorMsg &= "<br/>" & dispName & " file name % is not allowed"
                                    ElseIf txtBox.PostedFile.FileName.ToString().Contains("""") Then
                                        errorMsg &= "<br/>" & dispName & " file name double quote is not allowed"
                                    End If
                                End If
                            End If
                        End If
                        '' new added for mel.file upload vulnarebility  17_may_17
                        'lable to show File text
                        Dim lblfile As Label = CType(pnlFields.FindControl("lblf" & ds.Rows(i).Item("FieldID").ToString()), Label)
                        'hidden field to hold file name
                        Dim hdn As HiddenField = CType(pnlFields.FindControl("hdnf" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                        'flag hidden field whether file is from database or new file added by user
                        Dim hdnflg As HiddenField = CType(pnlFields.FindControl("hdnflg_" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                        lblfile.Text = hdn.Value

                        If qryType = "ADD" Then
                            If lblfile.Text.Trim() <> "" And hdnflg.Value <> "0" Then
                                Dim FN As String = ""
                                Dim ext As String = ""
                                Dim flag As Integer = 0
                                Dim sourceFile As String = HttpContext.Current.Server.MapPath("~/DOCS/temp/" + lblfile.Text)
                                Dim finfo As New FileInfo(HttpContext.Current.Server.MapPath("~/DOCS/temp/" + lblfile.Text))
                                Dim curFileSize As Integer = finfo.Length
                                fileSize = fileSize + curFileSize
                                Try
                                    FN = Left(lblfile.Text, lblfile.Text.LastIndexOf("."))
                                    FN = getSafeString(FN)
                                    ext = lblfile.Text.Substring(lblfile.Text.LastIndexOf("."), lblfile.Text.Length - lblfile.Text.LastIndexOf("."))
                                    If File.Exists(HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext) Then
                                        FN = FN & ds.Rows(i).Item("FieldID").ToString()
                                    End If
                                    If IsDBNull(ds.Rows(i).Item("UploadAllowedTypes")) = True Then
                                    Else
                                        Dim type As String() = Split(ds.Rows(i).Item("UploadAllowedTypes").ToString(), ",")
                                        For k As Integer = 0 To type.Length - 1
                                            If type(k) = ext Then
                                                flag = 0 ' if file type is match then passed and saved into DB
                                                Exit For
                                            Else
                                                flag = 1 ' check for type of the not matched 
                                            End If
                                        Next
                                        If flag = 0 Then
                                        Else
                                            errorMsg &= "<br/>" & dispName & " file type is not allowed"   ' upload file is not matched
                                        End If
                                    End If
                                    dataField &= "'" & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext & "',"
                                    If Not File.Exists(HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext) Then
                                        File.Copy(sourceFile, HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "," ' 28_may_14
                                Catch ex As Exception
                                    Dim ConStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString.ToString()
                                    Dim con As New SqlConnection(ConStr)
                                    Dim oda As New SqlDataAdapter("InsertErrorMess", con)
                                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                    oda.SelectCommand.Parameters.AddWithValue("uid", HttpContext.Current.Session("UID"))
                                    oda.SelectCommand.Parameters.AddWithValue("eid", HttpContext.Current.Session("EID"))
                                    oda.SelectCommand.Parameters.AddWithValue("Messheading", ex.Message)
                                    oda.SelectCommand.Parameters.AddWithValue("ErrorMess", "Error In File Reading Temp To Entity Folder")
                                    If con.State <> ConnectionState.Open Then
                                        con.Open()
                                    End If
                                    oda.SelectCommand.ExecuteNonQuery()
                                    con.Close()
                                    oda.Dispose()
                                End Try


                            ElseIf lblfile.Text IsNot "" And hdnflg.Value IsNot "1" Then
                                dataField &= "'" & HttpContext.Current.Session("EID").ToString() & "/" & lblfile.Text.Replace("<br/>", "") & "',"
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            Else
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    errorMsg &= "<br/>" & dispName & " is Mandatory"
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    Continue For
                                Else
                                    dataField &= "'',"
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                End If
                            End If
                        Else
                            If lblfile.Text.Trim() <> "" And hdnflg.Value <> "0" Then
                                Dim FN As String = ""
                                Dim ext As String = ""
                                Dim flag As Integer = 0
                                Dim sourceFile As String = HttpContext.Current.Server.MapPath("~/DOCS/temp/" + lblfile.Text)
                                Dim finfo As New FileInfo(HttpContext.Current.Server.MapPath("~/DOCS/temp/" + lblfile.Text))
                                Try
                                    FN = Left(lblfile.Text, lblfile.Text.LastIndexOf("."))
                                    FN = getSafeString(FN)
                                    ext = lblfile.Text.Substring(lblfile.Text.LastIndexOf("."), lblfile.Text.Length - lblfile.Text.LastIndexOf("."))
                                    If File.Exists(HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext) Then
                                        FN = FN & ds.Rows(i).Item("FieldID").ToString()
                                    End If
                                    If IsDBNull(ds.Rows(i).Item("UploadAllowedTypes")) = True Then
                                    Else
                                        Dim type As String() = Split(ds.Rows(i).Item("UploadAllowedTypes").ToString(), ",")
                                        For k As Integer = 0 To type.Length - 1
                                            If type(k) = ext Then
                                                flag = 0 ' if file type is match then passed and saved into DB
                                                Exit For
                                            Else
                                                flag = 1 ' check for type of the not matched 
                                            End If
                                        Next
                                        If flag = 0 Then
                                        Else
                                            errorMsg &= "<br/>" & dispName & " file extesion not matched  " & ","   ' upload file is not matched
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            Continue For
                                        End If
                                    End If
                                    dataField = "'" & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext & "',"
                                    If Not File.Exists(HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext) Then
                                        File.Copy(sourceFile, HttpContext.Current.Server.MapPath("~/DOCS/" & HttpContext.Current.Session("EID").ToString()) & "/" & FN & ext)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & dataField    ' 28_may_14
                                Catch ex As Exception
                                    Dim ConStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString.ToString()
                                    Dim con As New SqlConnection(ConStr)
                                    Dim oda As New SqlDataAdapter("InsertErrorMess", con)
                                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                    oda.SelectCommand.Parameters.AddWithValue("uid", HttpContext.Current.Session("UID"))
                                    oda.SelectCommand.Parameters.AddWithValue("eid", HttpContext.Current.Session("EID"))
                                    oda.SelectCommand.Parameters.AddWithValue("Messheading", ex.Message)
                                    oda.SelectCommand.Parameters.AddWithValue("ErrorMess", "Error In File Reading Draft Temp To Entity Folder")
                                    If con.State <> ConnectionState.Open Then
                                        con.Open()
                                    End If
                                    oda.SelectCommand.ExecuteNonQuery()
                                    con.Close()
                                    oda.Dispose()
                                End Try



                            ElseIf lblfile.Text <> "" And hdnflg.Value <> "1" Then
                                'Commented By Manvendra 04-12-2019
                                dataField = "'" & HttpContext.Current.Session("EID").ToString() & "/" & lblfile.Text.Replace("<br/>", "") & "',"
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & dataField
                            Else
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    errorMsg &= "<br/>" & dispName & " is Mandatory"
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    Continue For
                                Else
                                    dataField = "''"
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "='" & "',"
                                End If
                            End If
                        End If
                    Case "GEO POINT"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If txtBox IsNot Nothing Then
                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.Text.ToString() & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text.ToString() & "',"
                            End If
                        End If
                    Case "GEO FENCE"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If txtBox IsNot Nothing Then
                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.Text.ToString() & "," & ds.Rows(i).Item("defaultfieldval").ToString() & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text.ToString() & "," & ds.Rows(i).Item("defaultfieldval").ToString() & "',"
                            End If
                        End If
                    Case "ADVANCE FORMULA"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If txtBox IsNot Nothing Then
                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.Text.ToString() & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text.ToString() & "',"
                            End If
                        End If
                    Case "LOOKUP"
                        Dim ctrl = pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString())
                        If Not ctrl Is Nothing Then
                            If ctrl.GetType Is GetType(System.Web.UI.WebControls.TextBox) Then
                                Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                                'Validation for Mandatory
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    errorMsg &= "<br/>" & dispName & " is Mandatory"
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    Continue For
                                End If
                                '' new code for checking min and max len on lookup  by sunil - 16-june-14 - starts
                                If txtBox.Text.Length < CInt(ds.Rows(i).Item("minlen").ToString) And txtBox.Text.Length > 0 And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    errorMsg &= "<br/>" & "Minimum  " & ds.Rows(i).Item("minlen").ToString() & " character in " & dispName & ","
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    Continue For
                                End If
                                If txtBox.Text.Length > CInt(ds.Rows(i).Item("maxlen").ToString) And txtBox.Text.Length > 0 And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    errorMsg &= "<br/>" & "Maximum  " & ds.Rows(i).Item("maxlen").ToString() & " character in " & dispName & ","
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    Continue For
                                End If
                                '' new code for checking min and max len on lookup  by sunil - 16-june-14 - ends
                                If txtBox.Text.Trim() <> "" Then
                                    If ds.Rows(i).Item("isunique").ToString() = "1" And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                        txtBox.Text = getSafeString(txtBox.Text)
                                        If checkduplicate(qryType, tid, ds.Rows(i).Item("DBTABLENAME").ToString, ds.Rows(i).Item("Fieldmapping").ToString(), txtBox.Text, ds.Rows(i).Item("DOCUMENTTYPE").ToString) Then
                                            errorMsg &= "<br/>" & "unique " & dispName & " ,"
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            Continue For
                                        End If
                                    End If
                                End If
                                ''''End
                                ''  by sunil on 27th for lookup date validity
                                If ds.Rows(i).Item("datatype") = "Datetime" Then
                                    If ds.Rows(i).Item("isrequired") = 1 And txtBox.Text.Trim() <> "" Then
                                        Dim str1 As String() = Split(txtBox.Text, "/")
                                        If str1.Length = 3 Then
                                            Dim strDate1 As String = str1(1) & "/" & str1(0) & "/" & str1(2)
                                            txtBox.Text = strDate1
                                        Else
                                            errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            Continue For
                                        End If
                                        If Not IsDate(txtBox.Text) Then
                                            errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                            If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            Continue For
                                            txtBox.Text = str1(0) & "/" & str1(1) & "/" & str1(2)
                                            'Exit For
                                        Else
                                            txtBox.Text = Format(Convert.ToDateTime(txtBox.Text.ToString), "dd/MM/yy")
                                            Dim str As String() = Split(txtBox.Text, "/")
                                            Dim strDate As String = str(0).PadLeft(2, "0") & "/" & str(1).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")
                                            txtBox.Text = strDate
                                        End If
                                    Else
                                        txtBox.Text = Trim(txtBox.Text)
                                        If txtBox.Text = "" Then
                                        Else
                                            Dim str1 As String() = Split(txtBox.Text, "/")
                                            If str1.Length = 3 Then
                                                Dim strDate1 As String = str1(1) & "/" & str1(0) & "/" & str1(2)
                                                txtBox.Text = strDate1
                                            Else
                                                errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                                If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                                Continue For
                                            End If
                                            If Not IsDate(txtBox.Text) Then
                                                errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                                If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                                Continue For
                                                txtBox.Text = str1(0) & "/" & str1(1) & "/" & str1(2)
                                                'Exit For
                                            Else
                                                txtBox.Text = Format(Convert.ToDateTime(txtBox.Text.ToString), "dd/MM/yy")
                                                Dim str As String() = Split(txtBox.Text, "/")
                                                Dim strDate As String = str(0).PadLeft(2, "0") & "/" & str(1).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")
                                                txtBox.Text = strDate
                                            End If
                                        End If
                                    End If
                                End If
                                '' upto here by sunil
                                If qryType = "ADD" Then

                                    If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                        updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                    dataField &= "'" & getSafeString(txtBox.Text) & "',"
                                Else
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                                End If
                                'for GST No. Validation
                                If ds.Rows(i).Item("datatype") = "Text" Then
                                    Dim DropDown As String = ds.Rows(i).Item("dropdown").ToString()
                                    If DropDown = "Uper Case" Then
                                        txtBox.Text = txtBox.Text.ToUpper()
                                    ElseIf DropDown = "Lower Case" Then
                                        txtBox.Text = txtBox.Text.ToLower()
                                    ElseIf DropDown = "Proper Case" Then
                                        txtBox.Text = StrConv(txtBox.Text, VbStrConv.ProperCase)
                                    End If
                                    If IsDBNull(ds.Rows(i).Item("isValidGST")) = True OrElse Trim(ds.Rows(i).Item("isValidGST")) = "" Then
                                    Else
                                        If ds.Rows(i).Item("isValidGST").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "1" Then
                                            If ds.Rows(i).Item("excludeGSTCondition").ToString().Length > 0 Then
                                                Dim exclcondition As String = ds.Rows(i).Item("excludeGSTCondition").ToString().ToUpper()
                                                Dim exclword As String() = exclcondition.Split(","c)
                                                Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                                If (strWord = False) And (GSTValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid GST No."
                                                End If
                                            Else
                                                If (GSTValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid GST No."
                                                End If
                                            End If
                                        ElseIf ds.Rows(i).Item("isValidGST").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "0" And txtBox.Text.Length > 1 Then
                                            If ds.Rows(i).Item("excludeGSTCondition").ToString().Length > 0 Then
                                                Dim exclcondition As String = ds.Rows(i).Item("excludeGSTCondition").ToString().ToUpper()
                                                Dim exclword As String() = exclcondition.Split(","c)
                                                Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                                If (strWord = False) And (GSTValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid GST No."
                                                End If
                                            Else
                                                If (GSTValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid GST No."
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                                'for PAN No. Validation
                                If ds.Rows(i).Item("datatype") = "Text" Then
                                    Dim DropDown As String = ds.Rows(i).Item("dropdown").ToString()
                                    If DropDown = "Uper Case" Then
                                        txtBox.Text = txtBox.Text.ToUpper()
                                    ElseIf DropDown = "Lower Case" Then
                                        txtBox.Text = txtBox.Text.ToLower()
                                    ElseIf DropDown = "Proper Case" Then
                                        txtBox.Text = StrConv(txtBox.Text, VbStrConv.ProperCase)
                                    End If
                                    If IsDBNull(ds.Rows(i).Item("isValidPAN")) = True OrElse Trim(ds.Rows(i).Item("isValidPAN")) = "" Then
                                    Else
                                        If (ds.Rows(i).Item("isValidPAN").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "1") Then
                                            If ds.Rows(i).Item("excludePanCondition").ToString().Length > 0 Then
                                                Dim exclcondition As String = ds.Rows(i).Item("excludePanCondition").ToString().ToUpper()
                                                Dim exclword As String() = exclcondition.Split(","c)
                                                Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                                If (strWord = False) And (PanCardValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid PAN Card No."
                                                End If
                                            Else
                                                If (PanCardValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid PAN Card No."
                                                End If
                                            End If
                                        ElseIf ds.Rows(i).Item("isValidPAN").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "0" And txtBox.Text.Length > 1 Then
                                            If ds.Rows(i).Item("excludePanCondition").ToString().Length > 0 Then
                                                Dim exclcondition As String = ds.Rows(i).Item("excludePanCondition").ToString().ToUpper()
                                                Dim exclword As String() = exclcondition.Split(","c)
                                                Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                                If (strWord = False) And (PanCardValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid PAN Card No."
                                                End If
                                            Else
                                                If (PanCardValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid PAN Card No."
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                                ' for IFSC code validation
                                If ds.Rows(i).Item("datatype") = "Text" Then
                                    Dim DropDown As String = ds.Rows(i).Item("dropdown").ToString()
                                    If DropDown = "Uper Case" Then
                                        txtBox.Text = txtBox.Text.ToUpper()
                                    ElseIf DropDown = "Lower Case" Then
                                        txtBox.Text = txtBox.Text.ToLower()
                                    ElseIf DropDown = "Proper Case" Then
                                        txtBox.Text = StrConv(txtBox.Text, VbStrConv.ProperCase)
                                    End If
                                    If IsDBNull(ds.Rows(i).Item("isValidIFSC")) = True OrElse Trim(ds.Rows(i).Item("isValidIFSC")) = "" Then
                                    Else
                                        If ds.Rows(i).Item("isValidIFSC").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "1" Then
                                            If ds.Rows(i).Item("excludeIFSCCondition").ToString().Length > 0 Then
                                                Dim exclcondition As String = ds.Rows(i).Item("excludeIFSCCondition").ToString().ToUpper()
                                                Dim exclword As String() = exclcondition.Split(","c)
                                                Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                                If (strWord = False) And (IFSCValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid IFSC Code"
                                                End If
                                            Else
                                                If (IFSCValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid IFSC Code"
                                                End If
                                            End If
                                        ElseIf ds.Rows(i).Item("isValidIFSC").ToString() = "1" And ds.Rows(i).Item("isrequired").ToString() = "0" And txtBox.Text.Length > 1 Then
                                            If ds.Rows(i).Item("excludeIFSCCondition").ToString().Length > 0 Then
                                                Dim exclcondition As String = ds.Rows(i).Item("excludeIFSCCondition").ToString().ToUpper()
                                                Dim exclword As String() = exclcondition.Split(","c)
                                                Dim strWord As Boolean = exclword.Contains(txtBox.Text.Trim().ToUpper())
                                                If (strWord = False) And (IFSCValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid IFSC Code"
                                                End If
                                            Else
                                                If (IFSCValidation(txtBox.Text.Trim) = False) Then
                                                    errorMsg &= "<br/> Please Enter Valid IFSC Code"
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            Else
                                Dim chkBox As CheckBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBox)
                                'Validation for Mandatory
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And chkBox.Checked = False Then
                                    errorMsg &= "<br/>" & dispName & " is Mandatory"
                                    If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                End If
                                '' new code for checking min and max len on lookup  by sunil - 16-june-14 - starts

                                Dim chkval As String = ""
                                If chkBox.Checked Then
                                    chkval = "Yes"
                                Else
                                    chkval = "No"
                                End If
                                If qryType = "ADD" Then

                                    If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                        updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), chkval, pnlFields)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                    dataField &= "'" & chkval & "',"
                                Else
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & chkval & "',"
                                End If
                            End If
                        End If


                    Case "CALCULATIVE FIELD"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        If txtBox IsNot Nothing Then
                            If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                                errorMsg &= "<br/>" & dispName & " is Mandatory"
                                If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                Continue For
                            End If
                            If qryType = "ADD" Then

                                If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                    updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                                End If

                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.Text & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                            End If
                        End If

                    Case "CHILD ITEM TOTAL"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If txtBox IsNot Nothing Then
                            If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                            End If

                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.Text & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                            End If
                        End If

                    Case "CHILD ITEM MAX"  ' by sunil 04_jul_14
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If txtBox IsNot Nothing Then
                            If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                            End If

                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.Text & "',"
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                            End If
                        End If

                    Case "SELF REFERENCE"
                        Dim txtBox As Menu = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), Menu)
                        If txtBox IsNot Nothing Then
                            If qryType = "ADD" Then
                                If txtBox.SelectedItem.Text Is Nothing Or txtBox.SelectedValue = "0" Then
                                Else
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                    dataField &= "'" & txtBox.SelectedItem.Value & "',"
                                End If
                            Else
                                'qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                            End If
                        End If

                    Case "PARENT FIELD"
                        Dim txtBox As Menu = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), Menu)
                        If txtBox IsNot Nothing Then
                            If qryType = "ADD" Then
                                If txtBox.SelectedItem.Text Is Nothing Or txtBox.SelectedValue = "0" Then
                                Else
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                    dataField &= "'" & txtBox.SelectedItem.Value & "',"
                                End If
                            Else
                                'qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                            End If
                        End If

                End Select
            Next
        End If
        '' changed/added below by sunil on 01-11-13
        '' for skipping doc validation on amendment nature/edit

        'allowedSize = allowedSize + Val(ds.Rows(i).Item("AttahcedFileSize").tostrign()) * 1024

        If flagFsize = 0 Then  ' check for file size not more than given size at form label By BALLI
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim oda As New SqlDataAdapter("", con)
            Try
                oda.SelectCommand.CommandText = "select * from MMM_MST_Forms where eid='" & HttpContext.Current.Session("EID") & "' and formname='" & ds.Rows(0).Item("documenttype").ToString() & "' "
                Dim dt As New DataTable
                oda.Fill(dt)
                If IsDBNull(dt.Rows(0).Item("AttahcedFileSize")) = True Or Val(dt.Rows(0).Item("AttahcedFileSize").ToString()) = 0 Then
                Else
                    allowedSize = Val(dt.Rows(0).Item("AttahcedFileSize").ToString()) * 1024 * 1024  ' converting MB into Bytes
                    HttpContext.Current.Session("FileSize") = Val(HttpContext.Current.Session("FileSize")) + fileSize  ' initializing session that will use in document page for checking the size of form is greater than allowed size or not 
                    If Val(HttpContext.Current.Session("FileSize")) > allowedSize Then
                        errorMsg = "Please note your attachment cannot be uploaded as it exceeds prescribed limit. Please ensure that file size does not exceed '" & Val(dt.Rows(0).Item("AttahcedFileSize").ToString()) & "' MB and try again   "
                        HttpContext.Current.Session("FileSize") = Nothing
                        Return errorMsg
                        Exit Function
                    Else
                    End If
                End If
            Catch ex As Exception
            Finally
                con.Close()
                oda.Dispose()
            End Try
        End If
        Dim CurDocNat As String = "CREATE"
        If HttpContext.Current.Session("DOCSTATUS") <> Nothing Then
            If HttpContext.Current.Session("DOCSTATUS") = "MODIFY" Then
                CurDocNat = "MODIFY"
            ElseIf HttpContext.Current.Session("DOCSTATUS") = "SPLIT" Then
                CurDocNat = "SPLIT"
            End If
            If HttpContext.Current.Session("ACTION") <> Nothing Then
                If HttpContext.Current.Session("ACTION") = "EDIT" And HttpContext.Current.Session("DOCSTATUS") <> "SPLIT" And HttpContext.Current.Session("DOCSTATUS") <> "MODIFY" Then
                    CurDocNat = "CREATE"
                End If
            End If

        Else

            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim oda As SqlDataAdapter = New SqlDataAdapter("select curdocnature  from mmm_mst_doc where tid=" & tid, con)
            oda.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable
            oda.Fill(dt)
            If dt.Rows.Count <> 0 Then
                CurDocNat = dt.Rows(0).Item("curDocNature").ToString()
            End If
            con.Close()
            oda.Dispose()
            dt.Dispose()
        End If

        If ds.Rows.Count > 0 Then
            Dim str As String = validateForm(ds.Rows(0).Item("Documenttype").ToString, HttpContext.Current.Session("EID"), pnlFields, ds, qryType, tid, CurDocNat)
            If str.Length > 5 Then
                str = "Please " & str
                Return Left(str, Len(str) - 0)
            End If
        End If
        'Code By Ajeet kumar For Composit unique Key
        Dim UniqueKey As String = ""
        Dim DocumentType As String = ""
        Dim PDocumentType As String = ""
        'uncomment
        If ds.Rows.Count > 0 Then
            Try
                Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                Dim dsF As New DataSet()
                DocumentType = Convert.ToString(ds.Rows(0).Item("DocumentType"))
                PDocumentType = DocumentType
                Dim Sql As String = "select formname,formsource,eventname  from mmm_mst_forms where eid=" & HttpContext.Current.Session("EID") & " and formname='" & DocumentType & "'"
                Using con1 = New SqlConnection(conStr1)
                    Using da As New SqlDataAdapter(Sql, con1)
                        con1.Open()
                        da.Fill(dsF)
                        Dim FormSource = dsF.Tables(0).Rows(0).Item("formsource").ToString.ToUpper.Trim  '= "ACTION DRIVEN"
                        If FormSource = "ACTION DRIVEN" Then
                            PDocumentType = dsF.Tables(0).Rows(0).Item("eventname").ToString.Trim
                        End If
                    End Using
                End Using
                UniqueKey = Convert.ToString(ds.Rows(0).Item("UniqueKeys"))
            Catch ex As Exception
                Throw
            End Try
            If Not String.IsNullOrEmpty(UniqueKey.Trim) And (errorMsg.Length < 24) Then
                'unique check validation will goes from here 
                Dim Message As String = ""
                Dim ret = CheckUniqueKey(ds, pnlFields, DocumentType, PDocumentType, Message, tid)
                If ret = False Then
                    Return Message
                    Exit Function
                End If
            End If
        End If

        If errorMsg.Length < 24 Then
            If qryType = "ADD" Then
                If updquery.Length > 1 Then
                    Return Left(qryField, Len(qryField) - 1) & ")" & Left(dataField, Len(dataField) - 1) & ")" & autono & ";" & updquery
                Else
                    Return Left(qryField, Len(qryField) - 1) & ")" & Left(dataField, Len(dataField) - 1) & ")" & autono
                End If
            Else
                Return Left(qryField, Len(qryField) - 1)
            End If
        Else
            Return errorMsg
        End If
    End Function


    Public Function ValidateAndGenrateQueryForControlsDraft(ByVal qryType As String, ByVal qryField As String, ByVal dataField As String, ByVal ds As DataTable, ByRef pnlFields As Panel, ByVal tid As Integer) As String
        Dim errorMsg As String = "Please Ensure Following"
        'Dim errorlist As New ArrayList

        Dim autono As String = ""
        Dim updquery As String = ""
        Dim allowedSize As Integer = 0
        Dim fileSize As Integer = 0
        Dim flagFsize As Integer = 0
        If ds.Rows.Count > 0 Then
            For i = 0 To ds.Rows.Count - 1
                Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                Dim lbl As Label = CType(pnlFields.FindControl("lbl" & ds.Rows(i).Item("FieldID").ToString()), Label)
                If IsNothing(lbl) = False Then
                    lbl.ForeColor = Drawing.Color.Black
                    lbl.BackColor = Drawing.Color.White
                End If
                Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "LT LOOKUP"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                            If txtBox.Text.Trim() <> "" Then
                                If ds.Rows(i).Item("isunique").ToString() = "1" Then
                                    txtBox.Text = getSafeString(txtBox.Text)
                                    If checkduplicate(qryType, tid, ds.Rows(i).Item("DBTABLENAME").ToString, ds.Rows(i).Item("Fieldmapping").ToString(), txtBox.Text, ds.Rows(i).Item("DOCUMENTTYPE").ToString) Then
                                        'errorMsg &= "<br/>" & "unique " & dispName & " ,"
                                        'Exit For
                                    End If
                                End If
                            End If
                        End If
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If
                    Case "MULTI LOOKUP"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If
                    Case "MULTI LOOKUPDDL"
                        Dim txtBox As DropDownList = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)

                        If qryType = "ADD" Then
                            If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                            End If
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                If txtBox.SelectedItem.Text.ToUpper() = "SELECT" Then
                                    dataField &= "'',"  '' new by sp 10_may
                                Else
                                    dataField &= "'" & txtBox.SelectedItem.Text & "',"
                                End If
                            Else
                                Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                    'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                    dataField &= "'" & fldpair(0).ToString() & "',"
                                Else
                                    'dataField &= "'" & txtBox.SelectedValue.ToString() & "',"
                                    dataField &= "'" & fldpair(0).ToString() & "',"
                                End If
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                If txtBox.SelectedItem.Text.ToUpper() = "SELECT" Then
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'',"  '' new by sp 10_may
                                Else
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.SelectedItem.Text & "',"
                                End If
                            Else
                                Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                    'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & fldpair(0).ToString() & "',"
                                Else
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & fldpair(0).ToString() & "',"
                                    'qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.SelectedItem.Value & "',"
                                End If
                            End If
                        End If
                    Case "TEXT BOX"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        Dim RegExObject As New Regex("^([a-zA-Z0-9  ,\./<>\?;':""[\]\\{}\|`~!@#\$%\^&\*()-_=\+]*)$")
                        If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                            If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                                'errorMsg &= "<br/>" & dispName & " is Mandatory"
                                'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                            ElseIf (RegExObject.IsMatch(txtBox.Text.Trim) = False) Then
                                'errorMsg &= "<br/>" & dispName & " Enter Valid Text"
                            End If

                            ''Code for HTML encoder''
                            If Regex.IsMatch(txtBox.Text, "<.*?>") = True Then
                                txtBox.Text = HttpContext.Current.Server.HtmlEncode(txtBox.Text)
                            End If

                            'Dim actualtext As String = txtBox.Text
                            'Dim actualtextsize As Integer = Len(txtBox.Text)
                            'Dim replacedTextSize As Integer = Len(Regex.Replace(txtBox.Text, "<.*?>", String.Empty))
                            'If actualtextsize <> replacedTextSize Then
                            '    txtBox.Text = HttpContext.Current.Server.HtmlEncode(actualtext.ToString)
                            'End If


                            If ds.Rows(i).Item("datatype") = "Datetime" Then
                                If ds.Rows(i).Item("isrequired") = 1 Then
                                    Dim str1 As String() = Split(txtBox.Text, "/")
                                    If str1.Length = 3 Then
                                        Dim strDate1 As String = str1(1) & "/" & str1(0) & "/" & str1(2)
                                        txtBox.Text = strDate1
                                    Else
                                        'errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        'Exit For
                                    End If
                                    If Not IsDate(txtBox.Text) Then
                                        'errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        'txtBox.Text = str1(0) & "/" & str1(1) & "/" & str1(2)
                                        'Exit For
                                    Else
                                        txtBox.Text = Format(Convert.ToDateTime(txtBox.Text.ToString), "dd/MM/yy")
                                        Dim str As String() = Split(txtBox.Text, "/")
                                        Dim strDate As String = str(0).PadLeft(2, "0") & "/" & str(1).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")
                                        txtBox.Text = strDate
                                    End If
                                Else
                                    txtBox.Text = Trim(txtBox.Text)
                                    If txtBox.Text = "" Then

                                    Else
                                        Dim str1 As String() = Split(txtBox.Text, "/")
                                        If str1.Length = 3 Then
                                            Dim strDate1 As String = str1(1) & "/" & str1(0) & "/" & str1(2)
                                            txtBox.Text = strDate1
                                        Else
                                            'errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                            'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            'Exit For
                                        End If
                                        If Not IsDate(txtBox.Text) Then
                                            'errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                            'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                            txtBox.Text = str1(0) & "/" & str1(1) & "/" & str1(2)
                                            'Exit For
                                        Else
                                            txtBox.Text = Format(Convert.ToDateTime(txtBox.Text.ToString), "dd/MM/yy")
                                            Dim str As String() = Split(txtBox.Text, "/")
                                            Dim strDate As String = str(0).PadLeft(2, "0") & "/" & str(1).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")
                                            txtBox.Text = strDate
                                        End If
                                    End If
                                End If
                                ' here is for time 
                            ElseIf ds.Rows(i).Item("datatype").ToString.ToUpper = "TIME" Then
                                If ds.Rows(i).Item("isrequired") = 1 Then
                                    Dim arr As String() = Split(txtBox.Text, ":")

                                Else
                                    Dim arr As String() = Split(txtBox.Text, ":")

                                End If
                            ElseIf ds.Rows(i).Item("datatype").ToString.ToUpper = "NEW DATETIME" Then
                                If ds.Rows(i).Item("isrequired") = 1 Then
                                    Dim str1 As String() = Split(txtBox.Text, "-")
                                    If str1.Length = 3 Then
                                        Dim strDate1 As String = str1(1) & "-" & str1(0) & "-" & str1(2)
                                        txtBox.Text = strDate1
                                    Else
                                        'errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        'Exit For
                                    End If
                                    If Not IsDate(txtBox.Text) Then
                                        'errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        txtBox.Text = str1(0) & "-" & str1(1) & "-" & str1(2)
                                        'Exit For
                                    Else
                                        Dim str As String() = Split(txtBox.Text, "-")
                                        Dim dt As String() = Split(str(2), " ")
                                        txtBox.Text = Format(Convert.ToDateTime(str1(0) & "-" & str1(1) & "-" & dt(0)), "dd-MM-yy")
                                        txtBox.Text &= " " & dt(1)
                                        'Dim strDate As String = Str(0).PadLeft(2, "0") & "/" & Str(1).PadLeft(2, "0") & "/" & Str(2).PadLeft(2, "0")
                                        'txtBox.Text = strDate
                                    End If
                                Else
                                    Dim str1 As String() = Split(txtBox.Text, "-")
                                    If str1.Length = 3 Then
                                        Dim strDate1 As String = str1(1) & "-" & str1(0) & "-" & str1(2)
                                        txtBox.Text = strDate1
                                    Else
                                        'errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        'Exit For
                                    End If
                                    If Not IsDate(txtBox.Text) Then
                                        'errorMsg &= "<br/>" & "Date is not in correct format at " & dispName & ","
                                        'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        txtBox.Text = str1(0) & "-" & str1(1) & "-" & str1(2)
                                        'Exit For
                                    Else
                                        Dim str As String() = Split(txtBox.Text, "-")
                                        Dim dt As String() = Split(str(2), " ")
                                        txtBox.Text = Format(Convert.ToDateTime(str1(0) & "-" & str1(1) & "-" & dt(0)), "dd-MM-yy")
                                        txtBox.Text &= " " & dt(1)
                                        'Dim strDate As String = str(0).PadLeft(2, "0") & "/" & str(1).PadLeft(2, "0") & "/" & str(2).PadLeft(2, "0")
                                        'txtBox.Text = strDate
                                    End If
                                End If
                            End If
                            '' taken to outside from above if by sunil on 23_apr_14
                            If ds.Rows(i).Item("datatype") = "Numeric" Then
                                If IsNumeric(txtBox.Text) = False Then
                                    'errorMsg &= "<br/>" & " NUMERIC data at " & dispName & ","
                                    'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                    'Exit For
                                Else
                                    If Not IsNothing(ds.Rows(i).Item("RoundOff")) Then
                                        Dim numberOfDecimalPlaces As Integer = Convert.ToString(ds.Rows(i).Item("RoundOff"))
                                        If numberOfDecimalPlaces <> -1 Then
                                            Dim before As Double = txtBox.Text
                                            Dim after As Double = Math.Round(before)
                                            Dim formatstring As String = String.Concat("{0:F", numberOfDecimalPlaces, "}")
                                            txtBox.Text = String.Format(formatstring, after)
                                        End If
                                    End If
                                End If
                                txtBox.Text = Replace(txtBox.Text, ",", "")
                            End If
                            If ds.Rows(i).Item("datatype") = "Text" Then 'shalini
                                Dim DropDown As String = ds.Rows(i).Item("dropdown").ToString()
                                If DropDown = "Uper Case" Then
                                    txtBox.Text = txtBox.Text.ToUpper()
                                ElseIf DropDown = "Lower Case" Then
                                    txtBox.Text = txtBox.Text.ToLower()
                                ElseIf DropDown = "Proper Case" Then
                                    txtBox.Text = StrConv(txtBox.Text, VbStrConv.ProperCase)
                                End If
                                If IsDBNull(ds.Rows(i).Item("isMail")) = True OrElse Trim(ds.Rows(i).Item("isMail")) = "" Then
                                Else
                                    If ds.Rows(i).Item("isMail") = "1" Then
                                        Dim EmailRegEx As New Regex("^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$")
                                        If (EmailRegEx.IsMatch(txtBox.Text.Trim) = False) Then
                                            'errorMsg &= "<br/> Please Enter Valid Email"
                                        End If
                                    End If
                                End If
                            End If
                            If txtBox.Text.Length < CInt(ds.Rows(i).Item("minlen").ToString) And txtBox.Text.Length > 0 And ds.Rows(i).Item("datatype").ToString.ToUpper <> "DATETIME" Then
                                'errorMsg &= "<br/>" & "Minimum  " & ds.Rows(i).Item("minlen").ToString() & " character in " & dispName & ","
                                'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                'Exit For
                            End If
                            If txtBox.Text.Length > CInt(ds.Rows(i).Item("maxlen").ToString) And txtBox.Text.Length > 0 And ds.Rows(i).Item("datatype").ToString.ToUpper <> "DATETIME" Then
                                'errorMsg &= "<br/>" & "Maximum  " & ds.Rows(i).Item("maxlen").ToString() & " character in " & dispName & ","
                                'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                'Exit For
                            End If
                            If txtBox.Text.Trim() <> "" Then
                                If ds.Rows(i).Item("isunique").ToString() = "1" Then
                                    If checkduplicate(qryType, tid, ds.Rows(i).Item("DBTABLENAME").ToString, ds.Rows(i).Item("Fieldmapping").ToString(), txtBox.Text, ds.Rows(i).Item("DOCUMENTTYPE").ToString) Then
                                        'errorMsg &= "<br/>" & "unique " & dispName & " ,"
                                        'If IsNothing(lbl) = False Then lbl.ForeColor = Drawing.Color.Red : lbl.BackColor = Drawing.Color.Yellow
                                        'Exit For
                                    End If
                                End If
                            End If
                        End If
                        If qryType = "ADD" Then
                            'If ds.Rows(i).Item("isunique").ToString() = "1" Then
                            '    If checkduplicate(qryType, tid, ds.Rows(i).Item("DBTABLENAME").ToString, ds.Rows(i).Item("Fieldmapping").ToString(), txtBox.Text, ds.Rows(i).Item("DOCUMENTTYPE").ToString) Then
                            '        errorMsg &= "<br/>" & "unique " & dispName & " ,"
                            '        Exit For
                            '    End If
                            'End If
                            If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                            End If
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & getSafeString(txtBox.Text) & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & getSafeString(txtBox.Text) & "',"
                        End If
                    Case "DROP DOWN", "AUTOCOMPLETE", "LOOKUPDDL"
                        If ds.Rows(i).Item("FieldType").ToString().ToUpper() = "AUTOCOMPLETE" Then
                            Dim txtbox As HiddenField = CType(pnlFields.FindControl("HDN" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                            Dim txtboxval As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            If txtboxval.CssClass.ToString().ToUpper <> "INVISIBLE" Then

                                If ds.Rows(i).Item("isrequired").ToString() = 1 Then
                                    If txtbox.Value.ToString.Length < 1 Then
                                        ' errorMsg &= "<br/>" & dispName & " is Mandatory"
                                    End If
                                End If
                            End If
                            'qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            'Dim fldpair() As String = txtbox.Text.Split("-")
                            'fldpair(1) = Trim(Replace(fldpair(1), "[", ""))
                            'fldpair(1) = Trim(Replace(fldpair(1), "]", ""))
                            If qryType = "ADD" Then
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                If txtbox.Value = String.Empty Then
                                    dataField &= "NULL,"
                                Else
                                    dataField &= "'" & txtbox.Value & "',"
                                End If
                            Else
                                ' qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtbox.Value & "',"
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & IIf(txtbox.Value.ToString.Length = 0, "0", txtbox.Value) & "',"
                            End If
                        Else
                            Dim txtBox As DropDownList = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), DropDownList)
                            If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.ToUpper = "SELECT" And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    'errorMsg &= "<br/>" & dispName & " is Mandatory"
                                End If
                            End If
                            If qryType = "ADD" Then
                                If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                    updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                    If txtBox.SelectedItem.Text.ToUpper() = "SELECT" Then
                                        dataField &= "'',"  '' new by sp 10_may
                                    Else
                                        dataField &= "'" & txtBox.SelectedItem.Text & "',"
                                    End If
                                Else
                                    Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                    If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                        'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                        If fldpair(0).ToString().ToUpper.Trim() = "SELECT" Then
                                            dataField &= "null,"
                                        Else
                                            dataField &= "'" & fldpair(0).ToString() & "',"
                                        End If
                                    Else
                                        If fldpair(0).ToString().ToUpper.Trim() = "SELECT" Then
                                            dataField &= "null,"
                                        Else
                                            dataField &= "'" & fldpair(0).ToString() & "',"
                                        End If
                                        ''dataField &= "'" & txtBox.SelectedValue.ToString() & "',"
                                        'dataField &= "'" & fldpair(0).ToString() & "',"
                                    End If
                                End If
                            Else
                                If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                    If txtBox.SelectedItem.Text.ToUpper() = "SELECT" Then
                                        qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'',"  '' new by sp 10_may
                                    Else
                                        qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.SelectedItem.Text & "',"
                                    End If
                                Else
                                    Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                    If ((ds.Rows(i).Item("lookupvalue").ToString().Length > 2) Or (ds.Rows(i).Item("DDllookupvalue").ToString().Length > 2)) Then  'Shalini
                                        'Dim fldpair() As String = txtBox.SelectedValue.ToString().Split("|")
                                        qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & fldpair(0).ToString() & "',"
                                    Else
                                        qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & fldpair(0).ToString() & "',"
                                        'qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.SelectedItem.Value & "',"
                                    End If
                                End If
                            End If
                        End If

                    Case "CHECKBOX LIST"
                        Dim txtBox As CheckBoxList = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBoxList)
                        If txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                            If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem Is Nothing Then
                                ' errorMsg &= "<br/>" & dispName & " is Mandatory"
                                Continue For
                            End If
                        End If
                        Dim livalue As String = ""
                        If qryType = "ADD" Then
                            If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                            End If
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            ElseIf UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "CUSTOM VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                If livalue.Length > 0 Then
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                dataField &= "'" & livalue & "',"

                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                If livalue.Length > 0 Then
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                dataField &= "'" & livalue & "',"
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                If livalue.Length > 0 Then
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            ElseIf UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "CUSTOM VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                If livalue.Length > 0 Then
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                dataField &= "'" & livalue & "',"
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                If livalue.Length > 0 Then
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            End If
                        End If


                    Case "LIST BOX"
                        Dim txtBox As ListBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)

                        Dim livalue As String = ""
                        If qryType = "ADD" Then

                            If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                            End If


                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            End If
                        End If

                    Case "TEXT AREA"
                        Dim RegExObject As New Regex("^([a-zA-Z0-9  ,\./<>\?;':""[\]\\{}\|`~!@#\$%\^&\*()-_=\+]*)$")
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        Dim datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()

                        ''Code for HTML encoder''
                        If Regex.IsMatch(txtBox.Text, "<.*?>") = True Then
                            txtBox.Text = HttpContext.Current.Server.HtmlEncode(txtBox.Text)
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & getSafeString(txtBox.Text) & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & getSafeString(txtBox.Text) & "',"
                        End If
                        'Mayank Added for Check Box for save and update check box field
                    Case "CHECK BOX"
                        Dim chkbox As CheckBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBox)

                        Dim strval As String
                        If (chkbox.Checked = True) Then
                            strval = "Yes"
                        Else
                            strval = "No"
                        End If
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & strval & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & strval & "',"
                        End If
                    Case "FILE UPLOADER"
                        Dim txtBox As FileUpload = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), FileUpload)
                        '' new added for mel.file upload vulnarebility   17_may_17 
                        If Not IsNothing(txtBox) Then
                            If Not IsNothing(txtBox.PostedFile) Then
                                Dim fileName As String = System.IO.Path.GetExtension(txtBox.PostedFile.FileName)
                                If fileName <> "" Then
                                    Dim currentMimeType As String = txtBox.PostedFile.ContentType.ToString()
                                    If Not (GetMimeType(fileName) = (currentMimeType)) Then
                                        'errorMsg &= "<br/>" & dispName & " file mime type is not allowed"
                                    End If
                                End If
                            End If
                        End If
                        '' new added for mel.file upload vulnarebility  17_may_17

                        'lable to show File text
                        Dim lblfile As Label = CType(pnlFields.FindControl("lblf" & ds.Rows(i).Item("FieldID").ToString()), Label)
                        'hidden field to hold file name
                        Dim hdn As HiddenField = CType(pnlFields.FindControl("hdnf" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                        'flag hidden field whether file is from database or new file added by user
                        Dim hdnflg As HiddenField = CType(pnlFields.FindControl("hdnflg_" & ds.Rows(i).Item("FieldID").ToString()), HiddenField)
                        lblfile.Text = hdn.Value

                        If qryType = "ADD" Then
                            If lblfile.Text.Trim() <> "" And hdnflg.Value <> "0" Then
                                Dim FN As String = ""
                                Dim ext As String = ""
                                Dim flag As Integer = 0
                                Dim sourceFile As String = HttpContext.Current.Server.MapPath("~/DOCS/temp/" + lblfile.Text)
                                Dim finfo As New FileInfo(HttpContext.Current.Server.MapPath("~/DOCS/temp/" + lblfile.Text))
                                Dim curFileSize As Integer = finfo.Length
                                fileSize = fileSize + curFileSize

                                FN = Left(lblfile.Text, lblfile.Text.LastIndexOf("."))
                                FN = getSafeString(FN)
                                ext = lblfile.Text.Substring(lblfile.Text.LastIndexOf("."), lblfile.Text.Length - lblfile.Text.LastIndexOf("."))
                                If File.Exists(HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext) Then
                                    FN = FN & ds.Rows(i).Item("FieldID").ToString()
                                End If
                                If IsDBNull(ds.Rows(i).Item("UploadAllowedTypes")) = True Then
                                Else
                                    Dim type As String() = Split(ds.Rows(i).Item("UploadAllowedTypes").ToString(), ",")
                                    For k As Integer = 0 To type.Length - 1
                                        If type(k) = ext Then
                                            flag = 0 ' if file type is match then passed and saved into DB
                                            Exit For
                                        Else
                                            flag = 1 ' check for type of the not matched 
                                        End If
                                    Next
                                    If flag = 0 Then
                                    Else
                                        'errorMsg &= "<br/>" & dispName & " file type is not allowed"   ' upload file is not matched
                                    End If
                                End If
                                dataField &= "'" & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext & "',"
                                If Not File.Exists(HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext) Then
                                    File.Copy(sourceFile, HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "," ' 28_may_14
                            ElseIf lblfile.Text IsNot "" And hdnflg.Value IsNot "1" Then
                                dataField &= "'" & HttpContext.Current.Session("EID").ToString() & "/" & lblfile.Text.Replace("<br/>", "") & "',"
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            Else
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    'errorMsg &= "<br/>" & dispName & " is Mandatory"
                                Else
                                    dataField &= "'',"
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                End If
                            End If
                        Else
                            If lblfile.Text.Trim() <> "" And hdnflg.Value <> "0" Then
                                Dim FN As String = ""
                                Dim ext As String = ""
                                Dim flag As Integer = 0
                                Dim sourceFile As String = HttpContext.Current.Server.MapPath("~/DOCS/temp/" + lblfile.Text)
                                Dim finfo As New FileInfo(HttpContext.Current.Server.MapPath("~/DOCS/temp/" + lblfile.Text))
                                FN = Left(lblfile.Text, lblfile.Text.LastIndexOf("."))
                                FN = getSafeString(FN)
                                ext = lblfile.Text.Substring(lblfile.Text.LastIndexOf("."), lblfile.Text.Length - lblfile.Text.LastIndexOf("."))
                                If File.Exists(HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext) Then
                                    FN = FN & ds.Rows(i).Item("FieldID").ToString()
                                End If
                                If IsDBNull(ds.Rows(i).Item("UploadAllowedTypes")) = True Then
                                Else
                                    Dim type As String() = Split(ds.Rows(i).Item("UploadAllowedTypes").ToString(), ",")
                                    For k As Integer = 0 To type.Length - 1
                                        If type(k) = ext Then
                                            flag = 0 ' if file type is match then passed and saved into DB
                                            Exit For
                                        Else
                                            flag = 1 ' check for type of the not matched 
                                        End If
                                    Next
                                    If flag = 0 Then
                                    Else
                                        'errorMsg &= "<br/>" & dispName & " file extesion not matched  " & ","   ' upload file is not matched
                                    End If
                                End If
                                dataField = "'" & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext & "',"
                                If Not File.Exists(HttpContext.Current.Server.MapPath("~/DOCS/") & HttpContext.Current.Session("EID").ToString() & "/" & FN & ext) Then
                                    File.Copy(sourceFile, HttpContext.Current.Server.MapPath("~/DOCS/" & HttpContext.Current.Session("EID").ToString()) & "/" & FN & ext)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & dataField    ' 28_may_14

                            ElseIf lblfile.Text <> "" And hdnflg.Value <> "1" Then
                                'Commented By Manvendra 04-12-2019
                                dataField = "'" & HttpContext.Current.Session("EID").ToString() & "/" & lblfile.Text.Replace("<br/>", "") & "',"
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & dataField
                            Else
                                If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                    'errorMsg &= "<br/>" & dispName & " is Mandatory"
                                Else
                                    dataField = "''"
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "='" & "',"
                                End If
                            End If
                        End If
                    Case "GEO POINT"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text.ToString() & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text.ToString() & "',"
                        End If
                    Case "GEO FENCE"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text.ToString() & "," & ds.Rows(i).Item("defaultfieldval").ToString() & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text.ToString() & "," & ds.Rows(i).Item("defaultfieldval").ToString() & "',"
                        End If

                    Case "ADVANCE FORMULA"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text.ToString() & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text.ToString() & "',"
                        End If

                    Case "LOOKUP"
                        Dim ctrl = pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString())
                        If Not ctrl Is Nothing Then
                            If ctrl.GetType Is GetType(System.Web.UI.WebControls.TextBox) Then
                                Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                                'Validation for Mandatory

                                '' new code for checking min and max len on lookup  by sunil - 16-june-14 - ends
                                If txtBox.Text.Trim() <> "" Then
                                    If ds.Rows(i).Item("isunique").ToString() = "1" And txtBox.CssClass.ToString().ToUpper <> "INVISIBLE" Then
                                        txtBox.Text = getSafeString(txtBox.Text)
                                        If checkduplicate(qryType, tid, ds.Rows(i).Item("DBTABLENAME").ToString, ds.Rows(i).Item("Fieldmapping").ToString(), txtBox.Text, ds.Rows(i).Item("DOCUMENTTYPE").ToString) Then
                                            ' errorMsg &= "<br/>" & "unique " & dispName & " ,"
                                            'Exit For
                                        End If
                                    End If
                                End If
                                If qryType = "ADD" Then
                                    If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                        updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                    dataField &= "'" & txtBox.Text & "',"
                                Else
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                                End If
                            Else
                                Dim chkBox As CheckBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBox)
                                'Validation for Mandatory

                                Dim chkval As String = ""
                                If chkBox.Checked Then
                                    chkval = "Yes"
                                Else
                                    chkval = "No"
                                End If
                                If qryType = "ADD" Then

                                    If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                        updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), chkval, pnlFields)
                                    End If
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                    dataField &= "'" & chkval & "',"
                                Else
                                    qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & chkval & "',"
                                End If
                            End If
                        End If


                    Case "CALCULATIVE FIELD"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory

                        If qryType = "ADD" Then

                            If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                                updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                            End If

                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If

                    Case "CHILD ITEM TOTAL"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)

                        If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                            updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If

                    Case "CHILD ITEM MAX"  ' by sunil 04_jul_14
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)

                        If ds.Rows(i).Item("KC_VALUE").ToString.Length > 5 And ds.Rows(i).Item("KC_STATUS").ToString.Length = 0 Then
                            updquery &= UPDATEKICKING(ds.Rows(i).Item("KC_VALUE").ToString(), txtBox.Text, pnlFields)
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If

                    Case "SELF REFERENCE"
                        Dim txtBox As Menu = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), Menu)

                        If qryType = "ADD" Then
                            If txtBox.SelectedItem.Text Is Nothing Or txtBox.SelectedValue = "0" Then
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.SelectedItem.Value & "',"
                            End If
                        End If

                    Case "PARENT FIELD"
                        Dim txtBox As Menu = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), Menu)

                        If qryType = "ADD" Then
                            If txtBox.SelectedItem.Text Is Nothing Or txtBox.SelectedValue = "0" Then
                            Else
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                                dataField &= "'" & txtBox.SelectedItem.Value & "',"
                            End If

                        End If

                End Select
            Next
        End If


        If flagFsize = 0 Then  ' check for file size not more than given size at form label By BALLI
            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim oda As New SqlDataAdapter("", con)
            Try
                oda.SelectCommand.CommandText = "select * from MMM_MST_Forms where eid='" & HttpContext.Current.Session("EID") & "' and formname='" & ds.Rows(0).Item("documenttype").ToString() & "' "
                Dim dt As New DataTable
                oda.Fill(dt)
                If IsDBNull(dt.Rows(0).Item("AttahcedFileSize")) = True Or Val(dt.Rows(0).Item("AttahcedFileSize").ToString()) = 0 Then
                Else
                    allowedSize = Val(dt.Rows(0).Item("AttahcedFileSize").ToString()) * 1024 * 1024  ' converting MB into Bytes
                    HttpContext.Current.Session("FileSize") = Val(HttpContext.Current.Session("FileSize")) + fileSize  ' initializing session that will use in document page for checking the size of form is greater than allowed size or not 
                    If Val(HttpContext.Current.Session("FileSize")) > allowedSize Then
                        ' errorMsg = "Please note your attachment cannot be uploaded as it exceeds prescribed limit. Please ensure that file size does not exceed '" & Val(dt.Rows(0).Item("AttahcedFileSize").ToString()) & "' MB and try again   "
                        HttpContext.Current.Session("FileSize") = Nothing
                        Return errorMsg
                        Exit Function
                    Else
                    End If
                End If
            Catch ex As Exception
            Finally
                con.Close()
                oda.Dispose()
            End Try
        End If
        Dim CurDocNat As String = "CREATE"
        If HttpContext.Current.Session("DOCSTATUS") <> Nothing Then
            If HttpContext.Current.Session("DOCSTATUS") = "MODIFY" Then
                CurDocNat = "MODIFY"
            ElseIf HttpContext.Current.Session("DOCSTATUS") = "SPLIT" Then
                CurDocNat = "SPLIT"
            End If
            If HttpContext.Current.Session("ACTION") <> Nothing Then
                If HttpContext.Current.Session("ACTION") = "EDIT" And HttpContext.Current.Session("DOCSTATUS") <> "SPLIT" And HttpContext.Current.Session("DOCSTATUS") <> "MODIFY" Then
                    CurDocNat = "CREATE"
                End If
            End If

        Else

            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            Dim oda As SqlDataAdapter = New SqlDataAdapter("select curdocnature  from mmm_mst_doc where tid=" & tid, con)
            oda.SelectCommand.CommandType = CommandType.Text
            Dim dt As New DataTable
            oda.Fill(dt)
            If dt.Rows.Count <> 0 Then
                CurDocNat = dt.Rows(0).Item("curDocNature").ToString()
            End If
            con.Close()
            oda.Dispose()
            dt.Dispose()
        End If

        If ds.Rows.Count > 0 Then
            Dim str As String = validateForm(ds.Rows(0).Item("Documenttype").ToString, HttpContext.Current.Session("EID"), pnlFields, ds, qryType, tid, CurDocNat)
            If str.Length > 5 Then
                str = "Please " & str
                Return Left(str, Len(str) - 0)
            End If
        End If
        'Code By Ajeet kumar For Composit unique Key
        Dim UniqueKey As String = ""
        Dim DocumentType As String = ""
        Dim PDocumentType As String = ""
        'uncomment
        If ds.Rows.Count > 0 Then
            Try
                Dim conStr1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                Dim dsF As New DataSet()
                DocumentType = Convert.ToString(ds.Rows(0).Item("DocumentType"))
                PDocumentType = DocumentType
                Dim Sql As String = "select formname,formsource,eventname  from mmm_mst_forms where eid=" & HttpContext.Current.Session("EID") & " and formname='" & DocumentType & "'"
                Using con1 = New SqlConnection(conStr1)
                    Using da As New SqlDataAdapter(Sql, con1)
                        con1.Open()
                        da.Fill(dsF)
                        Dim FormSource = dsF.Tables(0).Rows(0).Item("formsource").ToString.ToUpper.Trim  '= "ACTION DRIVEN"
                        If FormSource = "ACTION DRIVEN" Then
                            PDocumentType = dsF.Tables(0).Rows(0).Item("eventname").ToString.Trim
                        End If
                    End Using
                End Using
                UniqueKey = Convert.ToString(ds.Rows(0).Item("UniqueKeys"))
            Catch ex As Exception
                Throw
            End Try
            If Not String.IsNullOrEmpty(UniqueKey.Trim) And (errorMsg.Length < 24) Then
                'unique check validation will goes from here 
                Dim Message As String = ""
                Dim ret = CheckUniqueKey(ds, pnlFields, DocumentType, PDocumentType, Message, tid)
                If ret = False Then
                    Return Message
                    Exit Function
                End If
            End If
        End If

        If errorMsg.Length < 24 Then
            If qryType = "ADD" Then
                If updquery.Length > 1 Then
                    Return Left(qryField, Len(qryField) - 1) & ")" & Left(dataField, Len(dataField) - 1) & ")" & autono & ";" & updquery
                Else
                    Return Left(qryField, Len(qryField) - 1) & ")" & Left(dataField, Len(dataField) - 1) & ")" & autono
                End If
            Else
                Return Left(qryField, Len(qryField) - 1)
            End If
        Else
            Return errorMsg
        End If
    End Function
    Public Shared Function GetMimeType(extension As String) As String
        If extension Is Nothing Then
            Throw New ArgumentNullException("extension")
        End If

        If extension.StartsWith(".") Then
            extension = extension.Substring(1)
        End If


        Select Case extension.ToLower()
            '#Region "Big freaking list of mime types"
            Case "323"
                Return "text/h323"
            Case "3g2"
                Return "video/3gpp2"
            Case "3gp"
                Return "video/3gpp"
            Case "3gp2"
                Return "video/3gpp2"
            Case "3gpp"
                Return "video/3gpp"
            Case "7z"
                Return "application/x-7z-compressed"
            Case "aa"
                Return "audio/audible"
            Case "aac"
                Return "audio/aac"
            Case "aaf"
                Return "application/octet-stream"
            Case "aax"
                Return "audio/vnd.audible.aax"
            Case "ac3"
                Return "audio/ac3"
            Case "aca"
                Return "application/octet-stream"
            Case "accda"
                Return "application/msaccess.addin"
            Case "accdb"
                Return "application/msaccess"
            Case "accdc"
                Return "application/msaccess.cab"
            Case "accde"
                Return "application/msaccess"
            Case "accdr"
                Return "application/msaccess.runtime"
            Case "accdt"
                Return "application/msaccess"
            Case "accdw"
                Return "application/msaccess.webapplication"
            Case "accft"
                Return "application/msaccess.ftemplate"
            Case "acx"
                Return "application/internet-property-stream"
            Case "addin"
                Return "text/xml"
            Case "ade"
                Return "application/msaccess"
            Case "adobebridge"
                Return "application/x-bridge-url"
            Case "adp"
                Return "application/msaccess"
            Case "adt"
                Return "audio/vnd.dlna.adts"
            Case "adts"
                Return "audio/aac"
            Case "afm"
                Return "application/octet-stream"
            Case "ai"
                Return "application/postscript"
            Case "aif"
                Return "audio/x-aiff"
            Case "aifc"
                Return "audio/aiff"
            Case "aiff"
                Return "audio/aiff"
            Case "air"
                Return "application/vnd.adobe.air-application-installer-package+zip"
            Case "amc"
                Return "application/x-mpeg"
            Case "application"
                Return "application/x-ms-application"
            Case "art"
                Return "image/x-jg"
            Case "asa"
                Return "application/xml"
            Case "asax"
                Return "application/xml"
            Case "ascx"
                Return "application/xml"
            Case "asd"
                Return "application/octet-stream"
            Case "asf"
                Return "video/x-ms-asf"
            Case "ashx"
                Return "application/xml"
            Case "asi"
                Return "application/octet-stream"
            Case "asm"
                Return "text/plain"
            Case "asmx"
                Return "application/xml"
            Case "aspx"
                Return "application/xml"
            Case "asr"
                Return "video/x-ms-asf"
            Case "asx"
                Return "video/x-ms-asf"
            Case "atom"
                Return "application/atom+xml"
            Case "au"
                Return "audio/basic"
            Case "avi"
                Return "video/x-msvideo"
            Case "axs"
                Return "application/olescript"
            Case "bas"
                Return "text/plain"
            Case "bcpio"
                Return "application/x-bcpio"
            Case "bin"
                Return "application/octet-stream"
            Case "bmp"
                Return "image/bmp"
            Case "c"
                Return "text/plain"
            Case "cab"
                Return "application/octet-stream"
            Case "caf"
                Return "audio/x-caf"
            Case "calx"
                Return "application/vnd.ms-office.calx"
            Case "cat"
                Return "application/vnd.ms-pki.seccat"
            Case "cc"
                Return "text/plain"
            Case "cd"
                Return "text/plain"
            Case "cdda"
                Return "audio/aiff"
            Case "cdf"
                Return "application/x-cdf"
            Case "cer"
                Return "application/x-x509-ca-cert"
            Case "chm"
                Return "application/octet-stream"
            Case "class"
                Return "application/x-java-applet"
            Case "clp"
                Return "application/x-msclip"
            Case "cmx"
                Return "image/x-cmx"
            Case "cnf"
                Return "text/plain"
            Case "cod"
                Return "image/cis-cod"
            Case "config"
                Return "application/xml"
            Case "contact"
                Return "text/x-ms-contact"
            Case "coverage"
                Return "application/xml"
            Case "cpio"
                Return "application/x-cpio"
            Case "cpp"
                Return "text/plain"
            Case "crd"
                Return "application/x-mscardfile"
            Case "crl"
                Return "application/pkix-crl"
            Case "crt"
                Return "application/x-x509-ca-cert"
            Case "cs"
                Return "text/plain"
            Case "csdproj"
                Return "text/plain"
            Case "csh"
                Return "application/x-csh"
            Case "csproj"
                Return "text/plain"
            Case "css"
                Return "text/css"
            Case "csv"
                Return "text/csv"
            Case "cur"
                Return "application/octet-stream"
            Case "cxx"
                Return "text/plain"
            Case "dat"
                Return "application/octet-stream"
            Case "datasource"
                Return "application/xml"
            Case "dbproj"
                Return "text/plain"
            Case "dcr"
                Return "application/x-director"
            Case "def"
                Return "text/plain"
            Case "deploy"
                Return "application/octet-stream"
            Case "der"
                Return "application/x-x509-ca-cert"
            Case "dgml"
                Return "application/xml"
            Case "dib"
                Return "image/bmp"
            Case "dif"
                Return "video/x-dv"
            Case "dir"
                Return "application/x-director"
            Case "disco"
                Return "text/xml"
            Case "dll"
                Return "application/x-msdownload"
            Case "dll.config"
                Return "text/xml"
            Case "dlm"
                Return "text/dlm"
            Case "doc"
                Return "application/msword"
                'Case "docm"
                '    Return "application/vnd.ms-word.document.macroenabled.12"
            Case "docx"
                Return "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
            Case "dot"
                Return "application/msword"
                'Case "dotm"
                '    Return "application/vnd.ms-word.template.macroenabled.12"
            Case "dotx"
                Return "application/vnd.openxmlformats-officedocument.wordprocessingml.template"
            Case "dsp"
                Return "application/octet-stream"
            Case "dsw"
                Return "text/plain"
            Case "dtd"
                Return "text/xml"
            Case "dtsconfig"
                Return "text/xml"
            Case "dv"
                Return "video/x-dv"
            Case "dvi"
                Return "application/x-dvi"
            Case "dwf"
                Return "drawing/x-dwf"
            Case "dwp"
                Return "application/octet-stream"
            Case "dxr"
                Return "application/x-director"
            Case "eml"
                Return "message/rfc822"
            Case "emz"
                Return "application/octet-stream"
            Case "eot"
                Return "application/octet-stream"
            Case "eps"
                Return "application/postscript"
            Case "etl"
                Return "application/etl"
            Case "etx"
                Return "text/x-setext"
            Case "evy"
                Return "application/envoy"
            Case "exe"
                Return "application/octet-stream"
            Case "exe.config"
                Return "text/xml"
            Case "fdf"
                Return "application/vnd.fdf"
            Case "fif"
                Return "application/fractals"
            Case "filters"
                Return "application/xml"
            Case "fla"
                Return "application/octet-stream"
            Case "flr"
                Return "x-world/x-vrml"
            Case "flv"
                Return "video/x-flv"
            Case "fsscript"
                Return "application/fsharp-script"
            Case "fsx"
                Return "application/fsharp-script"
            Case "generictest"
                Return "application/xml"
            Case "gif"
                Return "image/gif"
            Case "group"
                Return "text/x-ms-group"
            Case "gsm"
                Return "audio/x-gsm"
            Case "gtar"
                Return "application/x-gtar"
            Case "gz"
                Return "application/x-gzip"
            Case "h"
                Return "text/plain"
            Case "hdf"
                Return "application/x-hdf"
            Case "hdml"
                Return "text/x-hdml"
            Case "hhc"
                Return "application/x-oleobject"
            Case "hhk"
                Return "application/octet-stream"
            Case "hhp"
                Return "application/octet-stream"
            Case "hlp"
                Return "application/winhlp"
            Case "hpp"
                Return "text/plain"
            Case "hqx"
                Return "application/mac-binhex40"
            Case "hta"
                Return "application/hta"
            Case "htc"
                Return "text/x-component"
            Case "htm"
                Return "text/html"
            Case "html"
                Return "text/html"
            Case "htt"
                Return "text/webviewhtml"
            Case "hxa"
                Return "application/xml"
            Case "hxc"
                Return "application/xml"
            Case "hxd"
                Return "application/octet-stream"
            Case "hxe"
                Return "application/xml"
            Case "hxf"
                Return "application/xml"
            Case "hxh"
                Return "application/octet-stream"
            Case "hxi"
                Return "application/octet-stream"
            Case "hxk"
                Return "application/xml"
            Case "hxq"
                Return "application/octet-stream"
            Case "hxr"
                Return "application/octet-stream"
            Case "hxs"
                Return "application/octet-stream"
            Case "hxt"
                Return "text/html"
            Case "hxv"
                Return "application/xml"
            Case "hxw"
                Return "application/octet-stream"
            Case "hxx"
                Return "text/plain"
            Case "i"
                Return "text/plain"
            Case "ico"
                Return "image/x-icon"
            Case "ics"
                Return "application/octet-stream"
            Case "idl"
                Return "text/plain"
            Case "ief"
                Return "image/ief"
            Case "iii"
                Return "application/x-iphone"
            Case "inc"
                Return "text/plain"
            Case "inf"
                Return "application/octet-stream"
            Case "inl"
                Return "text/plain"
            Case "ins"
                Return "application/x-internet-signup"
            Case "ipa"
                Return "application/x-itunes-ipa"
            Case "ipg"
                Return "application/x-itunes-ipg"
            Case "ipproj"
                Return "text/plain"
            Case "ipsw"
                Return "application/x-itunes-ipsw"
            Case "iqy"
                Return "text/x-ms-iqy"
            Case "isp"
                Return "application/x-internet-signup"
            Case "ite"
                Return "application/x-itunes-ite"
            Case "itlp"
                Return "application/x-itunes-itlp"
            Case "itms"
                Return "application/x-itunes-itms"
            Case "itpc"
                Return "application/x-itunes-itpc"
            Case "ivf"
                Return "video/x-ivf"
            Case "jar"
                Return "application/java-archive"
            Case "java"
                Return "application/octet-stream"
            Case "jck"
                Return "application/liquidmotion"
            Case "jcz"
                Return "application/liquidmotion"
            Case "jfif"
                Return "image/pjpeg"
            Case "jnlp"
                Return "application/x-java-jnlp-file"
            Case "jpb"
                Return "application/octet-stream"
            Case "jpe"
                Return "image/jpeg"
            Case "jpeg"
                Return "image/jpeg"
            Case "jpg"
                Return "image/jpeg"
            Case "js"
                Return "application/x-javascript"
            Case "jsx"
                Return "text/jscript"
            Case "jsxbin"
                Return "text/plain"
            Case "latex"
                Return "application/x-latex"
            Case "library-ms"
                Return "application/windows-library+xml"
            Case "lit"
                Return "application/x-ms-reader"
            Case "loadtest"
                Return "application/xml"
            Case "lpk"
                Return "application/octet-stream"
            Case "lsf"
                Return "video/x-la-asf"
            Case "lst"
                Return "text/plain"
            Case "lsx"
                Return "video/x-la-asf"
            Case "lzh"
                Return "application/octet-stream"
            Case "m13"
                Return "application/x-msmediaview"
            Case "m14"
                Return "application/x-msmediaview"
            Case "m1v"
                Return "video/mpeg"
            Case "m2t"
                Return "video/vnd.dlna.mpeg-tts"
            Case "m2ts"
                Return "video/vnd.dlna.mpeg-tts"
            Case "m2v"
                Return "video/mpeg"
            Case "m3u"
                Return "audio/x-mpegurl"
            Case "m3u8"
                Return "audio/x-mpegurl"
            Case "m4a"
                Return "audio/m4a"
            Case "m4b"
                Return "audio/m4b"
            Case "m4p"
                Return "audio/m4p"
            Case "m4r"
                Return "audio/x-m4r"
            Case "m4v"
                Return "video/x-m4v"
            Case "mac"
                Return "image/x-macpaint"
            Case "mak"
                Return "text/plain"
            Case "man"
                Return "application/x-troff-man"
            Case "manifest"
                Return "application/x-ms-manifest"
            Case "map"
                Return "text/plain"
            Case "master"
                Return "application/xml"
            Case "mda"
                Return "application/msaccess"
            Case "mdb"
                Return "application/x-msaccess"
            Case "mde"
                Return "application/msaccess"
            Case "mdp"
                Return "application/octet-stream"
            Case "me"
                Return "application/x-troff-me"
            Case "mfp"
                Return "application/x-shockwave-flash"
            Case "mht"
                Return "message/rfc822"
            Case "mhtml"
                Return "message/rfc822"
            Case "mid"
                Return "audio/mid"
            Case "midi"
                Return "audio/mid"
            Case "mix"
                Return "application/octet-stream"
            Case "mk"
                Return "text/plain"
            Case "mmf"
                Return "application/x-smaf"
            Case "mno"
                Return "text/xml"
            Case "mny"
                Return "application/x-msmoney"
            Case "mod"
                Return "video/mpeg"
            Case "mov"
                Return "video/quicktime"
            Case "movie"
                Return "video/x-sgi-movie"
            Case "mp2"
                Return "video/mpeg"
            Case "mp2v"
                Return "video/mpeg"
            Case "mp3"
                Return "audio/mpeg"
            Case "mp4"
                Return "video/mp4"
            Case "mp4v"
                Return "video/mp4"
            Case "mpa"
                Return "video/mpeg"
            Case "mpe"
                Return "video/mpeg"
            Case "mpeg"
                Return "video/mpeg"
            Case "mpf"
                Return "application/vnd.ms-mediapackage"
            Case "mpg"
                Return "video/mpeg"
            Case "mpp"
                Return "application/vnd.ms-project"
            Case "mpv2"
                Return "video/mpeg"
            Case "mqv"
                Return "video/quicktime"
            Case "ms"
                Return "application/x-troff-ms"
            Case "msg"
                ' Return "application/vnd.ms-outlook"
                Return "application/octet-stream"
            Case "msi"
                Return "application/octet-stream"
            Case "mso"
                Return "application/octet-stream"
            Case "mts"
                Return "video/vnd.dlna.mpeg-tts"
            Case "mtx"
                Return "application/xml"
            Case "mvb"
                Return "application/x-msmediaview"
            Case "mvc"
                Return "application/x-miva-compiled"
            Case "mxp"
                Return "application/x-mmxp"
            Case "nc"
                Return "application/x-netcdf"
            Case "nsc"
                Return "video/x-ms-asf"
            Case "nws"
                Return "message/rfc822"
            Case "ocx"
                Return "application/octet-stream"
            Case "oda"
                Return "application/oda"
            Case "odc"
                Return "text/x-ms-odc"
            Case "odh"
                Return "text/plain"
            Case "odl"
                Return "text/plain"
            Case "odp"
                Return "application/vnd.oasis.opendocument.presentation"
            Case "ods"
                Return "application/oleobject"
            Case "odt"
                Return "application/vnd.oasis.opendocument.text"
            Case "one"
                Return "application/onenote"
            Case "onea"
                Return "application/onenote"
            Case "onepkg"
                Return "application/onenote"
            Case "onetmp"
                Return "application/onenote"
            Case "onetoc"
                Return "application/onenote"
            Case "onetoc2"
                Return "application/onenote"
            Case "orderedtest"
                Return "application/xml"
            Case "osdx"
                Return "application/opensearchdescription+xml"
            Case "p10"
                Return "application/pkcs10"
            Case "p12"
                Return "application/x-pkcs12"
            Case "p7b"
                Return "application/x-pkcs7-certificates"
            Case "p7c"
                Return "application/pkcs7-mime"
            Case "p7m"
                Return "application/pkcs7-mime"
            Case "p7r"
                Return "application/x-pkcs7-certreqresp"
            Case "p7s"
                Return "application/pkcs7-signature"
            Case "pbm"
                Return "image/x-portable-bitmap"
            Case "pcast"
                Return "application/x-podcast"
            Case "pct"
                Return "image/pict"
            Case "pcx"
                Return "application/octet-stream"
            Case "pcz"
                Return "application/octet-stream"
            Case "pdf"
                Return "application/pdf"
            Case "pfb"
                Return "application/octet-stream"
            Case "pfm"
                Return "application/octet-stream"
            Case "pfx"
                Return "application/x-pkcs12"
            Case "pgm"
                Return "image/x-portable-graymap"
            Case "pic"
                Return "image/pict"
            Case "pict"
                Return "image/pict"
            Case "pkgdef"
                Return "text/plain"
            Case "pkgundef"
                Return "text/plain"
            Case "pko"
                Return "application/vnd.ms-pki.pko"
            Case "pls"
                Return "audio/scpls"
            Case "pma"
                Return "application/x-perfmon"
            Case "pmc"
                Return "application/x-perfmon"
            Case "pml"
                Return "application/x-perfmon"
            Case "pmr"
                Return "application/x-perfmon"
            Case "pmw"
                Return "application/x-perfmon"
            Case "png"
                Return "image/png"
            Case "pnm"
                Return "image/x-portable-anymap"
            Case "pnt"
                Return "image/x-macpaint"
            Case "pntg"
                Return "image/x-macpaint"
            Case "pnz"
                Return "image/png"
            Case "pot"
                Return "application/vnd.ms-powerpoint"
                'Case "potm"
                '    Return "application/vnd.ms-powerpoint.template.macroenabled.12"
            Case "potx"
                Return "application/vnd.openxmlformats-officedocument.presentationml.template"
            Case "ppa"
                Return "application/vnd.ms-powerpoint"
                'Case "ppam"
                '    Return "application/vnd.ms-powerpoint.addin.macroenabled.12"
            Case "ppm"
                Return "image/x-portable-pixmap"
            Case "pps"
                Return "application/vnd.ms-powerpoint"
                'Case "ppsm"
                '    Return "application/vnd.ms-powerpoint.slideshow.macroenabled.12"
            Case "ppsx"
                Return "application/vnd.openxmlformats-officedocument.presentationml.slideshow"
            Case "ppt"
                Return "application/vnd.ms-powerpoint"
                'Case "pptm"
                '    Return "application/vnd.ms-powerpoint.presentation.macroenabled.12"
            Case "pptx"
                Return "application/vnd.openxmlformats-officedocument.presentationml.presentation"
            Case "prf"
                Return "application/pics-rules"
            Case "prm"
                Return "application/octet-stream"
            Case "prx"
                Return "application/octet-stream"
            Case "ps"
                Return "application/postscript"
            Case "psc1"
                Return "application/powershell"
            Case "psd"
                Return "application/octet-stream"
            Case "psess"
                Return "application/xml"
            Case "psm"
                Return "application/octet-stream"
            Case "psp"
                Return "application/octet-stream"
            Case "pub"
                Return "application/x-mspublisher"
            Case "pwz"
                Return "application/vnd.ms-powerpoint"
            Case "qht"
                Return "text/x-html-insertion"
            Case "qhtm"
                Return "text/x-html-insertion"
            Case "qt"
                Return "video/quicktime"
            Case "qti"
                Return "image/x-quicktime"
            Case "qtif"
                Return "image/x-quicktime"
            Case "qtl"
                Return "application/x-quicktimeplayer"
            Case "qxd"
                Return "application/octet-stream"
            Case "ra"
                Return "audio/x-pn-realaudio"
            Case "ram"
                Return "audio/x-pn-realaudio"
            Case "rar"
                Return "application/octet-stream"
            Case "ras"
                Return "image/x-cmu-raster"
            Case "rat"
                Return "application/rat-file"
            Case "rc"
                Return "text/plain"
            Case "rc2"
                Return "text/plain"
            Case "rct"
                Return "text/plain"
            Case "rdlc"
                Return "application/xml"
            Case "resx"
                Return "application/xml"
            Case "rf"
                Return "image/vnd.rn-realflash"
            Case "rgb"
                Return "image/x-rgb"
            Case "rgs"
                Return "text/plain"
            Case "rm"
                Return "application/vnd.rn-realmedia"
            Case "rmi"
                Return "audio/mid"
            Case "rmp"
                Return "application/vnd.rn-rn_music_package"
            Case "roff"
                Return "application/x-troff"
            Case "rpm"
                Return "audio/x-pn-realaudio-plugin"
            Case "rqy"
                Return "text/x-ms-rqy"
            Case "rtf"
                Return "application/rtf"
            Case "rtx"
                Return "text/richtext"
            Case "ruleset"
                Return "application/xml"
            Case "s"
                Return "text/plain"
            Case "safariextz"
                Return "application/x-safari-safariextz"
            Case "scd"
                Return "application/x-msschedule"
            Case "sct"
                Return "text/scriptlet"
            Case "sd2"
                Return "audio/x-sd2"
            Case "sdp"
                Return "application/sdp"
            Case "sea"
                Return "application/octet-stream"
            Case "searchconnector-ms"
                Return "application/windows-search-connector+xml"
            Case "setpay"
                Return "application/set-payment-initiation"
            Case "setreg"
                Return "application/set-registration-initiation"
            Case "settings"
                Return "application/xml"
            Case "sgimb"
                Return "application/x-sgimb"
            Case "sgml"
                Return "text/sgml"
            Case "sh"
                Return "application/x-sh"
            Case "shar"
                Return "application/x-shar"
            Case "shtml"
                Return "text/html"
            Case "sit"
                Return "application/x-stuffit"
            Case "sitemap"
                Return "application/xml"
            Case "skin"
                Return "application/xml"
                'Case "sldm"
                '    Return "application/vnd.ms-powerpoint.slide.macroenabled.12"
            Case "sldx"
                Return "application/vnd.openxmlformats-officedocument.presentationml.slide"
            Case "slk"
                Return "application/vnd.ms-excel"
            Case "sln"
                Return "text/plain"
            Case "slupkg-ms"
                Return "application/x-ms-license"
            Case "smd"
                Return "audio/x-smd"
            Case "smi"
                Return "application/octet-stream"
            Case "smx"
                Return "audio/x-smd"
            Case "smz"
                Return "audio/x-smd"
            Case "snd"
                Return "audio/basic"
            Case "snippet"
                Return "application/xml"
            Case "snp"
                Return "application/octet-stream"
            Case "sol"
                Return "text/plain"
            Case "sor"
                Return "text/plain"
            Case "spc"
                Return "application/x-pkcs7-certificates"
            Case "spl"
                Return "application/futuresplash"
            Case "src"
                Return "application/x-wais-source"
            Case "srf"
                Return "text/plain"
            Case "ssisdeploymentmanifest"
                Return "text/xml"
            Case "ssm"
                Return "application/streamingmedia"
            Case "sst"
                Return "application/vnd.ms-pki.certstore"
            Case "stl"
                Return "application/vnd.ms-pki.stl"
            Case "sv4cpio"
                Return "application/x-sv4cpio"
            Case "sv4crc"
                Return "application/x-sv4crc"
            Case "svc"
                Return "application/xml"
            Case "swf"
                Return "application/x-shockwave-flash"
            Case "t"
                Return "application/x-troff"
            Case "tar"
                Return "application/x-tar"
            Case "tcl"
                Return "application/x-tcl"
            Case "testrunconfig"
                Return "application/xml"
            Case "testsettings"
                Return "application/xml"
            Case "tex"
                Return "application/x-tex"
            Case "texi"
                Return "application/x-texinfo"
            Case "texinfo"
                Return "application/x-texinfo"
            Case "tgz"
                Return "application/x-compressed"
            Case "thmx"
                Return "application/vnd.ms-officetheme"
            Case "thn"
                Return "application/octet-stream"
            Case "tif"
                Return "image/tiff"
            Case "tiff"
                Return "image/tiff"
            Case "tlh"
                Return "text/plain"
            Case "tli"
                Return "text/plain"
            Case "toc"
                Return "application/octet-stream"
            Case "tr"
                Return "application/x-troff"
            Case "trm"
                Return "application/x-msterminal"
            Case "trx"
                Return "application/xml"
            Case "ts"
                Return "video/vnd.dlna.mpeg-tts"
            Case "tsv"
                Return "text/tab-separated-values"
            Case "ttf"
                Return "application/octet-stream"
            Case "tts"
                Return "video/vnd.dlna.mpeg-tts"
            Case "txt"
                Return "text/plain"
            Case "u32"
                Return "application/octet-stream"
            Case "uls"
                Return "text/iuls"
            Case "user"
                Return "text/plain"
            Case "ustar"
                Return "application/x-ustar"
            Case "vb"
                Return "text/plain"
            Case "vbdproj"
                Return "text/plain"
            Case "vbk"
                Return "video/mpeg"
            Case "vbproj"
                Return "text/plain"
            Case "vbs"
                Return "text/vbscript"
            Case "vcf"
                Return "text/x-vcard"
            Case "vcproj"
                Return "application/xml"
            Case "vcs"
                Return "text/plain"
            Case "vcxproj"
                Return "application/xml"
            Case "vddproj"
                Return "text/plain"
            Case "vdp"
                Return "text/plain"
            Case "vdproj"
                Return "text/plain"
            Case "vdx"
                Return "application/vnd.ms-visio.viewer"
            Case "vml"
                Return "text/xml"
            Case "vscontent"
                Return "application/xml"
            Case "vsct"
                Return "text/xml"
            Case "vsd"
                Return "application/vnd.visio"
            Case "vsi"
                Return "application/ms-vsi"
            Case "vsix"
                Return "application/vsix"
            Case "vsixlangpack"
                Return "text/xml"
            Case "vsixmanifest"
                Return "text/xml"
            Case "vsmdi"
                Return "application/xml"
            Case "vspscc"
                Return "text/plain"
            Case "vss"
                Return "application/vnd.visio"
            Case "vsscc"
                Return "text/plain"
            Case "vssettings"
                Return "text/xml"
            Case "vssscc"
                Return "text/plain"
            Case "vst"
                Return "application/vnd.visio"
            Case "vstemplate"
                Return "text/xml"
            Case "vsto"
                Return "application/x-ms-vsto"
            Case "vsw"
                Return "application/vnd.visio"
            Case "vsx"
                Return "application/vnd.visio"
            Case "vtx"
                Return "application/vnd.visio"
            Case "wav"
                Return "audio/wav"
            Case "wave"
                Return "audio/wav"
            Case "wax"
                Return "audio/x-ms-wax"
            Case "wbk"
                Return "application/msword"
            Case "wbmp"
                Return "image/vnd.wap.wbmp"
            Case "wcm"
                Return "application/vnd.ms-works"
            Case "wdb"
                Return "application/vnd.ms-works"
            Case "wdp"
                Return "image/vnd.ms-photo"
            Case "webarchive"
                Return "application/x-safari-webarchive"
            Case "webtest"
                Return "application/xml"
            Case "wiq"
                Return "application/xml"
            Case "wiz"
                Return "application/msword"
            Case "wks"
                Return "application/vnd.ms-works"
            Case "wlmp"
                Return "application/wlmoviemaker"
            Case "wlpginstall"
                Return "application/x-wlpg-detect"
            Case "wlpginstall3"
                Return "application/x-wlpg3-detect"
            Case "wm"
                Return "video/x-ms-wm"
            Case "wma"
                Return "audio/x-ms-wma"
            Case "wmd"
                Return "application/x-ms-wmd"
            Case "wmf"
                Return "application/x-msmetafile"
            Case "wml"
                Return "text/vnd.wap.wml"
            Case "wmlc"
                Return "application/vnd.wap.wmlc"
            Case "wmls"
                Return "text/vnd.wap.wmlscript"
            Case "wmlsc"
                Return "application/vnd.wap.wmlscriptc"
            Case "wmp"
                Return "video/x-ms-wmp"
            Case "wmv"
                Return "video/x-ms-wmv"
            Case "wmx"
                Return "video/x-ms-wmx"
            Case "wmz"
                Return "application/x-ms-wmz"
            Case "wpl"
                Return "application/vnd.ms-wpl"
            Case "wps"
                Return "application/vnd.ms-works"
            Case "wri"
                Return "application/x-mswrite"
            Case "wrl"
                Return "x-world/x-vrml"
            Case "wrz"
                Return "x-world/x-vrml"
            Case "wsc"
                Return "text/scriptlet"
            Case "wsdl"
                Return "text/xml"
            Case "wvx"
                Return "video/x-ms-wvx"
            Case "x"
                Return "application/directx"
            Case "xaf"
                Return "x-world/x-vrml"
            Case "xaml"
                Return "application/xaml+xml"
            Case "xap"
                Return "application/x-silverlight-app"
            Case "xbap"
                Return "application/x-ms-xbap"
            Case "xbm"
                Return "image/x-xbitmap"
            Case "xdr"
                Return "text/plain"
            Case "xht"
                Return "application/xhtml+xml"
            Case "xhtml"
                Return "application/xhtml+xml"
            Case "xla"
                Return "application/vnd.ms-excel"
                'Case "xlam"
                '    Return "application/vnd.ms-excel.addin.macroenabled.12"
            Case "xlc"
                Return "application/vnd.ms-excel"
            Case "xld"
                Return "application/vnd.ms-excel"
            Case "xlk"
                Return "application/vnd.ms-excel"
            Case "xll"
                Return "application/vnd.ms-excel"
            Case "xlm"
                Return "application/vnd.ms-excel"
            Case "xls"
                Return "application/vnd.ms-excel"
                'Case "xlsb"
                '    Return "application/vnd.ms-excel.sheet.binary.macroenabled.12"
                'Case "xlsm"
                '    Return "application/vnd.ms-excel.sheet.macroenabled.12"
            Case "xlsx"
                Return "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            Case "xlt"
                Return "application/vnd.ms-excel"
                'Case "xltm"
                '    Return "application/vnd.ms-excel.template.macroenabled.12"
            Case "xltx"
                Return "application/vnd.openxmlformats-officedocument.spreadsheetml.template"
            Case "xlw"
                Return "application/vnd.ms-excel"
            Case "xml"
                Return "text/xml"
            Case "xmta"
                Return "application/xml"
            Case "xof"
                Return "x-world/x-vrml"
            Case "xoml"
                Return "text/plain"
            Case "xpm"
                Return "image/x-xpixmap"
            Case "xps"
                Return "application/vnd.ms-xpsdocument"
            Case "xrm-ms"
                Return "text/xml"
            Case "xsc"
                Return "application/xml"
            Case "xsd"
                Return "text/xml"
            Case "xsf"
                Return "text/xml"
            Case "xsl"
                Return "text/xml"
            Case "xslt"
                Return "text/xml"
            Case "xsn"
                Return "application/octet-stream"
            Case "xss"
                Return "application/xml"
            Case "xtp"
                Return "application/octet-stream"
            Case "xwd"
                Return "image/x-xwindowdump"
            Case "z"
                Return "application/x-compress"
            Case "zip"
                Return "application/zip"
                '       Case Else
                '#End Region
                '            Return "application/octet-stream"
        End Select
    End Function

    Public Shared Function IsFileTypeAllowed(extension As String) As Boolean
        Dim IsValidFileExt As Boolean = False
        If extension Is Nothing Then
            Throw New ArgumentNullException("extension")
        End If

        If extension.StartsWith(".") Then
            extension = extension.Substring(1)
        End If


        Select Case extension.Trim().ToLower()
            Case "mp4"
                IsValidFileExt = True
            Case "msg"

                IsValidFileExt = True

            Case "doc"
                IsValidFileExt = True

            Case "docx"
                IsValidFileExt = True

            Case "rtf"
                IsValidFileExt = True

            Case "odt"
                IsValidFileExt = True

            Case "jpg"
                IsValidFileExt = True

            Case "jpeg"
                IsValidFileExt = True

            Case "bmp"
                IsValidFileExt = True

            Case "png"
                IsValidFileExt = True

            Case "html"
                IsValidFileExt = True

            Case "xls"
                IsValidFileExt = True

            Case "xlsx"
                IsValidFileExt = True

            Case "pdf"
                IsValidFileExt = True

            Case "zip"
                IsValidFileExt = True

            Case "gif"
                IsValidFileExt = True

            Case "txt"
                IsValidFileExt = True

            Case "ppt"
                IsValidFileExt = True

            Case "pptx"
                IsValidFileExt = True

            Case "rar"
                IsValidFileExt = True

            Case "xaml"
                IsValidFileExt = True

            Case "xlr"
                IsValidFileExt = True

            Case "csv"
                IsValidFileExt = True

            Case "tif"
                IsValidFileExt = True

            Case "tiff"
                IsValidFileExt = True

            Case "rdlc"
                IsValidFileExt = True

            Case "resx"
                IsValidFileExt = True

            Case "rf"
                IsValidFileExt = True

            Case "rgb"
                IsValidFileExt = True

            Case "rgs"
                IsValidFileExt = True

            Case "rm"
                IsValidFileExt = True

            Case "rmi"
                IsValidFileExt = True

            Case "rmp"
                IsValidFileExt = True

            Case "roff"
                IsValidFileExt = True

            Case "rpm"
                IsValidFileExt = True

            Case "rqy"
                IsValidFileExt = True

            Case "rtf"
                IsValidFileExt = True

            Case "rtx"
                IsValidFileExt = True

            Case "ruleset"
                IsValidFileExt = True

            Case "s"
                IsValidFileExt = True

            Case "safariextz"
                IsValidFileExt = True

            Case "scd"
                IsValidFileExt = True

            Case "sct"
                IsValidFileExt = True

            Case "sd2"
                IsValidFileExt = True

            Case "sdp"
                IsValidFileExt = True

            Case "sea"
                IsValidFileExt = True

            Case "searchconnector-ms"
                IsValidFileExt = True

            Case "setpay"
                IsValidFileExt = True

            Case "setreg"
                IsValidFileExt = True

            Case "settings"
                IsValidFileExt = True

            Case "sgimb"
                IsValidFileExt = True

            Case "sgml"
                IsValidFileExt = True

            Case "sh"
                IsValidFileExt = True

            Case "shar"
                IsValidFileExt = True

            Case "shtml"
                IsValidFileExt = True

            Case "sit"
                IsValidFileExt = True

            Case "sitemap"
                IsValidFileExt = True

            Case "skin"
                IsValidFileExt = True

            Case "sldx"
                IsValidFileExt = True

            Case "slk"
                IsValidFileExt = True

            Case "sln"
                IsValidFileExt = True
            Case "slupkg-ms"
                IsValidFileExt = True

            Case "smd"
                IsValidFileExt = True

            Case "smi"
                IsValidFileExt = True

            Case "smx"
                IsValidFileExt = True

            Case "smz"
                IsValidFileExt = True

            Case "snd"
                IsValidFileExt = True

            Case "snippet"
                IsValidFileExt = True

            Case "snp"
                IsValidFileExt = True

            Case "sol"
                IsValidFileExt = True

            Case "sor"
                IsValidFileExt = True

            Case "spc"
                IsValidFileExt = True

            Case "spl"
                IsValidFileExt = True

            Case "src"
                IsValidFileExt = True

            Case "srf"
                IsValidFileExt = True

            Case "ssisdeploymentmanifest"
                IsValidFileExt = True

            Case "ssm"
                IsValidFileExt = True

            Case "sst"
                IsValidFileExt = True

            Case "stl"
                IsValidFileExt = True

            Case "sv4cpio"
                IsValidFileExt = True

            Case "sv4crc"
                IsValidFileExt = True

            Case "svc"
                IsValidFileExt = True

            Case "swf"
                IsValidFileExt = True

            Case "t"
                IsValidFileExt = True

            Case "tar"
                IsValidFileExt = True

            Case "tcl"
                IsValidFileExt = True

            Case "testrunconfig"
                IsValidFileExt = True

            Case "testsettings"
                IsValidFileExt = True

            Case "tex"
                IsValidFileExt = True

            Case "texi"
                IsValidFileExt = True

            Case "texinfo"
                IsValidFileExt = True

            Case "tgz"
                IsValidFileExt = True

            Case "thmx"
                IsValidFileExt = True

            Case "thn"
                IsValidFileExt = True

            Case "tif"
                IsValidFileExt = True

            Case "tiff"
                IsValidFileExt = True

            Case "tlh"
                IsValidFileExt = True

            Case "tli"
                IsValidFileExt = True

            Case "toc"
                IsValidFileExt = True

            Case "tr"
                IsValidFileExt = True

            Case "trm"
                IsValidFileExt = True

            Case "trx"
                IsValidFileExt = True

            Case "ts"
                IsValidFileExt = True

            Case "tsv"
                IsValidFileExt = True

            Case "ttf"
                IsValidFileExt = True

            Case "tts"
                IsValidFileExt = True

            Case "txt"
                IsValidFileExt = True

            Case "u32"
                IsValidFileExt = True

            Case "uls"
                IsValidFileExt = True

            Case "user"
                IsValidFileExt = True

            Case "ustar"
                IsValidFileExt = True

            Case "vb"
                IsValidFileExt = True

            Case "vbdproj"
                IsValidFileExt = True

            Case "vbk"
                IsValidFileExt = True

            Case "vbproj"
                IsValidFileExt = True

            Case "vbs"
                IsValidFileExt = True

            Case "vcf"
                IsValidFileExt = True

            Case "vcproj"
                IsValidFileExt = True

            Case "vcs"
                IsValidFileExt = True

            Case "vcxproj"
                IsValidFileExt = True

            Case "vddproj"
                IsValidFileExt = True

            Case "vdp"
                IsValidFileExt = True

            Case "vdproj"
                IsValidFileExt = True

            Case "vdx"
                IsValidFileExt = True

            Case "vml"
                IsValidFileExt = True

            Case "vscontent"
                IsValidFileExt = True

            Case "vsct"
                IsValidFileExt = True

            Case "vsd"
                IsValidFileExt = True

            Case "vsi"
                IsValidFileExt = True

            Case "vsix"
                IsValidFileExt = True

            Case "vsixlangpack"
                IsValidFileExt = True

            Case "vsixmanifest"
                IsValidFileExt = True

            Case "vsmdi"
                IsValidFileExt = True

            Case "vspscc"
                IsValidFileExt = True

            Case "vss"
                IsValidFileExt = True

            Case "vsscc"
                IsValidFileExt = True

            Case "vssettings"
                IsValidFileExt = True

            Case "vssscc"
                IsValidFileExt = True

            Case "vst"
                IsValidFileExt = True

            Case "vstemplate"
                IsValidFileExt = True

            Case "vsto"
                IsValidFileExt = True

            Case "vsw"
                IsValidFileExt = True

            Case "vsx"
                IsValidFileExt = True

            Case "vtx"
                IsValidFileExt = True

            Case "wav"
                IsValidFileExt = True

            Case "wave"
                IsValidFileExt = True

            Case "wax"
                IsValidFileExt = True

            Case "wbk"
                IsValidFileExt = True

            Case "wbmp"
                IsValidFileExt = True

            Case "wcm"
                IsValidFileExt = True

            Case "wdb"
                IsValidFileExt = True

            Case "wdp"
                IsValidFileExt = True

            Case "webarchive"
                IsValidFileExt = True

            Case "webtest"
                IsValidFileExt = True

            Case "wiq"
                IsValidFileExt = True

            Case "wiz"
                IsValidFileExt = True

            Case "wks"
                IsValidFileExt = True

            Case "wlmp"
                IsValidFileExt = True

            Case "wlpginstall"
                IsValidFileExt = True

            Case "wlpginstall3"
                IsValidFileExt = True

            Case "wm"
                IsValidFileExt = True

            Case "wma"
                IsValidFileExt = True

            Case "wmd"
                IsValidFileExt = True

            Case "wmf"
                IsValidFileExt = True

            Case "wml"
                IsValidFileExt = True

            Case "wmlc"
                IsValidFileExt = True

            Case "wmls"
                IsValidFileExt = True

            Case "wmlsc"
                IsValidFileExt = True

            Case "wmp"
                IsValidFileExt = True

            Case "wmv"
                IsValidFileExt = True

            Case "wmx"
                IsValidFileExt = True

            Case "wmz"
                IsValidFileExt = True

            Case "wpl"
                IsValidFileExt = True

            Case "wps"
                IsValidFileExt = True

            Case "wri"
                IsValidFileExt = True

            Case "wrl"
                IsValidFileExt = True

            Case "wrz"
                IsValidFileExt = True

            Case "wsc"
                IsValidFileExt = True

            Case "wsdl"
                IsValidFileExt = True

            Case "wvx"
                IsValidFileExt = True

            Case "x"
                IsValidFileExt = True

            Case "xaf"
                IsValidFileExt = True

            Case "xaml"
                IsValidFileExt = True

            Case "xap"
                IsValidFileExt = True

            Case "xbap"
                IsValidFileExt = True

            Case "xbm"
                IsValidFileExt = True

            Case "xdr"
                IsValidFileExt = True

            Case "xht"
                IsValidFileExt = True

            Case "xhtml"
                IsValidFileExt = True

            Case "xla"
                IsValidFileExt = True

            Case "xlc"
                IsValidFileExt = True

            Case "xld"
                IsValidFileExt = True

            Case "xlk"
                IsValidFileExt = True

            Case "xll"
                IsValidFileExt = True

            Case "xlm"
                IsValidFileExt = True
            Case "xls"
                IsValidFileExt = True

            Case "xlsx"
                IsValidFileExt = True

            Case "xlt"
                IsValidFileExt = True
            Case "xltx"
                IsValidFileExt = True

            Case "xlw"
                IsValidFileExt = True

            Case "xml"
                IsValidFileExt = True
            Case "xmta"
                IsValidFileExt = True
            Case "xof"
                IsValidFileExt = True
            Case "xoml"
                IsValidFileExt = True
            Case "xpm"
                IsValidFileExt = True
            Case "xps"
                IsValidFileExt = True
            Case "xrm-ms"
                IsValidFileExt = True
            Case "xsc"
                IsValidFileExt = True
            Case "xsd"
                IsValidFileExt = True
            Case "xsf"
                IsValidFileExt = True
            Case "xsl"
                IsValidFileExt = True
            Case "xslt"
                IsValidFileExt = True
            Case "xsn"
                IsValidFileExt = True
            Case "xss"
                IsValidFileExt = True
            Case "xtp"
                IsValidFileExt = True
            Case "xwd"
                IsValidFileExt = True
            Case "z"
                IsValidFileExt = True
            Case "zip"
                IsValidFileExt = True
        End Select

        Return IsValidFileExt
    End Function

    Public Function CheckUniqueKey(ByVal dt As DataTable, ByVal pnlField As Panel, ByVal DocumentType As String, ByVal PDocumentType As String, ByRef Message As String, Optional ByVal TID As Integer = 0) As Boolean
        Dim ret As Boolean = False
        Dim DsU As New DataSet()
        Dim Query = ""
        Dim Strkeys As String = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim Count = 0
        Dim ExChars = ""
        Dim DisplayName = ""
        Try
            Dim EID = dt.Rows(0).Item("EID")
            Dim ObjUp As New UpdateData()
            'Getting Unique key from database
            'Updated by Ajeet Kumar for combining child item along with main document

            DsU = ObjUp.GetKeys(EID, DocumentType)
            If DsU.Tables(0).Rows.Count > 0 Then
                ExChars = Convert.ToString(DsU.Tables(0).Rows(0).Item("ExChars"))
                For i As Integer = 0 To DsU.Tables(0).Rows.Count - 1
                    Dim DR As DataRow() = dt.Select("FieldID=" & DsU.Tables(0).Rows(i).Item("FieldID"))
                    DisplayName = DisplayName & DsU.Tables(0).Rows(i).Item("DisplayName") & ","
                    If DR.Length > 0 Then
                        Dim FieldType = "", FieldID = ""
                        FieldType = DR(0).Item("FieldType")
                        FieldID = DR(0).Item("FieldType")
                        Dim Value = ""
                        'this Code is written by assumption that only Textbox,dropdown,lookup,Text Area can participate in unique key creation 
                        Select Case FieldType.ToUpper()
                            Case "LOOKUP"
                                Dim txtBox As TextBox = CType(pnlField.FindControl("fld" & DR(0).Item("FieldID").ToString()), TextBox)
                                Value = txtBox.Text.Trim
                            Case "TEXT BOX"
                                Dim txtBox As TextBox = CType(pnlField.FindControl("fld" & DR(0).Item("FieldID").ToString()), TextBox)
                                Value = txtBox.Text.Trim
                            Case "DROP DOWN"
                                Dim DDL As DropDownList = CType(pnlField.FindControl("fld" & DR(0).Item("FieldID").ToString()), DropDownList)
                                Value = DDL.SelectedItem.Value.Trim
                            Case "AUTOCOMPLETE"
                                Dim HdnAuto As HiddenField = CType(pnlField.FindControl("hdn" & DR(0).Item("FieldID").ToString()), HiddenField)
                                Value = HdnAuto.Value.Trim
                        End Select
                        'Code For Removing Extra Charactor 
                        If Not String.IsNullOrEmpty(ExChars.Trim) Then
                            Value = ObjUp.Removekeys(Value, ExChars)
                        End If
                        If Strkeys.Trim <> "" Then
                            Strkeys = Strkeys & " AND " & GenerateReplaceStatement(" D." & Convert.ToString(DsU.Tables(0).Rows(i).Item("FieldMapping")), ExChars) & "= '" & Value & "'"
                        Else
                            Strkeys = GenerateReplaceStatement("D." & Convert.ToString(DsU.Tables(0).Rows(i).Item("FieldMapping")), ExChars) & "= '" & Value & "'"
                        End If
                    End If
                Next
                Dim DBTableName = ""
                Dim CurStatus = ""
                If dt.Rows(0).Item("FormType").ToString.Trim = "MASTER" Then
                    DBTableName = "MMM_MST_MASTER"
                Else
                    DBTableName = "MMM_MST_DOC"
                    CurStatus = " AND CurStatus<>'REJECTED'"
                End If
                Dim WhrCond = ""
                Dim JoinStr = ""
                Query = "Select Count(*) FROM " & DBTableName & " D"
                'WHere Condition to be imposed on 
                If TID > 0 Then
                    WhrCond = " WHERE D.EID=" & EID & " AND D.DocumentType='" & PDocumentType & "'" & " AND " & Strkeys & " and D.tid<>" & TID
                Else
                    WhrCond = " WHERE D.EID=" & EID & " AND D.DocumentType='" & PDocumentType & "'" & " AND " & Strkeys
                End If

                'Getting all the child item that has been confegured for Composit keys
                Dim chldDuplicate = "SELECT DropDown 'DocumentType',FieldID FROM MMM_MST_FIELDS F INNER JOIN MMM_MST_FORMS FF ON FF.FormName=F.DROPDOWN WHERE F.EID=" & HttpContext.Current.Session("EID") & " AND FF.EID=" & HttpContext.Current.Session("EID") & " AND F.Documenttype='" & DocumentType & "' AND F.FIeldType='Child Item' AND FF.Uniquekeys IS NOT NULL AND FF.Uniquekeys <>''"
                Dim chldDS As New DataSet()
                Using con As New SqlConnection(conStr)
                    Using da As New SqlDataAdapter(chldDuplicate, con)
                        da.Fill(chldDS)
                    End Using
                End Using
                Dim DisplayMsg = ""
                'in case of combined composit key chldDS will have different rows
                If chldDS.Tables(0).Rows.Count > 0 Then
                    'Now running loop  for all the child item
                    For c As Integer = 0 To chldDS.Tables(0).Rows.Count - 1
                        DocumentType = chldDS.Tables(0).Rows(c).Item("DocumentType")
                        Dim FieldID = chldDS.Tables(0).Rows(c).Item("FieldID")
                        Dim lastRow As Integer = 0
                        Dim v = DocumentType.Replace(" ", "_").Trim
                        lastRow = HttpContext.Current.Session(v & "LastRow")
                        'getting unique key of that child item
                        DsU = ObjUp.GetKeys(EID, DocumentType)
                        Dim GV As GridView = CType(pnlField.FindControl("GRD" & FieldID.ToString()), GridView)
                        Dim Keys = "", values1 = "", Strkeys1 = ""
                        If DsU.Tables(0).Rows.Count > 0 Then
                            If DsU.Tables(0).Rows.Count > 0 Then
                                For Each GR As GridViewRow In GV.Rows
                                    Keys = ""
                                    ExChars = Convert.ToString(DsU.Tables(0).Rows(0).Item("ExChars"))
                                    If GR.RowIndex <= lastRow Then
                                        If GR.RowType = DataControlRowType.DataRow Then
                                            If GR.Cells(0).Text.ToUpper <> "TOTAL" Then
                                                DisplayMsg = ""
                                                For m As Integer = 0 To DsU.Tables(0).Rows.Count - 1
                                                    Dim FieldID1 = DsU.Tables(0).Rows(m).Item("FieldID").ToString
                                                    Dim FieldType = DsU.Tables(0).Rows(m).Item("FieldType").ToString
                                                    If DisplayMsg = "" Then
                                                        DisplayMsg = DsU.Tables(0).Rows(m).Item("DisplayName").ToString
                                                    Else
                                                        DisplayMsg = DisplayMsg & ", " & DsU.Tables(0).Rows(m).Item("DisplayName").ToString
                                                    End If
                                                    Select Case FieldType.Trim.ToUpper
                                                        Case "TEXT BOX"
                                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID1 & GR.RowIndex), TextBox)
                                                            values1 = txtBox.Text.Trim.ToUpper()
                                                        Case "DROP DOWN"
                                                            Dim DDL As DropDownList = CType(GR.FindControl("fld" & FieldID1 & "_" & GR.RowIndex), DropDownList)
                                                            values1 = DDL.SelectedItem.Value
                                                        Case "CALCULATIVE FIELD"
                                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID1 & GR.RowIndex), TextBox)
                                                            values1 = txtBox.Text.Trim.ToUpper()
                                                        Case "LOOKUP"
                                                            Dim txtBox As TextBox = CType(GR.FindControl("fld" & FieldID1 & GR.RowIndex), TextBox)
                                                            values1 = txtBox.Text.Trim.ToUpper()
                                                    End Select
                                                    If Not String.IsNullOrEmpty(ExChars.Trim) Then
                                                        values1 = ObjUp.Removekeys(values1, ExChars)
                                                    End If
                                                    If Strkeys1.Trim <> "" Then
                                                        Strkeys1 = Strkeys1 & " AND" & GenerateReplaceStatement(" C." & Convert.ToString(DsU.Tables(0).Rows(m).Item("FieldMapping")), ExChars) & "= '" & values1 & "'"
                                                    Else
                                                        Strkeys1 = GenerateReplaceStatement("C." & Convert.ToString(DsU.Tables(0).Rows(m).Item("FieldMapping")), ExChars) & "= '" & values1 & "'"
                                                    End If
                                                Next
                                                'Code For checking duplicate rows
                                                'Real Database Query will move from here 
                                                JoinStr = " inner join MMM_MST_DOC_ITEM C ON C.DOCID=D.tid"
                                                Dim ChldCond = " AND C.Documenttype= '" & DocumentType & "' AND " & Strkeys1
                                                Dim StrNewQ = Query & JoinStr & WhrCond & CurStatus & ChldCond
                                                Using con As New SqlConnection(conStr)
                                                    Using da As New SqlDataAdapter(StrNewQ, con)
                                                        con.Open()
                                                        Count = da.SelectCommand.ExecuteScalar()
                                                    End Using
                                                End Using
                                                If Count > 0 Then
                                                    Message = "Please check line number " & (GR.RowIndex + 1) & " of " & DocumentType & "," & " Combination of " & DisplayMsg & " and " & DisplayName & " of main document must be unique."
                                                    Exit For
                                                End If

                                            End If
                                        End If
                                    End If
                                    If Count > 0 Then
                                        Exit For
                                    End If
                                Next
                            End If
                        End If
                        If Count > 0 Then
                            Exit For
                        End If
                    Next
                Else
                    Query = Query & WhrCond & CurStatus
                    If Convert.ToString(dt.Rows(0).Item("AdditionalUniqueFields")) <> String.Empty Or Convert.ToString(dt.Rows(0).Item("AdditionalUniqueFields")) <> "" Then
                        Query = Query & " and " & Convert.ToString(dt.Rows(0).Item("AdditionalUniqueFields"))
                    End If
                    Using con As New SqlConnection(conStr)
                        Using da As New SqlDataAdapter(Query, con)
                            con.Open()
                            Count = da.SelectCommand.ExecuteScalar()
                        End Using
                    End Using
                End If
                If Count > 0 Then
                    DisplayName = DisplayName.Substring(0, DisplayName.Trim.Length - 1)
                    If Message.Trim = "" Then
                        Message = "Please check that the combination of " & DisplayName & " must be unique!"
                    End If
                    ret = False
                Else
                    ret = True
                End If
            Else
                ret = True
            End If
        Catch ex As Exception
            Throw
        End Try
        Return ret
    End Function

    Public Function GenerateReplaceStatement(ByVal Str As String, ByVal charList As String) As String
        Dim ret = ""
        Dim RlpStr = ""
        If charList.Trim = "" Then
            ret = Str
        Else
            Dim arr = charList.Trim.Split(",")
            For i As Integer = 0 To arr.Length - 1
                If arr(i) <> "" Then
                    RlpStr = RlpStr & " Replace("
                End If
            Next
            RlpStr = RlpStr & Str
            For j As Integer = 0 To arr.Length - 1
                If arr(j) <> "" Then
                    Dim val = arr(j)
                    If val = "'" Then
                        val = "''"
                    End If
                    RlpStr = RlpStr & "," & "'" & val & "'" & ",''" & ")"
                End If
            Next
            ret = RlpStr
        End If
        Return ret
    End Function


    Public Sub ADDITEMTOGRID(ByVal dtFields As DataTable, ByVal FORMNAME As String, ByRef pnlFields As Panel)
        Dim dtFD As New DataTable
        Dim dtField As New DataTable
        Dim DTVALUE As New DataTable
        Dim errormsg As String = ""
        'dtField = ViewState(FORMNAME)
        dtField = dtFields
        If HttpContext.Current.Session(FORMNAME) Is Nothing Then
            For Each dr As DataRow In dtField.Rows
                dtFD.Columns.Add(dr.Item("displayname"), GetType(String))
                DTVALUE.Columns.Add(dr.Item("Displayname"), GetType(String))
            Next
            dtFD.Columns.Add("tid", GetType(String))
        Else
            dtFD = HttpContext.Current.Session(FORMNAME)
            DTVALUE = HttpContext.Current.Session(FORMNAME & "VAL")
            If dtFD.Rows.Count > 1 Then
                dtFD.Rows.RemoveAt(dtFD.Rows.Count - 1)
            End If
        End If
        Dim drnew As DataRow = dtFD.NewRow()
        Dim DRNEWVAL As DataRow = DTVALUE.NewRow()
        For Each dr As DataRow In dtField.Rows
            Dim dispName As String = dr.Item("displayname").ToString()
            Select Case dr.Item("FieldType").ToString().ToUpper()
                Case "TEXT BOX"
                    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dr.Item("FieldID").ToString()), TextBox)
                    drnew.Item(dr.Item("displayname")) = txtBox.Text
                    DRNEWVAL.Item(dr.Item("displayname")) = txtBox.Text
                Case "DROP DOWN"
                    Dim txtBox As DropDownList = CType(pnlFields.FindControl("fld" & dr.Item("FieldID").ToString()), DropDownList)
                    drnew.Item(dr.Item("displayname")) = txtBox.SelectedItem.Text
                    DRNEWVAL.Item(dr.Item("displayname")) = txtBox.SelectedItem.Value
                Case "CALCULATIVE FIELD"
                    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dr.Item("FieldID").ToString()), TextBox)
                    drnew.Item(dr.Item("displayname")) = txtBox.Text
                    DRNEWVAL.Item(dr.Item("displayname")) = txtBox.Text
                Case "LOOKUP"
                    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dr.Item("FieldID").ToString()), TextBox)
                    drnew.Item(dr.Item("displayname")) = txtBox.Text
                    DRNEWVAL.Item(dr.Item("displayname")) = txtBox.Text
            End Select
        Next
        drnew.Item("tid") = FORMNAME & "-" & dtFD.Rows.Count
        dtFD.Rows.Add(drnew)
        DTVALUE.Rows.Add(DRNEWVAL)
        HttpContext.Current.Session(FORMNAME) = dtFD
        HttpContext.Current.Session(FORMNAME & "VAL") = DTVALUE
        'BINDGRID1(dtFD)
        'ModalPopupExtender1.Hide()
    End Sub

    Public Function validateForm(ByVal doctype As String, ByVal eid As Integer, ByRef pnlFields As Panel, ByVal dT As DataTable, ByVal Action As String, ByVal tid As Integer, Optional ByVal DocNat As String = "CREATE") As String
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim datatype As String
        Dim fieldtype As String
        Dim datatype1 As String
        Dim errmsg As String = ""
        Dim txtobj1 As TextBox
        Dim txtobj As TextBox
        Dim lblObj As Label
        Dim hdn As HiddenField
        Dim hdnflg As HiddenField
        Dim ddltype As DropDownList
        Dim ddltype1 As DropDownList
        Dim lblfile As Label
        Dim fldidCheck As String
        Dim ValueCheck As String


        Dim arr1() As String
        Dim rtn As Integer
        Try
            da.SelectCommand.CommandText = "select * from MMM_MST_FORMVALIDATION where eid=" & eid & " and doctype='" & doctype & "' and docNature='" & DocNat & "'"
            Dim ds As New DataSet
            da.Fill(ds, "data")
            For Each rw As DataRow In ds.Tables("data").Rows
                Dim flg As Byte = "0"
                If rw.Item("Valtype").ToString.ToUpper <> "DYNAMIC" Then
                    da.SelectCommand.CommandText = "select datatype,fieldtype from mmm_mst_fields where eid=" & eid & " and documenttype='" & doctype & "' and fieldid=" & Right(rw.Item("fldID"), rw.Item("fldID").ToString.Length - 3) & ""
                    If con.State <> ConnectionState.Open Then
                        con.Open()
                    End If
                    flg = "1"
                    da.Fill(ds, "fieldtype")
                    Dim fldid As String = Replace(rw.Item("fldID"), "fld", "").TrimEnd
                    fldidCheck = Replace(rw.Item("operator"), "fld", "").TrimEnd
                    ValueCheck = rw.Item("value").ToString()
                    'Dim fldid As String = rw.Item("fldID").ToString.Substring(3, rw.Item("fldID").ToString.Length - 1)
                    datatype = ds.Tables("fieldtype").Rows(0).Item("datatype").ToString
                    fieldtype = ds.Tables("fieldtype").Rows(0).Item("fieldtype").ToString

                    If rw.Item("Valtype").ToString.ToUpper = "FIELD" Then
                        da.SelectCommand.CommandText = "select datatype from mmm_mst_fields where eid=" & eid & " and documenttype='" & doctype & "' and fieldid=" & Right(rw.Item("Value"), rw.Item("Value").ToString.Length - 3) & ""
                        datatype1 = da.SelectCommand.ExecuteScalar
                    End If

                    If rw.Item("Valtype").ToString.ToUpper = "STATIC" Then
                        txtobj = TryCast(pnlFields.FindControl(rw.Item("fldID")), TextBox)
                        ddltype1 = TryCast(pnlFields.FindControl(rw.Item("fldID")), DropDownList)
                    ElseIf rw.Item("Valtype").ToString.ToUpper = "FIELD" Then
                        txtobj = TryCast(pnlFields.FindControl(rw.Item("fldID")), TextBox)
                        ddltype1 = TryCast(pnlFields.FindControl(rw.Item("fldID")), DropDownList)
                        txtobj1 = TryCast(pnlFields.FindControl(rw.Item("Value")), TextBox)
                        ddltype = TryCast(pnlFields.FindControl(rw.Item("Value")), DropDownList)
                    ElseIf rw.Item("Valtype").ToString.ToUpper = "MANDATORY" Then
                        If fieldtype.ToUpper = "FILE UPLOADER" Then
                            lblObj = TryCast(pnlFields.FindControl(rw.Item("fldID")), Label)
                            'lable to show File text
                            lblfile = CType(pnlFields.FindControl("lblf" & fldid), Label)
                            'hidden field to hold file name
                            hdn = CType(pnlFields.FindControl("hdnf" & fldid), HiddenField)
                            'flag hidden field whether file is from database or new file added by user
                            hdnflg = CType(pnlFields.FindControl("hdnflg_" & fldid), HiddenField)
                            lblfile.Text = hdn.Value
                        Else
                            txtobj = TryCast(pnlFields.FindControl(rw.Item("fldID")), TextBox)
                            ddltype1 = TryCast(pnlFields.FindControl(rw.Item("fldID")), DropDownList)
                            txtobj1 = TryCast(pnlFields.FindControl(rw.Item("Operator")), TextBox)
                            ddltype = TryCast(pnlFields.FindControl(rw.Item("Operator")), DropDownList)
                        End If
                    End If
                End If


                Dim tbname As String = ""
                Dim sb As String = ""
                Dim sts As String = ""

                If rw.Item("Valtype").ToString.ToUpper = "DYNAMIC" Then
                    Dim ddlobj As DropDownList = TryCast(pnlFields.FindControl(rw.Item("fldid").ToString), DropDownList)
                    If ddlobj.SelectedItem.Text.ToUpper = "SELECT" Then
                        Dim fid As Integer
                        Dim dispname As String = ""
                        fid = rw.Item("fldID").ToString.Length - 3
                        da.SelectCommand.CommandText = " select displayname from mmm_mst_fields where fieldid=" & fid & ""
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        dispname = da.SelectCommand.ExecuteScalar()
                        errmsg = "Select " & dispname
                        con.Dispose()
                        Return errmsg
                        Exit Function
                    End If
                    arr1 = rw.Item("value").ToString.Split("-")
                    Dim arr2 As String()
                    Dim CNT As Integer = arr1.Length
                    For i As Integer = 1 To arr1.Length - 1
                        arr2 = Split(arr1(i), ":")
                        If i = 1 Then
                            tbname = arr2(0).ToString
                        End If
                        If arr2.Length > 1 Then
                            sb = sb & arr2(1).ToString & ","
                        End If
                        If i > 1 Then
                            Dim opr As String = Left(arr2(0), 1)
                            Dim opr1 As String = Left(arr2(0), 2)
                            opr1 = opr1.Replace(opr, "")

                            If opr1 = "=" Then
                                opr = opr & opr1
                            End If

                            Dim txt As String = Right(arr2(0), arr2(0).Length - opr.Length).ToString
                            Dim txtbx1 As TextBox = TryCast(pnlFields.FindControl(txt), TextBox)
                            Dim ddllst As DropDownList = TryCast(pnlFields.FindControl(txt), DropDownList)
                            da.SelectCommand.CommandText = "select datatype from mmm_mst_fields where eid=" & eid & " and fieldid=" & Right(txt, txt.ToString.Length - 3) & ""
                            If con.State <> ConnectionState.Open Then
                                con.Open()
                            End If
                            datatype = da.SelectCommand.ExecuteScalar()
                            If CNT - 1 <> i Then
                                If IsNothing(ddllst) Then
                                    If datatype.ToUpper = "NUMERIC" Then
                                        sts = sts & opr & "convert(float," & txtbx1.Text.ToString & ")" & "|"
                                    ElseIf datatype.ToUpper = "DATETIME" Then
                                        sts = sts & opr & " convert(datetime," & "'" & getdate(txtbx1.Text.ToString) & "')" & "|"
                                    Else
                                        sts = sts & opr & "'" & txtbx1.Text.ToString & "'" & "|"
                                    End If
                                Else
                                    sts = sts & opr & "'" & ddllst.SelectedValue & "'" & "|"
                                End If
                            Else
                                If IsNothing(ddllst) Then
                                    If datatype.ToUpper = "NUMERIC" Then
                                        sts = sts & opr & "convert(float," & txtbx1.Text.ToString & ")" & "|"
                                    ElseIf datatype.ToUpper = "DATETIME" Then
                                        sts = sts & opr & " convert(datetime," & "'" & getdate(txtbx1.Text.ToString) & "')" & "|"
                                    Else
                                        sts = sts & opr & "'" & txtbx1.Text.ToString & "'" & "|"
                                    End If
                                Else
                                    sts = sts & opr & "'" & ddllst.SelectedValue & "'" & "|"
                                End If
                            End If
                        End If
                    Next
                    sb = Left(sb, sb.Length - 1)

                    da.SelectCommand.CommandText = "select " & sb & " from " & tbname & " where tid=" & ddlobj.SelectedValue & ""
                    Dim DS1 As New DataSet
                    da.Fill(DS1, "DATA")
                    Dim V1 As String = ""
                    Dim sarr() As String
                    Dim QR As String = " "
                    sarr = sts.ToString.Split("|")
                    If DS1.Tables("DATA").Rows.Count > 0 Then
                        For X As Integer = 0 To DS1.Tables("DATA").Columns.Count - 1
                            V1 = DS1.Tables("DATA").Rows(0).Item(X).ToString
                            If V1.ToString.Length > 6 And (V1.ToString.Contains("/") Or V1.ToString.Contains("-")) And Left(V1, 1).Contains("-") = False Then
                                QR = QR & " Convert(datetime," & "'" & getdate(V1) & "')" & sarr(X) & " and "
                            Else
                                QR = QR & "'" & V1 & "'" & sarr(X) & " and "
                            End If
                        Next
                    End If
                    QR = Trim(QR)
                    QR = Left(QR, QR.Length - 3)

                    'If rw.Item("WF_STATUS").ToString.Length > 2 Then
                    '    Dim xwhrstatus As String = ""
                    '    Dim WFSTATUS() As String = rw.Item("WF_STATUS").ToString.Split(",")
                    '    If WFSTATUS.Length > 0 Then
                    '        For i As Integer = 0 To WFSTATUS.Length - 1
                    '            If i = 0 Then
                    '                xwhrstatus = " and (curstatus='" & WFSTATUS(i).ToString & "'"

                    '            Else
                    '                xwhrstatus &= " or curstatus='" & WFSTATUS(i).ToString & "' "
                    '            End If

                    '        Next
                    '        If xwhrstatus.Length > 5 Then
                    '            xwhrstatus &= ")"
                    '        End If
                    '    End If
                    '    QR &= xwhrstatus
                    'End If

                    da.SelectCommand.CommandText = "select count(tid) from " & tbname & " where eid=" & HttpContext.Current.Session("EID") & " and documenttype='" & arr1(0).ToString() & "' and TID=" & ddlobj.SelectedValue & " and " & QR & " "
                    rtn = da.SelectCommand.ExecuteScalar()
                End If

                ''Validation for other Type

                If rw.Item("Valtype").ToString.ToUpper = "OTHER" Then
                    Dim ddlobj As DropDownList = TryCast(pnlFields.FindControl(rw.Item("fldid").ToString), DropDownList)
                    Dim txtbx1 As TextBox
                    If ddlobj.SelectedItem.Text.ToUpper = "SELECT" Then
                        Dim fid As Integer
                        Dim dispname As String = ""
                        fid = rw.Item("fldID").ToString.Length - 3
                        da.SelectCommand.CommandText = " select displayname from mmm_mst_fields where fieldid=" & fid & ""
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        dispname = da.SelectCommand.ExecuteScalar()
                        errmsg = "Select " & dispname
                        con.Dispose()
                        Return errmsg
                        Exit Function
                    End If
                    arr1 = rw.Item("value").ToString.Split("-")
                    Dim arr2 As String()
                    Dim CNT As Integer = arr1.Length
                    For i As Integer = 1 To arr1.Length - 1
                        arr2 = Split(arr1(i), ":")
                        If i = 1 Then
                            tbname = arr2(0).ToString
                        End If
                        If arr2.Length > 1 Then
                            sb = sb & arr2(1).ToString & ","
                        End If
                        If i > 1 Then
                            Dim opr As String = Left(arr2(0), 1)
                            Dim opr1 As String = Left(arr2(0), 2)
                            opr1 = opr1.Replace(opr, "")

                            If opr1 = "=" Then
                                opr = opr & opr1
                            End If

                            Dim txt As String = Right(arr2(0), arr2(0).Length - opr.Length).ToString
                            txtbx1 = TryCast(pnlFields.FindControl(txt), TextBox)
                            Dim ddllst As DropDownList = TryCast(pnlFields.FindControl(txt), DropDownList)
                            da.SelectCommand.CommandText = "select datatype from mmm_mst_fields where eid=" & eid & " and fieldid=" & Right(txt, txt.ToString.Length - 3) & ""
                            If con.State <> ConnectionState.Open Then
                                con.Open()
                            End If
                            datatype = da.SelectCommand.ExecuteScalar()
                        End If
                    Next
                    sb = Left(sb, sb.Length - 1)

                    da.SelectCommand.CommandText = "select " & sb & " from " & tbname & " where tid=" & ddlobj.SelectedValue & ""
                    Dim DS1 As New DataSet
                    da.Fill(DS1, "DATA")
                    Dim V1 As String = ""
                    Dim sarr() As String
                    Dim QR As String = " "
                    sarr = sts.ToString.Split("|")
                    If DS1.Tables("DATA").Rows.Count > 0 Then
                        For X As Integer = 0 To DS1.Tables("DATA").Columns.Count - 1
                            V1 = DS1.Tables("DATA").Rows(0).Item(X).ToString
                        Next
                    End If
                    da.SelectCommand.CommandText = "select  case when " & txtbx1.Text & "  + " & V1 & ">=0 then 1 else 0 end "
                    rtn = da.SelectCommand.ExecuteScalar()
                End If

                ''Validation For Duplicacy Check
                If rw.Item("Valtype").ToString.ToUpper = "DUPLICACYCHECK" Then
                    Dim ddlobj As DropDownList = TryCast(pnlFields.FindControl(rw.Item("fldid").ToString), DropDownList)
                    Dim txtbx1 As TextBox
                    If ddlobj.SelectedItem.Text.ToUpper = "SELECT" Then
                        Dim fid As Integer
                        Dim dispname As String = ""
                        fid = rw.Item("fldID").ToString.Length - 3
                        da.SelectCommand.CommandText = " select displayname from mmm_mst_fields where fieldid=" & fid & ""
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If
                        dispname = da.SelectCommand.ExecuteScalar()
                        errmsg = "Select " & dispname
                        con.Dispose()
                        Return errmsg
                        Exit Function
                    End If
                    arr1 = rw.Item("value").ToString.Split(":")
                    Dim arr2 As String()
                    Dim CNT As Integer = arr1.Length
                    Dim tbl As String = ""
                    Dim documenttype As String = ""
                    For ii As Integer = 0 To arr1.Length - 1
                        If ii = 0 Then
                            Dim arrr() As String = arr1(0).ToString.Split("-")
                            tbl = arrr(1).ToString
                            documenttype = arrr(0).ToString()
                        End If
                    Next
                    Dim xwhr As String = ""
                    For i As Integer = 1 To arr1.Length - 1
                        arr2 = Split(arr1(i), "-")
                        If arr2.Length > 1 Then
                            Dim opr As String = Left(arr2(1), 1)
                            Dim opr1 As String = Left(arr2(1), 2)
                            opr1 = opr1.Replace(opr, "")

                            If opr1 = "=" Then
                                opr = opr & opr1
                            End If

                            Dim txt As String = Right(arr2(1), arr2(1).Length - opr.Length).ToString
                            Dim fldid As String = Right(txt, txt.Length - 3)
                            Dim row() As DataRow = dT.Select("fieldid=" & fldid & "")
                            Select Case row(0).Item("FieldType").ToString().ToUpper()
                                Case "DROP DOWN"
                                    Dim TXTBOX As DropDownList = TryCast(pnlFields.FindControl(txt), DropDownList)
                                    'xwhr &= " AND " & arr3(0).ToString & arr3(1).ToString & TXTBOX.SelectedValue.ToString
                                    xwhr &= " AND " & arr2(0).ToString & "" & opr & "'" & TXTBOX.SelectedValue.ToString & "'"
                                Case "TEXT BOX"
                                    Dim TXTBOX As TextBox = TryCast(pnlFields.FindControl(txt), TextBox)
                                    If row(0).Item("datatype").ToString.ToUpper = "DATETIME" Then
                                        'xwhr &= " AND " & " CONVERT(DATETIME," & arr3(0).ToString & ",3) " & arr3(1).ToString & getdate(TXTBOX.Text.ToString) & ""
                                        xwhr &= " AND Convert(DateTime, " & arr2(0).ToString & ", 3) " & opr & "  CONVERT(DATE,'" & (TXTBOX.Text.ToString) & "',3) AND " & arr2(0).ToString & " <>''"
                                    Else
                                        xwhr &= " AND " & arr2(0).ToString & "" & opr & "'" & TXTBOX.Text.ToString & "' AND " & arr2(0).ToString & " <>''"
                                    End If
                            End Select
                        End If
                    Next
                    If rw.Item("WF_STATUS").ToString.Length > 2 Then
                        Dim xwhrstatus As String = ""
                        Dim WFSTATUS() As String = rw.Item("WF_STATUS").ToString.Split(",")
                        If WFSTATUS.Length > 0 Then
                            For i As Integer = 0 To WFSTATUS.Length - 1
                                If i = 0 Then
                                    xwhrstatus = " and (curstatus='" & WFSTATUS(i).ToString & "'"

                                Else
                                    xwhrstatus &= " or curstatus='" & WFSTATUS(i).ToString & "' "
                                End If

                            Next
                            If xwhrstatus.Length > 5 Then
                                xwhrstatus &= ")"
                            End If
                        End If
                        xwhr &= xwhrstatus
                    End If
                    If Action = "UPDATE" Then
                        xwhr &= " AND TID<>" & tid & ""
                    End If

                    da.SelectCommand.CommandText = "SELECT count(*) FROM MMM_MST_DOC WHERE EID=" & HttpContext.Current.Session("EID") & " and documenttype='" & documenttype & "' " & xwhr & ""
                    rtn = da.SelectCommand.ExecuteScalar()
                End If

                If UCase(rw.Item("valtype").ToString) = "STATIC" Then
                    If IsNothing(txtobj) Then
                        da.SelectCommand.CommandText = " select case when " & "'" & ddltype1.SelectedItem.Text & "'" & rw.Item("operator") & "'" & rw.Item("value") & "'" & "  then 1 else 0 end"
                    Else
                        If datatype.ToString.ToUpper = "TEXT" Then
                            da.SelectCommand.CommandText = " select case when " & "'" & txtobj.Text.ToString & "'" & rw.Item("operator") & "'" & rw.Item("value") & "'" & "  then 1 else 0 end"
                        ElseIf datatype.ToString.ToUpper = "NUMERIC" Then
                            da.SelectCommand.CommandText = " select case when " & txtobj.Text.ToString & " " & rw.Item("operator") & " " & rw.Item("value") & "  then 1 else 0 end"
                        Else
                            da.SelectCommand.CommandText = " select case when " & "'" & txtobj.Text.ToString & "'" & rw.Item("operator") & rw.Item("value") & "  then 1 else 0 end"
                        End If
                    End If
                    rtn = da.SelectCommand.ExecuteScalar()
                ElseIf UCase(rw.Item("valtype").ToString) = "FIELD" Then
                    If IsNothing(ddltype) Then
                        If datatype.ToUpper = "DATETIME" And datatype.ToUpper = "DATETIME" Then
                            da.SelectCommand.CommandText = " select case when " & " Convert(DateTime," & "'" & getdate(txtobj.Text.ToString) & "'" & ")" & rw.Item("operator") & "Convert(DateTime," & "'" & getdate(txtobj1.Text.ToString) & "'" & ")" & "  then 1 else 0 end"
                        ElseIf datatype.ToUpper = "NUMERIC" Then
                            da.SelectCommand.CommandText = " select case when " & "" & txtobj.Text.ToString & "" & rw.Item("operator") & "" & txtobj1.Text.ToString & "" & "  then 1 else 0 end"
                        Else
                            da.SelectCommand.CommandText = " select case when " & "'" & txtobj.Text.ToString & "'" & rw.Item("operator") & "'" & txtobj1.Text.ToString & "'" & "  then 1 else 0 end"
                        End If
                    Else
                        da.SelectCommand.CommandText = " select case when " & "'" & txtobj.Text.ToString & "'" & rw.Item("operator") & "'" & ddltype.SelectedItem.Text.ToString & "'" & "  then 1 else 0 end"
                    End If
                    rtn = da.SelectCommand.ExecuteScalar()

                ElseIf UCase(rw.Item("valtype").ToString) = "MANDATORY" Then

                    If fieldtype.ToUpper = "FILE UPLOADER" Then
                        If IsNothing(lblfile) = False Then
                            If lblfile.Text.Length > 1 Then
                                rtn = 1
                            End If
                        End If

                    Else
                        If IsNothing(ddltype) Then
                            da.SelectCommand.CommandText = " select case when " & "'" & txtobj1.Text.ToString & "'" & "=" & "'" & rw.Item("value").ToString & "'" & "  then 1 else 0 end"
                        Else
                            da.SelectCommand.CommandText = " select case when " & "'" & ddltype.SelectedItem.Text & "'" & "=" & "'" & rw.Item("value").ToString & "'" & "  then 1 else 0 end"
                        End If
                        If con.State <> ConnectionState.Open Then
                            con.Open()
                        End If

                        Try
                            rtn = da.SelectCommand.ExecuteScalar()
                        Catch ex As Exception
                            Return "check the entered data and ensure that all Mandatory fields have been filled with Valid data"
                        End Try
                    End If
                End If

                If rtn = 0 And rw.Item("valtype").ToString.ToUpper <> "DUPLICACYCHECK" Then
                    If UCase(rw.Item("valtype").ToString) <> "MANDATORY" Then
                        errmsg = Trim(errmsg) & " " & rw.Item("err_msg").ToString()
                    ElseIf UCase(rw.Item("valtype").ToString) = "OTHER" Then
                        errmsg = Trim(errmsg) & " " & rw.Item("err_msg").ToString()
                    End If
                ElseIf rtn = 1 And (rw.Item("Valtype").ToString.ToUpper = "STATIC" Or rw.Item("Valtype").ToString.ToUpper = "FIELD" Or rw.Item("Valtype").ToString.ToUpper = "MANDATORY") Then

                    If fieldtype.ToUpper = "FILE UPLOADER" Then
                        'If IsNothing(lblfile) = False Then
                        If IsNumeric(fldidCheck) Then
                            Dim controlType As String
                            da.SelectCommand.CommandText = "select * from MMM_MST_Fields where eid=" & HttpContext.Current.Session("EID") & " and fieldid=" & fldidCheck & " "
                            da.Fill(ds, "check")
                            controlType = ds.Tables("check").Rows(0).Item("fieldtype").ToString
                            Select Case controlType.ToUpper
                                Case "DROP DOWN"
                                    ddltype = TryCast(pnlFields.FindControl("fld" & fldidCheck), DropDownList)
                                    If ddltype.SelectedItem.Text.ToUpper = ValueCheck.ToUpper Then
                                        If lblfile.Text.Length < 1 Then
                                            errmsg = Trim(errmsg) & " " & rw.Item("err_msg").ToString()
                                        End If
                                    End If
                                Case "LOOKUP", "TEXT BOX"
                                    txtobj = TryCast(pnlFields.FindControl("fld" & fldidCheck), TextBox)
                                    If txtobj.Text.ToUpper = ValueCheck.ToUpper Then
                                        If lblfile.Text.Length < 1 Then
                                            errmsg = Trim(errmsg) & " " & rw.Item("err_msg").ToString()
                                        End If
                                    End If
                            End Select
                            ds.Tables("check").Clear()
                        End If

                    Else
                        If IsNothing(txtobj) Then
                            If ddltype1.SelectedItem.Text = "" Then
                                errmsg = Trim(errmsg) & " " & rw.Item("err_msg").ToString()
                            End If
                        Else
                            If txtobj.Text.ToString = "" Then
                                errmsg = Trim(errmsg) & " " & rw.Item("err_msg").ToString()
                            End If
                        End If
                    End If
                ElseIf rtn >= 1 And rw.Item("valtype").ToString.ToUpper = "DUPLICACYCHECK" Then
                    errmsg = Trim(errmsg) & " " & rw.Item("ERR_MSG").ToString
                End If
                'disposing the datatable
                If flg = "1" Then
                    ds.Tables("fieldtype").Clear()
                    ds.Tables("fieldtype").Dispose()
                End If
                'ds.Tables("datatype").Dispose()
            Next
            con.Dispose()
            If errmsg.Length > 5 Then
                Return errmsg
            Else
                Return "True"
            End If
        Catch ex As Exception
            Return "check the entered data and ensure that all Mandatory fields have been filled with Valid data"
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Function


    Function getdate(ByVal dbt As String) As DateTime
        Dim dtArr() As String
        dtArr = Split(dbt, "/")
        If dtArr.GetUpperBound(0) = 2 Then
            Dim dd, mm, yy As String
            dd = dtArr(0)
            mm = dtArr(1)
            yy = dtArr(2)
            Dim dt As Date
            Try
                dt = mm & "/" & dd & "/" & yy
                Return dt
            Catch ex As Exception
                Return Now.Date
            End Try
        Else
            Return Now.Date
        End If
    End Function

    Public Function getSafeString_Names(ByVal strVar As String) As String
        Trim(strVar)
        strVar = Replace(strVar, "'", "")
        strVar = Replace(strVar, ";", "")
        strVar = Replace(strVar, "--", "")
        strVar = Replace(strVar, "%", "Percent")
        strVar = Replace(strVar, "&", "and")
        strVar = Replace(strVar, "!", "")
        strVar = Replace(strVar, """", "")
        strVar = Replace(strVar, "#", "")
        strVar = Replace(strVar, "$", "")
        strVar = Replace(strVar, "*", "")
        strVar = Replace(strVar, ",", "")
        strVar = Replace(strVar, "/", "")
        strVar = Replace(strVar, ":", "")
        strVar = Replace(strVar, "?", "")
        strVar = Replace(strVar, "[", "(")
        strVar = Replace(strVar, "\", "")
        strVar = Replace(strVar, "]", ")")
        strVar = Replace(strVar, "^", "")
        strVar = Replace(strVar, "`", "")
        strVar = Replace(strVar, "{", "(")
        strVar = Replace(strVar, "|", "")
        strVar = Replace(strVar, "}", ")")
        strVar = Replace(strVar, "~", "")
        strVar = Replace(strVar, "+", "")
        strVar = Replace(strVar, "<", "")
        strVar = Replace(strVar, "=", "")
        strVar = Replace(strVar, ">", "")

        Return strVar
    End Function

    Public Sub CLEARDYNAMICFIELDS(ByRef PnlFields As Panel)
        For Each ctl As Control In PnlFields.Controls
            If ctl.GetType().ToString.Equals("System.Web.UI.WebControls.TextBox") Then
                DirectCast(ctl, TextBox).Text = String.Empty
                DirectCast(ctl, TextBox).Enabled = True
            ElseIf ctl.GetType().ToString.Equals("System.Web.UI.WebControls.ListBox") Then
                DirectCast(ctl, ListBox).ClearSelection()
                DirectCast(ctl, ListBox).Enabled = True
            ElseIf ctl.GetType().ToString.Equals("System.Web.UI.WebControls.CheckBoxList") Then
                DirectCast(ctl, CheckBoxList).ClearSelection()
            ElseIf ctl.GetType().ToString.Equals("System.Web.UI.WebControls.DropDownList") Then
                DirectCast(ctl, DropDownList).SelectedIndex = 0
                DirectCast(ctl, DropDownList).Enabled = True
            ElseIf ctl.GetType().ToString.Equals("System.Web.UI.WebControls.Gridview") Then
                DirectCast(ctl, GridView).DataSource = ""
                DirectCast(ctl, GridView).DataBind()
            End If
        Next
    End Sub


    Public Sub CreateControlsOnAuthMetrix(ByVal ds As DataTable, ByRef pnlFields As Panel)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = Nothing
        Dim oda1 As SqlDataAdapter = Nothing
        Try
            If ds.Rows.Count > 0 Then
                Dim layout As String = ds.Rows(0).Item("LayoutType").ToString()
                pnlFields.Controls.Add(New LiteralControl("<div class=""form""><table width=""100%"" cellspacing=""5px"" border=""0px"" cellpadding=""0px"">"))
                Dim lblWidth As Integer = 130
                Dim controlWdth As Integer = 240
                Dim datatype As String = ""
                For i As Integer = 0 To ds.Rows.Count - 1
                    Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                    Dim lbl As New Label
                    lbl.ID = "lbl" & ds.Rows(i).Item("FieldID").ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True

                    'If layout = "DOUBLE COLUMN" Then
                    If i Mod 2 = 0 Then
                        pnlFields.Controls.Add(New LiteralControl("<tr>"))
                    End If
                    'Else
                    'lblWidth = 210
                    'controlWdth = 540
                    'pnlFields.Controls.Add(New LiteralControl("<tr>"))
                    'End If

                    pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right"">"))
                    pnlFields.Controls.Add(lbl)
                    pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left"">"))
                    Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                        Case "TEXT BOX"
                            datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)

                            If datatype = "DATETIME" Then
                                Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                CLNDR.ID = "CLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                CLNDR.TargetControlID = txtBox.ID
                                pnlFields.Controls.Add(CLNDR)

                            ElseIf datatype = "NUMERIC" Then
                                Dim WMExtnd As New AjaxControlToolkit.TextBoxWatermarkExtender
                                WMExtnd.ID = "WM" & ds.Rows(i).Item("FieldID").ToString()
                                WMExtnd.TargetControlID = txtBox.ID
                                WMExtnd.WatermarkCssClass = "water"
                                WMExtnd.WatermarkText = "Enter Range '-' separated e.g 100-1000"
                                pnlFields.Controls.Add(WMExtnd)
                            End If
                        Case "CHILD ITEM TOTAL"     ' new by sunil 11-feb
                            datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)

                            If datatype = "NUMERIC" Then
                                Dim WMExtnd As New AjaxControlToolkit.TextBoxWatermarkExtender
                                WMExtnd.ID = "WM" & ds.Rows(i).Item("FieldID").ToString()
                                WMExtnd.TargetControlID = txtBox.ID
                                WMExtnd.WatermarkCssClass = "water"
                                WMExtnd.WatermarkText = "Enter Range '-' separated e.g 100-1000"
                                pnlFields.Controls.Add(WMExtnd)
                            End If

                        Case "CHILD ITEM MAX"     ' new by sunil 04_jul_14
                            datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)

                            If datatype = "NUMERIC" Then
                                Dim WMExtnd As New AjaxControlToolkit.TextBoxWatermarkExtender
                                WMExtnd.ID = "WM" & ds.Rows(i).Item("FieldID").ToString()
                                WMExtnd.TargetControlID = txtBox.ID
                                WMExtnd.WatermarkCssClass = "water"
                                WMExtnd.WatermarkText = "Enter Range '-' separated e.g 100-1000"
                                pnlFields.Controls.Add(WMExtnd)
                            End If
                        Case "LOOKUP"     ' new by sunil 11-feb
                            datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)

                            If datatype = "NUMERIC" Then
                                Dim WMExtnd As New AjaxControlToolkit.TextBoxWatermarkExtender
                                WMExtnd.ID = "WM" & ds.Rows(i).Item("FieldID").ToString()
                                WMExtnd.TargetControlID = txtBox.ID
                                WMExtnd.WatermarkCssClass = "water"
                                WMExtnd.WatermarkText = "Enter Range '-' separated e.g 100-1000"
                                pnlFields.Controls.Add(WMExtnd)
                            End If
                        Case "CALCULATIVE FIELD"     ' new by sunil 11-feb
                            datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)

                            If datatype = "NUMERIC" Then
                                Dim WMExtnd As New AjaxControlToolkit.TextBoxWatermarkExtender
                                WMExtnd.ID = "WM" & ds.Rows(i).Item("FieldID").ToString()
                                WMExtnd.TargetControlID = txtBox.ID
                                WMExtnd.WatermarkCssClass = "water"
                                WMExtnd.WatermarkText = "Enter Range '-' separated e.g 100-1000"
                                pnlFields.Controls.Add(WMExtnd)
                            End If

                        Case "LOOKUPDDL"
                            Dim ddl As New ListBox
                            ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            ddl.Width = controlWdth - 2
                            ddl.CssClass = "txtBox"
                            Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                            Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                            Dim od As SqlDataAdapter = New SqlDataAdapter("select dropdown,DDllookupvalue from MMM_MST_FIELDS where FieldID='" & ddlText & "'", con)
                            ' Dim dsMonth As New DataSet
                            Dim dt As New DataTable
                            od.Fill(dt)
                            Dim arr() As String
                            Dim darr() As String
                            Dim type As String = dt.Rows(0).Item("dropdown").ToString()
                            arr = type.Split("-")
                            Dim documenttype As String = arr(1).ToString()
                            Dim field As String = dt.Rows(0).Item("DDllookupvalue").ToString()
                            field = field.Substring(0, field.Length - 1)
                            darr = field.Split(",")
                            For k As Integer = 0 To darr.Count - 1
                                Dim fieldmping As String
                                Dim str As String = ""
                                Dim feild As String
                                Dim s = darr(k).Split("-")
                                feild = s(0).ToString()
                                fieldmping = s(1).ToString()

                                Dim TID As String = "TID"
                                Dim TABLENAME As String = ""
                                Dim str1 As String = ""
                                Dim lookUpqry As String = ""



                                If feild = ds.Rows(i).Item("FieldID").ToString() Then
                                    If arr(0) = "SESSION" And Not (fieldmping.Contains("fld")) Then
                                        If arr(1).ToString.ToUpper = "USER" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        End If
                                        ' str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                        str1 = "select " & fieldmping.ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                    Else
                                        od.SelectCommand.CommandText = "select dropdown from MMM_MST_FIELDS where EID=" & HttpContext.Current.Session("EID") & " and documenttype='" & documenttype & "' and FieldMapping in('" & fieldmping & "')"
                                        Dim dt1 As New DataTable
                                        od.Fill(dt1)
                                        Dim dropdown As String = dt1.Rows(0).Item("dropdown").ToString()
                                        arr = dropdown.Split("-")

                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                            If arr(1).ToString.ToUpper = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                TID = "LOCID"
                                            End If
                                        End If

                                        If arr(0).ToUpper() = "CHILD" Then
                                            str1 = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        Else
                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                str1 = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                                            Else
                                                str1 = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            End If
                                        End If
                                    End If
                                    str1 = str1 & "   order by " & arr(2).ToString()
                                    Dim dt2 As New DataTable

                                    If str1.Length > 0 Then
                                        pnlFields.Controls.Add(ddl)
                                        od.SelectCommand.CommandText = str1
                                        od.Fill(dt2)
                                        For J As Integer = 0 To dt2.Rows.Count - 1
                                            ddl.Items.Add(dt2.Rows(J).Item(0).ToString())
                                            ddl.Items(J).Value = dt2.Rows(J).Item(1)

                                        Next
                                        dt2.Dispose()
                                    End If
                                End If
                            Next
                            ddl.Items.Insert(0, "ALL")
                            ddl.SelectionMode = ListSelectionMode.Multiple
                            pnlFields.Controls.Add(ddl)
                            od.Dispose()


                        Case "DROP DOWN"
                            Dim ddl As New ListBox
                            ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            ddl.Width = controlWdth - 2
                            ddl.CssClass = "txtBox"
                            Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                            Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                            Dim arr() As String
                            If UCase(dropdowntype) = "FIX VALUED" Then
                                arr = ddlText.Split(",")
                                For ii As Integer = 0 To arr.Count - 1
                                    ddl.Items.Add(arr(ii).ToUpper())
                                Next
                            ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                arr = ddlText.Split("-")
                                Dim TABLENAME As String = ""
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_MASTER"
                                Else
                                    TABLENAME = "MMM_MST_DOC"
                                End If
                                Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                oda = New SqlDataAdapter("", con)
                                Dim dss As New DataSet
                                oda.SelectCommand.CommandText = str
                                oda.Fill(dss, "FV")
                                For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                    ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                    ddl.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                Next
                                oda.Dispose()
                                dss.Dispose()
                            ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                                oda1 = New SqlDataAdapter("", con)
                                Dim ds1 As New DataSet
                                Dim QRY As String = ""
                                Dim DROPDOWN As String() = ds.Rows(i).Item("DROPDOWN").ToString().Split("-")
                                If DROPDOWN(1).ToString.ToUpper = "USER" Then
                                    QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                ElseIf DROPDOWN(1).ToString.ToUpper = "LOCATION" Then
                                    QRY = "SELECT LOCATIONNNAME ,LOCID FROM MMM_MST_LOCATION WHERE EID=" & HttpContext.Current.Session("EID") & ""
                                End If
                                oda1.SelectCommand.CommandText = QRY
                                oda1.Fill(ds1, "SESSION")
                                For iI As Integer = 0 To ds1.Tables("SESSION").Rows.Count - 1
                                    ddl.Items.Add(ds1.Tables("SESSION").Rows(iI).Item(0))
                                    ddl.Items(iI).Value = ds1.Tables("SESSION").Rows(iI).Item(1)
                                Next
                            End If
                            ddl.Items.Insert(0, "ALL")
                            ddl.SelectionMode = ListSelectionMode.Multiple
                            pnlFields.Controls.Add(ddl)

                        Case "CHECKBOX LIST"
                            Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                            dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                            Dim chklist As New CheckBoxList
                            chklist.ID = "chklist" & ds.Rows(i).Item("FieldID").ToString()
                            chklist.CssClass = "txtbox"
                            Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                            Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                            Dim arr() As String
                            If UCase(dropdowntype) = "FIX VALUED" Then
                                arr = ddlText.Split(",")
                                For ii As Integer = 0 To arr.Count - 1
                                    chklist.Items.Add(arr(ii).ToUpper())
                                Next
                            ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                arr = ddlText.Split("-")
                                Dim TABLENAME As String = ""
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_MASTER"
                                Else
                                    TABLENAME = "MMM_MST_DOC"
                                End If
                                Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                oda = New SqlDataAdapter("", con)
                                Dim dss As New DataSet
                                oda.SelectCommand.CommandText = str
                                oda.Fill(dss, "FV")
                                For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                    chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                    chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                Next
                                oda.Dispose()
                                dss.Dispose()
                            End If
                            dynmdiv.Controls.Add(chklist)
                            pnlFields.Controls.Add(dynmdiv)

                        Case "LIST BOX"
                            Dim ddl As New ListBox
                            ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            ddl.Width = controlWdth - 2
                            ddl.CssClass = "txtBox"
                            Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                            Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                            Dim arr() As String
                            If UCase(dropdowntype) = "FIX VALUED" Then
                                arr = ddlText.Split(",")
                                ddl.Items.Add("")
                                For ii As Integer = 0 To arr.Count - 1
                                    ddl.Items.Add(arr(ii).ToUpper())
                                Next
                            ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                arr = ddlText.Split("-")
                                Dim TABLENAME As String = ""
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_MASTER"
                                Else
                                    TABLENAME = "MMM_MST_DOC"
                                End If
                                Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                oda = New SqlDataAdapter("", con)
                                Dim dss As New DataSet
                                oda.SelectCommand.CommandText = str
                                oda.Fill(dss, "FV")
                                For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                    ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                    ddl.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                Next
                                oda.Dispose()
                                dss.Dispose()
                            End If
                            ddl.Items.Insert(0, "ALL")
                            ddl.SelectionMode = ListSelectionMode.Multiple
                            pnlFields.Controls.Add(ddl)
                        Case "TEXT AREA"
                            Dim txtBox As New TextBox
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            txtBox.TextMode = TextBoxMode.MultiLine
                            pnlFields.Controls.Add(txtBox)
                    End Select
                    pnlFields.Controls.Add(New LiteralControl("</td>"))
                    'If layout = "DOUBLE COLUMN" Then
                    If i Mod 2 = 1 Then
                        pnlFields.Controls.Add(New LiteralControl("</tr>"))
                    End If
                    'Else
                    'pnlFields.Controls.Add(New LiteralControl("</tr>"))
                    'End If
                Next
                pnlFields.Controls.Add(New LiteralControl("</table></div>"))
            End If
            ds.Dispose()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
            If Not oda1 Is Nothing Then
                oda1.Dispose()
            End If
        End Try
    End Sub

    Public Function ValidateAndGenrateQueryForAUTHMATRIX(ByVal qryType As String, ByVal qryField As String, ByVal dataField As String, ByVal ds As DataTable, ByRef pnlFields As Panel) As String
        Dim errorMsg As String = "Please Enter "
        If ds.Rows.Count > 0 Then
            For i = 0 To ds.Rows.Count - 1
                Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "TEXT BOX"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If
                    Case "CHILD ITEM TOTAL" '' new by sp on 11-feb-14
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If

                    Case "CHILD ITEM MAX" '' new by sp on 04_jul_14
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If

                    Case "CALCULATIVE FIELD" '' new by sp on 11-feb-14
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 And txtBox.CssClass.ToUpper.Trim() <> "INVISIBLE" Then
                            errorMsg &= dispName & ","
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If
                    Case "LOOKUP" '' new by sp on 11-feb-14
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Validation for Mandatory
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If
                    Case "DROP DOWN"
                        Dim txtBox As ListBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If
                        Dim livalue As String = ""
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                    livalue = "*"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Text & ","
                                        End If
                                    Next
                                    If livalue.Length > 0 Then
                                        livalue = Left(livalue, livalue.Length - 1)
                                    End If
                                End If
                                dataField &= "'" & livalue & "',"
                            Else
                                If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                    livalue = "*"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    If livalue.Length > 0 Then
                                        livalue = Left(livalue, livalue.Length - 1)
                                    End If
                                End If
                                dataField &= "'" & livalue & "',"
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                    livalue = "*"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Text & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            Else
                                If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                    livalue = "*"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            End If
                        End If
                    Case "LOOKUPDDL"
                        Dim txtBox As ListBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If
                        Dim livalue As String = ""
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                livalue = "*"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                If livalue.Length > 0 Then
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                            End If
                            dataField &= "'" & livalue & "',"
                        Else
                            If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                livalue = "*"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                            End If
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                        End If

                    Case "LIST BOX"
                        Dim txtBox As ListBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If

                        Dim livalue As String = ""
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                    livalue = "*"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Text & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                dataField &= "'" & livalue & "',"
                            Else
                                If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                    livalue = "*"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                dataField &= "'" & livalue & "',"
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                    livalue = "*"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Text & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            Else
                                If txtBox.SelectedItem.Text.ToUpper() = "ALL" Then
                                    livalue = "*"
                                Else
                                    For Each li As ListItem In txtBox.Items
                                        If li.Selected Then
                                            livalue &= li.Value & ","
                                        End If
                                    Next
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            End If
                        End If
                    Case "CHECKBOX LIST"
                        Dim txtBox As CheckBoxList = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBoxList)
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If
                        Dim livalue As String = ""
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then

                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If

                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            End If
                        End If

                    Case "TEXT AREA"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If
                End Select
            Next
        End If
        If errorMsg.Length < 14 Then
            If qryType = "ADD" Then
                Return Left(qryField, Len(qryField) - 1) & ")" & Left(dataField, Len(dataField) - 1) & ")"
            Else
                Return Left(qryField, Len(qryField) - 1)
            End If
        Else
            Return Left(errorMsg, Len(errorMsg) - 1)
        End If
    End Function

    Public Sub FillControlsOnAuthMatrix(ByVal ds As DataTable, ByRef pnlFields As Panel, ByRef pnlUser As Panel, ByVal type As String, ByVal pid As Integer)

        Dim strcol As String = ""
        Dim strqry As String = ""
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Try
            If ds.Rows.Count > 0 Then
                Dim dss As New DataSet
                For Each rw As DataRow In ds.Rows
                    strcol &= rw.Item("fieldmapping").ToString & ","
                Next
                strcol = strcol.Substring(0, strcol.Length - 1)
                If UCase(type) = "MASTER" Then
                    strqry = "Select  " & strcol & ",uid,doctype,aprstatus,sla,ordering from MMM_MST_AuthMetrix WHERE TID=" & pid & ""
                End If

                oda.SelectCommand.CommandText = strqry
                oda.Fill(dss, "data")
                Dim ddluser As New DropDownList
                ddluser = CType(pnlUser.FindControl("ddlrole"), DropDownList)
                ddluser.SelectedIndex = ddluser.Items.IndexOf(ddluser.Items.FindByValue(dss.Tables("data").Rows(0).Item("uid").ToString()))
                Dim ddlStatus As DropDownList
                ddlStatus = CType(pnlUser.FindControl("ddlStatus1"), DropDownList)
                ddlStatus.SelectedIndex = ddlStatus.Items.IndexOf(ddlStatus.Items.FindByText(dss.Tables("data").Rows(0).Item("aprstatus").ToString()))
                Dim txtsla As New TextBox
                txtsla = CType(pnlUser.FindControl("txtsla"), TextBox)
                txtsla.Text = dss.Tables("data").Rows(0).Item("sla").ToString()
                Dim txtOrdering As New TextBox
                txtOrdering = CType(pnlUser.FindControl("txtOrdering"), TextBox)
                txtOrdering.Text = dss.Tables("data").Rows(0).Item("ordering").ToString()
                For i As Integer = 0 To ds.Rows.Count - 1
                    Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                        Case "TEXT BOX"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If
                        Case "CHILD ITEM TOTAL"  '' NEW BY SUNIL ON 11-FEB-14
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If

                        Case "CHILD ITEM MAX"  '' NEW BY SUNIL ON 04_jul_14
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If

                        Case "LOOKUP"  '' NEW BY SUNIL ON 11-FEB-14
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If
                        Case "CALCULATIVE FIELD"  '' NEW BY SUNIL ON 11-FEB-14
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                            If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                                txtBox.Enabled = False
                            End If
                        Case "DROP DOWN"
                            Dim ddl As New ListBox
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)
                            Dim ARR() As String = dss.Tables("data").Rows(0).Item(i).ToString().Split(",")
                            If ds.Rows(i).Item("DROPDOWNType").ToString().ToUpper() = "FIX VALUED" Then
                                If ARR(0).ToString() = "*" Then
                                    ddl.Items.FindByText("ALL").Selected = True
                                Else
                                    For ii As Integer = 0 To ARR.Length - 1
                                        ddl.Items.FindByText(ARR(ii).ToString()).Selected = True
                                    Next
                                End If
                            Else
                                If ARR(0).ToString() = "*" Then
                                    ddl.Items.FindByText("ALL").Selected = True
                                Else
                                    For ii As Integer = 0 To ARR.Length - 1
                                        ddl.Items.FindByValue(ARR(ii).ToString()).Selected = True
                                    Next
                                End If
                            End If
                        Case "LOOKUPDDL"
                            Dim ddl As New ListBox
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)
                            Dim ARR() As String = dss.Tables("data").Rows(0).Item(i).ToString().Split(",")
                            If ARR(0).ToString() = "*" Then
                                ddl.Items.FindByText("ALL").Selected = True
                            Else
                                For ii As Integer = 0 To ARR.Length - 1
                                    ddl.Items.FindByValue(ARR(ii).ToString()).Selected = True
                                Next
                            End If
                        Case "CHECKBOX LIST"

                            Dim chklist As New CheckBoxList
                            chklist = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), CheckBoxList)
                            Dim ARR() As String = dss.Tables("data").Rows(0).Item(i).ToString().Split(",")
                            If ds.Rows(i).Item("DROPDOWNType").ToString().ToUpper() = "FIX VALUED" Then
                                For ii As Integer = 0 To ARR.Length - 1
                                    'ddl.SelectedIndex = ddl.Items.IndexOf(ddl.Items.FindByText(ARR(ii).ToString()))
                                    chklist.Items.FindByText(ARR(ii).ToString()).Selected = True
                                Next
                            Else
                                For ii As Integer = 0 To ARR.Length - 1
                                    chklist.Items.FindByValue(ARR(ii).ToString()).Selected = True
                                Next
                            End If
                        Case "LIST BOX"
                            Dim ddl As New ListBox
                            ddl = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), ListBox)
                            Dim ARR() As String = dss.Tables("data").Rows(0).Item(i).ToString().Split(",")
                            If ds.Rows(i).Item("DROPDOWNType").ToString().ToUpper() = "FIX VALUED" Then
                                If ARR(0).ToString() = "*" Then
                                    ddl.Items.FindByText("ALL").Selected = True
                                Else
                                    For ii As Integer = 0 To ARR.Length - 1
                                        ddl.Items.FindByText(ARR(ii).ToString()).Selected = True
                                    Next
                                End If
                            Else
                                If ARR(0).ToString() = "*" Then
                                    ddl.Items.FindByText("ALL").Selected = True
                                Else
                                    For ii As Integer = 0 To ARR.Length - 1
                                        ddl.Items.FindByValue(ARR(ii).ToString()).Selected = True
                                    Next
                                End If
                            End If
                        Case "TEXT AREA"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = dss.Tables("data").Rows(0).Item(i).ToString()
                    End Select
                Next
                oda.Dispose()
                dss.Dispose()
            End If
            ds.Dispose()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try

    End Sub

    Public Sub CreateControlForTicket(ByVal ds As DataTable, ByRef pnlFields As Panel, ByRef UpdatePanel1 As UpdatePanel, ByRef btnActEdit As Button, ByVal autolayout As Integer, Optional ByRef ddown As DropDownList = Nothing, Optional ByVal amendment As String = Nothing, Optional ByVal IsDocDetail As Boolean = False, Optional ByVal IsCallingFromMainHome As Boolean = False, Optional ByVal IsTabPanel As Boolean = False, Optional ByVal TabName As String = "Defalut", Optional isTabCallable As Boolean = False, Optional ByVal docpanelID As Integer = 0, Optional ByVal tabContainer As AjaxControlToolkit.TabContainer = Nothing, Optional ByVal tabIndex As Integer = 0, Optional ByRef isOnlyTabChild As Boolean = False, Optional ByVal TotaltabIndex As Integer = 0)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = Nothing
        Try
            Dim datatype As String = ""
            ' Dim IsTabPanel As Boolean = False
            Dim str As String = ds.Rows(0).Item("layoutdata").ToString()
            Dim str1 As String = ""
            Dim tr() As String = {"<div"}
            'Dim id As Integer = 0
            Dim oda1 As SqlDataAdapter = Nothing
            Dim newScreenHeight As Integer = 800
            Dim arr2() As String = str.Split(tr, StringSplitOptions.None)
            pnlFields.Controls.Add(New LiteralControl("<div class=""container"" style=""text-align:center"" > <div class=""row""><div class=""col-md-6 col-md-offset-3""><div class=""login-panel panel panel-primary""><div class=""panel-heading""><h3 class=""panel-title"">Submit Request</h3></div><div class=""panel-body""><fieldset><div id=""message"" class=""form-group col-xs-12""></div>"))
            'pnlFields.Controls.Add(New LiteralControl(arr2(0).ToString()))  '' sunil
            ' For i = 1 To arr2.Length - 1
            'tr = {"<td"}
            ' Dim arr1() As String = arr2(i).Split(tr, StringSplitOptions.None)
            ' pnlFields.Controls.Add(New LiteralControl("<tr " & arr1(0).ToString()))
            For j As Integer = 1 To arr2.Length - 1
                Dim controlWdth As Integer = 240
                If arr2(j).ToString().Contains("{") Then
                    str1 = arr2(j).Substring(0, arr2(j).IndexOf(">") + 1)
                    pnlFields.Controls.Add(New LiteralControl("<div " & str1))
                    str1 = arr2(j).Substring(0, arr2(j).IndexOf("<"))
                    str1 = (str1.Substring(str1.IndexOf("{") + 1, (str1.Length - 1) - (str1.IndexOf("{") + 1))).Trim()
                    If str1.Contains("{") Then
                        str1 = str1.Substring(1, str1.Length - 1)
                    End If
                    If str1.Contains("}") Then
                        str1 = str1.Substring(0, str1.Length - 1)
                    End If
                    Dim row() As DataRow = ds.Select("displayname='" & str1 & "'")
                    If row.Length > 0 Then
                        Dim ID As String = row(0).Item("fieldid").ToString()
                        Select Case row(0).Item("FieldType").ToString().ToUpper()
                            Case "TEXT BOX"
                                datatype = ds.Rows(0).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ID
                                txtBox.Width = controlWdth - 10
                                'Add condition for dynamic Jquery
                                If Not String.IsNullOrEmpty(ds.Rows(0).Item("DJqueryMethod").ToString()) Then
                                    If Convert.ToString(ds.Rows(0).Item("DJqueryMethod")).ToUpper = "ONCHANGE" Then
                                        txtBox.Attributes.Add("onchange", Convert.ToString(ds.Rows(0).Item("DJquery")))
                                    ElseIf Convert.ToString(ds.Rows(0).Item("DJqueryMethod")).ToUpper = "ONKEYUP" Then
                                        txtBox.Attributes.Add("onkeyup", Convert.ToString(ds.Rows(0).Item("DJquery")))
                                    End If
                                End If

                                'txtBox.CssClass = "form-control"
                                txtBox.CssClass = "txtBox"
                                If ds.Rows(0).Item("defaultfieldval").ToString.Length > 0 Then
                                    txtBox.Text = ds.Rows(0).Item("defaultfieldval").ToString
                                Else
                                    If datatype = "NUMERIC" Then
                                        txtBox.Text = "0"
                                    End If
                                End If
                                If Val(ds.Rows(0).Item("isDescription").ToString()) = 1 Then
                                    txtBox.ToolTip = ds.Rows(0).Item("Description").ToString()
                                    txtBox.Text = String.Empty
                                    txtBox.Attributes.Add("placeholder", "Please Enter " & ds.Rows(0).Item("displayname"))
                                End If
                                If Val(ds.Rows(0).Item("iseditable").ToString()) = 0 Then
                                    txtBox.Enabled = False
                                End If
                                'If IsTabPanel Then
                                '    'tabContainer.Controls(tabIndex).Controls.Add(txtBox)
                                '    pnlFields.Controls.Add(txtBox)
                                '    'tabContent.Controls.Add(txtBox)
                                'Else
                                '    pnlFields.Controls.Add(txtBox)
                                'End If

                                If datatype = "DATETIME" Then
                                    Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                    CLNDR.Controls.Clear()
                                    CLNDR.ID = "CLNDR" & ID
                                    CLNDR.Format = "dd/MM/yy"
                                    CLNDR.TargetControlID = txtBox.ID
                                    txtBox.Enabled = True
                                    If Not txtBox.Text.ToUpper = "BLANK" Then
                                        txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                    Else
                                        txtBox.Text = ""
                                    End If
                                    If HttpContext.Current.Session("EDITonEDIT") Is Nothing Then ' this session is inittialized on doc detail page by balli  in order to check this is coming from edit option  or not 
                                        If ds.Rows(0).Item("iseditable") = 1 Then
                                            Dim img As New Image
                                            img.ID = "img" & ID
                                            img.ImageUrl = "~\images\Cal.png"
                                            txtBox.Width = controlWdth - 40
                                            pnlFields.Controls.Add(img)
                                            CLNDR.PopupButtonID = "img" & ID
                                            pnlFields.Controls.Add(CLNDR)
                                        Else
                                            txtBox.Enabled = False
                                        End If
                                    Else
                                        If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then  ' this session is inittialized on doc detail page by balli 
                                            If ds.Rows(0).Item("alloweditonedit") = 1 And ds.Rows(0).Item("iseditable") = 1 Then
                                                Dim img As New Image
                                                img.ID = "img" & ID
                                                img.ImageUrl = "~\images\Cal.png"
                                                txtBox.Width = controlWdth - 40
                                                pnlFields.Controls.Add(img)
                                                CLNDR.PopupButtonID = "img" & ID
                                                pnlFields.Controls.Add(CLNDR)
                                            Else
                                                txtBox.Enabled = False
                                            End If
                                        End If
                                    End If

                                ElseIf datatype = "NEW DATETIME" Then
                                    'Data -field = "datetime"
                                    txtBox.Enabled = True
                                    'txtBox.ReadOnly = True
                                    txtBox.ID = "fld" & ID
                                    txtBox.Attributes.Add("data-field", "datetime")
                                    txtBox.Attributes.Add("readonly", "readonly")
                                    'readonly
                                    txtBox.Width = controlWdth - 10
                                    pnlFields.Controls.Add(txtBox)
                                ElseIf datatype = "TIME" Then
                                    'Data -field = "datetime"
                                    txtBox.Enabled = True
                                    'txtBox.ReadOnly = True
                                    txtBox.ID = "fld" & ID
                                    '  txtBox.Attributes.Add("data-field", "time")
                                    '  txtBox.Attributes.Add("readonly", "readonly")
                                    'readonly
                                    txtBox.Width = controlWdth - 10
                                    pnlFields.Controls.Add(txtBox)
                                ElseIf datatype = "FY START" Then 'To Render FY Start  (Pallavi) on 29th Apr 15
                                    'Data -field = "datetime"
                                    txtBox.Enabled = False
                                    'txtBox.ReadOnly = True
                                    txtBox.ID = "fld" & ID
                                    '  txtBox.Attributes.Add("data-field", "FYStart")
                                    txtBox.Attributes.Add("readonly", "readonly")
                                    'readonly
                                    txtBox.Width = controlWdth - 10
                                    Dim da As SqlDataAdapter = New SqlDataAdapter("select StartMonth +'-' + convert(varchar, datepart(year,Getdate())) from mmm_mst_entity where eid =" & HttpContext.Current.Session("EID"), con)
                                    Dim dt As DataTable = New DataTable
                                    da.Fill(dt)
                                    If (dt.Rows.Count > 0) Then
                                        txtBox.Text = Convert.ToString(dt.Rows(0)(0))
                                    Else : txtBox.Text = ""
                                    End If
                                    pnlFields.Controls.Add(txtBox) '-- To Render FY Start End
                                ElseIf datatype = "FY END" Then 'To Render FY End (Pallavi) on 29th Apr 15
                                    'Data -field = "datetime"
                                    txtBox.Enabled = False
                                    'txtBox.ReadOnly = True
                                    txtBox.ID = "fld" & ID
                                    '  txtBox.Attributes.Add("data-field", "FYStart")
                                    txtBox.Attributes.Add("readonly", "readonly")
                                    'readonly
                                    txtBox.Width = controlWdth - 10
                                    Dim da As SqlDataAdapter = New SqlDataAdapter("select replace( convert(varchar(50), dateadd(day,-1, dateadd(year,1 ,convert(datetime, StartMonth +'-' + convert(varchar, datepart(year,Getdate())),106))),106),' ','-') from mmm_mst_entity where eid =" & HttpContext.Current.Session("EID"), con)
                                    Dim dt As DataTable = New DataTable
                                    da.Fill(dt)
                                    If (dt.Rows.Count > 0) Then
                                        txtBox.Text = Convert.ToString(dt.Rows(0)(0))
                                    Else : txtBox.Text = ""
                                    End If
                                    pnlFields.Controls.Add(txtBox) '-- To Render FY End End
                                ElseIf datatype = "SCHEDULER" Then
                                    Dim CLNDR As New AjaxControlToolkit.TextBoxWatermarkExtender
                                    CLNDR.Controls.Clear()
                                    CLNDR.ID = "watermark" & ID
                                    CLNDR.TargetControlID = txtBox.ID
                                    CLNDR.WatermarkText = "*|*|*|*|*"
                                    CLNDR.Enabled = True
                                    pnlFields.Controls.Add(CLNDR)
                                Else
                                    Dim KC_Value As String = ds.Rows(0).Item("Cal_Fields").ToString()
                                    If ds.Rows(0).Item("Cal_Fields").ToString().Length() > 10 Then
                                        If _CallerPage <> 1 Then
                                            txtBox.Attributes.Add("onblur", ds.Rows(0).Item("Cal_Fields").ToString())
                                        Else
                                            KC_Value = KC_Value.Replace("ContentPlaceHolder1_", "")
                                            txtBox.Attributes.Add("onblur", KC_Value)
                                        End If
                                        'If IsDocDetail And Not (IsCallingFromMainHome) Then
                                        '    KC_Value = KC_Value.Replace("ContentPlaceHolder1_", "")
                                        '    Dim script = GetScript(HttpContext.Current.Session("Eid").ToString(), ds.rows(0).Item("Documenttype"), ds.rows(0).Item("FieldID"))
                                        '    script = script.Replace("ContentPlaceHolder1_", "")
                                        '    txtBox.Attributes.Add("onblur", script)
                                        'End If
                                    End If
                                End If
                                'For Grofers
                                If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                    txtBox.Attributes.Add("style", txt(1))
                                Else
                                    txtBox.CssClass = "form-control"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ID
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(0).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.rows(0).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.rows(0).Item("description")) & "</div></span>"))
                                End If
                            Case "LOOKUP"
                                datatype = ds.Rows(0).Item("datatype").ToString().ToUpper()
                                Dim FieldType As String = ""
                                'Changes for Check box if having there
                                Dim CheckControl As DataView = ds.AsDataView
                                CheckControl.RowFilter = "lookupvalue Like" & "'%" & ds.Rows(0).Item("Fieldid") & "-%'"
                                Dim tempdt As DataTable = CheckControl.ToTable()
                                If tempdt.Rows.Count > 0 Then
                                    Dim arr() As String = Convert.ToString(tempdt.Rows(0)("lookupvalue")).Split(",")
                                    Dim fldmapping As String = ""
                                    If arr.Length > 0 Then
                                        For XYZ As Integer = 0 To arr.Length - 1
                                            If Convert.ToString(arr(XYZ)).Contains(ds.Rows(0).Item("Fieldid") & "-") Then
                                                fldmapping = arr(XYZ)
                                                Exit For
                                            End If
                                        Next
                                        Dim finalFld As String() = fldmapping.Split("-")
                                        Dim dropdown As String() = Convert.ToString(tempdt.Rows(0)("dropdown")).Split("-")
                                        Try
                                            Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                            da.SelectCommand.CommandType = CommandType.Text
                                            da.SelectCommand.CommandText = "select FieldType from mmm_mst_fields where documenttype='" & dropdown(1) & "' and fieldMapping='" & finalFld(1) & "' and eid=" & HttpContext.Current.Session("EID")
                                            If con.State = ConnectionState.Closed Then
                                                con.Open()
                                            End If

                                            FieldType = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                            con.Close()
                                        Catch ex As Exception
                                            con.Dispose()
                                        End Try
                                    End If
                                End If
                                If FieldType.Trim() = "Check Box" Then
                                    Dim chkBox As New CheckBox
                                    chkBox.ID = "fld" & ID
                                    chkBox.Width = controlWdth - 10
                                    'txtBox.CssClass = "txtBox"
                                    If ds.Rows(0).Item("isEditable").ToString() = "1" Then
                                        chkBox.Enabled = True
                                    Else
                                        chkBox.Enabled = False
                                    End If
                                    pnlFields.Controls.Add(chkBox)
                                    'For Grofers
                                    If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                        Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                        chkBox.Attributes.Add("style", txt(1))
                                    Else
                                        chkBox.CssClass = ""
                                    End If
                                Else
                                    Dim txtBox As New TextBox
                                    txtBox.ID = "fld" & ID
                                    txtBox.Width = controlWdth - 10
                                    'txtBox.CssClass = "txtBox"
                                    If ds.Rows(0).Item("isEditable").ToString() = "1" Then
                                        txtBox.Enabled = True
                                    Else
                                        txtBox.Enabled = False
                                        txtBox.BackColor = Drawing.Color.LightGray
                                        txtBox.ForeColor = Drawing.Color.Black
                                        txtBox.Font.Bold = False
                                    End If
                                    pnlFields.Controls.Add(txtBox)
                                    'For Grofers
                                    If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                        Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                        txtBox.Attributes.Add("style", txt(1))
                                    Else
                                        txtBox.CssClass = "form-control"
                                    End If

                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ID
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(0).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.rows(0).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.rows(0).Item("description")) & "</div></span>"))
                                End If
                            Case "DROP DOWN"
                                Dim ddl As New DropDownList
                                ddl.ID = "fld" & ID
                                'Add Condition By mayank dropdown should be no editable in case of child specific text has some value
                                If (ds.Rows(0).Item("child_specific_text").ToString() <> String.Empty) Then
                                    ddl.Enabled = False
                                Else
                                    If ds.Rows(0).Item("isEditable").ToString() = "1" Then
                                        ddl.Enabled = True
                                    Else
                                        ddl.Enabled = False
                                    End If
                                End If
                                ddl.Width = controlWdth - 10
                                ddl.CssClass = "form-control"
                                Dim ddlText As String = ds.Rows(0).Item("dropdown").ToString()
                                Dim dropdowntype As String = ds.Rows(0).Item("dropdowntype").ToString()
                                Dim arr() As String
                                Dim arrMid() As String
                                If UCase(dropdowntype) = "FIX VALUED" Then
                                    arr = ddlText.Split(",")
                                    ddl.Items.Add("Select")
                                    For ii As Integer = 0 To arr.Count - 1
                                        ddl.Items.Add(arr(ii).Trim())
                                    Next
                                ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                    'If ds.rows(0).Item("FORMSOURCE").ToString().ToUpper.Trim() = "DETAIL FORM" And ds.rows(0).Item("KC_LOGIC").ToString().Length > 1 Then
                                    'Else
                                    arr = ddlText.Split("-")
                                    Dim TID As String = "TID"
                                    Dim TABLENAME As String = ""
                                    If UCase(arr(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                        TABLENAME = "MMM_MST_DOC"
                                    ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                        TABLENAME = "MMM_MST_DOC_ITEM"
                                    ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                        If arr(1).ToString.ToUpper = "USER" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                            TABLENAME = "MMM_MST_LOCATION"
                                            TID = "LOCID"
                                        End If
                                    End If
                                    Dim lookUpqry As String = ""
                                    str = ""
                                    If arr(0).ToUpper() = "CHILD" Then
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    ElseIf arr(0).ToUpper() <> "STATIC" Then
                                        str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    Else
                                        If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                            str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                                        Else
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                        End If
                                    End If

                                    Dim xwhr As String = ""
                                    Dim tids As String = ""
                                    Dim Rtids As String = ""   ' for prerole data filter
                                    'Dim tidarr() As String

                                    ''FILTER THE DATA ACCORDING TO USER 
                                    tids = UserDataFilter(ds.Rows(0).Item("documenttype").ToString(), arr(1).ToString())
                                    Rtids = UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                                    If Rtids.Length > 2 Then
                                        tids = ""
                                    End If

                                    '' for multiuse of document by sp on 08_apr_15
                                    Dim Sdtype As String = arr(1).ToString
                                    Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                    da.SelectCommand.CommandType = CommandType.Text
                                    da.SelectCommand.CommandText = "select isnull(Allowmultiuse,0) from mmm_mst_forms where eid='" & HttpContext.Current.Session("EID").ToString & "' AND FORMNAME='" & Sdtype & "'"
                                    If con.State <> ConnectionState.Open Then
                                        con.Open()
                                    End If
                                    Dim isMultiUse As Integer = Convert.ToInt32(da.SelectCommand.ExecuteScalar())

                                    Dim CurrDoctype As String = ds.Rows(0).Item("documenttype").ToString()
                                    Dim CurrFieldMapping As String = ds.Rows(0).Item("fieldmapping").ToString()

                                    Dim qry As String = ""
                                    Dim MTids As String = ""
                                    If UCase(arr(0).ToString()) <> "CHILD" And UCase(arr(0).ToString) <> "STATIC" Then
                                        da.SelectCommand.CommandType = CommandType.Text
                                        da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR," & CurrFieldMapping & ")  FROM " & TABLENAME & " where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & CurrDoctype & "'" & " FOR XML PATH('')),2,20000) AS CSV"
                                        MTids = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                    End If

                                    ''ends  for multiuse of document by sp on 08_apr_15


                                    If tids.Length >= 2 Then
                                        xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                    ElseIf tids = "0" Then
                                        pnlFields.Visible = False
                                        'btnActEdit.Visible = False
                                        'UpdatePanel1.Update()
                                        xwhr = ""
                                    End If

                                    ''ends  for multiuse of document by sp on 08_apr_15
                                    '' new by sunil for pre role data filter 22-feb
                                    If Rtids <> "" Then
                                        If xwhr.ToString = "" Then
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                        Else
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                        End If
                                    End If

                                    '' new by sunil for multiuse of docs
                                    If MTids.Length > 2 And isMultiUse = 1 Then
                                        If Right(MTids, 1) = "," Then
                                            MTids = Left(MTids, Len(MTids) - 1)
                                        End If
                                        xwhr = xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") "
                                    End If
                                    '' new by sunil for multiuse of docs

                                    If amendment = "AMENDMENT" Then
                                        str = str & "   " & xwhr & " order by " & arr(2).ToString()
                                    Else
                                        'str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()  ' prev
                                        str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                        ' str = str & "  AND (M.isauth=1 or M.isauth=2) " & xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") " & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                    End If

                                    Dim AutoFilter As String = ds.Rows(0).Item("AutoFilter").ToString()
                                    Dim InitFilterArr As String() = ds.Rows(0).Item("InitialFilter").ToString().Split(":")
                                    Dim SessionFieldvalue As String = Convert.ToString(ds.Rows(0).Item("SessionFieldVal"))
                                    ' If InitFilter.Length > 0 Then
                                    ' Dim initFilArr As String() = ds.rows(0).Item("InitialFilter").ToString().Split(":")
                                    '  End If


                                    If AutoFilter.Length > 0 Then
                                        If arr(0).ToUpper() = "CHILD" Then
                                            If AutoFilter.ToUpper = "DOCID" Then
                                                str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                            Else
                                                str = GetQuery(arr(1).ToString, arr(2).ToString)
                                            End If
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                        Else
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                        End If
                                    ElseIf SessionFieldvalue.Length > 0 Then
                                        Dim val As String() = SessionFieldvalue.ToString().Split("-")
                                        If arr(0).ToUpper() = "CHILD" Then
                                            If AutoFilter.ToUpper = "DOCID" Then
                                                str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                            Else
                                                str = GetQuery(arr(1).ToString, arr(2).ToString)
                                            End If
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            da.SelectCommand.Parameters.Clear()
                                            da.SelectCommand.CommandText = "select isnull(" & val(0) & ",0) from mmm_mst_user where eid=" & HttpContext.Current.Session("EID") & " and uid=" & HttpContext.Current.Session("UID")
                                            If con.State = ConnectionState.Closed Then
                                                con.Open()
                                            End If
                                            Dim Conval As String = Replace(Convert.ToString(da.SelectCommand.ExecuteScalar), ",", "','")
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid] from " & TABLENAME & " M WHERE  EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                            If Conval.Length > 1 Then
                                                If SessionFieldvalue.Contains("-") Then
                                                    str = str & "  AND (M.isauth>0) " & xwhr & " and " & val(2) & " in('" & Conval & "') order by " & arr(2).ToString()
                                                Else
                                                    str = str & "  AND (M.isauth>0) " & xwhr & " and tid in ('" & Conval & "') order by " & arr(2).ToString()
                                                End If

                                            Else
                                                str = str & "  AND (M.isauth>0) " & xwhr & "  order by " & arr(2).ToString()
                                            End If

                                        Else
                                            str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                        End If

                                    ElseIf InitFilterArr.Length > 1 Then
                                        '' for getting def. value from field master
                                        'Backup values 22-Mar-2017
                                        'Dim row() As DataRow = dsFields.Select("fieldid=" & InitFilterArr(0).ToString())
                                        row = ds.Select("fieldid=" & InitFilterArr(0).ToString())
                                        If arr(0).ToUpper() = "DOCUMENT" Or arr(0).ToUpper() = "MASTER" Then
                                            If row.Length > 0 Then
                                                str = " Select " & arr(2).ToString() & ", convert(nvarchar(10),tid) [TID] FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                                If amendment = "AMENDMENT" Then
                                                    str = str & "  " & xwhr & " order by " & arr(2).ToString()
                                                Else
                                                    str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                                End If
                                            End If
                                        ElseIf arr(0).ToUpper() = "STATIC" Then
                                            If row.Length > 0 Then
                                                str = " Select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " "
                                                str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                                str = str & " AND (M.isauth>0) " & xwhr
                                                ' to be used for apm user bind from role assignment also 12_sep_14
                                                str = str & " union Select  " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " where convert(nvarchar(10)," & TID & ") in (select uid from MMM_Ref_Role_User where eid=" & HttpContext.Current.Session("EID") & " and rolename='" & row(0).Item("defaultFieldVal").ToString & "') order by " & arr(2).ToString() & ""
                                            End If
                                        End If
                                    End If
                                    '' hard code by sp on 15 may for HCL vendor portal for non availability of particular filter
                                    'If IsDocDetail = False Then
                                    '    If HttpContext.Current.Session("EID") = "46" And arr(1).ToUpper() = "INVOICE TYPE MASTER" Then
                                    '        str = " Select  " & arr(2).ToString() & ", convert(nvarchar(10)," & TID & ")  [tid] " & "FROM " & TABLENAME & " where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'" & " and ','+ fld2 +',' like '%," & HttpContext.Current.Session("USERROLE") & ",%'"
                                    '        ' str &= " and ','+ fld2 +',' like '%," & HttpContext.Current.Session("USERROLE") & ",%'"                                       
                                    '    End If
                                    'End If
                                    '' prev code bkup by sp on 17_feb
                                    'If AutoFilter.Length > 0 Then
                                    '    If arr(0).ToUpper() = "CHILD" Then
                                    '        If AutoFilter.ToUpper = "DOCID" Then
                                    '            str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                    '        Else
                                    '            str = GetQuery(arr(1).ToString, arr(2).ToString)
                                    '        End If
                                    '    ElseIf arr(0).ToUpper() <> "STATIC" Then
                                    '        str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    '        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                    '    Else
                                    '        str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                    '        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                    '    End If
                                    'End If
                                    oda = New SqlDataAdapter("", con)
                                    Dim dss As New DataSet

                                    If str.Length > 0 Then
                                        oda.SelectCommand.CommandText = str
                                        oda.Fill(dss, "FV")
                                        Dim isAddJquery As Integer = 0
                                        ddl.Items.Add("Select")
                                        ddl.Items(0).Value = "0"
                                        For j1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                            ddl.Items.Add(dss.Tables("FV").Rows(j1).Item(0).ToString())
                                            Dim lookddlVal As String = dss.Tables("FV").Rows(j1).Item(1).ToString()
                                            ddl.Items(j1 + 1).Value = lookddlVal
                                        Next
                                        dss.Dispose()
                                        If isAddJquery = 1 Then
                                            Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i <r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 <l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i <x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                        End If
                                    End If

                                    ' NEW ADDED BY SUNIL ON 07-12-13 FOR CHILD-CHILD FILTERING
                                ElseIf UCase(dropdowntype) = "CHILD VALUED" Then

                                ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                                    oda1 = New SqlDataAdapter("", con)
                                    Dim ds1 As New DataSet
                                    Dim QRY As String = ""
                                    Dim DROPDOWN As String() = ds.Rows(0).Item("DROPDOWN").ToString().Split("-")
                                    If DROPDOWN(1).ToString.ToUpper = "USER" Then
                                        QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                                    ElseIf DROPDOWN(1).ToString.ToUpper = "LOCATION" Then
                                        QRY = "SELECT LOCATIONNAME ,LOCID FROM MMM_MST_LOCATION WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                                    End If
                                    oda1.SelectCommand.CommandText = QRY
                                    oda1.Fill(ds1, "SESSION")
                                    ddl.Items.Clear()
                                    For iI As Integer = 0 To ds1.Tables("SESSION").Rows.Count - 1
                                        ddl.Items.Add(ds1.Tables("SESSION").Rows(iI).Item(0))
                                        ddl.Items(iI).Value = ds1.Tables("SESSION").Rows(iI).Item(1)
                                    Next
                                    ddl.Items.Insert(0, "SELECT")
                                End If
                                If IsTabPanel Then
                                    'tabContainer.Controls(tabIndex).Controls.Add(ddl)
                                    'tabContent.Controls.Add(ddl)
                                    pnlFields.Controls.Add(ddl)
                                Else
                                    pnlFields.Controls.Add(ddl)
                                End If

                                'For Grofers
                                If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                    Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                    ddl.Attributes.Add("style", txt(1))
                                Else
                                    ddl.CssClass = "form-control"
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                    ddl.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ID
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(0).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.rows(0).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.rows(0).Item("description")) & "</div></span>"))
                                End If

                            Case "CHECKBOX LIST"
                                Dim ddl As New ListBox
                                Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                                dynmdiv.ID = "div" & ID.ToString()
                                Dim chklist As New CheckBoxList
                                chklist.ID = "fld" & ID.ToString()
                                chklist.CssClass = "form-control"
                                Dim ddlText As String = row(0).Item("dropdown").ToString()
                                Dim dropdowntype As String = row(0).Item("dropdowntype").ToString()
                                Dim arr() As String
                                If UCase(dropdowntype) = "FIX VALUED" Then
                                    arr = ddlText.Split(",")
                                    For ii As Integer = 0 To arr.Count - 1
                                        chklist.Items.Add(arr(ii).ToUpper())
                                    Next
                                ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                    arr = ddlText.Split("-")
                                    Dim TABLENAME As String = ""
                                    If UCase(arr(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    Else
                                        TABLENAME = "MMM_MST_DOC"
                                    End If
                                    Dim strqry As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    oda = New SqlDataAdapter("", con)
                                    Dim dss As New DataSet
                                    oda.SelectCommand.CommandText = strqry
                                    oda.Fill(dss, "FV")
                                    For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                        chklist.Items.Add(dss.Tables("FV").Rows(J1).Item(0))
                                        chklist.Items(J1).Value = dss.Tables("FV").Rows(J1).Item(1)
                                    Next
                                    oda.Dispose()
                                    dss.Dispose()
                                End If
                                dynmdiv.Controls.Add(chklist)
                                ddl.SelectionMode = ListSelectionMode.Multiple
                                pnlFields.Controls.Add(dynmdiv)

                            Case "LIST BOX"
                                Dim ddl As New ListBox
                                ddl.ID = "fld" & ID.ToString()
                                ddl.Width = controlWdth - 2
                                ddl.CssClass = "txtBox"
                                Dim ddlText As String = row(0).Item("dropdown").ToString()
                                Dim dropdowntype As String = row(0).Item("dropdowntype").ToString()
                                Dim arr() As String
                                If UCase(dropdowntype) = "FIX VALUED" Then
                                    arr = ddlText.Split(",")
                                    ddl.Items.Add("")
                                    For ii As Integer = 0 To arr.Count - 1
                                        ddl.Items.Add(arr(ii).ToUpper())
                                    Next
                                ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                    arr = ddlText.Split("-")
                                    Dim TABLENAME As String = ""
                                    If UCase(arr(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    Else
                                        TABLENAME = "MMM_MST_DOC"
                                    End If
                                    Dim strqry As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                    oda = New SqlDataAdapter("", con)
                                    Dim dss As New DataSet
                                    oda.SelectCommand.CommandText = strqry
                                    oda.Fill(dss, "FV")
                                    For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                        ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0))
                                        ddl.Items(J1).Value = dss.Tables("FV").Rows(J1).Item(1)
                                    Next
                                    oda.Dispose()
                                    dss.Dispose()
                                End If
                                ddl.SelectionMode = ListSelectionMode.Multiple
                                pnlFields.Controls.Add(ddl)
                            Case "TEXT AREA"
                                datatype = ds.Rows(0).Item("datatype").ToString().ToUpper()
                                Dim txtBox As New TextBox
                                txtBox.ID = "fld" & ID
                                txtBox.Width = controlWdth - 10
                                txtBox.TextMode = TextBoxMode.MultiLine
                                If datatype.ToUpper = "MSGBODY" Then
                                    newScreenHeight = newScreenHeight + 100
                                    txtBox.Height = 180 'newScreenHeight
                                    txtBox.CssClass = "msgbody"
                                Else
                                    txtBox.CssClass = "form-control"
                                    newScreenHeight = newScreenHeight + 60
                                    txtBox.Height = "80"
                                End If


                                If ds.Rows(0).Item("defaultfieldval").ToString.Length > 0 Then
                                    txtBox.Text = ds.Rows(0).Item("defaultfieldval")
                                Else
                                    If datatype = "NUMERIC" Then
                                        txtBox.Text = "0"
                                    End If
                                End If
                                pnlFields.Controls.Add(txtBox)
                                If Not datatype.ToUpper = "MSGBODY" Then
                                    'For Grofers
                                    If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                        Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                        txtBox.Attributes.Add("style", txt(1))
                                    Else
                                        txtBox.CssClass = "form-control"
                                    End If
                                End If

                                If datatype.ToUpper = "MSGBODY" Then
                                    'Dim htmlExt As New AjaxControlToolkit.HtmlEditorExtender
                                    'htmlExt.ID = "msgbody" & id
                                    'htmlExt.DisplaySourceTab = True
                                    'htmlExt.TargetControlID = txtBox.ID
                                    'htmlExt.EnableSanitization = False
                                    'pnlFields.Controls.Add(htmlExt)
                                    If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                        txtBox.Attributes.Add("placeholder", Convert.ToString(ds.Rows(0).Item("description")))
                                    End If
                                End If
                                ' For tooltip
                                If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                    txtBox.Width = controlWdth - 30
                                    Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                    dynSpan.ID = "span" & ID
                                    dynSpan.Attributes.Add("class", "help-tip notification")
                                    dynSpan.InnerText = "?"
                                    dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(0).Item("description")) & "</div>"
                                    pnlFields.Controls.Add(dynSpan)
                                    'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.rows(0).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.rows(0).Item("description")) & "</div></span>"))
                                End If
                        End Select
                        'id = id + 1
                    End If
                    pnlFields.Controls.Add(New LiteralControl("</div>"))
                Else
                    pnlFields.Controls.Add(New LiteralControl("<div " & arr2(j).ToString()))
                End If
                ' Next
                ' pnlFields.Controls.Add(New LiteralControl("</tr>"))
                pnlFields.Height = newScreenHeight
            Next
            pnlFields.Controls.Add(New LiteralControl(" </fieldset><br>  </div>   </div>  </div>  </div>  </div> "))
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try

    End Sub

    Public Sub CreateControlOnCustom(ByVal ds As DataTable, ByRef pnlFields As Panel, ByRef UpdatePanel1 As UpdatePanel, ByRef btnActEdit As Button, ByVal autolayout As Integer, Optional ByRef ddown As DropDownList = Nothing, Optional ByVal amendment As String = Nothing, Optional ByVal IsDocDetail As Boolean = False, Optional ByVal IsCallingFromMainHome As Boolean = False, Optional ByVal IsTabPanel As Boolean = False, Optional ByVal TabName As String = "Defalut", Optional isTabCallable As Boolean = False, Optional ByVal docpanelID As Integer = 0, Optional ByVal tabContainer As AjaxControlToolkit.TabContainer = Nothing, Optional ByVal tabIndex As Integer = 0, Optional ByRef isOnlyTabChild As Boolean = False, Optional ByVal TotaltabIndex As Integer = 0)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = Nothing
        Try
            Dim str As String = ds.Rows(0).Item("layoutdata").ToString()
            Dim str1 As String = ""
            Dim tr() As String = {"<tr"}
            Dim datatype As String = ""
            Dim newScreenWidth As Integer = 0
            Dim newScreenHeight As Integer = 0
            'Dim id As Integer = 0
            Dim screenWidth As Integer = pnlFields.Width.Value
            Dim arr2() As String = str.Split(tr, StringSplitOptions.None)
            pnlFields.Controls.Add(New LiteralControl("<div class=""container"" style=""text-align:center"">"))
            pnlFields.Controls.Add(New LiteralControl(arr2(0).ToString()))
            For i = 1 To arr2.Length - 1
                tr = {"<td"}
                Dim arr1() As String = arr2(i).Split(tr, StringSplitOptions.None)
                pnlFields.Controls.Add(New LiteralControl("<tr " & arr1(0).ToString()))
                For j As Integer = 1 To arr1.Length - 1
                    Dim controlWdth As Integer = 240
                    If arr1(j).ToString().Contains("{") Then
                        str1 = arr1(j).Substring(0, arr1(j).IndexOf(">") + 1)
                        pnlFields.Controls.Add(New LiteralControl("<td " & str1))
                        str1 = arr1(j).Substring(0, arr1(j).IndexOf("<"))
                        str1 = (str1.Substring(str1.IndexOf("{") + 1, (str1.Length - 1) - (str1.IndexOf("{") + 1))).Trim()
                        If str1.Contains("{") Then
                            str1 = str1.Substring(1, str1.Length - 1)
                        End If
                        If str1.Contains("}") Then
                            str1 = str1.Substring(0, str1.Length - 1)
                        End If
                        Dim row() As DataRow = ds.Select("displayname='" & str1 & "'")
                        If row.Length > 0 Then
                            Dim ID As String = row(0).Item("fieldid").ToString()
                            Select Case row(0).Item("FieldType").ToString().ToUpper()
                                Case "TEXT BOX"
                                    datatype = ds.Rows(0).Item("datatype").ToString().ToUpper()
                                    Dim txtBox As New TextBox
                                    txtBox.ID = "fld" & ID
                                    txtBox.Width = controlWdth - 10
                                    'Add condition for dynamic Jquery
                                    If Not String.IsNullOrEmpty(ds.Rows(0).Item("DJqueryMethod").ToString()) Then
                                        If Convert.ToString(ds.Rows(0).Item("DJqueryMethod")).ToUpper = "ONCHANGE" Then
                                            txtBox.Attributes.Add("onchange", Convert.ToString(ds.Rows(0).Item("DJquery")))
                                        ElseIf Convert.ToString(ds.Rows(0).Item("DJqueryMethod")).ToUpper = "ONKEYUP" Then
                                            txtBox.Attributes.Add("onkeyup", Convert.ToString(ds.Rows(0).Item("DJquery")))
                                        End If
                                    End If

                                    txtBox.CssClass = "txtbox"
                                    If ds.Rows(0).Item("defaultfieldval").ToString.Length > 0 Then
                                        txtBox.Text = ds.Rows(0).Item("defaultfieldval").ToString
                                    Else
                                        If datatype = "NUMERIC" Then
                                            txtBox.Text = "0"
                                        End If
                                    End If
                                    If Val(ds.Rows(0).Item("isDescription").ToString()) = 1 Then
                                        txtBox.ToolTip = ds.Rows(0).Item("Description").ToString()
                                        txtBox.Text = String.Empty
                                        txtBox.Attributes.Add("placeholder", "Please Enter " & ds.Rows(0).Item("displayname"))
                                    End If
                                    If Val(ds.Rows(0).Item("iseditable").ToString()) = 0 Then
                                        txtBox.Enabled = False
                                    End If
                                    'If IsTabPanel Then
                                    '    'tabContainer.Controls(tabIndex).Controls.Add(txtBox)
                                    '    pnlFields.Controls.Add(txtBox)
                                    '    'tabContent.Controls.Add(txtBox)
                                    'Else
                                    '    pnlFields.Controls.Add(txtBox)
                                    'End If

                                    If datatype = "DATETIME" Then
                                        Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                                        CLNDR.Controls.Clear()
                                        CLNDR.ID = "CLNDR" & ID
                                        CLNDR.Format = "dd/MM/yy"
                                        CLNDR.TargetControlID = txtBox.ID
                                        txtBox.Enabled = True
                                        If Not txtBox.Text.ToUpper = "BLANK" Then
                                            txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                        Else
                                            txtBox.Text = ""
                                        End If
                                        If HttpContext.Current.Session("EDITonEDIT") Is Nothing Then ' this session is inittialized on doc detail page by balli  in order to check this is coming from edit option  or not 
                                            If ds.Rows(0).Item("iseditable") = 1 Then
                                                Dim img As New Image
                                                img.ID = "img" & ID
                                                img.ImageUrl = "~\images\Cal.png"
                                                txtBox.Width = controlWdth - 40
                                                pnlFields.Controls.Add(img)
                                                CLNDR.PopupButtonID = "img" & ID
                                                pnlFields.Controls.Add(CLNDR)
                                            Else
                                                txtBox.Enabled = False
                                            End If
                                        Else
                                            If HttpContext.Current.Session("EDITonEDIT") = "EDITonEDIT" Then  ' this session is inittialized on doc detail page by balli 
                                                If ds.Rows(0).Item("alloweditonedit") = 1 And ds.Rows(0).Item("iseditable") = 1 Then
                                                    Dim img As New Image
                                                    img.ID = "img" & ID
                                                    img.ImageUrl = "~\images\Cal.png"
                                                    txtBox.Width = controlWdth - 40
                                                    pnlFields.Controls.Add(img)
                                                    CLNDR.PopupButtonID = "img" & ID
                                                    pnlFields.Controls.Add(CLNDR)
                                                Else
                                                    txtBox.Enabled = False
                                                End If
                                            End If
                                        End If

                                    ElseIf datatype = "NEW DATETIME" Then
                                        'Data -field = "datetime"
                                        txtBox.Enabled = True
                                        'txtBox.ReadOnly = True
                                        txtBox.ID = "fld" & ID
                                        txtBox.Attributes.Add("data-field", "datetime")
                                        txtBox.Attributes.Add("readonly", "readonly")
                                        'readonly
                                        txtBox.Width = controlWdth - 10
                                        pnlFields.Controls.Add(txtBox)
                                    ElseIf datatype = "TIME" Then
                                        'Data -field = "datetime"
                                        txtBox.Enabled = True
                                        'txtBox.ReadOnly = True
                                        txtBox.ID = "fld" & ID
                                        '  txtBox.Attributes.Add("data-field", "time")
                                        '  txtBox.Attributes.Add("readonly", "readonly")
                                        'readonly
                                        txtBox.Width = controlWdth - 10
                                        pnlFields.Controls.Add(txtBox)
                                    ElseIf datatype = "FY START" Then 'To Render FY Start  (Pallavi) on 29th Apr 15
                                        'Data -field = "datetime"
                                        txtBox.Enabled = False
                                        'txtBox.ReadOnly = True
                                        txtBox.ID = "fld" & ID
                                        '  txtBox.Attributes.Add("data-field", "FYStart")
                                        txtBox.Attributes.Add("readonly", "readonly")
                                        'readonly
                                        txtBox.Width = controlWdth - 10
                                        Dim da As SqlDataAdapter = New SqlDataAdapter("select StartMonth +'-' + convert(varchar, datepart(year,Getdate())) from mmm_mst_entity where eid =" & HttpContext.Current.Session("EID"), con)
                                        Dim dt As DataTable = New DataTable
                                        da.Fill(dt)
                                        If (dt.Rows.Count > 0) Then
                                            txtBox.Text = Convert.ToString(dt.Rows(0)(0))
                                        Else : txtBox.Text = ""
                                        End If
                                        pnlFields.Controls.Add(txtBox) '-- To Render FY Start End
                                    ElseIf datatype = "FY END" Then 'To Render FY End (Pallavi) on 29th Apr 15
                                        'Data -field = "datetime"
                                        txtBox.Enabled = False
                                        'txtBox.ReadOnly = True
                                        txtBox.ID = "fld" & ID
                                        '  txtBox.Attributes.Add("data-field", "FYStart")
                                        txtBox.Attributes.Add("readonly", "readonly")
                                        'readonly
                                        txtBox.Width = controlWdth - 10
                                        Dim da As SqlDataAdapter = New SqlDataAdapter("select replace( convert(varchar(50), dateadd(day,-1, dateadd(year,1 ,convert(datetime, StartMonth +'-' + convert(varchar, datepart(year,Getdate())),106))),106),' ','-') from mmm_mst_entity where eid =" & HttpContext.Current.Session("EID"), con)
                                        Dim dt As DataTable = New DataTable
                                        da.Fill(dt)
                                        If (dt.Rows.Count > 0) Then
                                            txtBox.Text = Convert.ToString(dt.Rows(0)(0))
                                        Else : txtBox.Text = ""
                                        End If
                                        pnlFields.Controls.Add(txtBox) '-- To Render FY End End
                                    ElseIf datatype = "SCHEDULER" Then
                                        Dim CLNDR As New AjaxControlToolkit.TextBoxWatermarkExtender
                                        CLNDR.Controls.Clear()
                                        CLNDR.ID = "watermark" & ID
                                        CLNDR.TargetControlID = txtBox.ID
                                        CLNDR.WatermarkText = "*|*|*|*|*"
                                        CLNDR.Enabled = True
                                        pnlFields.Controls.Add(CLNDR)
                                    Else
                                        Dim KC_Value As String = ds.Rows(0).Item("Cal_Fields").ToString()
                                        If ds.Rows(0).Item("Cal_Fields").ToString().Length() > 10 Then
                                            If _CallerPage <> 1 Then
                                                txtBox.Attributes.Add("onblur", ds.Rows(0).Item("Cal_Fields").ToString())
                                            Else
                                                KC_Value = KC_Value.Replace("ContentPlaceHolder1_", "")
                                                txtBox.Attributes.Add("onblur", KC_Value)
                                            End If
                                            'If IsDocDetail And Not (IsCallingFromMainHome) Then
                                            '    KC_Value = KC_Value.Replace("ContentPlaceHolder1_", "")
                                            '    Dim script = GetScript(HttpContext.Current.Session("Eid").ToString(), ds.rows(0).Item("Documenttype"), ds.rows(0).Item("FieldID"))
                                            '    script = script.Replace("ContentPlaceHolder1_", "")
                                            '    txtBox.Attributes.Add("onblur", script)
                                            'End If
                                        End If
                                    End If
                                    'For Grofers
                                    If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                        Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                        txtBox.Attributes.Add("style", txt(1))
                                    Else
                                        txtBox.CssClass = "txtbox"
                                    End If
                                    ' For tooltip
                                    If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                        txtBox.Width = controlWdth - 30
                                        Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                        dynSpan.ID = "span" & ID
                                        dynSpan.Attributes.Add("class", "help-tip notification")
                                        dynSpan.InnerText = "?"
                                        dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(0).Item("description")) & "</div>"
                                        pnlFields.Controls.Add(dynSpan)
                                        'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.rows(0).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.rows(0).Item("description")) & "</div></span>"))
                                    End If
                                Case "LOOKUP"
                                    datatype = ds.Rows(0).Item("datatype").ToString().ToUpper()
                                    Dim FieldType As String = ""
                                    'Changes for Check box if having there
                                    Dim CheckControl As DataView = ds.AsDataView
                                    CheckControl.RowFilter = "lookupvalue Like" & "'%" & ds.Rows(0).Item("Fieldid") & "-%'"
                                    Dim tempdt As DataTable = CheckControl.ToTable()
                                    If tempdt.Rows.Count > 0 Then
                                        Dim arr() As String = Convert.ToString(tempdt.Rows(0)("lookupvalue")).Split(",")
                                        Dim fldmapping As String = ""
                                        If arr.Length > 0 Then
                                            For XYZ As Integer = 0 To arr.Length - 1
                                                If Convert.ToString(arr(XYZ)).Contains(ds.Rows(0).Item("Fieldid") & "-") Then
                                                    fldmapping = arr(XYZ)
                                                    Exit For
                                                End If
                                            Next
                                            Dim finalFld As String() = fldmapping.Split("-")
                                            Dim dropdown As String() = Convert.ToString(tempdt.Rows(0)("dropdown")).Split("-")
                                            Try
                                                Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                                da.SelectCommand.CommandType = CommandType.Text
                                                da.SelectCommand.CommandText = "select FieldType from mmm_mst_fields where documenttype='" & dropdown(1) & "' and fieldMapping='" & finalFld(1) & "' and eid=" & HttpContext.Current.Session("EID")
                                                If con.State = ConnectionState.Closed Then
                                                    con.Open()
                                                End If

                                                FieldType = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                                con.Close()
                                            Catch ex As Exception
                                                con.Dispose()
                                            End Try
                                        End If
                                    End If
                                    If FieldType.Trim() = "Check Box" Then
                                        Dim chkBox As New CheckBox
                                        chkBox.ID = "fld" & ID
                                        chkBox.Width = controlWdth - 10
                                        'txtBox.CssClass = "txtBox"
                                        If ds.Rows(0).Item("isEditable").ToString() = "1" Then
                                            chkBox.Enabled = True
                                        Else
                                            chkBox.Enabled = False
                                        End If
                                        pnlFields.Controls.Add(chkBox)
                                        'For Grofers
                                        If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                            Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                            chkBox.Attributes.Add("style", txt(1))
                                        Else
                                            chkBox.CssClass = ""
                                        End If
                                    Else
                                        Dim txtBox As New TextBox
                                        txtBox.ID = "fld" & ID
                                        txtBox.Width = controlWdth - 10
                                        'txtBox.CssClass = "txtBox"
                                        If ds.Rows(0).Item("isEditable").ToString() = "1" Then
                                            txtBox.Enabled = True
                                        Else
                                            txtBox.Enabled = False
                                            txtBox.BackColor = Drawing.Color.LightGray
                                            txtBox.ForeColor = Drawing.Color.Black
                                            txtBox.Font.Bold = False
                                        End If
                                        pnlFields.Controls.Add(txtBox)
                                        'For Grofers
                                        If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                            Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                            txtBox.Attributes.Add("style", txt(1))
                                        Else
                                            txtBox.CssClass = "txtbox"
                                        End If

                                    End If
                                    ' For tooltip
                                    If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                        Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                        dynSpan.ID = "span" & ID
                                        dynSpan.Attributes.Add("class", "help-tip notification")
                                        dynSpan.InnerText = "?"
                                        dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(0).Item("description")) & "</div>"
                                        pnlFields.Controls.Add(dynSpan)
                                        'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.rows(0).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.rows(0).Item("description")) & "</div></span>"))
                                    End If
                                Case "DROP DOWN"
                                    Dim ddl As New DropDownList
                                    ddl.ID = "fld" & ID
                                    'Add Condition By mayank dropdown should be no editable in case of child specific text has some value
                                    If (ds.Rows(0).Item("child_specific_text").ToString() <> String.Empty) Then
                                        ddl.Enabled = False
                                    Else
                                        If ds.Rows(0).Item("isEditable").ToString() = "1" Then
                                            ddl.Enabled = True
                                        Else
                                            ddl.Enabled = False
                                        End If
                                    End If
                                    ddl.Width = controlWdth - 10
                                    ddl.CssClass = "txtbox"
                                    Dim ddlText As String = ds.Rows(0).Item("dropdown").ToString()
                                    Dim dropdowntype As String = ds.Rows(0).Item("dropdowntype").ToString()
                                    Dim arr() As String
                                    Dim arrMid() As String
                                    If UCase(dropdowntype) = "FIX VALUED" Then
                                        arr = ddlText.Split(",")
                                        ddl.Items.Add("Select")
                                        For ii As Integer = 0 To arr.Count - 1
                                            ddl.Items.Add(arr(ii).Trim())
                                        Next
                                    ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                        'If ds.rows(0).Item("FORMSOURCE").ToString().ToUpper.Trim() = "DETAIL FORM" And ds.rows(0).Item("KC_LOGIC").ToString().Length > 1 Then
                                        'Else
                                        arr = ddlText.Split("-")
                                        Dim TID As String = "TID"
                                        Dim TABLENAME As String = ""
                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(arr(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(arr(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(arr(0).ToString) = "STATIC" Then
                                            If arr(1).ToString.ToUpper = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf arr(1).ToString().ToUpper = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                TID = "LOCID"
                                            End If
                                        End If
                                        Dim lookUpqry As String = ""
                                        str = ""
                                        If arr(0).ToUpper() = "CHILD" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]  from " & TABLENAME & " M WHERE   DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        ElseIf arr(0).ToUpper() <> "STATIC" Then
                                            str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        Else
                                            If arr(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                str = "select DISTINCT " & arr(2).ToString() & ",SID [tid]" & lookUpqry & " from " & TABLENAME & " M "
                                            Else
                                                str = "select " & arr(2).ToString() & "," & TID & "[tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                            End If
                                        End If

                                        Dim xwhr As String = ""
                                        Dim tids As String = ""
                                        Dim Rtids As String = ""   ' for prerole data filter
                                        'Dim tidarr() As String

                                        ''FILTER THE DATA ACCORDING TO USER 
                                        tids = UserDataFilter(ds.Rows(0).Item("documenttype").ToString(), arr(1).ToString())
                                        Rtids = UserDataFilter_PreRole(arr(1).ToString(), TABLENAME)  '' new by sunil for pre role data filter 22-feb

                                        If Rtids.Length > 2 Then
                                            tids = ""
                                        End If

                                        '' for multiuse of document by sp on 08_apr_15
                                        Dim Sdtype As String = arr(1).ToString
                                        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                        da.SelectCommand.CommandType = CommandType.Text
                                        da.SelectCommand.CommandText = "select isnull(Allowmultiuse,0) from mmm_mst_forms where eid='" & HttpContext.Current.Session("EID").ToString & "' AND FORMNAME='" & Sdtype & "'"
                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        Dim isMultiUse As Integer = Convert.ToInt32(da.SelectCommand.ExecuteScalar())

                                        Dim CurrDoctype As String = ds.Rows(0).Item("documenttype").ToString()
                                        Dim CurrFieldMapping As String = ds.Rows(0).Item("fieldmapping").ToString()

                                        Dim qry As String = ""
                                        Dim MTids As String = ""
                                        If UCase(arr(0).ToString()) <> "CHILD" And UCase(arr(0).ToString) <> "STATIC" Then
                                            da.SelectCommand.CommandType = CommandType.Text
                                            da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR," & CurrFieldMapping & ")  FROM " & TABLENAME & " where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & CurrDoctype & "'" & " FOR XML PATH('')),2,20000) AS CSV"
                                            MTids = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                        End If

                                        ''ends  for multiuse of document by sp on 08_apr_15


                                        If tids.Length >= 2 Then
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                        ElseIf tids = "0" Then
                                            pnlFields.Visible = False
                                            'btnActEdit.Visible = False
                                            'UpdatePanel1.Update()
                                            xwhr = ""
                                        End If

                                        ''ends  for multiuse of document by sp on 08_apr_15
                                        '' new by sunil for pre role data filter 22-feb
                                        If Rtids <> "" Then
                                            If xwhr.ToString = "" Then
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & Rtids & ")"
                                            Else
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & "," & Rtids & ")"
                                            End If
                                        End If

                                        '' new by sunil for multiuse of docs
                                        If MTids.Length > 2 And isMultiUse = 1 Then
                                            If Right(MTids, 1) = "," Then
                                                MTids = Left(MTids, Len(MTids) - 1)
                                            End If
                                            xwhr = xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") "
                                        End If
                                        '' new by sunil for multiuse of docs

                                        If amendment = "AMENDMENT" Then
                                            str = str & "   " & xwhr & " order by " & arr(2).ToString()
                                        Else
                                            'str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()  ' prev
                                            str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                            ' str = str & "  AND (M.isauth=1 or M.isauth=2) " & xwhr & " AND CONVERT(NVARCHAR(10),TID) not IN (" & MTids & ") " & " order by " & arr(2).ToString()  ' changed by sp for multiuse
                                        End If

                                        Dim AutoFilter As String = ds.Rows(0).Item("AutoFilter").ToString()
                                        Dim InitFilterArr As String() = ds.Rows(0).Item("InitialFilter").ToString().Split(":")
                                        Dim SessionFieldvalue As String = Convert.ToString(ds.Rows(0).Item("SessionFieldVal"))
                                        ' If InitFilter.Length > 0 Then
                                        ' Dim initFilArr As String() = ds.rows(0).Item("InitialFilter").ToString().Split(":")
                                        '  End If


                                        If AutoFilter.Length > 0 Then
                                            If arr(0).ToUpper() = "CHILD" Then
                                                If AutoFilter.ToUpper = "DOCID" Then
                                                    str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                                Else
                                                    str = GetQuery(arr(1).ToString, arr(2).ToString)
                                                End If
                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                            Else
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                            End If
                                        ElseIf SessionFieldvalue.Length > 0 Then
                                            Dim val As String() = SessionFieldvalue.ToString().Split("-")
                                            If arr(0).ToUpper() = "CHILD" Then
                                                If AutoFilter.ToUpper = "DOCID" Then
                                                    str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                                Else
                                                    str = GetQuery(arr(1).ToString, arr(2).ToString)
                                                End If
                                            ElseIf arr(0).ToUpper() <> "STATIC" Then
                                                da.SelectCommand.Parameters.Clear()
                                                da.SelectCommand.CommandText = "select isnull(" & val(0) & ",0) from mmm_mst_user where eid=" & HttpContext.Current.Session("EID") & " and uid=" & HttpContext.Current.Session("UID")
                                                If con.State = ConnectionState.Closed Then
                                                    con.Open()
                                                End If
                                                Dim Conval As String = Replace(Convert.ToString(da.SelectCommand.ExecuteScalar), ",", "','")
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid] from " & TABLENAME & " M WHERE  EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                If Conval.Length > 1 Then
                                                    If SessionFieldvalue.Contains("-") Then
                                                        str = str & "  AND (M.isauth>0) " & xwhr & " and " & val(2) & " in('" & Conval & "') order by " & arr(2).ToString()
                                                    Else
                                                        str = str & "  AND (M.isauth>0) " & xwhr & " and tid in ('" & Conval & "') order by " & arr(2).ToString()
                                                    End If

                                                Else
                                                    str = str & "  AND (M.isauth>0) " & xwhr & "  order by " & arr(2).ToString()
                                                End If

                                            Else
                                                str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                                str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                            End If

                                        ElseIf InitFilterArr.Length > 1 Then
                                            '' for getting def. value from field master
                                            'Backup values 22-Mar-2017
                                            'Dim row() As DataRow = dsFields.Select("fieldid=" & InitFilterArr(0).ToString())
                                            row = ds.Select("fieldid=" & InitFilterArr(0).ToString())
                                            If arr(0).ToUpper() = "DOCUMENT" Or arr(0).ToUpper() = "MASTER" Then
                                                If row.Length > 0 Then
                                                    str = " Select " & arr(2).ToString() & ", convert(nvarchar(10),tid) [TID] FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                                    str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                                    If amendment = "AMENDMENT" Then
                                                        str = str & "  " & xwhr & " order by " & arr(2).ToString()
                                                    Else
                                                        str = str & "  AND (M.isauth>0) " & xwhr & " order by " & arr(2).ToString()
                                                    End If
                                                End If
                                            ElseIf arr(0).ToUpper() = "STATIC" Then
                                                If row.Length > 0 Then
                                                    str = " Select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("EID") & " "
                                                    str = str & " AND " & InitFilterArr(1).ToString() & "='" & row(0).Item("defaultFieldVal").ToString & "'"
                                                    str = str & " AND (M.isauth>0) " & xwhr
                                                    ' to be used for apm user bind from role assignment also 12_sep_14
                                                    str = str & " union Select  " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & "FROM " & TABLENAME & " where convert(nvarchar(10)," & TID & ") in (select uid from MMM_Ref_Role_User where eid=" & HttpContext.Current.Session("EID") & " and rolename='" & row(0).Item("defaultFieldVal").ToString & "') order by " & arr(2).ToString() & ""
                                                End If
                                            End If
                                        End If
                                        '' hard code by sp on 15 may for HCL vendor portal for non availability of particular filter
                                        'If IsDocDetail = False Then
                                        '    If HttpContext.Current.Session("EID") = "46" And arr(1).ToUpper() = "INVOICE TYPE MASTER" Then
                                        '        str = " Select  " & arr(2).ToString() & ", convert(nvarchar(10)," & TID & ")  [tid] " & "FROM " & TABLENAME & " where EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'" & " and ','+ fld2 +',' like '%," & HttpContext.Current.Session("USERROLE") & ",%'"
                                        '        ' str &= " and ','+ fld2 +',' like '%," & HttpContext.Current.Session("USERROLE") & ",%'"                                       
                                        '    End If
                                        'End If
                                        '' prev code bkup by sp on 17_feb
                                        'If AutoFilter.Length > 0 Then
                                        '    If arr(0).ToUpper() = "CHILD" Then
                                        '        If AutoFilter.ToUpper = "DOCID" Then
                                        '            str = GetQuery1(arr(1).ToString, arr(2).ToString())
                                        '        Else
                                        '            str = GetQuery(arr(1).ToString, arr(2).ToString)
                                        '        End If
                                        '    ElseIf arr(0).ToUpper() <> "STATIC" Then
                                        '        str = "select " & arr(2).ToString() & ",convert(nvarchar(10),tid)  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        '        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                        '    Else
                                        '        str = "select " & arr(2).ToString() & ",convert(nvarchar(10)," & TID & ")  [tid]" & lookUpqry & " from " & TABLENAME & " M WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                        '        str = str & "  AND M.isauth=1 " & xwhr & " order by " & arr(2).ToString()
                                        '    End If
                                        'End If
                                        oda = New SqlDataAdapter("", con)
                                        Dim dss As New DataSet

                                        If str.Length > 0 Then
                                            oda.SelectCommand.CommandText = str
                                            oda.Fill(dss, "FV")
                                            Dim isAddJquery As Integer = 0
                                            ddl.Items.Add("Select")
                                            ddl.Items(0).Value = "0"
                                            For j1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                                ddl.Items.Add(dss.Tables("FV").Rows(j1).Item(0).ToString())
                                                Dim lookddlVal As String = dss.Tables("FV").Rows(j1).Item(1).ToString()
                                                ddl.Items(j1 + 1).Value = lookddlVal
                                            Next
                                            dss.Dispose()
                                            If isAddJquery = 1 Then
                                                Dim JQuertStr As String = "var r1 = $('#ContentPlaceHolder1_" & ddl.ClientID & "').val(); var l = 0; var mycars = new Array(); for (var i = 0; i <r1.length; i++) { if (r1[i] == '|') { l++; mycars[l] = i; } } for (var i1 = 1; i1 <l; i1++) { var outpu = r1.substring(mycars[i1] + 1, mycars[i1 + 1]); var outpu1 = outpu.substring(0, outpu.indexOf(':')); var outpu2 = outpu.substring(outpu.indexOf(':') + 1); if (outpu2 == 'S') { var out = r1.substring(0, mycars[1]); var x = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option').length; var options = ''; txt = ''; for (i = 0; i <x; i++) { var strUser = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').val(); var sel = strUser.substring(strUser.indexOf('-') + 1);  if (out == sel) { var finalshow = $('#ContentPlaceHolder1_tmp' + outpu1 + ' option:eq(' + i + ')').text();  options = options + '<option value=' + finalshow + '>' + finalshow + '</option>\n'; } } $('#ContentPlaceHolder1_' + outpu1 + '').html(options); } else { $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); } $('#ContentPlaceHolder1_' + outpu1 + '').val(outpu2); }"
                                            End If
                                        End If

                                        ' NEW ADDED BY SUNIL ON 07-12-13 FOR CHILD-CHILD FILTERING
                                    ElseIf UCase(dropdowntype) = "CHILD VALUED" Then

                                    ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                                        Dim oda1 As SqlDataAdapter = New SqlDataAdapter("", con)
                                        oda1 = New SqlDataAdapter("", con)
                                        Dim ds1 As New DataSet
                                        Dim QRY As String = ""
                                        Dim DROPDOWN As String() = ds.Rows(0).Item("DROPDOWN").ToString().Split("-")
                                        If DROPDOWN(1).ToString.ToUpper = "USER" Then
                                            QRY = "SELECT USERNAME ,UID FROM MMM_MST_USER WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                                        ElseIf DROPDOWN(1).ToString.ToUpper = "LOCATION" Then
                                            QRY = "SELECT LOCATIONNAME ,LOCID FROM MMM_MST_LOCATION WHERE EID=" & HttpContext.Current.Session("EID") & " AND " & DROPDOWN(2) & "='" & HttpContext.Current.Session(DROPDOWN(2)) & "'"
                                        End If
                                        oda1.SelectCommand.CommandText = QRY
                                        oda1.Fill(ds1, "SESSION")
                                        ddl.Items.Clear()
                                        For iI As Integer = 0 To ds1.Tables("SESSION").Rows.Count - 1
                                            ddl.Items.Add(ds1.Tables("SESSION").Rows(iI).Item(0))
                                            ddl.Items(iI).Value = ds1.Tables("SESSION").Rows(iI).Item(1)
                                        Next
                                        ddl.Items.Insert(0, "SELECT")
                                    End If
                                    If IsTabPanel Then
                                        'tabContainer.Controls(tabIndex).Controls.Add(ddl)
                                        'tabContent.Controls.Add(ddl)
                                        pnlFields.Controls.Add(ddl)
                                    Else
                                        pnlFields.Controls.Add(ddl)
                                    End If

                                    'For Grofers
                                    If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                        Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                        ddl.Attributes.Add("style", txt(1))
                                    Else
                                        ddl.CssClass = "txtbox"
                                    End If
                                    ' For tooltip
                                    If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                        ddl.Width = controlWdth - 30
                                        Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                        dynSpan.ID = "span" & ID
                                        dynSpan.Attributes.Add("class", "help-tip notification")
                                        dynSpan.InnerText = "?"
                                        dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(0).Item("description")) & "</div>"
                                        pnlFields.Controls.Add(dynSpan)
                                        'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.rows(0).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.rows(0).Item("description")) & "</div></span>"))
                                    End If

                                Case "CHECKBOX LIST"
                                    Dim ddl As New ListBox
                                    Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                                    dynmdiv.ID = "div" & ID.ToString()
                                    Dim chklist As New CheckBoxList
                                    chklist.ID = "fld" & ID.ToString()
                                    chklist.CssClass = "txtbox"
                                    Dim ddlText As String = row(0).Item("dropdown").ToString()
                                    Dim dropdowntype As String = row(0).Item("dropdowntype").ToString()
                                    Dim arr() As String
                                    If UCase(dropdowntype) = "FIX VALUED" Then
                                        arr = ddlText.Split(",")
                                        For ii As Integer = 0 To arr.Count - 1
                                            chklist.Items.Add(arr(ii).ToUpper())
                                        Next
                                    ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                        arr = ddlText.Split("-")
                                        Dim TABLENAME As String = ""
                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        Else
                                            TABLENAME = "MMM_MST_DOC"
                                        End If
                                        Dim strqry As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        oda = New SqlDataAdapter("", con)
                                        Dim dss As New DataSet
                                        oda.SelectCommand.CommandText = strqry
                                        oda.Fill(dss, "FV")
                                        For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                            chklist.Items.Add(dss.Tables("FV").Rows(J1).Item(0))
                                            chklist.Items(J1).Value = dss.Tables("FV").Rows(J1).Item(1)
                                        Next
                                        oda.Dispose()
                                        dss.Dispose()
                                    End If
                                    dynmdiv.Controls.Add(chklist)
                                    ddl.SelectionMode = ListSelectionMode.Multiple
                                    pnlFields.Controls.Add(dynmdiv)

                                Case "LIST BOX"
                                    Dim ddl As New ListBox
                                    ddl.ID = "fld" & ID.ToString()
                                    ddl.Width = controlWdth - 2
                                    ddl.CssClass = "txtBox"
                                    Dim ddlText As String = row(0).Item("dropdown").ToString()
                                    Dim dropdowntype As String = row(0).Item("dropdowntype").ToString()
                                    Dim arr() As String
                                    If UCase(dropdowntype) = "FIX VALUED" Then
                                        arr = ddlText.Split(",")
                                        ddl.Items.Add("")
                                        For ii As Integer = 0 To arr.Count - 1
                                            ddl.Items.Add(arr(ii).ToUpper())
                                        Next
                                    ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                                        arr = ddlText.Split("-")
                                        Dim TABLENAME As String = ""
                                        If UCase(arr(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        Else
                                            TABLENAME = "MMM_MST_DOC"
                                        End If
                                        Dim strqry As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                        oda = New SqlDataAdapter("", con)
                                        Dim dss As New DataSet
                                        oda.SelectCommand.CommandText = strqry
                                        oda.Fill(dss, "FV")
                                        For J1 As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                            ddl.Items.Add(dss.Tables("FV").Rows(J1).Item(0))
                                            ddl.Items(J1).Value = dss.Tables("FV").Rows(J1).Item(1)
                                        Next
                                        oda.Dispose()
                                        dss.Dispose()
                                    End If
                                    ddl.SelectionMode = ListSelectionMode.Multiple
                                    pnlFields.Controls.Add(ddl)
                                Case "TEXT AREA"
                                    datatype = ds.Rows(0).Item("datatype").ToString().ToUpper()
                                    Dim txtBox As New TextBox
                                    txtBox.ID = "fld" & ID
                                    txtBox.Width = controlWdth - 10
                                    txtBox.TextMode = TextBoxMode.MultiLine
                                    If datatype.ToUpper = "MSGBODY" Then
                                        newScreenHeight = newScreenHeight + 100
                                        txtBox.Height = 180 'newScreenHeight
                                        txtBox.CssClass = "msgbody"
                                    Else
                                        txtBox.CssClass = "txtbox"
                                        newScreenHeight = newScreenHeight + 60
                                        txtBox.Height = "80"
                                    End If


                                    If ds.Rows(0).Item("defaultfieldval").ToString.Length > 0 Then
                                        txtBox.Text = ds.Rows(0).Item("defaultfieldval")
                                    Else
                                        If datatype = "NUMERIC" Then
                                            txtBox.Text = "0"
                                        End If
                                    End If
                                    pnlFields.Controls.Add(txtBox)
                                    If Not datatype.ToUpper = "MSGBODY" Then
                                        'For Grofers
                                        If Convert.ToString(ds.Rows(0).Item("Style")) <> "" Then
                                            Dim txt As String() = Convert.ToString(ds.Rows(0).Item("Style")).Split(",")
                                            txtBox.Attributes.Add("style", txt(1))
                                        Else
                                            txtBox.CssClass = "txtbox"
                                        End If
                                    End If

                                    If datatype.ToUpper = "MSGBODY" Then
                                        'Dim htmlExt As New AjaxControlToolkit.HtmlEditorExtender
                                        'htmlExt.ID = "msgbody" & id
                                        'htmlExt.DisplaySourceTab = True
                                        'htmlExt.TargetControlID = txtBox.ID
                                        'htmlExt.EnableSanitization = False
                                        'pnlFields.Controls.Add(htmlExt)
                                        If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                            txtBox.Attributes.Add("placeholder", Convert.ToString(ds.Rows(0).Item("description")))
                                        End If
                                    End If
                                    ' For tooltip
                                    If Convert.ToString(ds.Rows(0).Item("description")) <> "" Then
                                        txtBox.Width = controlWdth - 30
                                        Dim dynSpan As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("span")
                                        dynSpan.ID = "span" & ID
                                        dynSpan.Attributes.Add("class", "help-tip notification")
                                        dynSpan.InnerText = "?"
                                        dynSpan.InnerHtml = "? <div class="" tip"">" & Convert.ToString(ds.Rows(0).Item("description")) & "</div>"
                                        pnlFields.Controls.Add(dynSpan)
                                        'pnlFields.Controls.Add(New LiteralControl("<span id="" span" & ds.rows(0).Item(" FieldID").ToString() & """ class="" help-tip notification"">? <div class="" tip"">" & Convert.ToString(ds.rows(0).Item("description")) & "</div></span>"))
                                    End If
                            End Select
                            'id = id + 1
                        End If
                        pnlFields.Controls.Add(New LiteralControl("</td>"))
                    Else
                        pnlFields.Controls.Add(New LiteralControl("<td " & arr1(j).ToString()))
                    End If
                Next
                pnlFields.Controls.Add(New LiteralControl("</tr>"))
            Next
            pnlFields.Controls.Add(New LiteralControl("</table></div>"))
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try

    End Sub

    Public Sub ApplyFieldsOnCustom(ByVal ds As DataTable, ByVal layout As String, ByRef pnlLayout As Panel)
        pnlLayout.Controls.Add(New LiteralControl("<div class=""form"" style=""width:100%"">"))
        Dim str As String = ""
        Dim tr() As String = {"<tr"}
        Dim td() As String = {"<td"}
        Dim arrtr() As String = layout.Split(tr, StringSplitOptions.None)
        pnlLayout.Controls.Add(New LiteralControl(arrtr(0).ToString()))
        For i As Integer = 1 To arrtr.Length - 1
            Dim arrtd() As String = arrtr(i).Split(td, StringSplitOptions.None)
            pnlLayout.Controls.Add(New LiteralControl("<tr " & arrtd(0).ToString()))
            For j As Integer = 1 To arrtd.Length - 1
                str = arrtd(j).Substring(0, arrtd(j).IndexOf(">") + 1)
                pnlLayout.Controls.Add(New LiteralControl("<td " & str))
                Dim ddl As New DropDownList
                ddl.ID = "fld" & i.ToString() & j.ToString()
                ddl.CssClass = "txtbox"
                For ii As Integer = 0 To ds.Rows.Count - 1
                    ddl.Items.Add(ds.Rows(ii).Item(0).ToString())
                    ddl.Items(ii).Value = ds.Rows(ii).Item(1).ToString()
                Next
                pnlLayout.Controls.Add(ddl)
                pnlLayout.Controls.Add(New LiteralControl("</td>"))
            Next
            pnlLayout.Controls.Add(New LiteralControl("</tr>"))
        Next
        pnlLayout.Controls.Add(New LiteralControl("</table></div>"))
        ds.Dispose()
    End Sub

    Public Function SaveFieldsOnCustom(ByVal datafield As String, ByVal ds As DataTable, ByVal layout As String, ByRef pnlLayout As Panel) As String
        Dim str As String = ""
        Dim strlayout As String = ""
        Dim tr() As String = {"<tr"}
        Dim td() As String = {"<td"}
        Dim arrtr() As String = layout.Split(tr, StringSplitOptions.None)
        strlayout &= arrtr(0).ToString()
        For i As Integer = 1 To arrtr.Length - 1
            Dim arrtd() As String = arrtr(i).Split(td, StringSplitOptions.None)
            strlayout &= "<tr " & arrtd(0).ToString()
            For j As Integer = 1 To arrtd.Length - 1
                str = arrtd(j).Substring(0, arrtd(j).IndexOf(">") + 1)
                strlayout &= "<td " & str
                Dim ddl As New DropDownList
                Dim txtBox As DropDownList = CType(pnlLayout.FindControl("fld" & i.ToString() & j.ToString()), DropDownList)
                strlayout &= txtBox.SelectedValue
                strlayout &= "</td>"
            Next
            strlayout &= "</tr>"
        Next
        strlayout &= "</table>"
        Return strlayout
    End Function

    Public Function ValidateAndGenrateQueryForCustom(ByVal qryType As String, ByVal qryField As String, ByVal dataField As String, ByVal ds As DataTable, ByRef pnlFields As Panel) As String
        Dim errorMsg As String = "Please Enter "
        If ds.Rows.Count > 0 Then
            For i = 0 To ds.Rows.Count - 1
                Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                Dim id As String = ds.Rows(i).Item("fieldid").ToString()
                Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "TEXT BOX"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & id.ToString()), TextBox)
                        'Validation for Mandatory
                        If txtBox Is Nothing Then
                            Continue For
                        End If
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If

                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If
                    Case "DROP DOWN"
                        Dim txtBox As DropDownList = CType(pnlFields.FindControl("fld" & id.ToString()), DropDownList)
                        If txtBox Is Nothing Then
                            Continue For
                        End If
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If
                        Dim livalue As String = ""
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                If livalue.Length > 0 Then
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                dataField &= "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                If livalue.Length > 0 Then
                                    livalue = Left(livalue, livalue.Length - 1)
                                End If
                                dataField &= "'" & livalue & "',"
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            End If
                        End If
                    Case "LIST BOX"
                        Dim txtBox As ListBox = CType(pnlFields.FindControl("fld" & id.ToString()), ListBox)
                        If txtBox Is Nothing Then
                            Continue For
                        End If
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If

                        Dim livalue As String = ""
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            End If
                        End If
                    Case "CHECKBOX LIST"
                        Dim txtBox As CheckBoxList = CType(pnlFields.FindControl("fld" & id.ToString()), CheckBoxList)
                        If txtBox Is Nothing Then
                            Continue For
                        End If
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If
                        Dim livalue As String = ""
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then

                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If

                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                dataField &= "'" & livalue & "',"
                            End If
                        Else
                            If UCase(ds.Rows(i).Item("dropdowntype").ToString()) = "FIX VALUED" Then
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Text & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            Else
                                For Each li As ListItem In txtBox.Items
                                    If li.Selected Then
                                        livalue &= li.Value & ","
                                    End If
                                Next
                                livalue = Left(livalue, livalue.Length - 1)
                                qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & livalue & "',"
                            End If
                        End If

                    Case "TEXT AREA"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & id.ToString()), TextBox)
                        If txtBox Is Nothing Then
                            Continue For
                        End If
                        If ds.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                            errorMsg &= dispName & ","
                        End If
                        If qryType = "ADD" Then
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & ","
                            dataField &= "'" & txtBox.Text & "',"
                        Else
                            qryField &= ds.Rows(i).Item("Fieldmapping").ToString() & "=" & "'" & txtBox.Text & "',"
                        End If
                End Select
            Next
        End If
        If errorMsg.Length < 14 Then
            If qryType = "ADD" Then
                Return Left(qryField, Len(qryField) - 1) & ")" & Left(dataField, Len(dataField) - 1) & ")"
            Else
                Return Left(qryField, Len(qryField) - 1)
            End If
        Else
            Return Left(errorMsg, Len(errorMsg) - 1)
        End If
    End Function

    Public Sub BINDITEMGRID(ByVal DS As DataTable, ByRef PNLFIELDS As Panel, ByVal ID As String, ByRef UPD As UpdatePanel, ByVal DS1 As DataTable, Optional ByVal DefRows As Integer = -1, Optional ByVal hasDefVal As Integer = -1, Optional ByVal ScreenName As String = "", Optional ByVal FormName As String = "", Optional ByVal Eid As Integer = -1, Optional ByVal ChildGrdid As String = Nothing)

        Dim GID As String
        If HttpContext.Current.Session("AddDT") Is Nothing Then
        Else
            DS = HttpContext.Current.Session("AddDT")
        End If

        If Not IsNothing(ChildGrdid) Then
            GID = ChildGrdid
        Else
            GID = Right(ID, ID.Length - 3)
        End If

        Dim GV As GridView = CType(PNLFIELDS.FindControl("GRD" & GID.ToString()), GridView)
        Dim MaxVal As Double = -999
        Try
            'Prashant_16_7
            If DS.Rows.Count > 0 Then
                If DS.Rows(DS.Rows.Count - 1).Item(0).ToString.ToUpper() = "TOTAL" Then
                    DS.Rows.RemoveAt(DS.Rows.Count - 1)
                End If
            End If
            'Prashant_16_7

            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            'prev Dim query As String = "Select F1.FieldID,F1.displayName,f1.fieldtype,F1.IsTotal,F1.DocumentType,f2.dropdown from MMM_MST_FIELDS f1 join MMM_MST_FIELDS f2 on F1.DOCUMENTTYPE =F2.dropdown where F1.DocumentType ='" & FormName & "' and f2.DocumentType ='" & ScreenName & "' and f1.EID=" & Eid & " And f1.IsActive=1  and f2.IsActive=1"
            '' below is new line - added f2.eid=@eid in where clause
            Dim query As String = "Select F1.FieldID,F1.displayName,f1.fieldtype,F1.IsTotal,F1.DocumentType,f2.dropdown from MMM_MST_FIELDS f1 join MMM_MST_FIELDS f2 on F1.DOCUMENTTYPE =F2.dropdown where F1.DocumentType ='" & FormName & "' and f2.DocumentType ='" & ScreenName & "' and f1.EID=" & Eid & " and f2.EID=" & Eid & " And f1.IsActive=1  and f2.IsActive=1"
            Dim ODA As SqlDataAdapter = New SqlDataAdapter(query, con)
            Dim dtFields As New DataTable
            ODA.Fill(dtFields)

            Dim dr2 As DataRow = DS.NewRow()

            For i As Integer = 0 To DS.Columns.Count - 1

                For j As Integer = 0 To dtFields.Rows.Count - 1

                    If dtFields.Rows(j).Item("displayName").ToString = DS.Columns(i).ColumnName And Convert.ToInt32(dtFields.Rows(j).Item("IsTotal")) = 1 Then
                        Dim sum As Double = 0
                        For Each dr As DataRow In DS.Rows
                            If Not String.IsNullOrEmpty(dr.Item(i).ToString) Then
                                sum += Convert.ToDouble(dr.Item(i))
                            End If
                        Next
                        dr2(i) = sum
                    End If
                Next
            Next
            dr2(0) = "Total"

            If hasDefVal < 1 Then
                If DefRows > 0 Then
                    For i As Integer = 1 To DefRows - DS.Rows.Count
                        DS.Rows.Add(DS.NewRow())
                    Next
                End If
            End If
            If DS.Rows.Count > 0 Then
                Dim dr1 As DataRow = DS.NewRow()
                For i As Integer = 1 To DS.Columns.Count - 2
                    Dim total As Double = 0
                    For Each dr As DataRow In DS.Rows
                        If IsNumeric(dr.Item(i)) Then

                            '' by sunil 04-jul
                            For Each drm As DataRow In DS1.Rows
                                If drm.Item("fieldtype").ToString.ToUpper = "CHILD ITEM MAX" Then
                                    If drm.Item("displayname").ToString().ToUpper() = DS.Columns(i).ColumnName.ToUpper() Then
                                        If dr.Item(i) > MaxVal Then
                                            MaxVal = dr.Item(i)
                                        End If
                                    End If
                                End If
                            Next
                            '' by sunil 04-jul 

                        Else

                        End If
                    Next
                Next
                DS.Rows.Add(dr2)
                Dim rowcount As Integer = DS.Rows.Count
                For Each dr As DataRow In DS1.Rows
                    'Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                    'If dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM TOTAL" Then  '' by sunil 04-jul 
                    '    txt.Text = DS.Rows(rowcount - 1).Item(dr.Item("displayname")).ToString()
                    'ElseIf dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM MAX" Then  '' by sunil 04-jul
                    '    txt.Text = IIf(MaxVal = -999, 0, MaxVal)  '' by sunil 04-jul
                    'End If
                    'Changes By Mayank
                    If dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM TOTAL" Then  '' by sunil 04-jul 
                        Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                        'txt.Text = DS.Rows(rowcount - 1).Item(dr.Item("displayname")).ToString()
                        Dim Ctotal As Double = 0
                        For i As Integer = 0 To DS.Rows.Count - 2
                            If IsNumeric(DS.Rows(i).Item(dr.Item("displayname"))) Then
                                Ctotal = Ctotal + Convert.ToDouble(DS.Rows(i).Item(dr.Item("displayname")))
                            End If
                        Next
                        If Not txt Is Nothing Then
                            txt.Text = Ctotal
                        End If
                    ElseIf dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM MAX" Then  '' by sunil 04-jul
                        Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                        txt.Text = IIf(MaxVal = -999, 0, MaxVal)  '' by sunil 04-jul
                        'Add Functionality for Child Specific Text By Mayank
                    ElseIf dr.Item("Child_specific_text").ToString().ToUpper() <> String.Empty Then
                        Dim conStra1 As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                        Dim cona1 As SqlConnection = New SqlConnection(conStra1)
                        Dim querya1 As String = "if exists(select * from mmm_mst_fields where documenttype in (select dropdown from mmm_mst_fields where fieldid=" & GID & ") and eid=" & HttpContext.Current.Session("EID") & " and fieldid=" & dr.Item("fieldid") & ") select 'TRUE' else Select 'FALSE'"
                        If cona1.State = ConnectionState.Closed Then
                            cona1.Open()
                        End If
                        Dim ODAa1 As SqlDataAdapter = New SqlDataAdapter(querya1, cona1)
                        If (Convert.ToString(ODAa1.SelectCommand.ExecuteScalar) = "TRUE") Then

                            Dim a As String() = dr.Item("Child_specific_text").ToString().Split(":")
                            If (a.Length > 1) Then
                                Dim dt As DataTable = HttpContext.Current.Session(FormName & "VAL")
                                If Not IsNothing(dt) Then
                                    If (dt.Rows.Count > 0) Then
                                        Dim conStra As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                        Dim cona As SqlConnection = New SqlConnection(conStra)
                                        Dim querya As String = "select displayname from mmm_mst_fields where eid=" & Eid & " and fieldid=" & a(0).ToString() & " and isactive=1"
                                        Dim ODAa As SqlDataAdapter = New SqlDataAdapter(querya, cona)
                                        Dim dtFieldsa As New DataTable
                                        ODAa.Fill(dtFieldsa)
                                        If (dtFieldsa.Rows.Count > 0) Then
                                            For Each drs As DataRow In dt.Rows
                                                If (drs.Item(dtFieldsa.Rows(0)(0).ToString()) = a(1).ToString()) Then
                                                    Dim ddl As DropDownList = CType(PNLFIELDS.FindControl("fld" & dr.Item("FieldID").ToString()), DropDownList)
                                                    ddl.SelectedValue = a(1).ToString()
                                                    Exit For
                                                Else
                                                    Dim ddl As DropDownList = CType(PNLFIELDS.FindControl("fld" & dr.Item("FieldID").ToString()), DropDownList)
                                                    ddl.SelectedIndex = 0
                                                End If
                                            Next
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    End If
                Next
            Else
                'DS.Rows.Add(DS.NewRow())
                'For Each dr As DataRow In DS1.Rows
                '    Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                '    txt.Text = ""
                'Next
            End If
            'Comented By Manvendra 31-aug-2019'
            If DS.Rows.Count > 0 Then
                If HttpContext.Current.Session("GIDcheck") Is Nothing Then
                    HttpContext.Current.Session("GIDcheck") = DS
                ElseIf HttpContext.Current.Session("GIDcheck1") Is Nothing Then
                    HttpContext.Current.Session("GIDcheck1") = DS
                End If
            End If
            GV.DataSource = DS
            GV.DataBind()
            ' HttpContext.Current.Session("GIDcheck") = 1
            UPD.Update()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    ''bind Grid to new Functionalities 
    Public Sub BINDITEMGRID1(ByVal DS As DataTable, ByRef PNLFIELDS As Panel, ByVal ID As String, ByRef UPD As UpdatePanel, ByVal DS1 As DataTable, Optional ByVal DefRows As Integer = -1, Optional ByVal hasDefVal As Integer = -1, Optional ByVal ScreenName As String = "", Optional ByVal FormName As String = "", Optional ByVal Eid As Integer = -1)
        Dim GID As String = ID
        ' Dim GID As String = Right(ID, ID.Length - 3)
        Dim GV As GridView = CType(PNLFIELDS.FindControl("GRD" & GID.ToString()), GridView)
        Dim MaxVal As Double = -999

        Try
            'Prashant_16_7
            If DS.Rows.Count > 0 Then
                If DS.Rows(DS.Rows.Count - 1).Item(0).ToString.ToUpper() = "TOTAL" Then
                    DS.Rows.RemoveAt(DS.Rows.Count - 1)
                End If
            End If

            'Prashant_16_7

            Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
            Dim con As SqlConnection = New SqlConnection(conStr)
            'prev Dim query As String = "Select F1.FieldID,F1.displayName,f1.fieldtype,F1.IsTotal,F1.DocumentType,f2.dropdown from MMM_MST_FIELDS f1 join MMM_MST_FIELDS f2 on F1.DOCUMENTTYPE =F2.dropdown where F1.DocumentType ='" & FormName & "' and f2.DocumentType ='" & ScreenName & "' and f1.EID=" & Eid & " And f1.IsActive=1  and f2.IsActive=1"
            '' below is new line - added f2.eid=@eid in where clause
            Dim query As String = "Select F1.FieldID,F1.displayName,f1.fieldtype,F1.IsTotal,F1.DocumentType,f2.dropdown from MMM_MST_FIELDS f1 join MMM_MST_FIELDS f2 on F1.DOCUMENTTYPE =F2.dropdown where F1.DocumentType ='" & FormName & "' and f2.DocumentType ='" & ScreenName & "' and f1.EID=" & Eid & " and f2.EID=" & Eid & " And f1.IsActive=1  and f2.IsActive=1"
            Dim ODA As SqlDataAdapter = New SqlDataAdapter(query, con)
            Dim dtFields As New DataTable
            ODA.Fill(dtFields)

            Dim dr2 As DataRow = DS.NewRow()

            For i As Integer = 0 To DS.Columns.Count - 1

                For j As Integer = 0 To dtFields.Rows.Count - 1

                    If dtFields.Rows(j).Item("displayName").ToString = DS.Columns(i).ColumnName And Convert.ToInt32(dtFields.Rows(j).Item("IsTotal")) = 1 Then
                        Dim sum As Double = 0
                        For Each dr As DataRow In DS.Rows
                            If Not String.IsNullOrEmpty(dr.Item(i).ToString) Then
                                sum += Convert.ToDouble(dr.Item(i))
                            End If
                        Next
                        dr2(i) = sum
                    End If
                Next
            Next
            dr2(0) = "Total"


            If DS.Rows.Count = 0 Then
                If DefRows > 0 Then
                    For i As Integer = 1 To DefRows
                        DS.Rows.Add(DS.NewRow())
                    Next
                End If
                'Added Functionality for Deletion (Child Item total will be updated)

                For Each drm As DataRow In DS1.Rows
                    Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & drm.Item("Fieldid").ToString()), TextBox)
                    If drm.Item("fieldtype").ToString.ToUpper = "CHILD ITEM MAX" Then
                        txt.Text = "0"
                    ElseIf (drm.Item("fieldtype").ToString.ToUpper = "CHILD ITEM TOTAL") Then
                        txt.Text = "0"
                    End If
                Next
            End If

            Dim dt As DataTable = DS
            If dt.Rows.Count > 0 Then
                'dt.Rows.RemoveAt(dt.Rows.Count - 1)
                Dim dr1 As DataRow = dt.NewRow()
                For i As Integer = 1 To dt.Columns.Count - 2
                    Dim total As Double = 0
                    For Each dr As DataRow In dt.Rows
                        If IsNumeric(dr.Item(i)) Then
                            'total += dr.Item(i)
                            'dr1(i) = total

                            '' by sunil 04-jul
                            For Each drm As DataRow In DS1.Rows
                                If drm.Item("fieldtype").ToString.ToUpper = "CHILD ITEM MAX" Then
                                    If drm.Item("displayname").ToString().ToUpper() = DS.Columns(i).ColumnName.ToUpper() Then
                                        If dr.Item(i) > MaxVal Then
                                            MaxVal = dr.Item(i)
                                        End If
                                    End If
                                End If
                            Next
                            '' by sunil 04-jul 

                        Else
                            'dr1(i) = ""
                        End If
                    Next
                Next

                DS.Rows.Add(dr2)
                Dim rowcount As Integer = dt.Rows.Count
                For Each dr As DataRow In DS1.Rows

                    'Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                    'If dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM TOTAL" Then  '' by sunil 04-jul 
                    '    txt.Text = dt.Rows(rowcount - 1).Item(dr.Item("displayname")).ToString()
                    'ElseIf dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM MAX" Then  '' by sunil 04-jul
                    '    txt.Text = IIf(MaxVal = -999, 0, MaxVal)  '' by sunil 04-jul
                    'End If

                    If dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM TOTAL" Then  '' by sunil 04-jul 
                        Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                        txt.Text = dt.Rows(rowcount - 1).Item(dr.Item("displayname")).ToString()
                    ElseIf dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM MAX" Then  '' by sunil 04-jul
                        Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                        txt.Text = IIf(MaxVal = -999, 0, MaxVal)  '' by sunil 04-jul
                        'Add Functionality for Child Specific Text By Mayank and also chnage in query for dataset Total
                    ElseIf dr.Item("Child_specific_text").ToString().ToUpper() <> String.Empty Then
                        Dim a As String() = dr.Item("Child_specific_text").ToString().Split(":")
                        If (a.Length > 1) Then
                            Dim dts As DataTable = HttpContext.Current.Session(FormName & "VAL")
                            If Not IsNothing(dts) Then
                                If (dts.Rows.Count > 0) Then
                                    Dim conStra As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
                                    Dim cona As SqlConnection = New SqlConnection(conStra)
                                    Dim querya As String = "select displayname from mmm_mst_fields where eid=" & Eid & " and fieldid=" & a(0).ToString() & " and isactive=1"
                                    Dim ODAa As SqlDataAdapter = New SqlDataAdapter(querya, cona)
                                    Dim dtFieldsa As New DataTable
                                    ODAa.Fill(dtFieldsa)
                                    If (dtFieldsa.Rows.Count > 0) Then
                                        For Each drs As DataRow In dts.Rows
                                            If (drs.Item(dtFieldsa.Rows(0)(0).ToString()) = a(1).ToString()) Then
                                                Dim ddl As DropDownList = CType(PNLFIELDS.FindControl("fld" & dr.Item("FieldID").ToString()), DropDownList)
                                                ddl.SelectedValue = a(1).ToString()
                                                Exit For
                                            Else
                                                Dim ddl As DropDownList = CType(PNLFIELDS.FindControl("fld" & dr.Item("FieldID").ToString()), DropDownList)
                                                ddl.SelectedIndex = 0
                                            End If
                                        Next
                                    End If
                                End If
                            End If
                        End If
                    End If

                Next
            ElseIf dt.Rows.Count = 0 Then
                'For Child item total should be zero if grid view has one row and I have to delete that row.
                For Each dr As DataRow In DS1.Rows
                    If dr.Item("Fieldtype").ToString().ToUpper() = "CHILD ITEM TOTAL" Then  '' by sunil 04-jul 
                        Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                        txt.Text = "0"
                    End If
                Next
            Else
                'dt.Rows.Add(dt.NewRow())
                'Dim rowcount As Integer = dt.Rows.Count
                'For Each dr As DataRow In DS1.Rows
                '    Dim txt As TextBox = CType(PNLFIELDS.FindControl("fld" & dr.Item("Fieldid").ToString()), TextBox)
                '    txt.Text = ""
                'Next
            End If

            'HttpContext.Current.Session(FormName) = dt

            'Apply By Manvendra For Filter issue On 21-aug-2019'
            If dt.Rows.Count > 0 Then
                'HttpContext.Current.Session("GIDcheck") = dt
            End If
            GV.DataSource = dt
            GV.DataBind()
            UPD.Update()
        Catch ex As Exception

        End Try
    End Sub


    Public Function BindForChild1(ByVal id1 As Integer, ByRef pnlFields As Panel, ByRef ddl As DropDownList) As String
        ' new by sunil on 09-dec
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If

        Dim oda As SqlDataAdapter = New SqlDataAdapter("select LOOKUPVALUE,dropdown,documenttype from MMM_MST_FIELDS WHERE FIELDID=" & id1 & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            oda.Fill(DS, "data")
            'Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("lookupvalue").ToString()
            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            Dim STR As String = ""

            Dim str1 = documenttype(1).ToString
            Dim MidStr() As String = documenttype(1).ToString.Split(":")

            If GetControl(pnlFields, "fld" & MidStr(0).ToString) Then
                oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WHERE FIELDID=" & MidStr(0).ToString & "", con)
                Dim dt As New DataTable
                oda.Fill(dt)

                Dim proc As String = "usp_GetChildValuedFilterData"    'dt.Rows(0).Item("CAL_FIELDS").ToString()
                If proc.Length > 1 Then
                    Dim DROPDOWN1 As String = MidStr(0).ToString  'dt.Rows(0).Item("AUTOFILTER").ToString()
                    Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                    ' bindsunil

                    'Change By V 24 Dec

                    If DDL0.SelectedValue <> 0 Then
                        HttpContext.Current.Session("Val") = DDL0.SelectedValue
                    Else
                        If IsNothing(ddl) Then
                        Else
                            HttpContext.Current.Session("Val") = ddl.SelectedValue
                        End If
                    End If

                    If HttpContext.Current.Session("Val") <> 0 Then
                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                        oda.SelectCommand.Parameters.Clear()
                        oda.SelectCommand.CommandText = proc
                        ' oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                        oda.SelectCommand.Parameters.AddWithValue("DOCID", HttpContext.Current.Session("Val"))
                        oda.SelectCommand.Parameters.AddWithValue("DOCTYPE", MidStr(1).ToString)
                        oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID").ToString)
                        oda.SelectCommand.Parameters.AddWithValue("fldmapping", documenttype(2).ToString)
                        STR = oda.SelectCommand.ExecuteScalar().ToString()
                    End If
                End If
            End If
            Return STR
        Catch ex As Exception
            Throw
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try

    End Function
    '' new version of bind which, if in any ddn there is a single value then that is get selected and fires all  lookups and filters of that ddn. - 18-Feb-19
    Public Sub bind(ByVal id1 As Integer, ByRef pnlFields As Panel, ByRef ddl As DropDownList, Optional ByVal IsDocDetail As Boolean = False)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select LOOKUPVALUE,dropdown,documenttype,dropdowntype from MMM_MST_FIELDS WHERE FIELDID=" & id1 & "", con)
        Dim ddlo As DropDownList
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            oda.Fill(DS, "data")
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("lookupvalue").ToString()
            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1            '' loop for lookup vals 
                        Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                        If fldPair.Length > 1 Then
                            If GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then   '' check if control to be filled exists
                                oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WHERE FIELDID=" & fldPair(0) & "", con)  ' get fld dtl from fld master
                                Dim dt As New DataTable
                                oda.Fill(dt)
                                Dim STR As String = ""
                                If fldPair(1).ToString.ToUpper = "C" Then    '' fldpair(0) = fieldid to be filled 
                                    Dim proc As String = dt.Rows(0).Item("CAL_FIELDS").ToString()
                                    If proc.Length > 1 Then
                                        Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                        ' bindsunil
                                        If DDL0.SelectedItem.Text.ToUpper <> "SELECT" Then
                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.CommandText = proc
                                            oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                                            oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                            oda.SelectCommand.Parameters.AddWithValue("VALUE", ddl.SelectedValue)
                                            Dim dss As New DataTable
                                            oda.Fill(dss)
                                            Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                            ddl1.Items.Clear()
                                            ddl1.Items.Add("SELECT")
                                            ddl1.Items(0).Value = "0"
                                            For i As Integer = 0 To dss.Rows.Count - 1
                                                ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                ddl1.Items(i + 1).Value = dss.Rows(i).Item(1)
                                            Next
                                        End If
                                    End If
                                ElseIf fldPair(1).ToString.ToUpper = "R" Then
                                    Dim TAB1 As String = ""
                                    Dim TAB2 As String = ""
                                    Dim STID As String = ""
                                    Dim TID As String = ""
                                    If documenttype(0).ToString.ToUpper = "MASTER" Then
                                        TAB2 = "MMM_MST_MASTER"
                                        TID = "TID"
                                    ElseIf documenttype(0).ToString.ToUpper = "DOCUMENT" Then
                                        TAB2 = "MMM_MST_DOC"
                                        TID = "TID"
                                    ElseIf documenttype(1).ToString.ToUpper = "USER" Then
                                        TAB2 = "MMM_MST_USER"
                                        TID = "UID"
                                    End If
                                    Dim DOCTYPE() As String = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")
                                    If DOCTYPE(0).ToString.ToUpper = "MASTER" Then
                                        TAB1 = "MMM_MST_MASTER"
                                        STID = "TID"
                                    ElseIf DOCTYPE(0).ToString.ToUpper = "DOCUMENT" Then
                                        TAB1 = "MMM_MST_DOC"
                                        STID = "TID"
                                    ElseIf DOCTYPE(1).ToString.ToUpper = "USER" Then
                                        TAB1 = "MMM_MST_USER"
                                        STID = "UID"
                                    End If
                                    Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                    ''Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                    oda.SelectCommand.Parameters.Clear()
                                    oda.SelectCommand.CommandText = "USP_GETMANNUALFILTER"
                                    oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                    oda.SelectCommand.Parameters.AddWithValue("@TAB1", TAB1)
                                    oda.SelectCommand.Parameters.AddWithValue("@TAB2", TAB2)
                                    oda.SelectCommand.Parameters.AddWithValue("@DOCUMENTTYPE", DOCTYPE(1).ToString)
                                    oda.SelectCommand.Parameters.AddWithValue("@FLDMAPPING", DOCTYPE(2).ToString)
                                    oda.SelectCommand.Parameters.AddWithValue("@AUTOFILTER", dt.Rows(0).Item("AUTOFILTER").ToString())
                                    oda.SelectCommand.Parameters.AddWithValue("@TID", TID)
                                    oda.SelectCommand.Parameters.AddWithValue("@STID", STID)
                                    oda.SelectCommand.Parameters.AddWithValue("@VAL", ddl.SelectedValue)
                                    Dim dss As New DataTable
                                    oda.Fill(dss)
                                    Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                    If Not IsNothing(ddl1) Then
                                        ddl1.Items.Clear()
                                        ddl1.Items.Add("SELECT")
                                        ddl1.Items(0).Value = "0"
                                        For i As Integer = 0 To dss.Rows.Count - 1
                                            ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                            ddl1.Items(i + 1).Value = dss.Rows(i).Item(1)
                                        Next
                                        If dss.Rows.Count = 1 Then
                                            ddl1.SelectedIndex = 1
                                            Dim idTemp As String = Right(ddl1.ID, ddl1.ID.Length - 3)
                                            bind(idTemp, pnlFields, ddl1)
                                            bindlookupddl(idTemp, pnlFields, ddl1)
                                            '' below func called new by sp on 21_June_2020 for parent child ddn auto filter on reverse filter
                                            FilterChildGridDDL(idTemp, pnlFields:=pnlFields)
                                            ddl1.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                            'ddl1.ForeColor = Drawing.Color.White
                                            ddl1.Font.Bold = True
                                            '' all control rule
                                            If dt.Rows(0).Item("Hasrule").ToString() = "1" Then
                                                Try
                                                    Dim screenname = HttpContext.Current.Session("Document")
                                                    Dim dtRule As DataTable = HttpContext.Current.Session("PFieldsData")
                                                    Dim lbl As New Label
                                                    lbl.Visible = False
                                                    'ExecuteControllevelRule(idTemp, pnlFields, Nothing, screenname, dtRule, Nothing, lbl, False)
                                                    Dim RE As New RuleEngin()
                                                    RE.ExecuteControllevelRule(idTemp, pnlFields, pnlFields, screenname, dtRule, Nothing, lbl, False, HttpContext.Current.CurrentHandler)
                                                Catch ex As Exception
                                                    Throw
                                                End Try
                                            End If
                                        End If
                                    Else
                                        Dim TXTBOX As TextBox = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), TextBox)
                                        If dss.Rows.Count > 0 Then
                                            TXTBOX.Text = dss.Rows(0)(DOCTYPE(2))
                                            Dim HDN As HiddenField = CType(pnlFields.FindControl("HDN" & fldPair(0).ToString()), HiddenField)
                                            HDN.Value = dss.Rows(0)("tID")
                                            HttpContext.Current.Session("Fieldid") = fldPair(0).ToString()
                                            Dim autofilExtender As AjaxControlToolkit.AutoCompleteExtender = CType(pnlFields.FindControl("extenderID" & fldPair(0).ToString()), AjaxControlToolkit.AutoCompleteExtender)
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.CommandType = CommandType.Text
                                            oda.SelectCommand.CommandText = " select * from mmm_mst_fields where fieldid =" & fldPair(0) & " and eid =" & HttpContext.Current.Session("EID")
                                            Dim dtfld As New DataTable()
                                            oda.Fill(dtfld)
                                            If dtfld.Rows.Count > 0 Then
                                                autofilExtender.ContextKey = dtfld.Rows(0).Item("dropdown").ToString() & "-" & dtfld.Rows(0).Item("FieldID").ToString() & "-" & dtfld.Rows(0).Item("dropdowntype").ToString() & "-" & dtfld.Rows(0).Item("autofilter").ToString() & "-" & dtfld.Rows(0).Item("InitialFilter").ToString()
                                                HttpContext.Current.Session("tableTID") = TAB1 & "||" & TID
                                                txtbox_TextChanged(TXTBOX, New EventArgs())
                                                TXTBOX.BackColor = Drawing.Color.FromArgb(RGB(238, 238, 238))  '#eeeeee 
                                                'txtBox.ForeColor = Drawing.Color.White
                                                TXTBOX.Font.Bold = True
                                            End If
                                        End If
                                    End If
                                    'ddl1.Items.Clear()
                                    'ddl1.Items.Add("SELECT")
                                    'ddl1.Items(0).Value = "0"
                                    'For i As Integer = 0 To dss.Rows.Count - 1
                                    '    ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                    '    ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                    'Next
                                Else    '' else of case 'R' and 'C' lookup (for -fld)
                                    Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")  ' this contains to be filled values 
                                    Dim TABLENAME As String = ""
                                    Dim TID As String = "TID"
                                    If UCase(DROPDOWN(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "DOCUMENT" Then
                                        TABLENAME = "MMM_MST_DOC"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "CHILD" Then
                                        TABLENAME = "MMM_MST_DOC_ITEM"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "STATIC" Then
                                        If UCase(DROPDOWN(1).ToString()) = "USER" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        ElseIf UCase(DROPDOWN(1).ToString()) = "LOCATION" Then
                                            TABLENAME = "MMM_MST_LOCATION"
                                            If DROPDOWN(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                TID = "SID"
                                            Else
                                                TID = "LOCID"
                                            End If
                                        Else
                                            TABLENAME = dt.Rows(0).Item("DBTABLENAME").ToString
                                        End If
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "SESSION" Then
                                        TABLENAME = "MMM_MST_USER"
                                        TID = "UID"
                                    End If


                                    Dim SLVALUE As String() = ddl.SelectedValue.Split("|")
                                    If dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "AUTOCOMPLETE" Then  '' IF AUTOCOMPLETE THEN EXIT SUB  ' BY SUNIL
                                        '' DO NOTHING BECAUSE CONTROL TYPE IS AUTO COMPLETE   ' BY SUNIL - 19_apr_14
                                        If GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then
                                            Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & Val(fldPair(0)).ToString()), TextBox)
                                            txtBox.Text = String.Empty
                                        End If
                                    ElseIf dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "DROP DOWN" Then  '' check field type 
                                        Dim AUTOFILTER As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        Dim tids As String = ""

                                        ''Filter Data according to Userid
                                        tids = UserDataFilter(DS.Tables("data").Rows(0).Item("documenttype").ToString(), DROPDOWN(1).ToString())


                                        '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                        '' if found then restric no. of list as per rights
                                        Dim StrforRoleAssn As String = ""
                                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & DROPDOWN(1).ToString() & "'"
                                        If Not (tids.Length > 2) Then
                                            tids = CheckRoleAsgnmentDdn(DROPDOWN(1).ToString(), StrforRoleAssn)
                                        End If

                                        If tids.Length > 2 Then
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                        Else
                                            xwhr = ""
                                        End If

                                        Dim ChildDoctype As String = ""

                                        If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                            Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                            ChildDoctype = ChildMid(1).ToString
                                        End If

                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.CommandText = "USP_BINDDDL"
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                        oda.SelectCommand.Parameters.AddWithValue("@TableName", TABLENAME)
                                        oda.SelectCommand.Parameters.AddWithValue("@Val", SLVALUE(0))
                                        oda.SelectCommand.Parameters.AddWithValue("@xwhr", xwhr)
                                        oda.SelectCommand.Parameters.AddWithValue("@tid", TID)
                                        If ChildDoctype.Length > 0 Then
                                            oda.SelectCommand.Parameters.AddWithValue("@documenttype", ChildDoctype)
                                        Else
                                            oda.SelectCommand.Parameters.AddWithValue("@documenttype", DROPDOWN(1))
                                        End If
                                        oda.SelectCommand.Parameters.AddWithValue("@fldmapping", DROPDOWN(2))
                                        oda.SelectCommand.Parameters.AddWithValue("@autofilter", AUTOFILTER)
                                        oda.SelectCommand.Parameters.AddWithValue("@IsDocDetail", IIf(IsDocDetail, "1", "0"))
                                        'oda.SelectCommand.CommandText = STR & " AND isAuth=1 " & xwhr & " Order by " & DROPDOWN(2).ToString()
                                        Dim dtFinal As New DataTable
                                        oda.Fill(dtFinal)

                                        ddlo = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                        ddlo.Items.Clear()
                                        ddlo.Items.Add("SELECT")
                                        ddlo.Items(0).Value = "0"
                                        For i As Integer = 0 To dtFinal.Rows.Count - 1
                                            ddlo.Items.Add(dtFinal.Rows(i).Item(0).ToString())
                                            ddlo.Items(i + 1).Value = dtFinal.Rows(i).Item("tID")
                                        Next
                                        If ddlo.Items.Count = 2 Then
                                            ddlo.SelectedIndex = 1
                                            'Add lookup value for child item 01-Nov-2107
                                            Dim idTemp As String = Right(ddlo.ID, ddlo.ID.Length - 3)
                                            FilterChildGridDDL(idTemp, pnlFields:=pnlFields)
                                            'bind(idTemp, pnlFields, ddl)
                                        End If
                                    Else
                                        Dim TID1 As String() = ddl.SelectedValue.ToString.Split("|")
                                        Dim SELTID As String = ""
                                        If TID1.Length > 1 Then
                                            SELTID = TID1(1).ToString
                                        Else
                                            SELTID = TID1(0).ToString
                                        End If
                                        Dim value As String = ""

                                        '' below changes made by sunil for child valued lookup on 12-dec-13
                                        Dim ChildDoctype As String = ""
                                        If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                            Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                            ChildDoctype = ChildMid(1).ToString
                                        End If

                                        If SELTID.ToString <> "0" And SELTID.ToString <> "" Then
                                            oda = New SqlDataAdapter("", con) 'For show text option in lookupfield By Pallavi
                                            oda.SelectCommand.CommandType = CommandType.Text
                                            oda.SelectCommand.CommandText = "select isnull(IflookupMVShowValue,1) from mmm_mst_fields where fieldid =" & fldPair(0) & ""
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If

                                            Dim IfLookupMVShowValue = oda.SelectCommand.ExecuteScalar().ToString()

                                            If (IfLookupMVShowValue = "False") Then ' if iflookupmvshowvalue = false , then show tids 
                                                oda = New SqlDataAdapter("", con)
                                                oda.SelectCommand.CommandType = CommandType.Text
                                                Dim TBLNM As String = ""
                                                If Convert.ToString(documenttype(0)) = "MASTER" Then
                                                    TBLNM = "mmm_mst_master"
                                                ElseIf Convert.ToString(documenttype(0)) = "MASTER" Then
                                                    TBLNM = "mmm_mst_doc"
                                                ElseIf Convert.ToString(documenttype(0)) = "CHILD" Then
                                                    TBLNM = "mmm_mst_doc_item"
                                                End If
                                                If ChildDoctype.Length > 0 Then
                                                    oda.SelectCommand.CommandText = "select " & fldPair(1) & " from " & TBLNM & " where tid =" & SELTID & ""
                                                Else
                                                    oda.SelectCommand.CommandText = "select " & fldPair(1) & " from " & TBLNM & " where tid =" & SELTID & ""
                                                End If

                                                If con.State <> ConnectionState.Open Then
                                                    con.Open()
                                                End If
                                                value = oda.SelectCommand.ExecuteScalar().ToString()

                                            Else ' else show respective text
                                                oda = New SqlDataAdapter("", con)
                                                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                                oda.SelectCommand.Parameters.Clear()
                                                oda.SelectCommand.CommandText = "uspGetMasterValue"
                                                oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                                                If ChildDoctype.Length > 0 Then
                                                    oda.SelectCommand.Parameters.AddWithValue("documentType", ChildDoctype)
                                                Else
                                                    oda.SelectCommand.Parameters.AddWithValue("documentType", documenttype(1))
                                                End If
                                                oda.SelectCommand.Parameters.AddWithValue("Type", documenttype(0))
                                                oda.SelectCommand.Parameters.AddWithValue("TID", SELTID)
                                                oda.SelectCommand.Parameters.AddWithValue("FLDMAPPING", fldPair(1))
                                                If con.State <> ConnectionState.Open Then
                                                    con.Open()
                                                End If
                                                value = oda.SelectCommand.ExecuteScalar().ToString()
                                            End If
                                        End If

                                        Dim TXTBOX As TextBox = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString().Trim()), TextBox)
                                        If TXTBOX Is Nothing Then
                                            Dim chkBox As CheckBox = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString().Trim()), CheckBox)
                                            If value.ToUpper = "YES" Then
                                                chkBox.Checked = True
                                            Else
                                                chkBox.Checked = False
                                            End If
                                        Else
                                            TXTBOX.Text = value
                                        End If
                                    End If
                                    'Changes Date 2019-02-14
                                    ' Start
                                    If Not IsNothing(ddlo) Then
                                        If ddlo.Items.Count = 2 Then
                                            ddlo.SelectedIndex = 1
                                            'Add lookup value for child item 01-Nov-2107
                                            Dim idTemp As String = Right(ddlo.ID, ddlo.ID.Length - 3)
                                            'FilterChildGridDDL(idTemp, pnlFields:=pnlFields)
                                            bind(idTemp, pnlFields, ddlo)
                                            '' below is for calling child item grid fill on auto selection of po no. in main form
                                            'Change By Manvendra 27-09-2019
                                            If HttpContext.Current.Session("ALLCHILD") IsNot Nothing Then
                                                DynamicGrdFilter(pnlFields)
                                            End If
                                        End If
                                    End If
                                    'End
                                End If
                            End If
                        End If
                    Next
                End If
            End If

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub

    Public Sub bindMultiLookUP(ByVal id1 As Integer, ByRef pnlFields As Panel, ByRef ddl As DropDownList)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select Fieldtype, multilookUPval,dropdown,documenttype,dropdowntype,eid,DDLlookupValueSource from MMM_MST_FIELDS WHERE FIELDID=" & id1 & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            oda.Fill(DS, "data")
            Dim eid As Integer = Val(DS.Tables("data").Rows(0).Item("eid"))
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("multilookUPval").ToString()
            Dim documenttype() As String '= DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            Dim DocType As String = ""
            Dim Fldtype As String = DS.Tables("data").Rows(0).Item("fieldtype").ToString()


            If Fldtype.ToUpper = "DROP DOWN" Then
                documenttype = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
                DocType = documenttype(1).ToString
            ElseIf Fldtype.ToUpper = "LOOKUPDDL" Then
                DocType = DS.Tables("data").Rows(0).Item("DDLlookupValueSource").ToString
                'oda.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS WHERE FIELDID=" & id1 & ""  ' get fld dtls (two or more id's will be retrieved)
                'oda.SelectCommand.CommandType = CommandType.Text
                'Dim drpdnID As String = ""
                'drpdnID = Convert.ToString(oda.SelectCommand.ExecuteScalar().ToString())

                'oda.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS WHERE FIELDID=" & drpdnID & ""  ' get fld dtls (two or more id's will be retrieved)
                'oda.SelectCommand.CommandType = CommandType.Text
                'Dim MainDdndropDownval As String = Convert.ToString(oda.SelectCommand.ExecuteScalar().ToString())

                'documenttype = MainDdndropDownval.ToString.Split("-")
            End If

            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1    ' for each control in multilookupval field 
                        '' loop for lookup vals 
                        If (lookfld(iLookFld) <> String.Empty) Then
                            Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping   sourcedoctype-fld2-12345

                            If fldPair.Length > 1 Then  ' if valid string in fldpair 
                                If GetControl(pnlFields, "fld" & Val(fldPair(2)).ToString()) Then   '' check if control to be filled exists
                                    oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WHERE FIELDID=" & fldPair(2) & "", con)  ' get fld dtls (two or more id's will be retrieved)
                                    Dim dt As New DataTable
                                    Dim dtfldmap As New DataTable
                                    oda.Fill(dt)
                                    Dim STR As String = ""

                                    Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split(",") ' get fld dtls (two or more id's will be retrieved)
                                    ' above contains to be filled field ids 
                                    Dim var As String = String.Empty
                                    If Fldtype.ToUpper = "DROP DOWN" Then
                                        oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DocType & "' order by f.displayname"
                                    Else
                                        oda.SelectCommand.CommandText = "declare @pos int declare @len int set @pos = 0  set @len = 0  DECLARE @valueList varchar(8000) DECLARE @value varchar(8000) declare @masters varchar(8000) ;with A (ddllookupval,masters,dropdown) as  (select ddllookupvalue,SUBSTRING(dropdown,CHARINDEX('-',dropdown) + 1,CHARINDEX('-',dropdown,CHARINDEX('-',dropdown) + 1) - (CHARINDEX('-',dropdown) + 1)), dropdown  from mmm_mst_fields where fieldid in( select dropdown from MMM_MST_FIELDS WHERE FIELDID=" & id1 & " and eid=" & HttpContext.Current.Session("EID") & ") and eid=" & HttpContext.Current.Session("EID") & ") select @valueList=replace(ddllookupval,' ',''),@masters=masters from A print(@valueList) print(@masters)  WHILE  CHARINDEX(',', @valueList, @pos+1)>0                                         BEGIN   set @len = CHARINDEX(',', @valueList, @pos+1) - @pos  set @value = SUBSTRING(@valueList, @pos, @len)   if  @value like '" & id1 & "-fld'+'%'     begin        print('yes') ;with A(fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype)        as(select fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype from mmm_mst_fields where DocumentType=@masters and FieldMapping in(select substring(@value,CHARINDEX('-',@value,0)+1,len(@value))) and eid=" & HttpContext.Current.Session("EID") & ")   select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join A a on SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1))=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & HttpContext.Current.Session("EID") & " and a.eid=" & HttpContext.Current.Session("EID") & " and f.documenttype='" & fldPair(0).ToString() & "' and a.DocumentType=@masters and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DocType.ToString() & "' order by f.displayname  End   Else print('No')     set @pos = CHARINDEX(',', @valueList, @pos+@len) +1    END "
                                    End If

                                    oda.Fill(dtfldmap)
                                    Dim fldmapping As String = ""
                                    If dtfldmap.Rows.Count > 0 Then
                                        fldmapping = dtfldmap.Rows(0).Item("fieldmapping").ToString()
                                    End If
                                    Dim ddlj As DropDownList = CType(pnlFields.FindControl("fld" & Val(id1)), DropDownList)


                                    Dim strgin As String = " and eid=" & Val(dt.Rows(0).Item("EID")) & " and " & fldmapping & "='" & ddlj.SelectedValue & "'"
                                    For d As Integer = 0 To DROPDOWN.Length - 1
                                        Dim documenttypen() As String
                                        Dim DoctypeEN As String = ""
                                        Dim FldtypeEN As String = ""

                                        If Val(id1) <> Val(DROPDOWN(d)) Then
                                            oda.SelectCommand.CommandText = "select fieldType,multilookUPval,dropdown,documenttype,dropdowntype,DDLlookupValueSource from MMM_MST_FIELDS WHERE FIELDID=" & Val(DROPDOWN(d)) & ""
                                            oda.SelectCommand.CommandType = CommandType.Text

                                            oda.Fill(DS, "new")

                                            If DS.Tables("new").Rows.Count > 0 Then
                                                documenttypen = DS.Tables("new").Rows(0).Item("dropdown").ToString.Split("-")

                                                'FldtypeEN = DS.Tables("data").Rows(0).Item("fieldtype").ToString()
                                                FldtypeEN = DS.Tables("new").Rows(0).Item("fieldtype").ToString()

                                                If FldtypeEN.ToUpper = "DROP DOWN" Then
                                                    documenttypen = DS.Tables("new").Rows(0).Item("dropdown").ToString.Split("-")
                                                    DoctypeEN = documenttypen(1).ToString
                                                    oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN.ToString() & "' order by f.displayname"
                                                ElseIf FldtypeEN.ToUpper = "LOOKUPDDL" Then
                                                    DoctypeEN = DS.Tables("new").Rows(0).Item("DDLlookupValueSource").ToString
                                                    oda.SelectCommand.CommandText = " declare @pos int   declare @len int   set @pos = 0   set @len = 0   DECLARE @valueList varchar(8000)   DECLARE @value varchar(8000)  declare @masters varchar(8000)  ;with A (ddllookupval,masters,dropdown)   as (select ddllookupvalue,SUBSTRING(dropdown,CHARINDEX('-',dropdown) + 1,CHARINDEX('-',dropdown,CHARINDEX('-',dropdown) + 1) - (CHARINDEX('-',dropdown) + 1)), dropdown  from mmm_mst_fields where fieldid in( select dropdown from MMM_MST_FIELDS WHERE FIELDID=" & DROPDOWN(d) & " and eid=" & dt.Rows(0).Item("EID") & ") and eid=" & dt.Rows(0).Item("EID") & ")    select @valueList=replace(ddllookupval,' ',''),@masters=masters from A  WHILE CHARINDEX(',', @valueList, @pos+1)>0  BEGIN     set @len = CHARINDEX(',', @valueList, @pos+1) - @pos     set @value = SUBSTRING(@valueList, @pos, @len)    if  @value like '" & DROPDOWN(d) & "-fld'+'%'  begin      print('yes') ;with A(fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype) as(select fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype from mmm_mst_fields where DocumentType=@masters and FieldMapping in(select substring(@value,CHARINDEX('-',@value,0)+1,len(@value))) and eid=" & dt.Rows(0).Item("EID") & ")  select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join A a on f.dropdown=a.dropdown where f.eid=" & dt.Rows(0).Item("EID") & " and a.eid=" & dt.Rows(0).Item("EID") & " and f.documenttype='" & fldPair(0).ToString() & "' and a.DocumentType=@masters and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN.ToString() & "' order by f.displayname     End    Else print('No')    set @pos = CHARINDEX(',', @valueList, @pos+@len) +1 END"
                                                    'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN & "' order by f.displayname"
                                                    'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN.ToString() & "' order by f.displayname"
                                                End If


                                                DS.Tables("new").Clear()
                                                Dim dtfldmap1 As New DataTable
                                                oda.Fill(dtfldmap1)
                                                Dim fldmappingS As String = ""
                                                If dtfldmap1.Rows.Count > 0 Then
                                                    fldmappingS = dtfldmap1.Rows(0).Item("fieldmapping").ToString()
                                                    Dim ddld As DropDownList = CType(pnlFields.FindControl("fld" & Val(DROPDOWN(d)).ToString()), DropDownList)
                                                    Dim TID1 As String = ddld.SelectedValue.ToString()

                                                    var = " and " & fldmappingS & "='" & TID1 & "'"
                                                End If
                                            End If
                                            strgin = strgin & var
                                        End If
                                    Next

                                    Dim check As Boolean = True
                                    For x As Integer = 0 To DROPDOWN.Length - 1
                                        Dim ddld As DropDownList = CType(pnlFields.FindControl("fld" & Val(DROPDOWN(x)).ToString()), DropDownList)
                                        Dim TID1 As String = ddld.SelectedValue.ToString()
                                        If TID1 = "0" Then
                                            check = False
                                            Dim TXTBOX As TextBox = TryCast(pnlFields.FindControl("fld" & fldPair(2).ToString().Trim()), TextBox)
                                            TXTBOX.Text = ""
                                            Exit For
                                        End If

                                    Next
                                    Dim arrstr As String() = lookfld(iLookFld).ToString.Split("-")
                                    If check = True Then
                                        Dim TXTBOX As TextBox = TryCast(pnlFields.FindControl("fld" & fldPair(2).ToString().Trim()), TextBox)
                                        TXTBOX.Text = ""
                                        oda.SelectCommand.CommandText = "select formtype from mmm_mst_forms where eid=" & eid & " and formname='" & arrstr(0).ToString() & "'"
                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        Dim formtype As String = oda.SelectCommand.ExecuteScalar().ToString()
                                        Dim tablename As String = ""
                                        If UCase(formtype) = "MASTER" Then
                                            If (UCase(arrstr(0).ToString()) = "USER") Then
                                                tablename = "MMM_MST_USER"
                                            Else
                                                tablename = "MMM_MST_MASTER"
                                            End If

                                        Else
                                            tablename = "MMM_MST_DOC"
                                        End If
                                        If (tablename = "MMM_MST_USER") Then
                                            oda.SelectCommand.CommandText = "Select " & arrstr(1).ToString() & " from " & tablename.ToString() & " where 1=1" & strgin.ToString() & ""
                                        Else
                                            oda.SelectCommand.CommandText = "Select " & arrstr(1).ToString() & " from " & tablename.ToString() & " where documenttype='" & arrstr(0).ToString() & "' " & strgin.ToString() & ""
                                        End If

                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        Dim answer As String = Convert.ToString(oda.SelectCommand.ExecuteScalar())

                                        TXTBOX.Text = answer.ToString()
                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub

    Public Sub bindLTLookUP(ByVal id1 As Integer, ByRef pnlFields As Panel, ByRef ddl As DropDownList)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select Fieldtype,dropdown,documenttype,dropdowntype,eid,LTLookupval,DDLlookupValueSource from MMM_MST_FIELDS WHERE FIELDID=" & id1 & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            oda.Fill(DS, "data")
            Dim eid As Integer = Val(DS.Tables("data").Rows(0).Item("eid"))
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("LTLookupval").ToString()
            Dim documenttype() As String '= DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            Dim DocType As String = ""
            Dim Fldtype As String = DS.Tables("data").Rows(0).Item("fieldtype").ToString()


            If Fldtype.ToUpper = "DROP DOWN" Then
                documenttype = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
                DocType = documenttype(1).ToString
            ElseIf Fldtype.ToUpper = "LOOKUPDDL" Then
                DocType = DS.Tables("data").Rows(0).Item("DDLlookupValueSource").ToString
            End If

            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1    ' for each control in multilookupval field 
                        '' loop for lookup vals 
                        If (lookfld(iLookFld) <> String.Empty) Then
                            Dim fldPair() As String = lookfld(iLookFld).Split(":")   '' get Mapping Type
                            'select top 1 a.fld12 from mmm_mst_doc_item as a inner join mmm_mst_doc as b on a.docid=b.tid and eid=43 and a.documenttype='Purchase Order Details' where b.documenttype='Purchase order' and a.fld1='604485' order by docid desc   For Child item
                            If fldPair.Length > 1 Then  ' if valid string in fldpair 
                                Dim FillID As String() = Convert.ToString(fldPair(1)).Split("$")

                                If GetControl(pnlFields, "fld" & Val(FillID(1)).ToString()) Then   '' check if control to be filled exists
                                    If fldPair(0).Trim() = "M-C" Then
                                        Dim AllSplitVal As String() = FillID(0).Split("-")
                                        Dim doc As String() = Convert.ToString(AllSplitVal(1)).Split("|")
                                        Dim finalstr As String = "select top 1 a." & Convert.ToString(AllSplitVal(3)) & " from mmm_mst_doc_Item  as a inner join mmm_mst_doc  as b on a.docid=b.tid and eid=" & HttpContext.Current.Session("EID") & " and a.documenttype='" & doc(1) & "' where b.documenttype='" & doc(0) & "' and  a." & AllSplitVal(2) & "='" & ddl.SelectedValue & "' order by docid desc"
                                        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                        da.SelectCommand.CommandText = finalstr
                                        Dim TXTBOX As TextBox = TryCast(pnlFields.FindControl("fld" & FillID(1).ToString().Trim()), TextBox)
                                        TXTBOX.Text = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                    ElseIf fldPair(0).Trim() = "M-M" Then
                                        Dim AllSplitVal As String() = FillID(0).Split("-")
                                        Dim finalstr As String = "select top 1 " & Convert.ToString(AllSplitVal(3)) & " from mmm_mst_doc where  eid=" & HttpContext.Current.Session("EID") & " and documenttype='" & Convert.ToString(AllSplitVal(1)) & "' and  " & AllSplitVal(2) & "='" & ddl.SelectedValue & "' order by tid desc"
                                        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                        da.SelectCommand.CommandText = finalstr
                                        Dim TXTBOX As TextBox = TryCast(pnlFields.FindControl("fld" & FillID(1).ToString().Trim()), TextBox)
                                        TXTBOX.Text = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub
    Public Sub bindddlMultiLookUP(ByVal id1 As Integer, ByRef pnlFields As Panel, ByRef ddl As DropDownList)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select Fieldtype, ddlmultilookupval,dropdown,documenttype,dropdowntype,eid,DDLlookupValueSource from MMM_MST_FIELDS WHERE FIELDID=" & id1 & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            oda.Fill(DS, "data")
            Dim eid As Integer = Val(DS.Tables("data").Rows(0).Item("eid"))
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("ddlmultilookupval").ToString()
            Dim documenttype() As String '= DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            Dim DocType As String = ""
            Dim Fldtype As String = DS.Tables("data").Rows(0).Item("fieldtype").ToString()


            If Fldtype.ToUpper = "DROP DOWN" Then
                documenttype = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
                DocType = documenttype(1).ToString
            ElseIf Fldtype.ToUpper = "LOOKUPDDL" Then
                DocType = DS.Tables("data").Rows(0).Item("DDLlookupValueSource").ToString
                'oda.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS WHERE FIELDID=" & id1 & ""  ' get fld dtls (two or more id's will be retrieved)
                'oda.SelectCommand.CommandType = CommandType.Text
                'Dim drpdnID As String = ""
                'drpdnID = Convert.ToString(oda.SelectCommand.ExecuteScalar().ToString())

                'oda.SelectCommand.CommandText = "SELECT DROPDOWN FROM MMM_MST_FIELDS WHERE FIELDID=" & drpdnID & ""  ' get fld dtls (two or more id's will be retrieved)
                'oda.SelectCommand.CommandType = CommandType.Text
                'Dim MainDdndropDownval As String = Convert.ToString(oda.SelectCommand.ExecuteScalar().ToString())

                'documenttype = MainDdndropDownval.ToString.Split("-")
            End If

            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1    ' for each control in multilookupval field 
                        '' loop for lookup vals 
                        If (lookfld(iLookFld) <> String.Empty) Then
                            Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping   sourcedoctype-fld2-12345

                            If fldPair.Length > 1 Then  ' if valid string in fldpair 
                                If GetControl(pnlFields, "fld" & Val(fldPair(2)).ToString()) Then   '' check if control to be filled exists
                                    oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WHERE FIELDID=" & fldPair(2) & "", con)  ' get fld dtls (two or more id's will be retrieved)
                                    Dim dt As New DataTable
                                    Dim dtfldmap As New DataTable
                                    oda.Fill(dt)
                                    Dim STR As String = ""

                                    Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split(",") ' get fld dtls (two or more id's will be retrieved)
                                    ' above contains to be filled field ids 
                                    Dim var As String = String.Empty
                                    'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DocType & "' order by f.displayname"
                                    If Fldtype.ToUpper = "DROP DOWN" Then
                                        oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DocType & "' order by f.displayname"
                                    Else
                                        oda.SelectCommand.CommandText = "declare @pos int declare @len int set @pos = 0  set @len = 0  DECLARE @valueList varchar(8000) DECLARE @value varchar(8000) declare @masters varchar(8000) ;with A (ddllookupval,masters,dropdown) as  (select ddllookupvalue,SUBSTRING(dropdown,CHARINDEX('-',dropdown) + 1,CHARINDEX('-',dropdown,CHARINDEX('-',dropdown) + 1) - (CHARINDEX('-',dropdown) + 1)), dropdown  from mmm_mst_fields where fieldid in( select dropdown from MMM_MST_FIELDS WHERE FIELDID=" & id1 & " and eid=" & HttpContext.Current.Session("EID") & ") and eid=" & HttpContext.Current.Session("EID") & ") select @valueList=replace(ddllookupval,' ',''),@masters=masters from A print(@valueList) print(@masters)  WHILE  CHARINDEX(',', @valueList, @pos+1)>0                                         BEGIN   set @len = CHARINDEX(',', @valueList, @pos+1) - @pos  set @value = SUBSTRING(@valueList, @pos, @len)   if  @value like '" & id1 & "-fld'+'%'     begin        print('yes') ;with A(fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype)        as(select fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype from mmm_mst_fields where DocumentType=@masters and FieldMapping in(select substring(@value,CHARINDEX('-',@value,0)+1,len(@value))) and eid=" & HttpContext.Current.Session("EID") & ")   select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join A a on SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1))=SUBSTRING(a.dropdown,CHARINDEX('-',a.dropdown) + 1,CHARINDEX('-',a.dropdown,CHARINDEX('-',a.dropdown) + 1) - (CHARINDEX('-',a.dropdown) + 1)) where f.eid=" & HttpContext.Current.Session("EID") & " and a.eid=" & HttpContext.Current.Session("EID") & " and f.documenttype='" & fldPair(0).ToString() & "' and a.DocumentType=@masters and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DocType.ToString() & "' order by f.displayname  End   Else print('No')     set @pos = CHARINDEX(',', @valueList, @pos+@len) +1    END "
                                    End If
                                    oda.Fill(dtfldmap)
                                    Dim fldmapping As String = ""
                                    If dtfldmap.Rows.Count > 0 Then
                                        fldmapping = dtfldmap.Rows(0).Item("fieldmapping").ToString()
                                    End If
                                    Dim ddlj As DropDownList = CType(pnlFields.FindControl("fld" & Val(id1)), DropDownList)


                                    Dim strgin As String = " and eid=" & Val(dt.Rows(0).Item("EID")) & " and " & fldmapping & "='" & ddlj.SelectedValue & "'"
                                    For d As Integer = 0 To DROPDOWN.Length - 1
                                        Dim documenttypen() As String
                                        Dim DoctypeEN As String = ""
                                        Dim FldtypeEN As String = ""

                                        If Val(id1) <> Val(DROPDOWN(d)) Then
                                            oda.SelectCommand.CommandText = "select fieldType,ddlmultilookupval,dropdown,documenttype,dropdowntype,DDLlookupValueSource from MMM_MST_FIELDS WHERE FIELDID=" & Val(DROPDOWN(d)) & ""
                                            oda.SelectCommand.CommandType = CommandType.Text

                                            oda.Fill(DS, "new")

                                            If DS.Tables("new").Rows.Count > 0 Then
                                                documenttypen = DS.Tables("new").Rows(0).Item("dropdown").ToString.Split("-")

                                                'FldtypeEN = DS.Tables("data").Rows(0).Item("fieldtype").ToString()
                                                FldtypeEN = DS.Tables("new").Rows(0).Item("fieldtype").ToString()

                                                If FldtypeEN.ToUpper = "DROP DOWN" Then
                                                    documenttypen = DS.Tables("new").Rows(0).Item("dropdown").ToString.Split("-")
                                                    DoctypeEN = documenttypen(1).ToString
                                                    oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN.ToString() & "' order by f.displayname"
                                                ElseIf FldtypeEN.ToUpper = "LOOKUPDDL" Then
                                                    DoctypeEN = DS.Tables("new").Rows(0).Item("DDLlookupValueSource").ToString
                                                    oda.SelectCommand.CommandText = " declare @pos int   declare @len int   set @pos = 0   set @len = 0   DECLARE @valueList varchar(8000)   DECLARE @value varchar(8000)  declare @masters varchar(8000)  ;with A (ddllookupval,masters,dropdown)   as (select ddllookupvalue,SUBSTRING(dropdown,CHARINDEX('-',dropdown) + 1,CHARINDEX('-',dropdown,CHARINDEX('-',dropdown) + 1) - (CHARINDEX('-',dropdown) + 1)), dropdown  from mmm_mst_fields where fieldid in( select dropdown from MMM_MST_FIELDS WHERE FIELDID=" & DROPDOWN(d) & " and eid=" & dt.Rows(0).Item("EID") & ") and eid=" & dt.Rows(0).Item("EID") & ")    select @valueList=replace(ddllookupval,' ',''),@masters=masters from A  WHILE CHARINDEX(',', @valueList, @pos+1)>0  BEGIN     set @len = CHARINDEX(',', @valueList, @pos+1) - @pos     set @value = SUBSTRING(@valueList, @pos, @len)    if  @value like '" & DROPDOWN(d) & "-fld'+'%'  begin      print('yes') ;with A(fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype) as(select fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype from mmm_mst_fields where DocumentType=@masters and FieldMapping in(select substring(@value,CHARINDEX('-',@value,0)+1,len(@value))) and eid=" & dt.Rows(0).Item("EID") & ")  select distinct f.fieldid,f.displayname,f.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join A a on f.dropdown=a.dropdown where f.eid=" & dt.Rows(0).Item("EID") & " and a.eid=" & dt.Rows(0).Item("EID") & " and f.documenttype='" & fldPair(0).ToString() & "' and a.DocumentType=@masters and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN.ToString() & "' order by f.displayname     End    Else print('No')    set @pos = CHARINDEX(',', @valueList, @pos+@len) +1 END"
                                                    'oda.SelectCommand.CommandText = " declare @pos int   declare @len int   set @pos = 0   set @len = 0   DECLARE @valueList varchar(8000)   DECLARE @value varchar(8000)  declare @masters varchar(8000)  ;with A (ddllookupval,masters,dropdown)   as (select ddllookupvalue,SUBSTRING(dropdown,CHARINDEX('-',dropdown) + 1,CHARINDEX('-',dropdown,CHARINDEX('-',dropdown) + 1) - (CHARINDEX('-',dropdown) + 1)), dropdown  from mmm_mst_fields where fieldid in( select dropdown from MMM_MST_FIELDS WHERE FIELDID=" & id1 & " and eid=" & dt.Rows(0).Item("EID") & ") and eid=" & dt.Rows(0).Item("EID") & ")    select @valueList=replace(ddllookupval,' ',''),@masters=masters from A  WHILE CHARINDEX(',', @valueList, @pos+1)>0  BEGIN     set @len = CHARINDEX(',', @valueList, @pos+1) - @pos     set @value = SUBSTRING(@valueList, @pos, @len)    if  @value like '" & DROPDOWN(d) & "-fld'+'%'  begin        print('yes') ;with A(fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype)        as(select fieldid,displayname,fieldmapping,Dropdown,dropdowntype,eid,documenttype from mmm_mst_fields where DocumentType=@masters and FieldMapping in(select substring(@value,CHARINDEX('-',@value,0)+1,len(@value))) and eid=" & dt.Rows(0).Item("EID") & ")  select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join A a on f.dropdown=a.dropdown where f.eid=" & dt.Rows(0).Item("EID") & " and a.eid=" & dt.Rows(0).Item("EID") & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString() & "' and a.DocumentType=@masters and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN.ToString() & "' order by f.displayname     End    Else print('No')    set @pos = CHARINDEX(',', @valueList, @pos+@len) +1 END"
                                                    'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN & "' order by f.displayname"
                                                    'oda.SelectCommand.CommandText = "select distinct f.fieldid,f.displayname,a.fieldmapping,f.dropdowntype from mmm_mst_fields f inner join mmm_mst_fields a on f.dropdown=a.dropdown where f.eid=" & Val(dt.Rows(0).Item("EID")) & " and a.eid=" & Val(dt.Rows(0).Item("EID")) & " and f.documenttype='" & dt.Rows(0).Item("Documenttype").ToString & "' and a.DocumentType='" & fldPair(0) & "' and f.dropdowntype='master valued' and (SUBSTRING(f.dropdown,CHARINDEX('-',f.dropdown) + 1,CHARINDEX('-',f.dropdown,CHARINDEX('-',f.dropdown) + 1) - (CHARINDEX('-',f.dropdown) + 1)) )= '" & DoctypeEN.ToString() & "' order by f.displayname"
                                                End If


                                                DS.Tables("new").Clear()
                                                Dim dtfldmap1 As New DataTable
                                                oda.Fill(dtfldmap1)
                                                Dim fldmappingS As String = ""
                                                If dtfldmap1.Rows.Count > 0 Then
                                                    fldmappingS = dtfldmap1.Rows(0).Item("fieldmapping").ToString()
                                                End If
                                                Dim ddld As DropDownList = CType(pnlFields.FindControl("fld" & Val(DROPDOWN(d)).ToString()), DropDownList)
                                                Dim TID1 As String = ddld.SelectedValue.ToString()

                                                var = " and " & fldmappingS & "='" & TID1 & "'"

                                            End If
                                            strgin = strgin & var
                                        End If
                                    Next

                                    Dim check As Boolean = True
                                    For x As Integer = 0 To DROPDOWN.Length - 1
                                        Dim ddld As DropDownList = CType(pnlFields.FindControl("fld" & Val(DROPDOWN(x)).ToString()), DropDownList)
                                        Dim TID1 As String = ddld.SelectedValue.ToString()
                                        If TID1 = "0" Then
                                            check = False
                                            Dim TXTBOX As DropDownList = CType(pnlFields.FindControl("fld" & fldPair(2).ToString().Trim()), DropDownList)
                                            TXTBOX.SelectedIndex = 0
                                            Exit For
                                        End If

                                    Next
                                    Dim arrstr As String() = lookfld(iLookFld).ToString.Split("-")
                                    If check = True Then
                                        Dim TXTBOX As DropDownList = CType(pnlFields.FindControl("fld" & fldPair(2).ToString().Trim()), DropDownList)
                                        TXTBOX.SelectedIndex = 0
                                        oda.SelectCommand.CommandText = "select formtype from mmm_mst_forms where eid=" & eid & " and formname='" & arrstr(0).ToString() & "'"
                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        Dim formtype As String = oda.SelectCommand.ExecuteScalar().ToString()
                                        Dim tablename As String = ""
                                        If UCase(formtype) = "MASTER" Then
                                            If (UCase(arrstr(0).ToString()) = "USER") Then
                                                tablename = "MMM_MST_USER"
                                            Else
                                                tablename = "MMM_MST_MASTER"
                                            End If

                                        Else
                                            tablename = "MMM_MST_DOC"
                                        End If
                                        If (tablename = "MMM_MST_USER") Then
                                            oda.SelectCommand.CommandText = "Select " & arrstr(1).ToString() & " from " & tablename.ToString() & " where 1=1" & strgin.ToString() & ""
                                        Else
                                            oda.SelectCommand.CommandText = "Select " & arrstr(1).ToString() & " from " & tablename.ToString() & " where documenttype='" & arrstr(0).ToString() & "' " & strgin.ToString() & ""
                                        End If

                                        If con.State <> ConnectionState.Open Then
                                            con.Open()
                                        End If
                                        Dim answer As String = Convert.ToString(oda.SelectCommand.ExecuteScalar())
                                        TXTBOX.SelectedValue = answer
                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub


    Public Sub bindlookupddl(ByVal id1 As Integer, ByRef pnlFields As Panel, ByRef ddl As DropDownList)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select DDllookupvalue,dropdown,documenttype,dropdowntype from MMM_MST_FIELDS WHERE FIELDID=" & id1 & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            oda.Fill(DS, "data")
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("DDllookupvalue").ToString()
            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1            '' loop for lookup vals 
                        Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                        If fldPair.Length > 1 Then
                            If GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then   '' check if control to be filled exists
                                oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WHERE FIELDID=" & fldPair(0) & "", con)  ' get fld dtl from fld master
                                Dim dt As New DataTable
                                oda.Fill(dt)
                                Dim STR As String = ""
                                If fldPair(1).ToString.ToUpper = "C" Then    '' fldpair(0) = fieldid to be filled 
                                    Dim proc As String = dt.Rows(0).Item("CAL_FIELDS").ToString()
                                    If proc.Length > 1 Then
                                        Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                        ' bindsunil
                                        If DDL0.SelectedItem.Text.ToUpper <> "SELECT" Then
                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.CommandText = proc
                                            oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                                            oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                            oda.SelectCommand.Parameters.AddWithValue("VALUE", ddl.SelectedValue)
                                            Dim dss As New DataTable
                                            oda.Fill(dss)
                                            Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                            ddl1.Items.Clear()
                                            ddl1.Items.Add("SELECT")
                                            ddl1.Items(0).Value = "0"
                                            For i As Integer = 0 To dss.Rows.Count - 1
                                                ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                ddl1.Items(i + 1).Value = dss.Rows(i).Item(1)
                                            Next
                                        End If
                                    End If
                                ElseIf fldPair(1).ToString.ToUpper = "R" Then
                                    Dim TAB1 As String = ""
                                    Dim TAB2 As String = ""
                                    Dim STID As String = ""
                                    Dim TID As String = ""
                                    If documenttype(0).ToString.ToUpper = "MASTER" Then
                                        TAB2 = "MMM_MST_MASTER"
                                        TID = "TID"
                                    ElseIf documenttype(0).ToString.ToUpper = "DOCUMENT" Then
                                        TAB2 = "MMM_MST_DOC"
                                        TID = "TID"
                                    ElseIf documenttype(1).ToString.ToUpper = "USER" Then
                                        TAB2 = "MMM_MST_USER"
                                        TID = "UID"
                                    End If
                                    Dim DOCTYPE() As String = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")
                                    If DOCTYPE(0).ToString.ToUpper = "MASTER" Then
                                        TAB1 = "MMM_MST_MASTER"
                                        STID = "TID"
                                    ElseIf DOCTYPE(0).ToString.ToUpper = "DOCUMENT" Then
                                        TAB1 = "MMM_MST_DOC"
                                        STID = "TID"
                                    ElseIf DOCTYPE(1).ToString.ToUpper = "USER" Then
                                        TAB1 = "MMM_MST_USER"
                                        STID = "UID"
                                    End If
                                    Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                    ''Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                    oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                    oda.SelectCommand.Parameters.Clear()
                                    oda.SelectCommand.CommandText = "USP_GETMANNUALFILTER"
                                    oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                    oda.SelectCommand.Parameters.AddWithValue("@TAB1", TAB1)
                                    oda.SelectCommand.Parameters.AddWithValue("@TAB2", TAB2)
                                    oda.SelectCommand.Parameters.AddWithValue("@DOCUMENTTYPE", DOCTYPE(1).ToString)
                                    oda.SelectCommand.Parameters.AddWithValue("@FLDMAPPING", DOCTYPE(2).ToString)
                                    oda.SelectCommand.Parameters.AddWithValue("@AUTOFILTER", dt.Rows(0).Item("AUTOFILTER").ToString())
                                    oda.SelectCommand.Parameters.AddWithValue("@TID", TID)
                                    oda.SelectCommand.Parameters.AddWithValue("@STID", STID)
                                    oda.SelectCommand.Parameters.AddWithValue("@VAL", ddl.SelectedValue)
                                    Dim dss As New DataTable
                                    oda.Fill(dss)
                                    Dim ddl1 As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                    ddl1.Items.Clear()
                                    ddl1.Items.Add("SELECT")
                                    ddl1.Items(0).Value = "0"
                                    For i As Integer = 0 To dss.Rows.Count - 1
                                        ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                        ddl1.Items(i + 1).Value = dss.Rows(i).Item(1)
                                    Next
                                Else    '' else of case 'R' and 'C' lookup (for -fld)
                                    Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")  ' this contains to be filled values 
                                    Dim TABLENAME As String = ""
                                    Dim TID As String = "TID"
                                    If UCase(DROPDOWN(0).ToString()) = "MASTER" Then
                                        TABLENAME = "MMM_MST_MASTER"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "DOCUMENT" Then
                                        TABLENAME = "MMM_MST_DOC"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "CHILD" Then
                                        TABLENAME = "MMM_MST_DOC_ITEM"
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "STATIC" Then
                                        If UCase(DROPDOWN(1).ToString()) = "USER" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        ElseIf UCase(DROPDOWN(1).ToString()) = "LOCATION" Then
                                            TABLENAME = "MMM_MST_LOCATION"
                                            If DROPDOWN(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                TID = "SID"
                                            Else
                                                TID = "LOCID"
                                            End If
                                        Else
                                            TABLENAME = dt.Rows(0).Item("DBTABLENAME").ToString
                                        End If
                                    ElseIf UCase(DROPDOWN(0).ToString()) = "SESSION" Then
                                        TABLENAME = "MMM_MST_USER"
                                        TID = "UID"
                                    End If
                                    Dim SLVALUE As String() = ddl.SelectedValue.Split("|")
                                    If dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "AUTOCOMPLETE" Then  '' IF AUTOCOMPLETE THEN EXIT SUB  ' BY SUNIL
                                        '' DO NOTHING BECAUSE CONTROL TYPE IS AUTO COMPLETE   ' BY SUNIL - 19_apr_14
                                        If GetControl(pnlFields, "fld" & Val(fldPair(0)).ToString()) Then
                                            Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & Val(fldPair(0)).ToString()), TextBox)
                                            txtBox.Text = String.Empty
                                        End If
                                    ElseIf dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "DROP DOWN" Then  '' check field type 
                                        Dim AUTOFILTER As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        Dim tids As String = ""

                                        ''Filter Data according to Userid
                                        tids = UserDataFilter(DS.Tables("data").Rows(0).Item("documenttype").ToString(), DROPDOWN(1).ToString())

                                        '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                        '' if found then restric no. of list as per rights
                                        Dim StrforRoleAssn As String = ""
                                        StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & DROPDOWN(1).ToString() & "'"
                                        If Not (tids.Length > 2) Then
                                            tids = CheckRoleAsgnmentDdn(DROPDOWN(1).ToString(), StrforRoleAssn)
                                        End If

                                        If tids.Length > 2 Then
                                            xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                        Else
                                            xwhr = ""
                                        End If

                                        Dim ChildDoctype As String = ""

                                        If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                            Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                            ChildDoctype = ChildMid(1).ToString
                                        End If

                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.CommandText = "USP_BINDDDL"
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                        oda.SelectCommand.Parameters.AddWithValue("@TableName", TABLENAME)
                                        oda.SelectCommand.Parameters.AddWithValue("@Val", SLVALUE(0))
                                        oda.SelectCommand.Parameters.AddWithValue("@xwhr", xwhr)
                                        oda.SelectCommand.Parameters.AddWithValue("@tid", TID)
                                        If ChildDoctype.Length > 0 Then
                                            oda.SelectCommand.Parameters.AddWithValue("@documenttype", ChildDoctype)
                                        Else
                                            oda.SelectCommand.Parameters.AddWithValue("@documenttype", DROPDOWN(1))
                                        End If
                                        oda.SelectCommand.Parameters.AddWithValue("@fldmapping", DROPDOWN(2))
                                        oda.SelectCommand.Parameters.AddWithValue("@autofilter", AUTOFILTER)
                                        'oda.SelectCommand.CommandText = STR & " AND isAuth=1 " & xwhr & " Order by " & DROPDOWN(2).ToString()
                                        Dim dtFinal As New DataTable
                                        oda.Fill(dtFinal)

                                        Dim ddlo As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                        ddlo.Items.Clear()
                                        ddlo.Items.Add("SELECT")
                                        ddlo.Items(0).Value = "0"
                                        For i As Integer = 0 To dtFinal.Rows.Count - 1
                                            ddlo.Items.Add(dtFinal.Rows(i).Item(0).ToString())
                                            ddlo.Items(i + 1).Value = dtFinal.Rows(i).Item("tID")
                                        Next
                                    Else
                                        Dim TID1 As String() = ddl.SelectedValue.ToString.Split("|")
                                        Dim SELTID As String = ""
                                        If TID1.Length > 1 Then
                                            SELTID = TID1(1).ToString
                                        Else
                                            SELTID = TID1(0).ToString
                                        End If
                                        Dim value As String = ""

                                        '' below changes made by sunil for child valued lookup on 12-dec-13
                                        Dim ChildDoctype As String = ""
                                        If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                            Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                            ChildDoctype = ChildMid(1).ToString
                                        End If

                                        If SELTID.ToString <> "0" And SELTID.ToString <> "" Then
                                            oda = New SqlDataAdapter("", con)
                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.CommandText = "uspGetMasterValue"
                                            oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                                            If ChildDoctype.Length > 0 Then
                                                oda.SelectCommand.Parameters.AddWithValue("documentType", ChildDoctype)
                                            Else
                                                oda.SelectCommand.Parameters.AddWithValue("documentType", documenttype(1))
                                            End If
                                            oda.SelectCommand.Parameters.AddWithValue("Type", documenttype(0))
                                            oda.SelectCommand.Parameters.AddWithValue("TID", SELTID)
                                            oda.SelectCommand.Parameters.AddWithValue("FLDMAPPING", fldPair(1))
                                            If con.State <> ConnectionState.Open Then
                                                con.Open()
                                            End If
                                            value = oda.SelectCommand.ExecuteScalar().ToString()
                                        End If
                                        Dim ddllukup As DropDownList = TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString().Trim()), DropDownList)
                                        ddllukup.SelectedIndex = ddllukup.Items.IndexOf(ddllukup.Items.FindByText(value))
                                        bindMultiLookUP(fldPair(0), pnlFields, ddllukup)
                                        bindddlMultiLookUP(fldPair(0), pnlFields, ddllukup)
                                        ddllukup.BackColor = Drawing.Color.Gray
                                        ddllukup.ForeColor = Drawing.Color.White
                                        ddllukup.Font.Bold = True

                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If

        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub

    'Add function for filter gridview 01-Nov-2017
    Protected Sub FilterChildGridDDL(ByVal fldId As Integer, ByRef pnlFields As Panel)
        Dim objDC As New DataClass()
        Dim objDT As New DataTable()
        objDT = objDC.ExecuteQryDT("SELECT  documenttype,dropdown,eid from MMM_MST_FIELDS  WITH(NOLOCK)  where fieldID=" & fldId)
        Dim Dtype As String = objDT.Rows(0).Item("documenttype").ToString()
        Dim eid As Int32 = objDT.Rows(0)("EID")
        objDT.Clear()
        Dim NewFieldID As Int32 = 0
        NewFieldID = objDC.ExecuteQryScaller("SELECT fieldid from MMM_MST_FIELDS  WITH(NOLOCK)  where EID=" & eid & " and documenttype='" & Dtype & "' and fieldtype='Child Item' and len(isnull(kc_logic,''))>2")

        objDT.Clear()
        objDT = objDC.ExecuteQryDT("Select  kc_logic, DropDown,eid from MMM_MST_FIELDS  With(NOLOCK)  where fieldID= " & NewFieldID)
        If objDT.Rows.Count > 0 Then
            Dim tab As String = objDT.Rows(0).Item("dropdown").ToString()
            Dim kc As String = objDT.Rows(0).Item("kc_logic").ToString()
            Dim kcL() As String = objDT.Rows(0).Item("kc_logic").ToString().Split("-")

            Dim objDTNew As New DataTable()
            objDTNew = objDC.ExecuteQryDT("SELECT  isEditable,isactive  from MMM_MST_FIELDS   WITH(NOLOCK) where EID=" & eid & " and fieldid=" & kcL(1).ToString & "")

            ' If Not DDLM Is Nothing Then
            Dim grd As GridView = CType(pnlFields.FindControl("GRD" & NewFieldID.ToString), GridView)
            If Not grd Is Nothing Then
                ' For Each dr As DataRow In dt.Rows
                For Each gr As GridViewRow In grd.Rows
                    If gr.RowIndex < grd.Rows.Count - 1 Then

                        Dim DDLM As DropDownList = DirectCast(pnlFields.FindControl("fld" & kcL(0).ToString), DropDownList)

                        If Not DDLM Is Nothing Then
                            Dim ddl1 As DropDownList = DirectCast(gr.FindControl("fld" & kcL(1).ToString & "_" & gr.RowIndex.ToString), DropDownList)
                            If Not ddl1 Is Nothing Then
                                ' cell = i
                                If IsNothing(ddl1) Then
                                Else
                                    ddl1.Items.Clear()
                                End If

                                If objDTNew.Rows(0).Item(0).ToString = "1" And objDTNew.Rows(0).Item(1).ToString = "1" Then
                                    '  ddl1.Items.Insert(0, "SELECT")  ' comment by sunil on 16_dec_14
                                    ddl1.Enabled = True
                                    '  ddl1.SelectedIndex = 0   ' comment by sunil on 16_dec_14
                                    Dim li As ListItem = DDLM.SelectedItem
                                    Dim tn As String = li.Text
                                    Dim vl As String = li.Value
                                    ddl1.Items.Add(tn)
                                    ddl1.Items(0).Value = vl
                                    '' here code to run lookup/filter if any by sunil 06 oct 14  - starts
                                    ddl1.SelectedIndex = ddl1.Items.IndexOf(ddl1.Items.Item(0))

                                    Dim id As String = Right(ddl1.ID, ddl1.ID.Length - 3)
                                    Dim ar() As String = id.Split("_")
                                    Dim id1 As Integer = CInt(ar(0))
                                    BindGRidLookup(ar(1), id1, ddl1, pnlFields:=pnlFields)
                                    '' here code to run lookup/filter if any by sunil 06 oct 14  - ends
                                ElseIf objDTNew.Rows(0).Item(0).ToString = "0" And objDTNew.Rows(0).Item(1).ToString = "1" Then
                                    Dim li As ListItem = DDLM.SelectedItem
                                    Dim tn As String = li.Text
                                    Dim vl As String = li.Value
                                    ddl1.Items.Add(tn)
                                    ddl1.Items(0).Value = vl
                                    ddl1.Enabled = False
                                    '' here code to run lookup/filter if any by sunil 06 oct 14  - starts
                                    ddl1.SelectedIndex = ddl1.Items.IndexOf(ddl1.Items.Item(0))

                                    Dim id As String = Right(ddl1.ID, ddl1.ID.Length - 3)
                                    Dim ar() As String = id.Split("_")
                                    Dim id1 As Integer = CInt(ar(0))
                                    BindGRidLookup(ar(1), id1, ddl1, pnlFields:=pnlFields)
                                    '' here code to run lookup/filter if any by sunil 06 oct 14  - ends
                                Else
                                End If
                            End If
                        End If ' here
                    End If
                Next

            End If
        End If

    End Sub

    Public Sub BindGRidLookup(rowIndex As Integer, ddlid As Integer, ByRef ddl As DropDownList, Optional pnlFields As Panel = Nothing)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'With(nolock) added by Himank on 29th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select LOOKUPVALUE,dropdown,documenttype,dropdowntype from MMM_MST_FIELDS  WITH(NOLOCK)  WHERE FIELDID=" & ddlid & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            Dim fldType As String = ""
            oda.Fill(DS, "data")
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("lookupvalue").ToString()
            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then

                    For iLookFld As Integer = 0 To lookfld.Length - 1
                        Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                        If fldPair.Length > 1 Then
                            Dim GRD As GridView = TryCast(ddl.Parent.Parent.Parent.Parent, GridView)
                            Dim grdRow As GridViewRow
                            Dim control As Control = Nothing

                            If IsNothing(GRD) = False Then
                                'With(nolock) added by Himank on 29th sep 2015
                                oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS  WITH(NOLOCK)  WHERE FIELDID=" & fldPair(0) & "", con)
                                Dim dt As New DataTable
                                oda.Fill(dt)
                                If IsLookupField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString(), pnlfields:=pnlFields) Then  '' check if control to be filled exists
                                    ' get fld dtl from fld master
                                    Dim STR As String = ""
                                    If fldPair(1).ToString.ToUpper = "C" Then    '' fldpair(0) = fieldid to be filled 
                                        Dim proc As String = dt.Rows(0).Item("CAL_FIELDS").ToString()
                                        If proc.Length > 1 Then
                                            Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                            Dim DDL0 As DropDownList
                                            If IsNothing(GRD) = False Then
                                                grdRow = GRD.Rows(rowIndex)
                                                Dim ctrlId As String = "fld" & DROPDOWN1
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                    If IsNothing(control) = True Then
                                                        DDL0 = CType(control, DropDownList)
                                                    End If
                                                Next
                                            End If

                                            ' = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                            If DDL0.SelectedItem.Text.ToUpper <> "SELECT" Then
                                                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                                oda.SelectCommand.Parameters.Clear()
                                                oda.SelectCommand.CommandText = proc
                                                oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                                                oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                                oda.SelectCommand.Parameters.AddWithValue("VALUE", ddl.SelectedValue)
                                                Dim dss As New DataTable
                                                oda.Fill(dss)
                                                Dim ddl1 As DropDownList '= TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                                If IsNothing(GRD) = False Then
                                                    grdRow = GRD.Rows(rowIndex)
                                                    Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                                    For i As Integer = 0 To grdRow.Cells.Count - 1
                                                        control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                        If IsNothing(control) = True Then
                                                            ddl1 = CType(control, DropDownList)
                                                        End If

                                                    Next
                                                End If
                                                If IsNothing(ddl1) = False Then
                                                    ddl1.Items.Clear()
                                                    ddl1.Items.Add("SELECT")
                                                    ddl1.Items(0).Value = "0"
                                                    For i As Integer = 0 To dss.Rows.Count - 1
                                                        ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                        ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                                    Next
                                                End If

                                            End If
                                        End If
                                    ElseIf fldPair(1).ToString.ToUpper = "R" Then
                                        Dim TAB1 As String = ""
                                        Dim TAB2 As String = ""
                                        Dim STID As String = ""
                                        Dim TID As String = ""
                                        If documenttype(0).ToString.ToUpper = "MASTER" Then
                                            TAB2 = "MMM_MST_MASTER"
                                            TID = "TID"
                                        ElseIf documenttype(0).ToString.ToUpper = "DOCUMENT" Then
                                            TAB2 = "MMM_MST_DOC"
                                            TID = "TID"
                                        ElseIf documenttype(1).ToString.ToUpper = "USER" Then
                                            TAB2 = "MMM_MST_USER"
                                            TID = "UID"
                                        End If
                                        Dim DOCTYPE() As String = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")
                                        If DOCTYPE(0).ToString.ToUpper = "MASTER" Then
                                            TAB1 = "MMM_MST_MASTER"
                                            STID = "TID"
                                        ElseIf DOCTYPE(0).ToString.ToUpper = "DOCUMENT" Then
                                            TAB1 = "MMM_MST_DOC"
                                            STID = "TID"
                                        ElseIf DOCTYPE(1).ToString.ToUpper = "USER" Then
                                            TAB1 = "MMM_MST_USER"
                                            STID = "UID"
                                        End If
                                        Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        ''Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.CommandText = "USP_GETMANNUALFILTER"
                                        oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                        oda.SelectCommand.Parameters.AddWithValue("@TAB1", TAB1)
                                        oda.SelectCommand.Parameters.AddWithValue("@TAB2", TAB2)
                                        oda.SelectCommand.Parameters.AddWithValue("@DOCUMENTTYPE", DOCTYPE(1).ToString)
                                        oda.SelectCommand.Parameters.AddWithValue("@FLDMAPPING", DOCTYPE(2).ToString)
                                        oda.SelectCommand.Parameters.AddWithValue("@AUTOFILTER", dt.Rows(0).Item("AUTOFILTER").ToString())
                                        oda.SelectCommand.Parameters.AddWithValue("@TID", TID)
                                        oda.SelectCommand.Parameters.AddWithValue("@STID", STID)
                                        oda.SelectCommand.Parameters.AddWithValue("@VAL", ddl.SelectedValue)
                                        Dim dss As New DataTable
                                        oda.Fill(dss)
                                        Dim ddl1 As DropDownList
                                        If IsNothing(GRD) = False Then
                                            grdRow = GRD.Rows(rowIndex)
                                            Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                            For i As Integer = 0 To grdRow.Cells.Count - 1
                                                control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                If IsNothing(control) = True Then
                                                    ddl1 = CType(control, DropDownList)
                                                End If

                                            Next
                                        End If
                                        If IsNothing(ddl1) = False Then
                                            ddl1.Items.Clear()
                                            ddl1.Items.Add("SELECT")
                                            ddl1.Items(0).Value = "0"
                                            For i As Integer = 0 To dss.Rows.Count - 1
                                                ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                            Next
                                        End If


                                    Else

                                        Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")  ' this contains to be filled values 
                                        Dim TABLENAME As String = ""
                                        Dim TID As String = "TID"
                                        If UCase(DROPDOWN(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "STATIC" Then
                                            If UCase(DROPDOWN(1).ToString()) = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf UCase(DROPDOWN(1).ToString()) = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                If DROPDOWN(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                    TID = "SID"
                                                Else
                                                    TID = "LOCID"
                                                End If
                                            Else
                                                TABLENAME = dt.Rows(0).Item("DBTABLENAME").ToString
                                            End If
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "SESSION" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        End If
                                        Dim SLVALUE As String() = ddl.SelectedValue.Split("|")
                                        If dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "AUTOCOMPLETE" Then

                                            If IsLookupField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString(), pnlfields:=pnlFields) Then


                                                Dim txtBox As TextBox
                                                grdRow = GRD.Rows(rowIndex)
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.Cells(i).FindControl("fld" & Val(fldPair(0)).ToString())
                                                    If IsNothing(control) = True Then
                                                        txtBox = CType(control, TextBox)
                                                        If txtBox IsNot Nothing Then
                                                            txtBox.Text = String.Empty
                                                        End If
                                                    End If

                                                Next


                                            End If

                                        ElseIf dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "DROP DOWN" Then
                                            Dim ob As New DynamicForm
                                            Dim AUTOFILTER As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                            Dim tids As String = ""

                                            ''Filter Data according to Userid
                                            tids = ob.UserDataFilter(DS.Tables("data").Rows(0).Item("documenttype").ToString(), DROPDOWN(1).ToString())

                                            '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                            '' if found then restric no. of list as per rights
                                            Dim StrforRoleAssn As String = ""
                                            StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & DROPDOWN(1).ToString() & "'"
                                            If Not (tids.Length > 2) Then
                                                tids = CheckRoleAsgnmentDdn(DROPDOWN(1).ToString(), StrforRoleAssn)
                                            End If

                                            If tids.Length > 2 Then
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                            Else
                                                xwhr = ""
                                            End If

                                            Dim ChildDoctype As String = ""

                                            If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                                Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                                ChildDoctype = ChildMid(1).ToString
                                            End If

                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.CommandText = "USP_BINDDDL"
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                            oda.SelectCommand.Parameters.AddWithValue("@TableName", TABLENAME)
                                            oda.SelectCommand.Parameters.AddWithValue("@Val", SLVALUE(0))
                                            oda.SelectCommand.Parameters.AddWithValue("@xwhr", xwhr)
                                            oda.SelectCommand.Parameters.AddWithValue("@tid", TID)
                                            If ChildDoctype.Length > 0 Then
                                                oda.SelectCommand.Parameters.AddWithValue("@documenttype", ChildDoctype)
                                            Else
                                                oda.SelectCommand.Parameters.AddWithValue("@documenttype", DROPDOWN(1))
                                            End If
                                            oda.SelectCommand.Parameters.AddWithValue("@fldmapping", DROPDOWN(2))
                                            oda.SelectCommand.Parameters.AddWithValue("@autofilter", AUTOFILTER)
                                            'oda.SelectCommand.CommandText = STR & " AND isAuth=1 " & xwhr & " Order by " & DROPDOWN(2).ToString()
                                            Dim dtFinal As New DataTable
                                            oda.Fill(dtFinal)
                                            Dim ddlo As DropDownList

                                            If IsNothing(GRD) = False Then
                                                grdRow = GRD.Rows(rowIndex)
                                                Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                                'For i As Integer = 0 To grdRow.Cells.Count - 1
                                                control = grdRow.FindControl(ctrlId & "_" & rowIndex)
                                                'control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                If IsNothing(control) = False Then
                                                    ddlo = CType(control, DropDownList)
                                                End If

                                                ' Next
                                            End If
                                            If IsNothing(ddlo) = False Then
                                                ddlo.Items.Clear()
                                                ddlo.Items.Add("SELECT")
                                                ddlo.Items(0).Value = "0"
                                                For i As Integer = 0 To dtFinal.Rows.Count - 1
                                                    ddlo.Items.Add(dtFinal.Rows(i).Item(0).ToString())
                                                    ddlo.Items(i + 1).Value = dtFinal.Rows(i).Item("tID")
                                                Next
                                            End If

                                        Else
                                            Dim TID1 As String() = ddl.SelectedValue.ToString.Split("|")
                                            Dim SELTID As String = ""
                                            If TID1.Length > 1 Then
                                                SELTID = TID1(1).ToString
                                            Else
                                                SELTID = TID1(0).ToString
                                            End If
                                            Dim value As String = ""
                                            Dim ChildDoctype As String = ""
                                            If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                                Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                                ChildDoctype = ChildMid(1).ToString
                                            End If

                                            If SELTID.ToString <> "0" And SELTID.ToString <> "" Then
                                                oda = New SqlDataAdapter("", con)
                                                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                                oda.SelectCommand.Parameters.Clear()
                                                oda.SelectCommand.CommandText = "uspGetMasterValue"
                                                oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                                                If ChildDoctype.Length > 0 Then
                                                    oda.SelectCommand.Parameters.AddWithValue("documentType", ChildDoctype)
                                                Else
                                                    oda.SelectCommand.Parameters.AddWithValue("documentType", documenttype(1))
                                                End If
                                                oda.SelectCommand.Parameters.AddWithValue("Type", documenttype(0))
                                                oda.SelectCommand.Parameters.AddWithValue("TID", SELTID)
                                                oda.SelectCommand.Parameters.AddWithValue("FLDMAPPING", fldPair(1))
                                                If con.State <> ConnectionState.Open Then
                                                    con.Open()
                                                End If
                                                value = oda.SelectCommand.ExecuteScalar().ToString()
                                            End If

                                            If IsLookupField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString(), pnlfields:=pnlFields) Then

                                                Dim txtBox As TextBox
                                                grdRow = GRD.Rows(rowIndex)
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.FindControl("fld" & Val(fldPair(0) & rowIndex).ToString())
                                                    If IsNothing(control) = False Then
                                                        txtBox = CType(control, TextBox)
                                                        txtBox.Text = value
                                                    End If
                                                    'Added By Manvendra 11-02-2022
                                                    If (SELTID = "0" And value = "" And dt.Rows(0).Item("datatype").ToString.ToUpper = "NUMERIC") Then
                                                        txtBox = CType(control, TextBox)
                                                        txtBox.Text = 0
                                                    End If

                                                Next


                                            End If

                                        End If


                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If


        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try


    End Sub

    Private Function IsLookupField(rowIndex As Integer, grdId As String, ctrlId As String, fldType As String, ByRef pnlfields As Panel) As Boolean
        Try
            If pnlfields IsNot Nothing Then
                Dim GRD As GridView = TryCast(pnlfields.FindControl(grdId), GridView)
                Dim grdRow As GridViewRow
                Dim control As Control = Nothing

                If IsNothing(GRD) = False Then
                    grdRow = GRD.Rows(rowIndex)
                    If fldType = "Drop Down" Then
                        control = grdRow.FindControl(ctrlId & "_" & rowIndex)
                    Else
                        control = grdRow.FindControl(ctrlId & rowIndex)
                    End If

                End If
                If IsNothing(control) = False Then
                    Return True
                Else
                    Return False
                End If
            End If

        Catch ex As Exception
            Return False
        End Try

    End Function

    'Add function for filter gridview 01-Nov-2017

    Public Sub totalrow(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            If e.Row.Cells(1).Text.ToUpper() = "TOTAL" Then
                e.Row.Font.Bold = False
                e.Row.ForeColor = Drawing.Color.Black
            Else
                Dim img As ImageButton = New ImageButton()
                img.ID = e.Row.Cells(0).Text
                img.ImageUrl = "~/images/Cancel.gif"
                img.CommandName = "Remove"
                img.CommandArgument = e.Row.Cells(0).Text
                img.Height = Unit.Parse("16")
                img.Width = Unit.Parse("16")
                e.Row.Cells(0).Controls.Add(img)
            End If
        End If
    End Sub

    Private Sub LoadWorkGroupMenu(ByVal FLD As String, ByVal fldmapping As String, ByRef mnu As Menu, ByVal FLDTYPE As String)
        Dim mnuSelf As Menu = TryCast(mnu, Menu)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim od As SqlDataAdapter = Nothing
        Try
            mnuSelf.Items.Clear()
            Dim FLDMAP As String = fldmapping
            Dim arr() As String = FLD.Split("-")
            If UCase(FLDTYPE) = "SELF REFERENCE" Then
                FLDMAP = arr(3).ToString()
            Else
                FLDMAP = fldmapping
            End If

            od = New SqlDataAdapter("select convert(nvarchar(20),tid)[stid] , " & FLDMAP & "," & arr(2).ToString() & " from MMM_MST_MASTER where Eid='" & HttpContext.Current.Session("EID") & "' and documenttype='" & arr(1).ToString() & "' order by fld1", con)
            Dim ds As New DataSet
            od.Fill(ds, "boss")
            Dim dr As New DataRelation("bossrelation", ds.Tables("boss").Columns("stid"), ds.Tables("boss").Columns(FLDMAP), False)
            ds.Relations.Add(dr)
            Dim masterNode As New MenuItem("Parent", 0)
            mnuSelf.Items.Add(masterNode)
            For Each rw As DataRow In ds.Tables("boss").Rows
                If rw.IsNull(FLDMAP) Then
                    Dim n As New MenuItem()
                    n.Text = rw.Item(arr(2).ToString())
                    n.Value = rw.Item("stid")
                    masterNode.ChildItems.Add(n)
                    LoadRecMenu(rw, n, arr(2).ToString())
                End If
            Next
            ds.Dispose()
            ds = Nothing
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not od Is Nothing Then
                od.Dispose()
            End If
        End Try

    End Sub

    Private Sub LoadRecMenu(ByVal row As DataRow, ByRef node As MenuItem, ByVal fld As String)
        For Each rw As DataRow In row.GetChildRows("bossrelation")
            Dim n As New MenuItem()
            n.Text = rw(fld).ToString()
            n.Value = rw("stid").ToString()
            node.ChildItems.Add(n)
            LoadRecMenu(rw, n, fld)
        Next
    End Sub

    Public Sub Delete(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)
        Dim btnDelete As GridView = TryCast(sender, GridView)

        If e.CommandName = "Remove" Then
            Dim rw As GridViewRow = DirectCast(DirectCast(e.CommandSource, ImageButton).NamingContainer, GridViewRow)
            Dim Pid As String = btnDelete.DataKeys(rw.RowIndex).Value
            btnDelete.DeleteRow(rw.RowIndex)
            btnDelete.DataBind()
        End If


    End Sub

    Public Sub Deleting(ByVal Sender As Object, ByVal e As GridViewDeleteEventArgs)

    End Sub

    Public Function checkduplicate(ByVal qrytype As String, ByVal tid As Integer, ByVal tablename As String, ByVal fldmapping As String, ByVal value As String, ByVal doctype As String) As Boolean
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Try
            Dim qry As String
            '' NEW ADDED FOR UNIQUE PROPERTY CHECK ON ACTION SCREEN ALSO BY SUNIL ON 17_APR_14
            Dim Sql As String = "select formname,formsource,eventname from mmm_mst_forms where eid=" & HttpContext.Current.Session("EID") & " and formname='" & doctype & "'"
            Dim dt As New DataTable
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            oda.SelectCommand.CommandText = Sql
            oda.Fill(dt)
            Dim fsrc As String = ""
            If dt.Rows.Count <> 0 Then
                fsrc = dt.Rows(0).Item("formsource").ToString
                If fsrc.ToUpper = "ACTION DRIVEN" Then
                    doctype = dt.Rows(0).Item("EVENTNAME").ToString
                End If
            End If
            '' NEW ADDED FOR UNIQUE PROPERTY CHECK ON ACTION SCREEN ALSO BY SUNIL ON 17_APR_14

            If Trim(tablename) = "MMM_MST_DOC" Then
                qry = "select count(*) from " & tablename & " where eid=" & HttpContext.Current.Session("EID") & " AND DOCUMENTTYPE='" & doctype & "' AND " & fldmapping & "='" & getSafeString(value) & "' and curstatus <> 'REJECTED' "
            Else
                qry = "select count(*) from " & tablename & " where eid=" & HttpContext.Current.Session("EID") & " AND DOCUMENTTYPE='" & doctype & "' AND " & fldmapping & "='" & getSafeString(value) & "'"
            End If

            Dim XWHR As String = ""

            If qrytype.ToUpper() = "UPDATE" Then
                XWHR = " AND TID<>" & tid & ""
            End If
            qry &= XWHR

            oda.SelectCommand.CommandText = qry
            Dim CNT As Integer = oda.SelectCommand.ExecuteScalar()
            If CNT > 0 Then
                Return 1
            Else
                Return 0
            End If
        Catch ex As Exception
            Throw
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Function

    '' Hit Kicking Field
    Public Function UPDATEKICKING(ByVal KCFVALUE As String, ByVal UPDVALUE As String, ByRef PNLFIELDS As Panel) As String
        'Code Commented By Ajeetbecouse there is no any need of sqlconnection
        'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        'Dim con As SqlConnection = New SqlConnection(conStr)
        'Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim UPDQUERY As String = ""
        KCFVALUE = KCFVALUE.Substring(0, KCFVALUE.Length - 1)
        Dim fldarr() As String = KCFVALUE.Split(",")
        For i As Integer = 0 To fldarr.Length - 1
            Dim ARR() As String = fldarr(i).Split(":")
            Dim TABLENAME As String = ""
            Dim tid As Integer = 0
            If ARR(0).ToString().ToUpper() = "MASTER" Then
                TABLENAME = "MMM_MST_MASTER"
            Else
                TABLENAME = "MMM_MST_DOC"
            End If

            Dim DDL As DropDownList = CType(PNLFIELDS.FindControl("fld" & ARR(2).ToString()), DropDownList)
            Dim ddlarr() As String = DDL.SelectedValue.Split("|")
            If ddlarr.Length > 0 Then
                tid = CInt(ddlarr(0))
            ElseIf ddlarr.Length > 1 Then
                tid = CInt(ddlarr(1))
            End If
            If ARR(4).ToString() = "R" Then
                UPDQUERY &= "UPDATE " & TABLENAME & " SET " & ARR(3) & "='" & UPDVALUE & "' WHERE DOCUMENTTYPE='" & ARR(1).ToString() & "' AND TID= " & tid & ";"
            Else
                UPDQUERY &= "UPDATE " & TABLENAME & " SET " & ARR(3) & "=ltrim(Str(convert(float," & ARR(3) & ") " & ARR(4) & " convert(float,'" & UPDVALUE & "'),21,2)) WHERE DOCUMENTTYPE='" & ARR(1).ToString() & "' AND TID= " & tid & ";"
            End If
        Next
        UPDQUERY = UPDQUERY.Substring(0, UPDQUERY.Length - 1)
        Return UPDQUERY

    End Function

    Public Function UserDataFilter_PreRole(ByVal ddocumenttype As String, ByVal TableName As String, Optional ByVal isDocDtl As Boolean = False) As String
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Try
            Dim ds As New DataSet
            Dim fldmapping As String = ""
            Dim fldid As String = ""
            da.SelectCommand.CommandText = "select * from mmm_prerole_datafilter where eid=" & HttpContext.Current.Session("Eid") & " and documenttype='" & ddocumenttype & "' and rolename='" & HttpContext.Current.Session("USERROLE").ToString & "'"
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim DT As New DataTable

            da.Fill(DT)
            If DT.Rows.Count <> 0 Then
                fldmapping = DT.Rows(0).Item("fldmapping").ToString

                If fldmapping.Length > 2 Then
                    'da.SelectCommand.CommandText = "select " & fldmapping & ",tid from " & TableName & "  where eid=" & HttpContext.Current.Session("eid") & " and " & fldmapping & "='" & HttpContext.Current.Session("uid") & "'"
                    da.SelectCommand.CommandText = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR,TID)  FROM " & TableName & " where EID=" & HttpContext.Current.Session("eid") & " and " & fldmapping & "='" & HttpContext.Current.Session("uid") & "' FOR XML PATH('')),2,200000) AS CSV"
                End If
                da.Fill(ds, "FILTER")
                If ds.Tables("FILTER").Rows.Count = 0 Then
                    fldid = ""
                ElseIf ds.Tables("FILTER").Rows.Count = 1 Then
                    fldid = ds.Tables("FILTER").Rows(0).Item(0).ToString()
                End If
                If fldid = "" Then
                    fldid = "0"
                End If
            End If

            If fldid.Length > 2 Then
                Dim lchar As String = fldid.Substring(fldid.Length - 1)
                If lchar = "," Then
                    fldid = fldid.Substring(0, fldid.Length - 1)
                End If
            End If

            ds.Dispose()
            DT.Dispose()
            Return fldid
        Catch ex As Exception
            Throw
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try

    End Function

    ''Function to Filter the Data according to User
    Public Function UserDataFilter(ByVal cdocumenttype As String, ByVal ddocumenttype As String, Optional ByVal isDocdtl As Boolean = False) As String
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Try
            Dim ds As New DataSet
            Dim fldmapping As String = ""
            Dim fldid As String = ""


            da.SelectCommand.CommandText = "select eventname,formsource from mmm_mst_forms where eid=" & HttpContext.Current.Session("Eid") & " and formname='" & cdocumenttype & "'"
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            Dim FormSource As String = "" : Dim eventNm As String = ""
            Dim dtFT As New DataTable
            da.Fill(dtFT)
            If dtFT.Rows.Count > 0 Then
                FormSource = dtFT.Rows(0).Item("formsource").ToString
                eventNm = dtFT.Rows(0).Item("eventname").ToString
                If FormSource.ToUpper() = "ACTION DRIVEN" Then
                    cdocumenttype = eventNm
                End If
            End If

            dtFT.Dispose()

            da.SelectCommand.CommandText = "select docmapping from mmm_mst_forms where eid=" & HttpContext.Current.Session("Eid") & " and Formname='" & ddocumenttype & "'"

            fldmapping = Convert.ToString(da.SelectCommand.ExecuteScalar)
            If fldmapping.Length > 2 Then
                da.SelectCommand.CommandText = "select " & fldmapping & ",documenttype,iscreate,isedit from mmm_ref_role_user where eid=" & HttpContext.Current.Session("eid") & " and Uid=" & HttpContext.Current.Session("uid") & " and roleNAME='" & HttpContext.Current.Session("USERROLE") & "' and '" & cdocumenttype & "' in (select * from InputString1(documenttype))"
                da.Fill(ds, "FILTER")
                If ds.Tables("FILTER").Rows.Count = 0 Then
                    fldid = ""
                ElseIf ds.Tables("FILTER").Rows.Count = 1 And ds.Tables("FILTER").Rows(0).Item("iscreate").ToString() <> "0" Then
                    fldid = ds.Tables("FILTER").Rows(0).Item(0).ToString()
                Else
                    Dim RW() As DataRow = ds.Tables("FILTER").Select("ISCREATE=1")
                    If RW.Length > 0 Then
                        fldid = RW(0).Item(0).ToString()
                    Else
                        fldid = ""
                    End If
                    'For Each dr As DataRow In ds.Tables("FILTER").Rows
                    '    If dr.Item(0).ToString() <> "*" And dr.Item("iscreate").ToString() <> "0" Then
                    '        fldid = dr.Item(0).ToString()
                    '    Else
                    '        fldid = dr.Item("iscreate").ToString()
                    '    End If
                    'Next
                End If
            End If

            Return fldid
        Catch ex As Exception
            Throw
        Finally
            If Not da Is Nothing Then
                da.Dispose()
            End If
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If

        End Try
    End Function
    Public Function CheckRoleAsgnmentDdn(ByVal DDnDoctype As String, ByVal MainQryStr As String, Optional ByVal isDocdtl As Boolean = False) As String
        Dim EID As String = HttpContext.Current.Session("Eid")
        If EID <> 180 Then
            CheckRoleAsgnmentDdn = ""
            Return ""
        End If
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)

        If MainQryStr.Contains("and documenttype='USER'") = True Then
            MainQryStr = MainQryStr.Replace("and documenttype='USER'", " ")
            MainQryStr = MainQryStr.Replace("TID", "UID")
        End If

        Dim strMainQry As String = "" : Dim Currfmap As String = "" : Dim strWhere As String = ""
        Dim dtRRef As New DataTable
        da.SelectCommand.CommandType = CommandType.Text
        da.SelectCommand.Parameters.Clear()
        da.SelectCommand.CommandText = "select formid, docmapping, FORMNAME from MMM_MST_FORMS with(nolock) where EID=" & EID & " and isRoleDef=1"
        da.Fill(dtRRef)

        '  and PATINDEX( '%,' + fld5 + ',%' , ',' + '1484480,1489828' + ',') > 0
        For i As Integer = 0 To dtRRef.Rows.Count - 1
            da.SelectCommand.CommandType = CommandType.Text
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.CommandText = "select fieldmapping from MMM_MST_FIELDS with(nolock) where  Eid=" & EID & " and DocumentType='" & DDnDoctype & "' and dropdowntype='MASTER VALUED' and substring(dropdown,8,(charindex('-',dropdown,8)-8)) = '" & dtRRef.Rows(i).Item("formname").ToString & "'"

            If con.State = ConnectionState.Closed Then con.Open()
            Currfmap = Convert.ToString(da.SelectCommand.ExecuteScalar)

            If Currfmap <> "" Then
                da.SelectCommand.CommandType = CommandType.Text
                da.SelectCommand.Parameters.Clear()
                ''  get fld value from document table 
                da.SelectCommand.CommandText = "select top 1 " & dtRRef.Rows(i).Item("docmapping") & " from MMM_Ref_Role_User with(nolock) where Eid=" & EID & " and ',' + documenttype + ','  like '%," & DDnDoctype & ",%' and rolename='" & HttpContext.Current.Session("userrole") & "' and uid=" & HttpContext.Current.Session("UID")

                Dim RoleAsgnFld As String = ""
                RoleAsgnFld = Convert.ToString(da.SelectCommand.ExecuteScalar)

                If RoleAsgnFld <> "" Then
                    strWhere &= " and PATINDEX( '%,' + " & Currfmap & " + ',%' , ','" & " + '" & RoleAsgnFld & "' +" & " ',') > 0"  '        'strFldQry &= Currfmap + dtRRef.Rows(i).Item("docmapping") & ") +',' like '%," & dtRA.Rows(0).Item(0).ToString & ",%' or ltrim( convert(nvarchar(max), " & dtRRef.Rows(i).Item("docmapping") & "))='*' )"
                End If
            End If
        Next

        Dim Tids As String = ""
        Dim xmlPathEndStr As String = " FOR XML PATH('')),2,200000) AS CSV"  '' for APPEND Before executing 
        If Len(strWhere) > 1 Then
            da.SelectCommand.CommandType = CommandType.Text
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.CommandText = MainQryStr & strWhere & xmlPathEndStr    ''  get final rows from role assignment table 

            If con.State = ConnectionState.Closed Then con.Open()
            Tids = Convert.ToString(da.SelectCommand.ExecuteScalar)
        End If

        If Tids.Length > 2 Then
            Dim lchar As String = Tids.Substring(Tids.Length - 1)
            If lchar = "," Then
                Tids = Tids.Substring(0, Tids.Length - 1)
            End If
        End If
        dtRRef.Dispose()
        da.Dispose()
        con.Close()
        con.Dispose()
        Return Tids
    End Function


    ''Safe String function to remove special character from string 
    Public Function getSafeString(ByVal strVar As String) As String
        Trim(strVar)
        strVar = Replace(strVar, "'", "`")
        'strVar = Replace(strVar, ";", "")
        strVar = Replace(strVar, "--", "")
        'strVar = Replace(strVar, "%", "")
        'strVar = Replace(strVar, "&", "")
        Return strVar
    End Function

    ''MAINTAINING HISTORY OF DOCUMENT OR MASTER
    Public Sub History(ByVal eid As Integer, ByVal docid As Integer, ByVal UID As Integer, ByVal DOCTYPE As String, ByVal Table As String, ByVal Action As String)
        Dim PK_COL As String = ""
        If Table.ToUpper = "MMM_MST_MASTER" Or Table.ToUpper = "MMM_MST_DOC" Then
            PK_COL = "TID"
        ElseIf Table.ToUpper = "MMM_MST_USER" Then
            PK_COL = "UID"
        Else
            PK_COL = "TID"
        End If
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Try
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.CommandText = "USP_HISTORY"
            da.SelectCommand.Parameters.AddWithValue("EID", eid)
            da.SelectCommand.Parameters.AddWithValue("TID", docid)
            da.SelectCommand.Parameters.AddWithValue("DOCTYPE", DOCTYPE)
            da.SelectCommand.Parameters.AddWithValue("TABLENAME", Table)
            da.SelectCommand.Parameters.AddWithValue("UID", UID)
            da.SelectCommand.Parameters.AddWithValue("UACTION", Action)
            da.SelectCommand.Parameters.AddWithValue("TIDNAME", PK_COL)

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteScalar()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Sub


    ''MAINTAINING HISTORY OF DOCUMENT OR MASTER
    Public Sub HistoryForRole(ByVal eid As Integer, ByVal docid As Integer, ByVal UID As Integer, ByVal DOCTYPE As String, ByVal Table As String, ByVal Action As String, ByVal LogType As String, ByVal Source As String, Optional ByVal Tid As String = "", Optional ByVal RoleName As String = "")
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Try
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.CommandText = "USP_HISTORY_ForRole"
            da.SelectCommand.Parameters.AddWithValue("EID", eid)
            da.SelectCommand.Parameters.AddWithValue("TID", docid)
            da.SelectCommand.Parameters.AddWithValue("DOCTYPE", DOCTYPE)
            da.SelectCommand.Parameters.AddWithValue("LogType", LogType)
            da.SelectCommand.Parameters.AddWithValue("TABLENAME", Table)
            da.SelectCommand.Parameters.AddWithValue("UID", UID)
            da.SelectCommand.Parameters.AddWithValue("UACTION", Action)
            da.SelectCommand.Parameters.AddWithValue("TIDNAME", "UID")
            da.SelectCommand.Parameters.AddWithValue("RoleName", RoleName)
            da.SelectCommand.Parameters.AddWithValue("Source", Source)
            da.SelectCommand.Parameters.AddWithValue("RTid", Tid)

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteScalar()
        Catch ex As Exception
            Dim i = ""
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Sub


    Public Sub HistoryT(ByVal eid As Integer, ByVal docid As Integer, ByVal UID As Integer, ByVal DOCTYPE As String, ByVal Table As String, ByVal Action As String, ByVal con As SqlConnection, ByVal tran As SqlTransaction)
        Dim PK_COL As String = ""
        If Table.ToUpper = "MMM_MST_MASTER" Or Table.ToUpper = "MMM_MST_DOC" Then
            PK_COL = "TID"
        ElseIf Table.ToUpper = "MMM_MST_USER" Then
            PK_COL = "UID"
        ElseIf Table.ToUpper = "MMM_MST_DOC_ITEM" Then
            PK_COL = "DOCID"
        Else
            PK_COL = "TID"
        End If
        'Now Connection is in argument
        'Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        'Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        da.SelectCommand.Transaction = tran
        Try
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.CommandText = "USP_HISTORY"
            da.SelectCommand.Parameters.AddWithValue("EID", eid)
            da.SelectCommand.Parameters.AddWithValue("TID", docid)
            da.SelectCommand.Parameters.AddWithValue("DOCTYPE", DOCTYPE)
            da.SelectCommand.Parameters.AddWithValue("TABLENAME", Table)
            da.SelectCommand.Parameters.AddWithValue("UID", UID)
            da.SelectCommand.Parameters.AddWithValue("UACTION", Action)
            da.SelectCommand.Parameters.AddWithValue("TIDNAME", PK_COL)

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            da.SelectCommand.ExecuteScalar()
        Catch ex As Exception
            Throw
        Finally
            'If Not con Is Nothing Then
            '    con.Close()
            '    con.Dispose()
            'End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Sub

    ''Check for Autherity Matrix 
    Public Function CheckAuth(ByVal ds As DataTable, ByVal DOCUMENTTYPE As String, ByVal EID As Integer, ByRef pnlFields As Panel) As Integer
        Dim drColl() As DataRow = ds.Select("isworkflow=1")
        Dim xwhr As String = ""
        Dim STR As String = ""
        Dim RES As Integer = 1
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Try
            If drColl.Length > 0 Then
                For i As Integer = 0 To drColl.Length - 1
                    Dim FLDMAPPING As String = drColl(i).Item("FieldMapping").ToString()
                    Select Case drColl(i).Item("FieldType").ToString().ToUpper()

                        Case "TEXT BOX"
                            Dim txt As TextBox = TryCast(pnlFields.FindControl("fld" & drColl(i).Item("Fieldid").ToString()), TextBox)
                            'xwhr &= FLDMAPPING & "=" & "'" & txt.Text & "'"
                            xwhr &= " AND '" & txt.Text & "' IN (SELECT * FROM DMS.InputString1(isnull(" & FLDMAPPING & ",'')))"
                        Case "DROP DOWN"
                            Dim txt As DropDownList = TryCast(pnlFields.FindControl("fld" & drColl(i).Item("Fieldid").ToString()), DropDownList)
                            xwhr &= " AND '" & txt.SelectedValue & "' IN (SELECT * FROM DMS.InputString1(isnull(" & FLDMAPPING & ",'')))"

                        Case "LOOKUP"
                            Dim txt As TextBox = TryCast(pnlFields.FindControl("fld" & drColl(i).Item("Fieldid").ToString()), TextBox)
                            xwhr &= " AND '" & txt.Text & "' IN (SELECT * FROM DMS.InputString1(isnull(" & FLDMAPPING & ",'')))"
                    End Select
                Next
                STR = "SELECT COUNT(*) FROM MMM_MST_AUTHMETRIX WHERE EID=" & EID & " and doctype='" & DOCUMENTTYPE & "' " & xwhr & " "

                da.SelectCommand.CommandText = STR
                If con.State <> ConnectionState.Open Then
                    con.Open()
                End If
                Dim CNT As Integer = da.SelectCommand.ExecuteScalar()
                da.SelectCommand.CommandText = "SELECT COUNT(*) FROM MMM_MST_WORKFLOW_STATUS WHERE EID=" & EID & " AND DOCUMENTTYPE='" & DOCUMENTTYPE & "'"
                Dim CNT1 As Integer = da.SelectCommand.ExecuteScalar()

                If CNT = CNT1 Then
                    RES = 1
                Else
                    RES = 0
                End If

            End If
            Return RES
        Catch ex As Exception
            Throw
        Finally
            If Not con Is Nothing Then
                con.Close()
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Function

    ''Create Control for Advance Search 
    Public Sub CreateControlsOnAdvanceSearch(ByVal ds As DataTable, ByRef pnlFields As Panel)
        Dim strcol As String = ""
        Dim strqry As String = ""
        'If ds.Rows.Count > 0 Then
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = Nothing
        'Try catch Block Added by Ajeet Kumar
        Try
            pnlFields.Controls.Add(New LiteralControl("<div class=""form""><table width=""100%"" cellspacing=""5px"" border=""0px"" cellpadding=""0px"">"))
            Dim lblWidth As Integer = 130
            Dim controlWdth As Integer = 240
            Dim datatype As String = ""
            For i As Integer = 0 To ds.Rows.Count - 1
                Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                Dim lbl As New Label
                Dim lbl1 As New Label
                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                If datatype.ToUpper = "DATETIME" Then
                    lbl.ID = "Frlbl" & ds.Rows(i).Item("FieldID").ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True
                    lbl1.ID = "Tolbl" & ds.Rows(i).Item("FieldID").ToString()
                    lbl1.Text = dispName
                    lbl1.Font.Bold = True
                ElseIf datatype.ToUpper = "NUMERIC" Then
                    lbl.ID = "lblR1" & ds.Rows(i).Item("FieldID").ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True

                    lbl1.ID = "lblR2" & ds.Rows(i).Item("FieldID").ToString()
                    lbl1.Text = dispName
                    lbl1.Font.Bold = True
                Else
                    lbl.ID = "lbl" & ds.Rows(i).Item("FieldID").ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True
                End If

                'If layout = "DOUBLE COLUMN" Then
                If i Mod 2 = 0 Then
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                End If
                'Else
                'lblWidth = 210
                'controlWdth = 540
                'pnlFields.Controls.Add(New LiteralControl("<tr>"))
                'End If

                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right"">"))
                pnlFields.Controls.Add(lbl)
                pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left"">"))
                Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "TEXT BOX"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblt As New Label
                        Dim lblf As New Label
                        If datatype.ToUpper = "DATETIME" Then
                            lblf.Text = " From "
                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)
                            lblt.Text = " To "
                            pnlFields.Controls.Add(lblt)
                            txtBox1.ID = "Tofld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox1.Width = controlWdth - 10
                            txtBox1.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox1)
                            'datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                            'Dim txtBox As New TextBox
                            'Dim txtBox1 As New TextBox
                            'If datatype.ToUpper = "DATETIME" Then
                            '    txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                            '    txtBox.Width = controlWdth - 10
                            '    txtBox.CssClass = "txtBox"
                            '    pnlFields.Controls.Add(txtBox)
                            '    txtBox1.ID = "Tofld" & ds.Rows(i).Item("FieldID").ToString()
                            '    txtBox1.Width = controlWdth - 10
                            '    txtBox1.CssClass = "txtBox"
                            '    pnlFields.Controls.Add(txtBox1)
                        ElseIf datatype.ToUpper = "NUMERIC" Then
                            txtBox.ID = "fldR1" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)
                            txtBox1.ID = "fldR2" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox1.Width = controlWdth - 10
                            txtBox1.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox1)
                        Else
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()

                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)
                        End If
                        If datatype = "DATETIME" Then
                            Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                            Dim CLNDR1 As New AjaxControlToolkit.CalendarExtender
                            CLNDR.ID = "FrCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                            CLNDR.TargetControlID = txtBox.ID
                            CLNDR.Format = "dd/MM/yy"
                            'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                            pnlFields.Controls.Add(CLNDR)

                            CLNDR1.ID = "ToCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                            CLNDR1.TargetControlID = txtBox1.ID
                            CLNDR1.Format = "dd/MM/yy"
                            'txtBox1.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                            pnlFields.Controls.Add(CLNDR1)
                        End If
                    Case "DROP DOWN"
                        pnlFields.Controls.Add(New LiteralControl("<div class=""form"" style=""overflow-Y:scroll;width:90%;height:100px""><h4>"))

                        Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")

                        dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                        Dim chklist As New CheckBoxList
                        chklist.ID = "chklist" & ds.Rows(i).Item("FieldID").ToString()
                        chklist.CssClass = "txtbox"
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            For ii As Integer = 0 To arr.Count - 1
                                chklist.Items.Add(arr(ii).ToUpper())
                            Next
                            dynmdiv.Controls.Add(chklist)
                            pnlFields.Controls.Add(dynmdiv)
                        ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_USER"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",username from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " "
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(1).ToString)
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(0)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                            dynmdiv.Controls.Add(chklist)
                            pnlFields.Controls.Add(dynmdiv)
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            If UCase(dropdowntype) = "MASTER VALUED" And dropdowntype = "STATIC-USER-UserName" Then
                                Dim TABLENAME As String = ""
                                arr = ddlText.Split("-")
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_USER"
                                Else
                                    TABLENAME = "MMM_MST_USER"
                                End If
                                Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                oda = New SqlDataAdapter("", con)
                                Dim dss As New DataSet
                                oda.SelectCommand.CommandText = str
                                oda.Fill(dss, "FV")
                                For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                    chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                    chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                Next
                                oda.Dispose()
                                dss.Dispose()


                            Else
                                Dim TABLENAME As String = ""
                                arr = ddlText.Split("-")
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_MASTER"
                                ElseIf UCase(arr(0).ToString()) = "STATIC" Then
                                    TABLENAME = "MMM_MST_USER"
                                ElseIf UCase(arr(0).ToString()) = "SESSION" Then
                                    TABLENAME = "MMM_MST_USER"
                                Else
                                    TABLENAME = "MMM_MST_DOC"
                                End If
                                Dim str As String = ""
                                If UCase(arr(0).ToString()) = "SESSION" Or UCase(arr(0).ToString()) = "STATIC" Then
                                    str = "select " & arr(2).ToString() & ",UID from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID")
                                Else
                                    str = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                End If
                                oda = New SqlDataAdapter("", con)
                                Dim dss As New DataSet
                                oda.SelectCommand.CommandText = str
                                oda.Fill(dss, "FV")
                                For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                    chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                    chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                Next
                                oda.Dispose()
                                dss.Dispose()
                            End If
                            dynmdiv.Controls.Add(chklist)
                            pnlFields.Controls.Add(dynmdiv)
                        End If

                    Case "AUTOCOMPLETE"
                        pnlFields.Controls.Add(New LiteralControl("<div class=""form"" style=""overflow-Y:scroll;width:90%;height:100px""><h4>"))

                        Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                        dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                        Dim chklist As New CheckBoxList
                        chklist.ID = "chklist" & ds.Rows(i).Item("FieldID").ToString()
                        chklist.CssClass = "txtbox"
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            For ii As Integer = 0 To arr.Count - 1
                                chklist.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_USER"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",username from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " "
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(1).ToString)
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(0)
                            Next
                            oda.Dispose()
                            dss.Dispose()

                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then

                            If UCase(dropdowntype) = "MASTER VALUED" And dropdowntype = "STATIC-USER-UserName" Then
                                Dim TABLENAME As String = ""
                                arr = ddlText.Split("-")
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_USER"
                                Else
                                    TABLENAME = "MMM_MST_USER"
                                End If
                                Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " "
                                oda = New SqlDataAdapter("", con)
                                Dim dss As New DataSet
                                oda.SelectCommand.CommandText = str
                                oda.Fill(dss, "FV")
                                For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                    chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                    chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                Next
                                oda.Dispose()
                                dss.Dispose()


                            Else
                                Dim TABLENAME As String = ""
                                arr = ddlText.Split("-")
                                If UCase(arr(0).ToString()) = "MASTER" Then
                                    TABLENAME = "MMM_MST_MASTER"
                                ElseIf UCase(arr(0).ToString()) = "STATIC" Then
                                    TABLENAME = "MMM_MST_USER"
                                Else
                                    TABLENAME = "MMM_MST_DOC"
                                End If
                                Dim str As String = ""
                                If UCase(arr(0).ToString()) <> "STATIC" Then
                                    str = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                                Else
                                    str = "select " & arr(2).ToString() & ",UID from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID")
                                End If
                                oda = New SqlDataAdapter("", con)
                                Dim dss As New DataSet
                                oda.SelectCommand.CommandText = str
                                oda.Fill(dss, "FV")
                                For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                    chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                    chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                                Next
                                oda.Dispose()
                                dss.Dispose()
                            End If
                            dynmdiv.Controls.Add(chklist)
                            pnlFields.Controls.Add(dynmdiv)
                        End If


                    Case "CHECKBOX LIST"
                        Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                        dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                        Dim chklist As New CheckBoxList
                        chklist.ID = "chklist" & ds.Rows(i).Item("FieldID").ToString()
                        chklist.CssClass = "txtbox"
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            For ii As Integer = 0 To arr.Count - 1
                                chklist.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_DOC"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        End If
                        dynmdiv.Controls.Add(chklist)
                        pnlFields.Controls.Add(dynmdiv)

                    Case "LIST BOX"
                        Dim ddl As New ListBox
                        ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                        ddl.Width = controlWdth - 2
                        ddl.CssClass = "txtBox"
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            ddl.Items.Add("")
                            For ii As Integer = 0 To arr.Count - 1
                                ddl.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_DOC"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0).ToString())
                                ddl.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        End If
                        ddl.Items.Insert(0, "ALL")
                        ddl.SelectionMode = ListSelectionMode.Multiple
                        pnlFields.Controls.Add(ddl)
                    Case "TEXT AREA"
                        Dim txtBox As New TextBox
                        txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                        txtBox.Width = controlWdth - 10
                        txtBox.CssClass = "txtBox"
                        txtBox.TextMode = TextBoxMode.MultiLine
                        pnlFields.Controls.Add(txtBox)
                    Case "AUTO NUMBER"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblf As New Label
                        If datatype.ToUpper = "TEXT" Then
                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)
                        End If
                    Case "LOOKUP"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblf As New Label
                        Dim lblt As New Label
                        If datatype.ToUpper = "TEXT" Or datatype.ToUpper = "NUMERIC" Then
                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)
                        End If
                        If datatype = "DATETIME" Then
                            lblf.Text = " From "
                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)
                            lblt.Text = " To "
                            pnlFields.Controls.Add(lblt)
                            txtBox1.ID = "Tofld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox1.Width = controlWdth - 10
                            txtBox1.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox1)
                            Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                            Dim CLNDR1 As New AjaxControlToolkit.CalendarExtender
                            CLNDR.ID = "FrCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                            CLNDR.TargetControlID = txtBox.ID
                            CLNDR.Format = "dd/MM/yy"
                            'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                            pnlFields.Controls.Add(CLNDR)

                            CLNDR1.ID = "ToCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                            CLNDR1.TargetControlID = txtBox1.ID
                            CLNDR1.Format = "dd/MM/yy"
                            'txtBox1.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                            pnlFields.Controls.Add(CLNDR1)

                        End If
                    Case "FILE UPLOADER"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblf As New Label
                        If datatype.ToUpper = "TEXT" Then
                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)
                        End If
                    Case "Calculative Field"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblt As New Label
                        Dim lblf As New Label
                        If datatype.ToUpper = "NUMERIC" Then
                            txtBox.ID = "fldR1" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox calnum"
                            pnlFields.Controls.Add(txtBox)
                            txtBox1.ID = "fldR2" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox1.Width = controlWdth - 10
                            txtBox1.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox1)
                        Else
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            pnlFields.Controls.Add(txtBox)
                        End If

                End Select
                pnlFields.Controls.Add(New LiteralControl("</td>"))
                'If layout = "DOUBLE COLUMN" Then
                If i Mod 2 = 1 Then
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                End If
                'Else
                'pnlFields.Controls.Add(New LiteralControl("</tr>"))
                'End If
            Next
            pnlFields.Controls.Add(New LiteralControl("</table></div>"))
            'End If
            ds.Dispose()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
        '   Dim layout As String = ds.Rows(0).Item("LayoutType").ToString()

    End Sub


    ''Fetch the value from dynamic Control for Advance Searching by Vishal
    Function getsearchresult(ByVal ds As DataTable, ByRef pnlFields As Panel) As String
        Dim datatype As String = ""
        Dim fieldtype As String = ""
        Dim chklist As String = ""
        Dim dropdowntype As String = ""
        Dim txtobj1 As TextBox
        Dim txtobj As TextBox
        Dim chk As New CheckBoxList
        Dim str As String = ""
        For i As Integer = 0 To ds.Rows.Count - 1
            datatype = ds.Rows(i).Item("DATATYPE").ToString
            fieldtype = ds.Rows(i).Item("fieldtype").ToString
            dropdowntype = ds.Rows(i).Item("dropdowntype").ToString().ToUpper()
            If datatype.ToUpper = "DATETIME" Then
                txtobj = TryCast(pnlFields.FindControl("Frfld" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj) Then
                ElseIf txtobj.Text = "" Then
                Else
                    str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & ">=" & "'" & txtobj.Text.ToString & "'" & " and "
                End If
                txtobj1 = TryCast(pnlFields.FindControl("Tofld" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj1) Then
                ElseIf txtobj1.Text = "" Then
                Else
                    str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & "<=" & "'" & txtobj1.Text.ToString & "'" & " and "
                End If
            ElseIf datatype.ToUpper = "NUMERIC" And fieldtype.ToUpper = "TEXT BOX" Then
                txtobj = TryCast(pnlFields.FindControl("fldR1" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj) Then
                ElseIf txtobj.Text = "" Then
                Else
                    str = str & "convert(numeric(10,2),m." & ds.Rows(i).Item("fieldmapping").ToString & ") >=" & txtobj.Text.ToString & " and "
                End If
                txtobj1 = TryCast(pnlFields.FindControl("fldR2" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj1) Then
                ElseIf txtobj1.Text = "" Then
                Else
                    str = str & "convert(numeric(10,2),m." & ds.Rows(i).Item("fieldmapping").ToString & ") <=" & txtobj1.Text.ToString & " and "
                End If
            ElseIf datatype.ToUpper = "TEXT" And fieldtype.ToUpper = "TEXT BOX" Then
                txtobj = TryCast(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj) Then
                ElseIf txtobj.Text = "" Then
                Else
                    str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & " like " & "'%" & txtobj.Text.ToString & "%'" & " and "
                End If
            ElseIf datatype.ToUpper = "TEXT" And fieldtype.ToUpper = "AUTO NUMBER" Then
                txtobj = TryCast(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj) Then
                ElseIf txtobj.Text = "" Then
                Else
                    str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & " = " & "'" & txtobj.Text.ToString & "'" & " and "
                End If
            ElseIf datatype.ToUpper = "TEXT" And fieldtype.ToUpper = "LOOKUP" Then
                txtobj = TryCast(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj) Then
                ElseIf txtobj.Text = "" Then
                Else
                    str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & " = " & "'" & txtobj.Text.ToString & "'" & " and "
                End If
            ElseIf datatype.ToUpper = "NUMERIC" And fieldtype.ToUpper = "LOOKUP" Then
                txtobj = TryCast(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj) Then
                ElseIf txtobj.Text = "" Then
                Else
                    str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & " = " & "'" & txtobj.Text.ToString & "'" & " and "
                End If
            ElseIf datatype.ToUpper = "TEXT" And fieldtype.ToUpper = "FILE UPLOADER" Then
                txtobj = TryCast(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                If IsNothing(txtobj) Then
                ElseIf txtobj.Text = "" Then
                Else
                    str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & " like " & "'%" & txtobj.Text.ToString & "%'" & " and "
                End If
                'ElseIf datatype.ToUpper = "TEXT" And fieldtype.ToUpper = "DROP DOWN" And dropdowntype.ToUpper = "SESSION VALUED" Then
                '    txtobj = TryCast(pnlFields.FindControl("fld" & ds.Rows(i).Item("FieldID").ToString), TextBox)
                '    If txtobj.Text = "" Then
                '    Else
                '        str = str & "U." & ds.Rows(i).Item("fieldmapping").ToString & " = " & "'" & txtobj.Text.ToString & "'" & " and "
                '    End If
            ElseIf datatype.ToUpper = "TEXT" And fieldtype.ToUpper = "DROP DOWN" Then
                chk = TryCast(pnlFields.FindControl("chklist" & ds.Rows(i).Item("FieldID").ToString), CheckBoxList)
                If IsNothing(chk) Then
                Else
                    chklist = ""
                    For j As Integer = 0 To chk.Items.Count - 1
                        If chk.Items(j).Selected = True Then
                            chklist = chklist & chk.Items(j).Value & ","
                        End If
                    Next
                    If chklist.ToString = "" Then
                    Else
                        chklist = Left(chklist, chklist.Length - 1)
                        str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & " in " & "(" & chklist & ")" & " and "
                    End If
                End If
            ElseIf datatype.ToUpper = "TEXT" And fieldtype.ToUpper = "AUTOCOMPLETE" Then
                chk = TryCast(pnlFields.FindControl("chklist" & ds.Rows(i).Item("FieldID").ToString), CheckBoxList)
                If IsNothing(chk) Then
                Else
                    chklist = ""
                    For j As Integer = 0 To chk.Items.Count - 1
                        If chk.Items(j).Selected = True Then
                            chklist = chklist & chk.Items(j).Value & ","
                        End If
                    Next
                    If chklist.ToString = "" Then
                    Else
                        chklist = Left(chklist, chklist.Length - 1)
                        str = str & "m." & ds.Rows(i).Item("fieldmapping").ToString & " in " & "(" & chklist & ")" & " and "
                    End If
                End If
            End If
        Next
        Return str
    End Function


    ''Find control exists on the Panel or Not
    Public Shared Function GetControl(ByVal page As Panel, ByVal ctlid As String) As Boolean
        Dim control As Control = Nothing
        control = page.FindControl(ctlid)
        'Dim ctrlname As String = page.Request.Params.[Get]("__EVENTTARGET")
        'If ctrlname IsNot Nothing AndAlso ctrlname <> String.Empty Then
        '    control = page.FindControl(ctrlname)
        'Else
        '    For Each ctl As String In page.Request.Form
        '        Dim c As Control = page.FindControl(ctl)
        '        If TypeOf c Is System.Web.UI.WebControls.Button Then
        '            control = c
        '            Exit For
        '        End If
        '    Next
        'End If

        If control Is Nothing Then
            Return False
        Else
            Return True
        End If
    End Function

    ''Get MasterValued query to bind dropdown
    Public Function GetQuery(ByVal doctype As String, ByVal fld As String) As String
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Try
            Dim ds As New DataSet
            Dim str As String = ""
            da.SelectCommand.CommandText = "usp_GetMasterValued"
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.Parameters.AddWithValue("@doctype", doctype)
            da.SelectCommand.Parameters.AddWithValue("@eid", HttpContext.Current.Session("eid"))
            da.SelectCommand.Parameters.AddWithValue("@fldmapping", fld)

            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            str = da.SelectCommand.ExecuteScalar()
            Return str
        Catch ex As Exception
            Throw
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Function

    Public Function GetQuery1(ByVal doctype As String, ByVal fld As String) As String
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Try
            Dim ds As New DataSet
            Dim str As String = ""
            da.SelectCommand.CommandText = "usp_GetMasterValued1"
            da.SelectCommand.CommandType = CommandType.StoredProcedure
            da.SelectCommand.Parameters.Clear()
            da.SelectCommand.Parameters.AddWithValue("@doctype", doctype)
            da.SelectCommand.Parameters.AddWithValue("@eid", HttpContext.Current.Session("eid"))
            da.SelectCommand.Parameters.AddWithValue("@fldmapping", fld)
            If con.State <> ConnectionState.Open Then
                con.Open()
            End If
            str = da.SelectCommand.ExecuteScalar()
            Return str
        Catch ex As Exception
            Throw
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try
    End Function

    Public Function FormulaCalculation(ByVal Formula As String, ByVal dtFormula As DataTable, ByVal dsFields As DataTable, ByRef pnlFields As Panel) As String
        Dim errorMsg As String = "Please Enter "
        Dim autono As String = ""
        Dim updquery As String = ""
        Dim allowedSize As Integer = 0
        Dim dispName As String
        Dim fileSize As Integer = 0
        Dim flagFsize As Integer = 0
        Formula = Formula.Replace("{", "")
        Formula = Formula.Replace("}", "")
        Dim arr() As String = Formula.Split("[", "]", "*", "/", "-", "(", ")", "+", ",", "=")
        If dsFields.Rows.Count > 0 Then
            For i = 0 To dsFields.Rows.Count - 1
                dispName = dsFields.Rows(i).Item("displayname").ToString()
                Select Case dsFields.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "TEXT BOX", "TEXT AREA", "CALCULATIVE FIELD", "LOOKUP", "FORMULA FIELD", "CHILD ITEM TOTAL", "CHILD ITEM MAX"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        For j As Integer = 0 To arr.Length - 1
                            If dispName.ToUpper() = arr(j).ToUpper() Then
                                If dsFields.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                                    errorMsg &= dispName & ","
                                Else
                                    Formula = Formula.Replace(dispName, txtBox.Text)
                                End If
                            End If
                        Next
                    Case "DROP DOWN"
                        Dim txtBox As DropDownList = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), DropDownList)
                        If Formula.Contains(dispName) Then
                            'Concatenate(Cust Name Lookup,Site ID Lookup)
                            For j As Integer = 0 To arr.Length - 1
                                If dispName.ToString = arr(j).ToString Then
                                    If dsFields.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.ToUpper = "SELECT" Then
                                        errorMsg &= dispName & ","
                                    Else
                                        Formula = Formula.Replace(dispName, txtBox.Text)
                                    End If
                                End If
                            Next
                        End If
                    Case "CHECKBOX LIST"
                        Dim txtBox As CheckBoxList = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), CheckBoxList)
                        For j As Integer = 0 To arr.Length - 1
                            If dispName.ToUpper() = arr(j).ToUpper() Then
                                If dsFields.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem Is Nothing Then
                                    errorMsg &= dispName & ","
                                    Continue For
                                Else
                                    Formula = Formula.Replace(dispName, txtBox.Text)
                                End If
                            End If
                        Next
                    Case "LIST BOX"
                        Dim txtBox As ListBox = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), ListBox)
                        For j As Integer = 0 To arr.Length - 1
                            If dispName.ToUpper() = arr(j).ToUpper() Then
                                If dsFields.Rows(i).Item("isrequired").ToString() = 1 And txtBox.SelectedItem.Text.Length < 1 Then
                                    errorMsg &= dispName & ","
                                Else
                                    Formula = Formula.Replace(dispName, txtBox.Text)
                                End If
                            End If
                        Next
                        'Case "TEXT AREA"
                        '    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        '    For j As Integer = 0 To arr.Length - 1
                        '        If dispName.ToUpper() = arr(j).ToUpper() Then
                        '            If dsFields.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                        '                errorMsg &= dispName & ","
                        '            Else
                        '                Formula = Formula.Replace(dispName, txtBox.Text)
                        '            End If
                        '        End If
                        '    Next
                        'Case "CALCULATIVE FIELD"
                        '    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        '    For j As Integer = 0 To arr.Length - 1
                        '        If dispName.ToUpper() = arr(j).ToUpper() Then
                        '            If dsFields.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                        '                errorMsg &= dispName & ","
                        '            Else
                        '                Formula = Formula.Replace(dispName, txtBox.Text)
                        '            End If
                        '        End If
                        '    '    Next
                        'Case "LOOKUP"
                        '    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), TextBox)

                        '    For j As Integer = 0 To arr.Length - 1
                        '        If dispName.ToUpper() = arr(j).ToUpper() Then
                        '            If dsFields.Rows(i).Item("isrequired").ToString() = 1 And txtBox.Text.Length < 1 Then
                        '                errorMsg &= dispName & ","
                        '            Else
                        '                Formula = Formula.Replace(dispName, txtBox.Text)
                        '            End If
                        '        End If
                        '    Next
                        'Case "FORMULA FIELD"
                        '    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        '    For j As Integer = 0 To arr.Length - 1
                        '        If dispName.ToUpper() = arr(j).ToUpper() Then
                        '            Formula = Formula.Replace(dispName, txtBox.Text)
                        '        End If
                        '    Next
                        'Case "CHILD ITEM TOTAL"
                        '    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        '    For j As Integer = 0 To arr.Length - 1
                        '        If dispName.ToUpper() = arr(j).ToUpper() Then
                        '            Formula = Formula.Replace(dispName, txtBox.Text)
                        '        End If
                        '    Next

                        'Case "CHILD ITEM MAX"  ' BY SUNIL ON 04_JULY_14
                        '    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dsFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        '    For j As Integer = 0 To arr.Length - 1
                        '        If dispName.ToUpper() = arr(j).ToUpper() Then
                        '            Formula = Formula.Replace(dispName, txtBox.Text)
                        '        End If
                        '    Next
                End Select
            Next
        End If
        '' changed/added below by sunil on 01-11-13
        '' for skipping doc validation on amendment nature/edit

        'allowedSize = allowedSize + Val(ds.Rows(i).Item("AttahcedFileSize").tostrign()) * 1024

        Return Formula
    End Function

    Public Sub FillFormulaControlsOnPanel(ByVal FormmulaValue As String, ByVal dsfields As DataTable, ByRef pnlFields As Panel)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        'try Catch Block Added by Ajeet Kumar :Date::22 May=2014
        Dim oda As SqlDataAdapter = New SqlDataAdapter("", con)
        Try
            If dsfields.Rows.Count > 0 Then
                Dim strcol As String = ""
                Dim strqry As String = ""
                'Dim arr As String()
                Dim dss As New DataSet
                'For Each rw As DataRow In dsfields.Rows
                '    strcol &= rw.Item("fieldmapping").ToString & ","
                'Next
                'strcol = strcol.Substring(0, strcol.Length - 1)
                'oda.SelectCommand.CommandText = strqry
                'oda.Fill(dss, "data")
                For i As Integer = 0 To dsfields.Rows.Count - 1
                    Select Case dsfields.Rows(i).Item("FieldType").ToString().ToUpper()
                        Case "FORMULA FIELD"
                            Dim txtBox As New TextBox
                            txtBox = CType(pnlFields.FindControl("fld" & dsfields.Rows(i).Item("FieldID").ToString()), TextBox)
                            txtBox.Text = FormmulaValue
                            'If ds.Rows(i).Item("isEditable").ToString() = "0" Then
                            '    txtBox.Enabled = False
                            'End If
                            'If IsAmend = 1 Then
                            '    If ds.Rows(i).Item("isEditonAmend").ToString() = "0" Then
                            '        txtBox.Enabled = False
                            '    End If
                            'End If
                            'If Issplit = 1 Then
                            '    If ds.Rows(i).Item("splittable").ToString() = "0" Then
                            '        txtBox.Enabled = False
                            '    End If
                            'End If
                    End Select
                Next
            End If
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub

    Public Sub CreateControlsOnReport(ByVal ds As DataTable, ByRef pnlFields As Panel, Optional ReportName As String = "")
        Dim strcol As String = ""
        Dim strqry As String = ""
        'If ds.Rows.Count > 0 Then
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = Nothing
        Try
            '   Dim layout As String = ds.Rows(0).Item("LayoutType").ToString()
            pnlFields.Controls.Add(New LiteralControl("<div class=""form""><table width=""100%"" cellspacing=""5px"" border=""0px"" cellpadding=""0px"">"))
            Dim lblWidth As Integer = 130
            Dim controlWdth As Integer = 240
            Dim datatype As String = ""
            Dim cnt As Integer = 0
            Dim ij As Integer = 0
            For j As Integer = 0 To ds.Rows.Count - 1
                If ds.Rows(j).Item("datatype").ToString.ToUpper = "DATETIME" Then
                    cnt = cnt + 1
                End If
            Next
            'Connection In Loop
            For i As Integer = 0 To ds.Rows.Count - 1
                Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                Dim lbl As New Label
                Dim lbl1 As New Label
                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                If datatype.ToUpper = "DATETIME" Then
                    If cnt = 1 Then
                        lbl.ID = "Frlbl" & ds.Rows(i).Item("FieldID").ToString()
                        lbl.Text = dispName
                        lbl.Font.Bold = True
                        lbl1.ID = "Tolbl" & ds.Rows(i).Item("FieldID").ToString()
                        lbl1.Text = dispName
                        lbl1.Font.Bold = True
                    Else
                        lbl.ID = "Frlbl" & ds.Rows(i).Item("FieldID").ToString()
                        lbl.Text = dispName
                        lbl.Font.Bold = True
                    End If
                ElseIf datatype.ToUpper = "NUMERIC" Then
                    lbl.ID = "lblR1" & ds.Rows(i).Item("FieldID").ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True
                    lbl1.ID = "lblR2" & ds.Rows(i).Item("FieldID").ToString()
                    lbl1.Text = dispName
                    lbl1.Font.Bold = True
                Else
                    lbl.ID = "lbl" & ds.Rows(i).Item("FieldID").ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True
                End If

                'If layout = "DOUBLE COLUMN" Then
                If i Mod 2 = 0 Then
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                End If
                'Else
                'lblWidth = 210
                'controlWdth = 540
                'pnlFields.Controls.Add(New LiteralControl("<tr>"))
                'End If

                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbl)
                pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left; vertical-align: top;"">"))
                Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "TEXT BOX"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblt As New Label
                        Dim lblf As New Label

                        If datatype.ToUpper = "DATETIME" Then

                            If cnt = 1 Then
                                lblf.Text = " From <br/>"
                                pnlFields.Controls.Add(lblf)
                                txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                txtBox.CssClass = "txtBox"

                                txtBox.Attributes.Add("IsSearch", "1")
                                txtBox.Attributes.Add("data-ty", "DATETIME")
                                txtBox.Attributes.Add("fld", "fr_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                                pnlFields.Controls.Add(txtBox)
                                lblt.Text = "<br/> To <br/>"
                                pnlFields.Controls.Add(lblt)
                                txtBox1.ID = "Tofld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox1.Width = controlWdth - 10
                                txtBox1.CssClass = "txtBox"
                                txtBox1.Attributes.Add("IsSearch", "1")
                                txtBox1.Attributes.Add("data-ty", "DATETIME")
                                txtBox1.Attributes.Add("fld", "to_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())
                                pnlFields.Controls.Add(txtBox1)
                            Else
                                txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                txtBox.CssClass = "txtBox"
                                txtBox.Attributes.Add("IsSearch", "1")
                                txtBox.Attributes.Add("data-ty", "DATETIME")
                                txtBox.Attributes.Add("fld", "fr_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())
                                pnlFields.Controls.Add(txtBox)
                            End If
                            'datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                            'Dim txtBox As New TextBox
                            'Dim txtBox1 As New TextBox
                            'If datatype.ToUpper = "DATETIME" Then
                            '    txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                            '    txtBox.Width = controlWdth - 10
                            '    txtBox.CssClass = "txtBox"
                            '    pnlFields.Controls.Add(txtBox)
                            '    txtBox1.ID = "Tofld" & ds.Rows(i).Item("FieldID").ToString()
                            '    txtBox1.Width = controlWdth - 10
                            '    txtBox1.CssClass = "txtBox"
                            '    pnlFields.Controls.Add(txtBox1)
                        ElseIf datatype.ToUpper = "NUMERIC" Then
                            txtBox.ID = "fldR1" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            txtBox.Attributes.Add("IsSearch", "1")
                            txtBox.Attributes.Add("data-ty", "NUMERIC")
                            txtBox.Attributes.Add("fld", "fn1_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())
                            pnlFields.Controls.Add(txtBox)
                            txtBox1.ID = "fldR2" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox1.Width = controlWdth - 10
                            txtBox1.CssClass = "txtBox"
                            txtBox1.Attributes.Add("IsSearch", "1")
                            txtBox1.Attributes.Add("data-ty", "NUMERIC")
                            txtBox1.Attributes.Add("fld", "fn2_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())
                            pnlFields.Controls.Add(txtBox1)
                        Else
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"

                            txtBox.Attributes.Add("IsSearch", "1")
                            txtBox.Attributes.Add("data-ty", "NUMERIC")
                            txtBox.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                            pnlFields.Controls.Add(txtBox)
                        End If
                        If datatype = "DATETIME" Then
                            Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                            Dim CLNDR1 As New AjaxControlToolkit.CalendarExtender
                            If cnt = 1 Then
                                CLNDR.ID = "FrCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                CLNDR.TargetControlID = txtBox.ID
                                CLNDR.Format = "dd/MM/yy"
                                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                pnlFields.Controls.Add(CLNDR)

                                CLNDR1.ID = "ToCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                CLNDR1.TargetControlID = txtBox1.ID
                                CLNDR1.Format = "dd/MM/yy"
                                'txtBox1.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                pnlFields.Controls.Add(CLNDR1)
                            Else
                                CLNDR.ID = "FrCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                CLNDR.TargetControlID = txtBox.ID
                                CLNDR.Format = "dd/MM/yy"
                                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                pnlFields.Controls.Add(CLNDR)
                            End If

                        End If
                    Case "DROP DOWN"
                        '  pnlFields.Controls.Add(New LiteralControl("<div class=""form"" style=""overflow-Y:scroll;width:76%;height:100px""><h4>"))
                        pnlFields.Controls.Add(New LiteralControl("<div class=""form"" style=""overflow-Y:scroll;width:76%;height:100px;font-size:10px"">"))

                        Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                        dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                        Dim chklist As New CheckBoxList
                        chklist.ID = "chklist" & ds.Rows(i).Item("FieldID").ToString()
                        chklist.CssClass = "txtbox"
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()

                        chklist.Attributes.Add("IsSearch", "1")
                        chklist.Attributes.Add("data-ty", "MULTISELECT")
                        chklist.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())


                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            For ii As Integer = 0 To arr.Count - 1
                                chklist.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_USER"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",username from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " "
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(1))
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(0)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_DOC"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        End If
                        dynmdiv.Controls.Add(chklist)
                        pnlFields.Controls.Add(dynmdiv)
                    Case "CHECKBOX LIST"
                        Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                        dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                        Dim chklist As New CheckBoxList
                        chklist.ID = "chklist" & ds.Rows(i).Item("FieldID").ToString()
                        chklist.CssClass = "txtbox"

                        chklist.Attributes.Add("IsSearch", "1")
                        chklist.Attributes.Add("data-ty", "MULTISELECT")
                        chklist.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            For ii As Integer = 0 To arr.Count - 1
                                chklist.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_DOC"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        End If
                        dynmdiv.Controls.Add(chklist)
                        pnlFields.Controls.Add(dynmdiv)

                    Case "LIST BOX"
                        Dim ddl As New ListBox
                        ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                        ddl.Width = controlWdth - 2
                        ddl.CssClass = "txtBox"
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()

                        ddl.Attributes.Add("IsSearch", "1")
                        ddl.Attributes.Add("data-ty", "SINGLESELECT")
                        ddl.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            ddl.Items.Add("")
                            For ii As Integer = 0 To arr.Count - 1
                                ddl.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_DOC"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                ddl.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        End If
                        ddl.Items.Insert(0, "ALL")
                        ddl.SelectionMode = ListSelectionMode.Multiple
                        pnlFields.Controls.Add(ddl)
                    Case "TEXT AREA"
                        Dim txtBox As New TextBox
                        txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                        txtBox.Width = controlWdth - 10
                        txtBox.CssClass = "txtBox"
                        txtBox.TextMode = TextBoxMode.MultiLine

                        txtBox.Attributes.Add("IsSearch", "1")
                        txtBox.Attributes.Add("data-ty", "TEXTBOX")
                        txtBox.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                        pnlFields.Controls.Add(txtBox)
                    Case "AUTO NUMBER"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblf As New Label
                        If datatype.ToUpper = "TEXT" Then

                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"

                            txtBox.Attributes.Add("IsSearch", "1")
                            txtBox.Attributes.Add("data-ty", "TEXTBOX")
                            txtBox.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                            pnlFields.Controls.Add(txtBox)

                        End If
                    Case "LOOKUP"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblf As New Label
                        If datatype.ToUpper = "TEXT" Then

                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"

                            txtBox.Attributes.Add("IsSearch", "1")
                            txtBox.Attributes.Add("data-ty", "TEXTBOX")
                            txtBox.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                            pnlFields.Controls.Add(txtBox)
                        End If
                End Select
                pnlFields.Controls.Add(New LiteralControl("</td>"))
                'If layout = "DOUBLE COLUMN" Then
                If i Mod 2 = 1 Then
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                End If
                'Else
                'pnlFields.Controls.Add(New LiteralControl("</tr>"))
                'End If
                ij = ij + i
            Next

            ''new code for static fields
            If ds.Rows.Count > 0 And ReportName.ToUpper <> "JV REPORT" Then
                If ds.Rows(0).Item("documenttype").ToString.ToUpper = "HUB MASTER" Then
                    Dim lbldocdate As New Label
                    lbldocdate.ID = "Frlbl01"
                    lbldocdate.Text = "Select Date"
                    lbldocdate.Font.Bold = True
                    If ij Mod 2 = 0 Then
                        pnlFields.Controls.Add(New LiteralControl("<tr>"))
                    End If
                    pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right; vertical-align: top;"">"))
                    pnlFields.Controls.Add(lbldocdate)
                    pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left"">"))
                    Dim txtBoxdate As New TextBox
                    txtBoxdate.ID = "Frfldtxtdate"
                    txtBoxdate.Width = controlWdth - 10
                    txtBoxdate.CssClass = "txtBox"
                    txtBoxdate.Attributes.Add("IsSearch", "1")
                    txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                    txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")
                    pnlFields.Controls.Add(txtBoxdate)
                    Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                    CLNDRtxt.ID = "FrCLNDRtxt"
                    CLNDRtxt.TargetControlID = txtBoxdate.ID
                    CLNDRtxt.Format = "yyyy-MM-dd"
                    'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                    pnlFields.Controls.Add(CLNDRtxt)
                    pnlFields.Controls.Add(New LiteralControl("</td>"))
                    If ij Mod 2 = 1 Then
                        pnlFields.Controls.Add(New LiteralControl("</tr>"))
                    End If
                Else
                    If ReportName.ToUpper <> "PROJECT PLAN" Then
                        Dim lbldocdate As New Label
                        lbldocdate.ID = "Frlbl01"
                        lbldocdate.Text = "Document Date"
                        lbldocdate.Font.Bold = True
                        If ij Mod 2 = 0 Then
                            pnlFields.Controls.Add(New LiteralControl("<tr>"))
                        End If
                        pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right; vertical-align: top;"">"))
                        pnlFields.Controls.Add(lbldocdate)
                        pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left; vertical-align: top;"">"))
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblt As New Label
                        Dim lblf As New Label
                        'lblf.Text = " From "
                        'pnlFields.Controls.Add(lblf)
                        txtBox.ID = "Frflddate"
                        txtBox.Width = controlWdth - 8
                        txtBox.CssClass = "txtBox"

                        txtBox.Attributes.Add("IsSearch", "1")
                        txtBox.Attributes.Add("data-ty", "DATETIME")
                        txtBox.Attributes.Add("fld", "Frflddate")
                        pnlFields.Controls.Add(New LiteralControl("From<br/>"))
                        pnlFields.Controls.Add(txtBox)
                        'lblt.Text = " To "
                        'pnlFields.Controls.Add(lblt)
                        txtBox1.ID = "Toflddate"
                        txtBox1.Width = controlWdth - 8
                        txtBox1.CssClass = "txtBox"

                        txtBox1.Attributes.Add("IsSearch", "1")
                        txtBox1.Attributes.Add("data-ty", "DATETIME")
                        txtBox1.Attributes.Add("fld", "Toflddate")
                        pnlFields.Controls.Add(New LiteralControl("<br/>To<br/>"))
                        pnlFields.Controls.Add(txtBox1)
                        Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                        Dim CLNDR1 As New AjaxControlToolkit.CalendarExtender
                        CLNDR.ID = "FrCLNDRdate"
                        CLNDR.TargetControlID = txtBox.ID
                        CLNDR.Format = "dd/MM/yy"
                        'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                        pnlFields.Controls.Add(CLNDR)
                        CLNDR1.ID = "ToCLNDRdate"
                        CLNDR1.TargetControlID = txtBox1.ID
                        CLNDR1.Format = "dd/MM/yy"
                        'txtBox1.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                        pnlFields.Controls.Add(CLNDR1)
                        If ij Mod 2 = 1 Then
                            pnlFields.Controls.Add(New LiteralControl("</td>"))
                        End If
                        If ij Mod 2 = 2 Then
                            pnlFields.Controls.Add(New LiteralControl("</tr>"))
                        End If
                    End If
                End If
            ElseIf ReportName.ToUpper = "JV REPORT" Or ReportName.ToUpper = "APPROVED PETTY CASH VOUCHER HUB REPORT" Or ReportName.ToUpper = "REJECTED PETTY CASH VOUCHER HUB REPORT" Or ReportName.ToUpper = "APPROVED RSC UTILITY PAYMENT VOUCHER" Or ReportName.ToUpper = "REJECTED RSC UTILITY PAYMENT VOUCHER" Then
                Dim lbldocdate1 As New Label
                lbldocdate1.ID = "Frlbl01"
                If ReportName.ToUpper = "REJECTED PETTY CASH VOUCHER HUB REPORT" Then
                    lbldocdate1.Text = "Rejection From Date :&nbsp;&nbsp;"
                Else
                    lbldocdate1.Text = "RA Approval From Date :&nbsp;&nbsp;"
                End If
                lbldocdate1.Font.Bold = True
                Dim lbldocTodate2 As New Label
                lbldocTodate2.ID = "Frlbl02"
                lbldocTodate2.Text = "&nbsp;To Date :&nbsp;&nbsp;"
                lbldocTodate2.Font.Bold = True
                pnlFields.Controls.Add(New LiteralControl("<tr width=""800px"">"))
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:center; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbldocdate1)
                '   pnlFields.Controls.Add(New LiteralControl("</td><td style=""" & controlWdth & ";text-align:left"">"))
                Dim txtBoxdate As New TextBox
                txtBoxdate.ID = "Frfldtxtdate"
                txtBoxdate.Width = controlWdth - 10
                txtBoxdate.CssClass = "txtBox"

                txtBoxdate.Attributes.Add("IsSearch", "1")
                txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")

                pnlFields.Controls.Add(txtBoxdate)
                Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt.ID = "FrCLNDRtxt"
                CLNDRtxt.TargetControlID = txtBoxdate.ID
                CLNDRtxt.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt)
                pnlFields.Controls.Add(lbldocTodate2)

                Dim txtBoxdate1 As New TextBox
                txtBoxdate1.ID = "FrfldtxtTodate"
                txtBoxdate1.Width = controlWdth - 10
                txtBoxdate1.CssClass = "txtBox"

                txtBoxdate1.Attributes.Add("IsSearch", "1")
                txtBoxdate1.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate1.Attributes.Add("fld", "FrfldtxtTodate")

                pnlFields.Controls.Add(txtBoxdate1)
                Dim CLNDRtxt1 As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt1.ID = "FrCLNDRtxt1"
                CLNDRtxt1.TargetControlID = txtBoxdate1.ID
                CLNDRtxt1.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt1)
                pnlFields.Controls.Add(New LiteralControl("</td>"))
                pnlFields.Controls.Add(New LiteralControl("</tr>"))
            ElseIf ReportName.ToUpper = "PERIOD WISE BALANCES" Then
                Dim lbldocdate1 As New Label
                lbldocdate1.ID = "Frlbl01"
                lbldocdate1.Text = "Balance Period :&nbsp;&nbsp;"
                lbldocdate1.Font.Bold = True
                pnlFields.Controls.Add(New LiteralControl("<tr width=""800px"">"))
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:center; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbldocdate1)
                '   pnlFields.Controls.Add(New LiteralControl("</td><td style=""" & controlWdth & ";text-align:left"">"))
                Dim txtBoxdate As New TextBox
                txtBoxdate.ID = "Frfldtxtdate"
                txtBoxdate.Width = controlWdth - 10
                txtBoxdate.CssClass = "txtBox"

                txtBoxdate.Attributes.Add("IsSearch", "1")
                txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")

                pnlFields.Controls.Add(txtBoxdate)
                Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt.ID = "FrCLNDRtxt"
                CLNDRtxt.TargetControlID = txtBoxdate.ID
                CLNDRtxt.Format = "MM-yyyy"
                'CLNDRtxt.Format = "MM/yyyy"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt)
            ElseIf ReportName.ToUpper = "CASH MASTER REPORT" Then
                Dim lbldocdate1 As New Label
                lbldocdate1.ID = "Frlbl01"
                lbldocdate1.Text = "Period From  :&nbsp;&nbsp;"
                lbldocdate1.Font.Bold = True
                Dim lbldocTodate2 As New Label
                lbldocTodate2.ID = "Frlbl02"
                lbldocTodate2.Text = "&nbsp;Period To :&nbsp;&nbsp;"
                lbldocTodate2.Font.Bold = True
                pnlFields.Controls.Add(New LiteralControl("<trwidth=""800px"">"))
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:center; vertical-align:top;"">"))
                pnlFields.Controls.Add(lbldocdate1)
                '   pnlFields.Controls.Add(New LiteralControl("</td><tdstyle=""" & controlWdth & ";text-align:left"">"))
                Dim txtBoxdate As New TextBox
                txtBoxdate.ID = "Frfldtxtdate"
                txtBoxdate.Width = controlWdth - 10
                txtBoxdate.CssClass = "txtBox"

                txtBoxdate.Attributes.Add("IsSearch", "1")
                txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")

                pnlFields.Controls.Add(txtBoxdate)
                Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt.ID = "FrCLNDRtxt"
                CLNDRtxt.TargetControlID = txtBoxdate.ID
                CLNDRtxt.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt)
                pnlFields.Controls.Add(lbldocTodate2)

                Dim txtBoxdate1 As New TextBox
                txtBoxdate1.ID = "FrfldtxtTodate"
                txtBoxdate1.Width = controlWdth - 10
                txtBoxdate1.CssClass = "txtBox"

                txtBoxdate1.Attributes.Add("IsSearch", "1")
                txtBoxdate1.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate1.Attributes.Add("fld", "FrfldtxtTodate")

                pnlFields.Controls.Add(txtBoxdate1)
                Dim CLNDRtxt1 As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt1.ID = "FrCLNDRtxt1"
                CLNDRtxt1.TargetControlID = txtBoxdate1.ID
                CLNDRtxt1.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt1)
                pnlFields.Controls.Add(New LiteralControl("</td>"))
                pnlFields.Controls.Add(New LiteralControl("</tr>"))
            Else
                Dim lbldocdate As New Label
                lbldocdate.ID = "Frlbl01"
                lbldocdate.Text = "Document Date"
                lbldocdate.Font.Bold = True
                If ij Mod 2 = 0 Then
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                End If
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:left; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbldocdate)
                pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left; vertical-align: top;"">"))
                Dim txtBox As New TextBox
                Dim txtBox1 As New TextBox
                Dim lblt As New Label
                Dim lblf As New Label
                'lblf.Text = " From "
                'pnlFields.Controls.Add(lblf)
                txtBox.ID = "Frflddate"
                txtBox.Width = controlWdth - 8
                txtBox.CssClass = "txtBox"

                txtBox.Attributes.Add("IsSearch", "1")
                txtBox.Attributes.Add("data-ty", "DATETIME")
                txtBox.Attributes.Add("fld", "Frflddate")

                pnlFields.Controls.Add(txtBox)
                'lblt.Text = " To "
                'pnlFields.Controls.Add(lblt)
                txtBox1.ID = "Toflddate"
                txtBox1.Width = controlWdth - 8
                txtBox1.CssClass = "txtBox"

                txtBox1.Attributes.Add("IsSearch", "1")
                txtBox1.Attributes.Add("data-ty", "DATETIME")
                txtBox1.Attributes.Add("fld", "Toflddate")

                pnlFields.Controls.Add(txtBox1)
                Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                Dim CLNDR1 As New AjaxControlToolkit.CalendarExtender
                CLNDR.ID = "FrCLNDRdate"
                CLNDR.TargetControlID = txtBox.ID
                CLNDR.Format = "dd/MM/yy"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDR)
                CLNDR1.ID = "ToCLNDRdate"
                CLNDR1.TargetControlID = txtBox1.ID
                CLNDR1.Format = "dd/MM/yy"
                'txtBox1.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDR1)
                If ij Mod 2 = 1 Then
                    pnlFields.Controls.Add(New LiteralControl("</td>"))
                End If
                If ij Mod 2 = 2 Then
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                End If
            End If
            pnlFields.Controls.Add(New LiteralControl("</table></div>"))
            'for jv report

            If ds.Rows(0).Item("documenttype").ToString.ToUpper = "Petty Cash Voucher HUB" Then
                Dim lbldocdate As New Label
                lbldocdate.ID = "Frlbl01"
                lbldocdate.Text = "From Date"
                lbldocdate.Font.Bold = True

                Dim lbldocTodate As New Label
                lbldocTodate.ID = "Frlbl02"
                lbldocTodate.Text = "To Date"
                lbldocTodate.Font.Bold = True

                If ij Mod 2 = 0 Then
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                End If
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbldocdate)
                pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left; vertical-align: top;"">"))
                Dim txtBoxdate As New TextBox
                txtBoxdate.ID = "Frfldtxtdate"
                txtBoxdate.Width = controlWdth - 10
                txtBoxdate.CssClass = "txtBox"

                txtBoxdate.Attributes.Add("IsSearch", "1")
                txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")

                pnlFields.Controls.Add(txtBoxdate)
                Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt.ID = "FrCLNDRtxt"
                CLNDRtxt.TargetControlID = txtBoxdate.ID
                CLNDRtxt.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt)

                Dim txtBoxdate1 As New TextBox
                txtBoxdate1.ID = "FrfldtxtTodate"
                txtBoxdate1.Width = controlWdth - 10
                txtBoxdate1.CssClass = "txtBox"

                txtBoxdate1.Attributes.Add("IsSearch", "1")
                txtBoxdate1.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate1.Attributes.Add("fld", "FrfldtxtTodate")

                pnlFields.Controls.Add(txtBoxdate1)
                Dim CLNDRtxt1 As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt1.ID = "FrCLNDRtxt1"
                CLNDRtxt1.TargetControlID = txtBoxdate1.ID
                CLNDRtxt1.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt1)

                pnlFields.Controls.Add(New LiteralControl("</td>"))
                If ij Mod 2 = 1 Then
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                End If
            End If
            pnlFields.Controls.Add(New LiteralControl("</table></div>"))

            ds.Dispose()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub


    Public Sub CreateControlsOnReport_Kendu(ByVal ds As DataTable, ByRef pnlFields As Panel, Optional ReportName As String = "")
        Dim strcol As String = ""
        Dim strqry As String = ""
        'If ds.Rows.Count > 0 Then
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As SqlDataAdapter = Nothing
        Try
            '   Dim layout As String = ds.Rows(0).Item("LayoutType").ToString()
            pnlFields.Controls.Add(New LiteralControl("<div class=""form""><table width=""100%"" cellspacing=""5px"" border=""0px"" cellpadding=""0px"">"))
            Dim lblWidth As Integer = 130
            Dim controlWdth As Integer = 240
            Dim datatype As String = ""
            Dim cnt As Integer = 0
            Dim ij As Integer = 0
            For j As Integer = 0 To ds.Rows.Count - 1
                If ds.Rows(j).Item("datatype").ToString.ToUpper = "DATETIME" Then
                    cnt = cnt + 1
                End If
            Next
            'Connection In Loop
            For i As Integer = 0 To ds.Rows.Count - 1
                Dim dispName As String = ds.Rows(i).Item("displayname").ToString()
                Dim lbl As New Label
                Dim lbl1 As New Label
                datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                If datatype.ToUpper = "DATETIME" Then
                    If cnt = 1 Then
                        lbl.ID = "Frlbl" & ds.Rows(i).Item("FieldID").ToString()
                        lbl.Text = dispName
                        lbl.Font.Bold = True
                        lbl1.ID = "Tolbl" & ds.Rows(i).Item("FieldID").ToString()
                        lbl1.Text = dispName
                        lbl1.Font.Bold = True
                    Else
                        lbl.ID = "Frlbl" & ds.Rows(i).Item("FieldID").ToString()
                        lbl.Text = dispName
                        lbl.Font.Bold = True
                    End If
                ElseIf datatype.ToUpper = "NUMERIC" Then
                    lbl.ID = "lblR1" & ds.Rows(i).Item("FieldID").ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True
                    lbl1.ID = "lblR2" & ds.Rows(i).Item("FieldID").ToString()
                    lbl1.Text = dispName
                    lbl1.Font.Bold = True
                Else
                    lbl.ID = "lbl" & ds.Rows(i).Item("FieldID").ToString()
                    lbl.Text = dispName
                    lbl.Font.Bold = True
                End If

                'If layout = "DOUBLE COLUMN" Then
                If i Mod 2 = 0 Then
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                End If
                'Else
                'lblWidth = 210
                'controlWdth = 540
                'pnlFields.Controls.Add(New LiteralControl("<tr>"))
                'End If

                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbl)
                pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left; vertical-align: top;"">"))
                Select Case ds.Rows(i).Item("FieldType").ToString().ToUpper()
                    Case "TEXT BOX"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblt As New Label
                        Dim lblf As New Label

                        If datatype.ToUpper = "DATETIME" Then

                            If cnt = 1 Then
                                lblf.Text = " From <br/>"
                                pnlFields.Controls.Add(lblf)
                                txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                txtBox.CssClass = "txtBox"

                                txtBox.Attributes.Add("IsSearch", "1")
                                txtBox.Attributes.Add("data-ty", "DATETIME")
                                txtBox.Attributes.Add("fld", "fr_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                                pnlFields.Controls.Add(txtBox)
                                lblt.Text = "<br/> To <br/>"
                                pnlFields.Controls.Add(lblt)
                                txtBox1.ID = "Tofld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox1.Width = controlWdth - 10
                                txtBox1.CssClass = "txtBox"
                                txtBox1.Attributes.Add("IsSearch", "1")
                                txtBox1.Attributes.Add("data-ty", "DATETIME")
                                txtBox1.Attributes.Add("fld", "to_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())
                                pnlFields.Controls.Add(txtBox1)
                            Else
                                txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                                txtBox.Width = controlWdth - 10
                                txtBox.CssClass = "txtBox"
                                txtBox.Attributes.Add("IsSearch", "1")
                                txtBox.Attributes.Add("data-ty", "DATETIME")
                                txtBox.Attributes.Add("fld", "fr_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())
                                pnlFields.Controls.Add(txtBox)
                            End If
                            'datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                            'Dim txtBox As New TextBox
                            'Dim txtBox1 As New TextBox
                            'If datatype.ToUpper = "DATETIME" Then
                            '    txtBox.ID = "Frfld" & ds.Rows(i).Item("FieldID").ToString()
                            '    txtBox.Width = controlWdth - 10
                            '    txtBox.CssClass = "txtBox"
                            '    pnlFields.Controls.Add(txtBox)
                            '    txtBox1.ID = "Tofld" & ds.Rows(i).Item("FieldID").ToString()
                            '    txtBox1.Width = controlWdth - 10
                            '    txtBox1.CssClass = "txtBox"
                            '    pnlFields.Controls.Add(txtBox1)
                        ElseIf datatype.ToUpper = "NUMERIC" Then
                            txtBox.ID = "fldR1" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"
                            txtBox.Attributes.Add("IsSearch", "1")
                            txtBox.Attributes.Add("data-ty", "NUMERIC")
                            txtBox.Attributes.Add("fld", "fn1_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())
                            pnlFields.Controls.Add(txtBox)
                            txtBox1.ID = "fldR2" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox1.Width = controlWdth - 10
                            txtBox1.CssClass = "txtBox"
                            txtBox1.Attributes.Add("IsSearch", "1")
                            txtBox1.Attributes.Add("data-ty", "NUMERIC")
                            txtBox1.Attributes.Add("fld", "fn2_" & ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())
                            pnlFields.Controls.Add(txtBox1)
                        Else
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"

                            txtBox.Attributes.Add("IsSearch", "1")
                            txtBox.Attributes.Add("data-ty", "NUMERIC")
                            txtBox.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                            pnlFields.Controls.Add(txtBox)
                        End If
                        If datatype = "DATETIME" Then
                            Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                            Dim CLNDR1 As New AjaxControlToolkit.CalendarExtender
                            If cnt = 1 Then
                                CLNDR.ID = "FrCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                CLNDR.TargetControlID = txtBox.ID
                                CLNDR.Format = "dd/MM/yy"
                                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                pnlFields.Controls.Add(CLNDR)

                                CLNDR1.ID = "ToCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                CLNDR1.TargetControlID = txtBox1.ID
                                CLNDR1.Format = "dd/MM/yy"
                                'txtBox1.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                pnlFields.Controls.Add(CLNDR1)
                            Else
                                CLNDR.ID = "FrCLNDR" & ds.Rows(i).Item("FieldID").ToString()
                                CLNDR.TargetControlID = txtBox.ID
                                CLNDR.Format = "dd/MM/yy"
                                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                                pnlFields.Controls.Add(CLNDR)
                            End If

                        End If
                    Case "DROP DOWN"
                        pnlFields.Controls.Add(New LiteralControl("<div class=""form"" style=""overflow-Y:scroll;width:76%;height:100px""><h4>"))

                        Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                        dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                        Dim chklist As New CheckBoxList
                        chklist.ID = "chklist" & ds.Rows(i).Item("FieldID").ToString()
                        chklist.CssClass = "txtbox"
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()

                        chklist.Attributes.Add("IsSearch", "1")
                        chklist.Attributes.Add("data-ty", "MULTISELECT")
                        chklist.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())


                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            For ii As Integer = 0 To arr.Count - 1
                                chklist.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "SESSION VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_USER"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",username from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " "
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(1))
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(0)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_DOC"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        End If
                        dynmdiv.Controls.Add(chklist)
                        pnlFields.Controls.Add(dynmdiv)
                    Case "CHECKBOX LIST"
                        Dim dynmdiv As System.Web.UI.HtmlControls.HtmlGenericControl = New System.Web.UI.HtmlControls.HtmlGenericControl("DIV")
                        dynmdiv.ID = "div" & ds.Rows(i).Item("FieldID").ToString()
                        Dim chklist As New CheckBoxList
                        chklist.ID = "chklist" & ds.Rows(i).Item("FieldID").ToString()
                        chklist.CssClass = "txtbox"

                        chklist.Attributes.Add("IsSearch", "1")
                        chklist.Attributes.Add("data-ty", "MULTISELECT")
                        chklist.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()
                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            For ii As Integer = 0 To arr.Count - 1
                                chklist.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_DOC"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                chklist.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                chklist.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        End If
                        dynmdiv.Controls.Add(chklist)
                        pnlFields.Controls.Add(dynmdiv)

                    Case "LIST BOX"
                        Dim ddl As New ListBox
                        ddl.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                        ddl.Width = controlWdth - 2
                        ddl.CssClass = "txtBox"
                        Dim ddlText As String = ds.Rows(i).Item("dropdown").ToString()
                        Dim dropdowntype As String = ds.Rows(i).Item("dropdowntype").ToString()

                        ddl.Attributes.Add("IsSearch", "1")
                        ddl.Attributes.Add("data-ty", "SINGLESELECT")
                        ddl.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                        Dim arr() As String
                        If UCase(dropdowntype) = "FIX VALUED" Then
                            arr = ddlText.Split(",")
                            ddl.Items.Add("")
                            For ii As Integer = 0 To arr.Count - 1
                                ddl.Items.Add(arr(ii).ToUpper())
                            Next
                        ElseIf UCase(dropdowntype) = "MASTER VALUED" Then
                            arr = ddlText.Split("-")
                            Dim TABLENAME As String = ""
                            If UCase(arr(0).ToString()) = "MASTER" Then
                                TABLENAME = "MMM_MST_MASTER"
                            Else
                                TABLENAME = "MMM_MST_DOC"
                            End If
                            Dim str As String = "select " & arr(2).ToString() & ",tid from " & TABLENAME & " WHERE EID=" & HttpContext.Current.Session("EID") & " AND  DOCUMENTTYPE='" & arr(1).ToString() & "'"
                            oda = New SqlDataAdapter("", con)
                            Dim dss As New DataSet
                            oda.SelectCommand.CommandText = str
                            oda.Fill(dss, "FV")
                            For J As Integer = 0 To dss.Tables("FV").Rows.Count - 1
                                ddl.Items.Add(dss.Tables("FV").Rows(J).Item(0))
                                ddl.Items(J).Value = dss.Tables("FV").Rows(J).Item(1)
                            Next
                            oda.Dispose()
                            dss.Dispose()
                        End If
                        ddl.Items.Insert(0, "ALL")
                        ddl.SelectionMode = ListSelectionMode.Multiple
                        pnlFields.Controls.Add(ddl)
                    Case "TEXT AREA"
                        Dim txtBox As New TextBox
                        txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                        txtBox.Width = controlWdth - 10
                        txtBox.CssClass = "txtBox"
                        txtBox.TextMode = TextBoxMode.MultiLine

                        txtBox.Attributes.Add("IsSearch", "1")
                        txtBox.Attributes.Add("data-ty", "TEXTBOX")
                        txtBox.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                        pnlFields.Controls.Add(txtBox)
                    Case "AUTO NUMBER"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblf As New Label
                        If datatype.ToUpper = "TEXT" Then

                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"

                            txtBox.Attributes.Add("IsSearch", "1")
                            txtBox.Attributes.Add("data-ty", "TEXTBOX")
                            txtBox.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                            pnlFields.Controls.Add(txtBox)

                        End If
                    Case "LOOKUP"
                        datatype = ds.Rows(i).Item("datatype").ToString().ToUpper()
                        Dim txtBox As New TextBox
                        Dim txtBox1 As New TextBox
                        Dim lblf As New Label
                        If datatype.ToUpper = "TEXT" Then

                            pnlFields.Controls.Add(lblf)
                            txtBox.ID = "fld" & ds.Rows(i).Item("FieldID").ToString()
                            txtBox.Width = controlWdth - 10
                            txtBox.CssClass = "txtBox"

                            txtBox.Attributes.Add("IsSearch", "1")
                            txtBox.Attributes.Add("data-ty", "TEXTBOX")
                            txtBox.Attributes.Add("fld", ds.Rows(i).Item("FieldMapping").ToString() & "_" & ds.Rows(i).Item("FieldID").ToString())

                            pnlFields.Controls.Add(txtBox)
                        End If
                End Select
                pnlFields.Controls.Add(New LiteralControl("</td>"))
                'If layout = "DOUBLE COLUMN" Then
                If i Mod 2 = 1 Then
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                End If
                'Else
                'pnlFields.Controls.Add(New LiteralControl("</tr>"))
                'End If
                ij = ij + i
            Next

            ''new code for static fields
            If ds.Rows.Count > 0 Then
                If ds.Rows(0).Item("documenttype").ToString.ToUpper = "HUB MASTER" Then
                    Dim lbldocdate As New Label
                    lbldocdate.ID = "Frlbl01"
                    lbldocdate.Text = "Select Date"
                    lbldocdate.Font.Bold = True
                    If ij Mod 2 = 0 Then
                        pnlFields.Controls.Add(New LiteralControl("<tr>"))
                    End If
                    pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right; vertical-align: top;"">"))
                    pnlFields.Controls.Add(lbldocdate)
                    pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left"">"))
                    Dim txtBoxdate As New TextBox
                    txtBoxdate.ID = "Frfldtxtdate"
                    txtBoxdate.Width = controlWdth - 10
                    txtBoxdate.CssClass = "txtBox"

                    txtBoxdate.Attributes.Add("IsSearch", "1")
                    txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                    txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")



                    pnlFields.Controls.Add(txtBoxdate)
                    Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                    CLNDRtxt.ID = "FrCLNDRtxt"
                    CLNDRtxt.TargetControlID = txtBoxdate.ID
                    CLNDRtxt.Format = "yyyy-MM-dd"
                    'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                    pnlFields.Controls.Add(CLNDRtxt)
                    pnlFields.Controls.Add(New LiteralControl("</td>"))
                    If ij Mod 2 = 1 Then
                        pnlFields.Controls.Add(New LiteralControl("</tr>"))
                    End If
                Else
                    Dim lbldocdate As New Label
                    lbldocdate.ID = "Frlbl01"
                    lbldocdate.Text = "Document Date"
                    lbldocdate.Font.Bold = True
                    If ij Mod 2 = 0 Then
                        pnlFields.Controls.Add(New LiteralControl("<tr>"))
                    End If
                    pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right; vertical-align: top;"">"))
                    pnlFields.Controls.Add(lbldocdate)
                    pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left; vertical-align: top;"">"))
                    Dim txtBox As New TextBox
                    Dim txtBox1 As New TextBox
                    Dim lblt As New Label
                    Dim lblf As New Label
                    'lblf.Text = " From "
                    'pnlFields.Controls.Add(lblf)
                    txtBox.ID = "Frflddate"
                    txtBox.Width = controlWdth - 8
                    txtBox.CssClass = "txtBox"

                    txtBox.Attributes.Add("IsSearch", "1")
                    txtBox.Attributes.Add("data-ty", "DATETIME")
                    txtBox.Attributes.Add("fld", "Frflddate")
                    pnlFields.Controls.Add(New LiteralControl("From<br/>"))
                    pnlFields.Controls.Add(txtBox)
                    'lblt.Text = " To "
                    'pnlFields.Controls.Add(lblt)
                    txtBox1.ID = "Toflddate"
                    txtBox1.Width = controlWdth - 8
                    txtBox1.CssClass = "txtBox"

                    txtBox1.Attributes.Add("IsSearch", "1")
                    txtBox1.Attributes.Add("data-ty", "DATETIME")
                    txtBox1.Attributes.Add("fld", "Toflddate")
                    pnlFields.Controls.Add(New LiteralControl("<br/>To<br/>"))
                    pnlFields.Controls.Add(txtBox1)
                    Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                    Dim CLNDR1 As New AjaxControlToolkit.CalendarExtender
                    CLNDR.ID = "FrCLNDRdate"
                    CLNDR.TargetControlID = txtBox.ID
                    CLNDR.Format = "dd/MM/yy"
                    'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                    pnlFields.Controls.Add(CLNDR)
                    CLNDR1.ID = "ToCLNDRdate"
                    CLNDR1.TargetControlID = txtBox1.ID
                    CLNDR1.Format = "dd/MM/yy"
                    'txtBox1.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                    pnlFields.Controls.Add(CLNDR1)
                    If ij Mod 2 = 1 Then
                        pnlFields.Controls.Add(New LiteralControl("</td>"))
                    End If
                    If ij Mod 2 = 2 Then
                        pnlFields.Controls.Add(New LiteralControl("</tr>"))
                    End If
                End If
            ElseIf ReportName.ToUpper = "JV REPORT" Or ReportName.ToUpper = "APPROVED PETTY CASH VOUCHER HUB REPORT" Or ReportName.ToUpper = "REJECTED PETTY CASH VOUCHER HUB REPORT" Then
                Dim lbldocdate1 As New Label
                lbldocdate1.ID = "Frlbl01"
                If ReportName.ToUpper = "REJECTED PETTY CASH VOUCHER HUB REPORT" Then
                    lbldocdate1.Text = "Rejection From Date :&nbsp;&nbsp;"
                Else
                    lbldocdate1.Text = "RA Approval From Date :&nbsp;&nbsp;"
                End If
                lbldocdate1.Font.Bold = True
                Dim lbldocTodate2 As New Label
                lbldocTodate2.ID = "Frlbl02"
                lbldocTodate2.Text = "&nbsp;To Date :&nbsp;&nbsp;"
                lbldocTodate2.Font.Bold = True
                pnlFields.Controls.Add(New LiteralControl("<tr width=""800px"">"))
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:center; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbldocdate1)
                '   pnlFields.Controls.Add(New LiteralControl("</td><td style=""" & controlWdth & ";text-align:left"">"))
                Dim txtBoxdate As New TextBox
                txtBoxdate.ID = "Frfldtxtdate"
                txtBoxdate.Width = controlWdth - 10
                txtBoxdate.CssClass = "txtBox"

                txtBoxdate.Attributes.Add("IsSearch", "1")
                txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")

                pnlFields.Controls.Add(txtBoxdate)
                Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt.ID = "FrCLNDRtxt"
                CLNDRtxt.TargetControlID = txtBoxdate.ID
                CLNDRtxt.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt)
                pnlFields.Controls.Add(lbldocTodate2)

                Dim txtBoxdate1 As New TextBox
                txtBoxdate1.ID = "FrfldtxtTodate"
                txtBoxdate1.Width = controlWdth - 10
                txtBoxdate1.CssClass = "txtBox"

                txtBoxdate1.Attributes.Add("IsSearch", "1")
                txtBoxdate1.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate1.Attributes.Add("fld", "FrfldtxtTodate")

                pnlFields.Controls.Add(txtBoxdate1)
                Dim CLNDRtxt1 As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt1.ID = "FrCLNDRtxt1"
                CLNDRtxt1.TargetControlID = txtBoxdate1.ID
                CLNDRtxt1.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt1)
                pnlFields.Controls.Add(New LiteralControl("</td>"))
                pnlFields.Controls.Add(New LiteralControl("</tr>"))
            ElseIf ReportName.ToUpper = "PERIOD WISE BALANCES" Then
                Dim lbldocdate1 As New Label
                lbldocdate1.ID = "Frlbl01"
                lbldocdate1.Text = "Balance Period :&nbsp;&nbsp;"
                lbldocdate1.Font.Bold = True
                pnlFields.Controls.Add(New LiteralControl("<tr width=""800px"">"))
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:center; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbldocdate1)
                '   pnlFields.Controls.Add(New LiteralControl("</td><td style=""" & controlWdth & ";text-align:left"">"))
                Dim txtBoxdate As New TextBox
                txtBoxdate.ID = "Frfldtxtdate"
                txtBoxdate.Width = controlWdth - 10
                txtBoxdate.CssClass = "txtBox"

                txtBoxdate.Attributes.Add("IsSearch", "1")
                txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")

                pnlFields.Controls.Add(txtBoxdate)
                Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt.ID = "FrCLNDRtxt"
                CLNDRtxt.TargetControlID = txtBoxdate.ID
                CLNDRtxt.Format = "MM-yyyy"
                'CLNDRtxt.Format = "MM/yyyy"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt)
            Else
                Dim lbldocdate As New Label
                lbldocdate.ID = "Frlbl01"
                lbldocdate.Text = "Document Date"
                lbldocdate.Font.Bold = True
                If ij Mod 2 = 0 Then
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                End If
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:left; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbldocdate)
                pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left; vertical-align: top;"">"))
                Dim txtBox As New TextBox
                Dim txtBox1 As New TextBox
                Dim lblt As New Label
                Dim lblf As New Label
                'lblf.Text = " From "
                'pnlFields.Controls.Add(lblf)
                txtBox.ID = "Frflddate"
                txtBox.Width = controlWdth - 8
                txtBox.CssClass = "txtBox"

                txtBox.Attributes.Add("IsSearch", "1")
                txtBox.Attributes.Add("data-ty", "DATETIME")
                txtBox.Attributes.Add("fld", "Frflddate")

                pnlFields.Controls.Add(txtBox)
                'lblt.Text = " To "
                'pnlFields.Controls.Add(lblt)
                txtBox1.ID = "Toflddate"
                txtBox1.Width = controlWdth - 8
                txtBox1.CssClass = "txtBox"

                txtBox1.Attributes.Add("IsSearch", "1")
                txtBox1.Attributes.Add("data-ty", "DATETIME")
                txtBox1.Attributes.Add("fld", "Toflddate")

                pnlFields.Controls.Add(txtBox1)
                Dim CLNDR As New AjaxControlToolkit.CalendarExtender
                Dim CLNDR1 As New AjaxControlToolkit.CalendarExtender
                CLNDR.ID = "FrCLNDRdate"
                CLNDR.TargetControlID = txtBox.ID
                CLNDR.Format = "dd/MM/yy"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDR)
                CLNDR1.ID = "ToCLNDRdate"
                CLNDR1.TargetControlID = txtBox1.ID
                CLNDR1.Format = "dd/MM/yy"
                'txtBox1.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDR1)
                If ij Mod 2 = 1 Then
                    pnlFields.Controls.Add(New LiteralControl("</td>"))
                End If
                If ij Mod 2 = 2 Then
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                End If
            End If
            pnlFields.Controls.Add(New LiteralControl("</table></div>"))
            'for jv report

            If ds.Rows(0).Item("documenttype").ToString.ToUpper = "Petty Cash Voucher HUB" Then
                Dim lbldocdate As New Label
                lbldocdate.ID = "Frlbl01"
                lbldocdate.Text = "From Date"
                lbldocdate.Font.Bold = True

                Dim lbldocTodate As New Label
                lbldocTodate.ID = "Frlbl02"
                lbldocTodate.Text = "To Date"
                lbldocTodate.Font.Bold = True

                If ij Mod 2 = 0 Then
                    pnlFields.Controls.Add(New LiteralControl("<tr>"))
                End If
                pnlFields.Controls.Add(New LiteralControl("<td style=""width:" & lblWidth & "px;text-align:right; vertical-align: top;"">"))
                pnlFields.Controls.Add(lbldocdate)
                pnlFields.Controls.Add(New LiteralControl("</td><td style=""width:" & controlWdth & "px;text-align:left; vertical-align: top;"">"))
                Dim txtBoxdate As New TextBox
                txtBoxdate.ID = "Frfldtxtdate"
                txtBoxdate.Width = controlWdth - 10
                txtBoxdate.CssClass = "txtBox"

                txtBoxdate.Attributes.Add("IsSearch", "1")
                txtBoxdate.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate.Attributes.Add("fld", "Frfldtxtdate")

                pnlFields.Controls.Add(txtBoxdate)
                Dim CLNDRtxt As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt.ID = "FrCLNDRtxt"
                CLNDRtxt.TargetControlID = txtBoxdate.ID
                CLNDRtxt.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt)

                Dim txtBoxdate1 As New TextBox
                txtBoxdate1.ID = "FrfldtxtTodate"
                txtBoxdate1.Width = controlWdth - 10
                txtBoxdate1.CssClass = "txtBox"

                txtBoxdate1.Attributes.Add("IsSearch", "1")
                txtBoxdate1.Attributes.Add("data-ty", "DATETIME")
                txtBoxdate1.Attributes.Add("fld", "FrfldtxtTodate")

                pnlFields.Controls.Add(txtBoxdate1)
                Dim CLNDRtxt1 As New AjaxControlToolkit.CalendarExtender
                CLNDRtxt1.ID = "FrCLNDRtxt1"
                CLNDRtxt1.TargetControlID = txtBoxdate1.ID
                CLNDRtxt1.Format = "yyyy-MM-dd"
                'txtBox.Text = String.Format("{0:dd/MM/yy}", Date.Now())
                pnlFields.Controls.Add(CLNDRtxt1)

                pnlFields.Controls.Add(New LiteralControl("</td>"))
                If ij Mod 2 = 1 Then
                    pnlFields.Controls.Add(New LiteralControl("</tr>"))
                End If
            End If
            pnlFields.Controls.Add(New LiteralControl("</table></div>"))

            ds.Dispose()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try
    End Sub

    Public Sub ChecknUpdatePriorityFieldvalues(ByVal DocID As Integer)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        'try Catch Block Added by Ajeet Kumar :Date::22 May=2014
        Try
            Dim EID As String = "" 'HttpContext.Current.Session("EID").ToString()
            Dim Qry As String = "" : Dim fmp As String = ""
            Dim dtP As New DataTable
            Dim dtDoc As New DataTable
            Dim DocType As String = ""


            Qry = "select documenttype, eid from mmm_mst_doc where tid=" & DocID
            da.SelectCommand.CommandType = CommandType.Text
            da.SelectCommand.CommandText = Qry
            If con.State <> ConnectionState.Open Then con.Open()

            da.Fill(dtDoc)
            If dtDoc.Rows.Count <> 0 Then
                DocType = dtDoc.Rows(0).Item("documenttype").ToString
                EID = dtDoc.Rows(0).Item("eid").ToString
            End If

            Qry = "SELECT fieldmapping,displayname,fieldid  FROM MMM_MST_FIELDS where EID=" & EID & " and documenttype = '" & DocType & "' and isnull(prioritydecider,0)=1"
            da.SelectCommand.CommandType = CommandType.Text
            da.SelectCommand.CommandText = Qry
            da.Fill(dtP)

            If dtP.Rows.Count = 1 Then
                fmp = dtP.Rows(0).Item("fieldmapping").ToString
                da.SelectCommand.CommandType = CommandType.Text
                da.SelectCommand.CommandText = "select count(*) from mmm_mst_doc where EID=" & EID & " and tid=" & DocID & " and " & fmp & " in ('URGENT','HIGH','TOP','CRITICAL')"
                Dim dtR As New DataTable
                da.Fill(dtR)
                If dtR.Rows.Count = 1 Then
                    Dim Str As String = "update mmm_mst_doc set priority=1 where tid=" & DocID & " and eid=" & EID
                    da.SelectCommand.CommandText = Str
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim res As String = da.SelectCommand.ExecuteNonQuery().ToString
                End If
                'URGENT','HIGH','TOP','CRITICAL'
                dtR.Dispose()
            End If
            'dtP = Nothing

            dtP.Dispose()
        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try

    End Sub

    Public Sub ChecknUpdatePriorityFieldvaluesT(ByVal DocID As Integer, ByVal con As SqlConnection, ByVal tran As SqlTransaction)
        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
        da.SelectCommand.Transaction = tran
        'try Catch Block Added by Ajeet Kumar :Date::22 May=2014
        Try
            Dim EID As String = "" 'HttpContext.Current.Session("EID").ToString()
            Dim Qry As String = "" : Dim fmp As String = ""
            Dim dtP As New DataTable
            Dim dtDoc As New DataTable
            Dim DocType As String = ""


            Qry = "select documenttype, eid from mmm_mst_doc where tid=" & DocID
            da.SelectCommand.CommandType = CommandType.Text
            da.SelectCommand.CommandText = Qry
            If con.State <> ConnectionState.Open Then con.Open()

            da.Fill(dtDoc)
            If dtDoc.Rows.Count <> 0 Then
                DocType = dtDoc.Rows(0).Item("documenttype").ToString
                EID = dtDoc.Rows(0).Item("eid").ToString
            End If

            Qry = "SELECT fieldmapping,displayname,fieldid  FROM MMM_MST_FIELDS where EID=" & EID & " and documenttype = '" & DocType & "' and isnull(prioritydecider,0)=1"
            da.SelectCommand.CommandType = CommandType.Text
            da.SelectCommand.CommandText = Qry
            da.Fill(dtP)

            If dtP.Rows.Count = 1 Then
                fmp = dtP.Rows(0).Item("fieldmapping").ToString
                da.SelectCommand.CommandType = CommandType.Text
                da.SelectCommand.CommandText = "select count(*) from mmm_mst_doc where EID=" & EID & " and tid=" & DocID & " and " & fmp & " in ('URGENT','HIGH','TOP','CRITICAL')"
                Dim dtR As New DataTable
                da.Fill(dtR)
                If dtR.Rows.Count = 1 Then
                    Dim Str As String = "update mmm_mst_doc set priority=1 where tid=" & DocID & " and eid=" & EID
                    da.SelectCommand.CommandText = Str
                    da.SelectCommand.CommandType = CommandType.Text
                    Dim res As String = da.SelectCommand.ExecuteNonQuery().ToString
                End If
                'URGENT','HIGH','TOP','CRITICAL'
                dtR.Dispose()
            End If
            'dtP = Nothing

            dtP.Dispose()
        Catch ex As Exception
            Throw
        Finally
            If Not da Is Nothing Then
                da.Dispose()
            End If
        End Try

    End Sub
    'Code for RuleEngine Mayank
    Public Function CreateCollectionForDocDetail(dtFields As DataTable, ByRef docid As Integer) As List(Of UserData)
        Dim lstData As New List(Of UserData)
        Dim objDC As New DataClass()
        Try
            Dim Obj As UserData
            For i As Integer = 0 To dtFields.Rows.Count - 1
                Dim FieldType As String = ""
                Obj = New UserData()
                FieldType = dtFields.Rows(i).Item("FieldType").ToString().ToUpper().Trim
                Obj.DisplayName = dtFields.Rows(i).Item("DisplayName").ToString()
                Obj.FieldType = dtFields.Rows(i).Item("FieldType").ToString()
                Obj.DataType = dtFields.Rows(i).Item("DataType").ToString()
                Obj.MinVal = dtFields.Rows(i).Item("MinLen").ToString()
                Obj.MaxVal = dtFields.Rows(i).Item("MaxLen").ToString()
                Obj.IsRequired = dtFields.Rows(i).Item("IsRequired").ToString()
                Obj.FieldID = dtFields.Rows(i).Item("FieldID").ToString()
                Obj.FieldMapping = dtFields.Rows(i).Item("FieldMapping").ToString()
                Obj.DropDownType = dtFields.Rows(i).Item("DropDownType").ToString()
                Obj.CalText = dtFields.Rows(i).Item("cal_text").ToString()
                Obj.LookUp = dtFields.Rows(i).Item("lookupvalue").ToString()
                Obj.DropDown = dtFields.Rows(i).Item("DropDown").ToString()
                Obj.IsUnique = dtFields.Rows(i).Item("Isunique").ToString()
                Obj.AutoFilter = dtFields.Rows(i).Item("AutoFilter").ToString()
                Obj.DisplayOrder = dtFields.Rows(i).Item("Displayorder").ToString()
                Obj.EnableEdit = dtFields.Rows(i).Item("EnableEdit").ToString()
                Obj.DocumentType = dtFields.Rows(i).Item("DocumentType").ToString()
                Select Case FieldType
                    Case "TEXT BOX"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "DROP DOWN"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                        'Obj.DDLValue = DDL.SelectedItem.Text
                    Case "TEXT AREA"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                        'Case "AUTOCOMPLETE"
                        '    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        '    Obj.Values = txtBox.Text.Trim
                    Case "AUTOCOMPLETE"
                        'Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Obj.Values = txtBox.Text.Trim
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "FILE UPLOADER"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "LOOKUP", "MULTI LOOKUP"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "CALCULATIVE FIELD"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "CHILD ITEM TOTAL"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "ADVANCE FORMULA"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "FORMULA FIELD"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "CHECK BOX"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "CHECKBOX LIST"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                    Case "LOOKUPDDL"
                        Obj.Values = objDC.ExecuteQryScaller("select " & Obj.FieldMapping & " from mmm_mst_doc where tid=" & docid)
                End Select
                lstData.Add(Obj)
            Next
        Catch ex As Exception
            Throw
        End Try
        Return lstData
    End Function

    Public Function CreateCollection(pnlFields As Panel, dtFields As DataTable) As List(Of UserData)
        Dim lstData As New List(Of UserData)
        Try
            Dim Obj As UserData
            For i As Integer = 0 To dtFields.Rows.Count - 1
                Dim FieldType As String = ""
                Obj = New UserData()
                FieldType = dtFields.Rows(i).Item("FieldType").ToString().ToUpper().Trim
                Obj.DisplayName = dtFields.Rows(i).Item("DisplayName").ToString()
                Obj.FieldType = dtFields.Rows(i).Item("FieldType").ToString()
                Obj.DataType = dtFields.Rows(i).Item("DataType").ToString()
                Obj.MinVal = dtFields.Rows(i).Item("MinLen").ToString()
                Obj.MaxVal = dtFields.Rows(i).Item("MaxLen").ToString()
                Obj.IsRequired = dtFields.Rows(i).Item("IsRequired").ToString()
                Obj.FieldID = dtFields.Rows(i).Item("FieldID").ToString()
                Obj.FieldMapping = dtFields.Rows(i).Item("FieldMapping").ToString()
                Obj.DropDownType = dtFields.Rows(i).Item("DropDownType").ToString()
                Obj.CalText = dtFields.Rows(i).Item("cal_text").ToString()
                Obj.LookUp = dtFields.Rows(i).Item("lookupvalue").ToString()
                Obj.DropDown = dtFields.Rows(i).Item("DropDown").ToString()
                Obj.IsUnique = dtFields.Rows(i).Item("Isunique").ToString()
                Obj.AutoFilter = dtFields.Rows(i).Item("AutoFilter").ToString()
                Obj.DisplayOrder = dtFields.Rows(i).Item("Displayorder").ToString()
                Obj.EnableEdit = dtFields.Rows(i).Item("EnableEdit").ToString()
                Obj.DocumentType = dtFields.Rows(i).Item("DocumentType").ToString()

                Select Case FieldType
                    Case "TEXT BOX"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        If txtBox IsNot Nothing Then
                            Obj.Values = txtBox.Text.Trim
                        End If
                    Case "DROP DOWN"
                        Dim DDL As DropDownList = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), DropDownList)
                        If DDL IsNot Nothing Then
                            Obj.Values = DDL.SelectedItem.Value
                            Obj.DDLValue = DDL.SelectedItem.Text
                        End If

                    Case "TEXT AREA"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        Obj.Values = txtBox.Text.Trim
                        'Case "AUTOCOMPLETE"
                        '    Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        '    Obj.Values = txtBox.Text.Trim
                    Case "AUTOCOMPLETE"
                        'Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        'Obj.Values = txtBox.Text.Trim
                        Dim hddnvalue As HiddenField = CType(pnlFields.FindControl("HDN" & dtFields.Rows(i).Item("FieldID").ToString()), HiddenField)
                        Obj.Values = hddnvalue.Value
                    Case "FILE UPLOADER"
                        Dim hdn As HiddenField = CType(pnlFields.FindControl("hdnf" & dtFields.Rows(i).Item("FieldID").ToString()), HiddenField)
                        Dim lbl As Label = CType(pnlFields.FindControl("lblf" & dtFields.Rows(i).Item("FieldID").ToString()), Label)
                        If lbl IsNot Nothing Then
                            lbl.Text = hdn.Value
                            Obj.Values = lbl.Text
                        End If
                    Case "LOOKUP", "MULTI LOOKUP"
                        Dim ctrl = pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString())
                        If Not ctrl Is Nothing Then
                            If ctrl.GetType Is GetType(System.Web.UI.WebControls.TextBox) Then
                                Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                                If Convert.ToString(dtFields.Rows(i).Item("datatype")).Trim().ToUpper = "NUMERIC" Then
                                    If txtBox.Text.Trim = String.Empty Then
                                        Obj.Values = 0
                                    Else
                                        Obj.Values = txtBox.Text.Trim
                                    End If
                                ElseIf Convert.ToString(dtFields.Rows(i).Item("datatype")).Trim().ToUpper = "DATETIME" Then
                                    If txtBox.Text.Trim = String.Empty Then
                                        'If HttpContext.Current.Request.QueryString("SC").ToString() = "PES" And HttpContext.Current.Session("EID") = "180" Then
                                        '    Obj.Values = txtBox.Text
                                        'Else
                                        '    Obj.Values = Now.Date.ToString("dd/MM/yy")
                                        'End If
                                        Obj.Values = Now.Date.ToString("dd/MM/yy")
                                        Obj.isBlankDate = True
                                    Else
                                        Obj.Values = txtBox.Text.Trim
                                    End If
                                Else
                                    Obj.Values = txtBox.Text.Trim
                                End If

                            Else
                                Dim chkBox As CheckBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), CheckBox)
                                If chkBox.Checked = True Then
                                    Obj.Values = "Yes"
                                Else
                                    Obj.Values = "No"
                                End If
                            End If
                        End If
                    Case "CALCULATIVE FIELD"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "CHILD ITEM TOTAL"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "ADVANCE FORMULA"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "FORMULA FIELD"
                        Dim txtBox As TextBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "CHECK BOX"
                        Dim chkBox As CheckBox = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), CheckBox)
                        If (chkBox.Checked) Then
                            Obj.Values = "YES"
                        Else
                            Obj.Values = "NO"
                        End If
                    Case "CHECKBOX LIST"
                        Dim chkBoxList As CheckBoxList = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), CheckBoxList)
                        Dim chkBoxListValue As New ArrayList()
                        For Each li As ListItem In chkBoxList.Items
                            If li.Selected = True Then
                                chkBoxListValue.Add(li.Value)
                            End If
                        Next
                        If chkBoxListValue.Count > 0 Then
                            Obj.Values = String.Join(",", chkBoxListValue.ToArray())
                        Else
                            Obj.Values = "0"
                        End If
                    Case "LOOKUPDDL"
                        Dim DDL As DropDownList = CType(pnlFields.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString()), DropDownList)
                        Obj.Values = DDL.SelectedItem.Value
                        Obj.DDLValue = DDL.SelectedItem.Text
                End Select
                lstData.Add(Obj)
            Next
        Catch ex As Exception
            Throw
        End Try
        Return lstData
    End Function

    'Code for RuleEngine Ajeet
    Public Function CreateGVCollection(GR As GridViewRow, dtFields As DataTable, k As Integer) As List(Of UserData)
        Dim lstData As New List(Of UserData)
        Try
            Dim Obj As UserData
            For i As Integer = 0 To dtFields.Rows.Count - 1
                Dim FieldType As String = ""
                Obj = New UserData()
                FieldType = dtFields.Rows(i).Item("FieldType").ToString().ToUpper().Trim
                Obj.DisplayName = dtFields.Rows(i).Item("DisplayName").ToString()
                Obj.FieldType = dtFields.Rows(i).Item("FieldType").ToString()
                Obj.DataType = dtFields.Rows(i).Item("DataType").ToString()
                Obj.MinVal = dtFields.Rows(i).Item("MinLen").ToString()
                Obj.MaxVal = dtFields.Rows(i).Item("MaxLen").ToString()
                Obj.IsRequired = dtFields.Rows(i).Item("IsRequired").ToString()
                Obj.FieldID = dtFields.Rows(i).Item("FieldID").ToString()
                Obj.FieldMapping = dtFields.Rows(i).Item("FieldMapping").ToString()
                Obj.DropDownType = dtFields.Rows(i).Item("DropDownType").ToString()
                Obj.CalText = dtFields.Rows(i).Item("cal_text").ToString()
                Obj.LookUp = dtFields.Rows(i).Item("lookupvalue").ToString()
                Obj.DropDown = dtFields.Rows(i).Item("DropDown").ToString()
                Obj.IsUnique = dtFields.Rows(i).Item("Isunique").ToString()
                Obj.AutoFilter = dtFields.Rows(i).Item("AutoFilter").ToString()
                Obj.DisplayOrder = dtFields.Rows(i).Item("Displayorder").ToString()
                Obj.EnableEdit = dtFields.Rows(i).Item("EnableEdit").ToString()
                Obj.DocumentType = dtFields.Rows(i).Item("DocumentType").ToString()

                Select Case FieldType
                    Case "TEXT BOX"
                        Dim txtBox As TextBox = CType(GR.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString() & k), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "LT LOOKUP"
                        Dim txtBox As TextBox = CType(GR.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString() & k), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "DROP DOWN"
                        Dim DDL As DropDownList = CType(GR.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString() & "_" & k), DropDownList)
                        Obj.Values = DDL.SelectedItem.Value
                        Obj.DDLValue = DDL.SelectedItem.Text
                    Case "TEXT AREA"
                        Dim txtBox As TextBox = CType(GR.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString() & k), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "AUTOCOMPLETE"
                        Dim txtBox As TextBox = CType(GR.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString() & k), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "FILE UPLOADER"
                        Dim hdn As HiddenField = CType(GR.FindControl("hdn_" & dtFields.Rows(i).Item("FieldID").ToString() & "_" & k), HiddenField)
                        Dim FLup As Label = CType(GR.FindControl("lblf_" & dtFields.Rows(i).Item("FieldID").ToString() & "_" & k), Label)
                        ' Dim FLup As Label = CType(GR.FindControl("lblf_" & dtFields.Rows(i).Item("FieldID").ToString()), Label)
                        If Not hdn Is Nothing And FLup.Text = "" Then
                            FLup.Text = hdn.Value
                            Obj.Values = FLup.Text
                        Else
                            Obj.Values = FLup.Text
                        End If
                    Case "LOOKUP"
                        Dim txtBox As TextBox = CType(GR.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString() & k), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "CALCULATIVE FIELD"
                        Dim txtBox As TextBox = CType(GR.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString() & k), TextBox)
                        Obj.Values = txtBox.Text.Trim
                    Case "FORMULA FIELD"
                        Dim txtBox As TextBox = CType(GR.FindControl("fld" & dtFields.Rows(i).Item("FieldID").ToString() & k), TextBox)
                        Obj.Values = txtBox.Text.Trim
                End Select
                lstData.Add(Obj)
            Next
        Catch ex As Exception
            Throw
        End Try
        Return lstData
    End Function

    Public Shared Function After(ByVal value As String, ByVal a As String) As String
        Dim posA As Integer = value.LastIndexOf(a)
        If posA = -1 Then
            Return ""
        End If
        Dim adjustedPosA As Integer = posA + a.Length
        If adjustedPosA >= value.Length Then
            Return ""
        End If
        Return value.Substring(adjustedPosA)
    End Function

    '' new on 20_may_15 by p for both 
    Public Sub GridMultiLookup(rowIndex As Integer, FieldID As Integer, ByRef ddl As DropDownList, lblMsg As Label, MainFormPnl As Panel)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If

        Dim DS As New DataSet
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select ddlmultilookUpVal, multilookUPval,dropdown,documenttype,dropdowntype,ddlLookupValue,eid from MMM_MST_FIELDS WHERE FIELDID=" & FieldID & "", con)
        Try
            Dim GRD As GridView = TryCast(ddl.Parent.Parent.Parent.Parent, GridView)
            oda.Fill(DS, "data")
            Dim eid As Integer = Val(DS.Tables("data").Rows(0).Item("eid"))
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("multilookUPval").ToString()
            Dim ddlMultiLookupVal As String = DS.Tables("data").Rows(0).Item("ddlmultilookUpVal").ToString()

            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")

            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1
                        If (lookfld(iLookFld) <> String.Empty) Then
                            Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                            If fldPair.Length > 1 Then
                                Dim qry = "Select * from mmm_mst_Fields where FieldID=" & fldPair(2)
                                oda.SelectCommand.CommandText = qry
                                Dim dtFld As New DataTable()
                                oda.Fill(dtFld)
                                Dim ftype = dtFld.Rows(0).Item("FieldType").ToString()
                                Dim DROPDOWN As String() = dtFld.Rows(0).Item("DROPDOWN").ToString.Split(",")  ' this contains to be filled values 
                                Dim doctype As String = dtFld.Rows(0).Item("Documenttype").ToString()
                                If DROPDOWN.Length > 0 Then
                                    qry = "Select * from mmm_mst_Fields where FieldID In (" & dtFld.Rows(0).Item("DROPDOWN").ToString() & ")"
                                    oda.SelectCommand.CommandText = qry
                                    Dim dtcheck As New DataTable()
                                    oda.Fill(dtcheck)
                                    Dim strFilters As String = ""
                                    Dim xwhr As String = ""
                                    For i As Integer = 0 To dtcheck.Rows.Count - 1
                                        Dim fType1 As String = Convert.ToString(dtcheck.Rows(i).Item("FieldType"))
                                        Dim strErr = ""
                                        If fType1.ToUpper = "LOOKUPDDL" Then
                                            Dim fldID As String = Convert.ToString(dtcheck.Rows(i).Item("dropdown"))
                                            qry = "Select * from mmm_mst_Fields where FieldID=" & fldID
                                            oda.SelectCommand.CommandText = qry
                                            Dim dtLookup As New DataTable()
                                            oda.Fill(dtLookup)
                                            Dim lookupval = Convert.ToString(dtLookup.Rows(0).Item("ddlLookupValue")).Split(",")
                                            If lookupval.Length > 0 Then
                                                For Each strval As String In lookupval
                                                    If strval.Trim = "" Then
                                                        Continue For
                                                    End If
                                                    If strval.Split("-")(0).ToString = dtcheck.Rows(i).Item("FieldID").ToString Then
                                                        Dim ddlMaster = dtLookup.Rows(0).Item("dropdown").ToString
                                                        qry = "Select dropdown from mmm_Mst_Fields where eid=" & HttpContext.Current.Session("Eid") & " and Documenttype='" & ddlMaster.Split("-")(1) & "' and FieldMapping='" & strval.Split("-")(1) & "'"
                                                        oda.SelectCommand.CommandText = qry
                                                        Dim dtLstDll As New DataTable()
                                                        oda.Fill(dtLstDll)
                                                        qry = "Select * from MMM_MST_Fields where Documenttype='" & fldPair(0) & "' and dropdown='" & dtLstDll.Rows(0).Item("dropdown") & "' and Eid=" & HttpContext.Current.Session("Eid")
                                                        Dim dtLstDll1 As New DataTable()
                                                        oda.SelectCommand.CommandText = qry
                                                        oda.Fill(dtLstDll1)
                                                        xwhr &= Convert.ToString(dtLstDll1.Rows(0).Item("FieldMapping"))
                                                        Dim ctrl = DirectCast(MainFormPnl.FindControl("fld" & dtcheck.Rows(i).Item("FieldId")), DropDownList)
                                                        If Not IsNothing(ctrl) Then
                                                            If ctrl.SelectedValue.ToString.ToUpper = "0" Or ctrl.SelectedValue.ToString.ToUpper = "SELECT" Then
                                                                strErr &= dtcheck.Rows(i).Item("DisplayName") & ","
                                                            End If
                                                        Else
                                                            ctrl = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & dtcheck.Rows(i).Item("FieldId") & "_" & rowIndex), DropDownList)
                                                        End If
                                                        If Not strErr = "" Then
                                                            lblMsg.Text = strErr.Substring(0, strErr.Length - 1) & " not selected."
                                                            Exit Sub
                                                        End If
                                                        xwhr &= "='" & ctrl.SelectedValue & "' " & IIf(i = dtcheck.Rows.Count - 1, "", "And ")
                                                    End If
                                                Next
                                            End If
                                        Else
                                            ' qry = "Select FieldMapping from mmm_mst_Fields where Documenttype='" & fldPair(0) & "' and Eid=" & HttpContext.Current.Session("Eid") & " and dropdown='" & Convert.ToString(dtcheck.Rows(i).Item("dropdown")) & "'"
                                            qry = "Select FieldMapping from mmm_mst_Fields where Documenttype='" & fldPair(0) & "' and Eid=" & HttpContext.Current.Session("Eid") & " and dropdown='" & Convert.ToString(dtcheck.Rows(i).Item("dropdown")) & "' and displayName='" & Convert.ToString(dtcheck.Rows(i).Item("displayName")) & "'"
                                            oda.SelectCommand.CommandText = qry
                                            xwhr &= Convert.ToString(oda.SelectCommand.ExecuteScalar())

                                            Dim ctrl = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & dtcheck.Rows(i).Item("FieldId") & "_" & rowIndex), DropDownList)
                                            If IsNothing(ctrl) Then
                                                ctrl = DirectCast(MainFormPnl.FindControl("fld" & dtcheck.Rows(i).Item("FieldId")), DropDownList)
                                                If ctrl.SelectedValue.ToString.ToUpper = "0" Or ctrl.SelectedValue.ToString.ToUpper = "SELECT" Then
                                                    strErr &= dtcheck.Rows(i).Item("DisplayName") & ","
                                                End If
                                            End If
                                            If Not strErr = "" Then
                                                lblMsg.Text = strErr.Substring(0, strErr.Length - 1) & " not selected."
                                                Exit Sub
                                            End If

                                            'Dim ctrl = DirectCast(MainFormPnl.FindControl("fld" & dtcheck.Rows(i).Item("FieldId")), DropDownList)

                                            'If Not IsNothing(ctrl) Then
                                            '    If ctrl.SelectedValue.ToString.ToUpper = "0" Or ctrl.SelectedValue.ToString.ToUpper = "SELECT" Then
                                            '        strErr &= dtcheck.Rows(i).Item("DisplayName") & ","
                                            '    End If
                                            'Else
                                            '    ctrl = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & dtcheck.Rows(i).Item("FieldId") & "_" & rowIndex), DropDownList)
                                            'End If
                                            'If Not strErr = "" Then
                                            '    lblMsg.Text = strErr.Substring(0, strErr.Length - 1) & " not selected."
                                            '    Exit Sub
                                            'End If
                                            xwhr &= "='" & ctrl.SelectedValue & "' " & IIf(i = dtcheck.Rows.Count - 1, "", "And ")
                                        End If

                                    Next
                                    qry = "Select " & fldPair(1) & " from MMM_MST_MASTER where " & xwhr & " and Documenttype='" & fldPair(0) & "' and Eid=" & HttpContext.Current.Session("Eid")
                                    oda.SelectCommand.CommandText = qry
                                    oda.Fill(DS, "lookupdata")
                                    Dim ctrl1 = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & fldPair(2) & rowIndex), TextBox)
                                    If DS.Tables("lookupdata").Rows.Count > 0 Then
                                        ctrl1.Text = DS.Tables("lookupdata").Rows(0).Item(0).ToString()
                                    Else
                                        ctrl1.Text = ""
                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If
            If ddlMultiLookupVal.Trim.Length > 0 Then
                Dim lookfld() As String = ddlMultiLookupVal.ToString().Split(",")
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1
                        If (lookfld(iLookFld) <> String.Empty) Then
                            Dim fldPair() As String = lookfld(iLookFld).Split("-")
                            If fldPair.Length > 1 Then
                                Dim qry = "Select * from mmm_mst_Fields where FieldID=" & fldPair(2)
                                oda.SelectCommand.CommandText = qry
                                Dim dtFld As New DataTable()
                                oda.Fill(dtFld)
                                Dim ftype = dtFld.Rows(0).Item("FieldType").ToString()
                                Dim DROPDOWN As String() = dtFld.Rows(0).Item("DROPDOWN").ToString.Split(",")  ' this contains to be filled values 
                                Dim doctype As String = dtFld.Rows(0).Item("Documenttype").ToString()
                                If DROPDOWN.Length > 0 Then
                                    qry = "Select * from mmm_mst_Fields where FieldID In (" & dtFld.Rows(0).Item("DROPDOWN").ToString() & ")"
                                    oda.SelectCommand.CommandText = qry
                                    Dim dtcheck As New DataTable()
                                    oda.Fill(dtcheck)
                                    Dim strFilters As String = ""
                                    Dim xwhr As String = ""
                                    For i As Integer = 0 To dtcheck.Rows.Count - 1
                                        Dim fType1 As String = Convert.ToString(dtcheck.Rows(i).Item("FieldType"))
                                        Dim strErr = ""
                                        If fType1.ToUpper = "LOOKUPDDL" Then
                                            Dim fldID As String = Convert.ToString(dtcheck.Rows(i).Item("dropdown"))
                                            qry = "Select * from mmm_mst_Fields where FieldID=" & fldID
                                            oda.SelectCommand.CommandText = qry
                                            Dim dtLookup As New DataTable()
                                            oda.Fill(dtLookup)
                                            Dim lookupval = Convert.ToString(dtLookup.Rows(0).Item("ddlLookupValue")).Split(",")
                                            If lookupval.Length > 0 Then
                                                For Each strval As String In lookupval
                                                    If strval.Trim = "" Then
                                                        Continue For
                                                    End If
                                                    If strval.Split("-")(0).ToString = dtcheck.Rows(i).Item("FieldID").ToString Then
                                                        Dim ddlMaster = dtLookup.Rows(0).Item("dropdown").ToString
                                                        qry = "Select dropdown from mmm_Mst_Fields where eid=" & HttpContext.Current.Session("Eid") & " and Documenttype='" & ddlMaster.Split("-")(1) & "' and FieldMapping='" & strval.Split("-")(1) & "'"
                                                        oda.SelectCommand.CommandText = qry
                                                        Dim dtLstDll As New DataTable()
                                                        oda.Fill(dtLstDll)
                                                        qry = "Select * from MMM_MST_Fields where Documenttype='" & fldPair(0) & "' and dropdown='" & dtLstDll.Rows(0).Item("dropdown") & "' and Eid=" & HttpContext.Current.Session("Eid")
                                                        Dim dtLstDll1 As New DataTable()
                                                        oda.SelectCommand.CommandText = qry
                                                        oda.Fill(dtLstDll1)
                                                        xwhr &= Convert.ToString(dtLstDll1.Rows(0).Item("FieldMapping"))
                                                        Dim ctrl = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & dtcheck.Rows(i).Item("FieldId") & "_" & rowIndex), DropDownList)
                                                        If IsNothing(ctrl) Then
                                                            ctrl = DirectCast(MainFormPnl.FindControl("fld" & dtcheck.Rows(i).Item("FieldId")), DropDownList)
                                                            If ctrl.SelectedValue.ToString.ToUpper = "0" Or ctrl.SelectedValue.ToString.ToUpper = "SELECT" Then
                                                                strErr &= dtcheck.Rows(i).Item("DisplayName") & ","
                                                            End If
                                                        End If
                                                        If Not strErr = "" Then
                                                            lblMsg.Text = strErr.Substring(0, strErr.Length - 1) & " not selected."
                                                            Exit Sub
                                                        End If
                                                        xwhr &= "='" & ctrl.SelectedValue & "' " & IIf(i = dtcheck.Rows.Count - 1, "", "And ")
                                                    End If
                                                Next
                                                'qry = "Select " & fldPair(1) & " from MMM_MST_MASTER where " & xwhr & " and Documenttype='" & fldPair(0) & "' and Eid=" & HttpContext.Current.Session("Eid")
                                                'oda.SelectCommand.CommandText = qry
                                                'oda.Fill(DS, "lookupdata")
                                                'Dim ctrl1 = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & fldPair(2) & "_" & rowIndex), DropDownList)
                                                'If DS.Tables("lookupdata").Rows.Count > 0 Then
                                                '    If Not IsNothing(ctrl1.Items.FindByValue(DS.Tables("lookupdata").Rows(0).Item(0).ToString())) Then
                                                '        ctrl1.Items.FindByValue(DS.Tables("lookupdata").Rows(0).Item(0).ToString()).Selected = True
                                                '    End If
                                                'End If
                                            End If

                                        Else
                                            'qry = "Select FieldMapping from mmm_mst_Fields where Documenttype='" & fldPair(0) & "' and Eid=" & HttpContext.Current.Session("Eid") & " and dropdown='" & Convert.ToString(dtcheck.Rows(i).Item("dropdown")) & "'"
                                            qry = "Select FieldMapping from mmm_mst_Fields where Documenttype='" & fldPair(0) & "' and Eid=" & HttpContext.Current.Session("Eid") & " and dropdown='" & Convert.ToString(dtcheck.Rows(i).Item("dropdown")) & "' and displayName='" & Convert.ToString(dtcheck.Rows(i).Item("displayName")) & "'"
                                            oda.SelectCommand.CommandText = qry
                                            xwhr &= Convert.ToString(oda.SelectCommand.ExecuteScalar())
                                            Dim ctrl = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & dtcheck.Rows(i).Item("FieldId") & "_" & rowIndex), DropDownList)
                                            If IsNothing(ctrl) Then
                                                ctrl = DirectCast(MainFormPnl.FindControl("fld" & dtcheck.Rows(i).Item("FieldId")), DropDownList)
                                                If ctrl.SelectedValue.ToString.ToUpper = "0" Or ctrl.SelectedValue.ToString.ToUpper = "SELECT" Then
                                                    strErr &= dtcheck.Rows(i).Item("DisplayName") & ","
                                                End If
                                            End If
                                            If Not strErr = "" Then
                                                lblMsg.Text = strErr.Substring(0, strErr.Length - 1) & " not selected."
                                                Exit Sub
                                            End If
                                            xwhr &= "='" & ctrl.SelectedValue & "' " & IIf(i = dtcheck.Rows.Count - 1, "", "And ")

                                        End If
                                    Next

                                    qry = "Select FormType from mmm_mst_Forms where FormName='" & fldPair(0) & "'"
                                    oda.SelectCommand.CommandText = qry
                                    Dim FormType = Convert.ToString(oda.SelectCommand.ExecuteScalar())
                                    Dim tbl As String = IIf(FormType.ToUpper() = "DOCUMENT", "mmm_mst_Doc", "mmm_mst_Master")

                                    qry = "Select " & fldPair(1) & " from " & tbl & " where " & xwhr & " and Documenttype='" & fldPair(0) & "' and Eid=" & HttpContext.Current.Session("Eid")
                                    oda.SelectCommand.CommandText = qry
                                    If DS.Tables.Contains("lookupdata") Then
                                        DS.Tables.Remove("lookupdata")
                                    End If
                                    oda.Fill(DS, "lookupdata")
                                    Dim ctrl1 = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & fldPair(2) & "_" & rowIndex), DropDownList)
                                    If DS.Tables("lookupdata").Rows.Count > 0 Then
                                        If Not IsNothing(ctrl1.Items.FindByValue(DS.Tables("lookupdata").Rows(0).Item(0).ToString())) Then
                                            ctrl1.ClearSelection()
                                            ctrl1.Items.FindByValue(DS.Tables("lookupdata").Rows(0).Item(0).ToString()).Selected = True
                                        End If
                                    End If

                                End If
                            End If
                        End If
                    Next
                End If
            End If
        Catch ex As Exception

        Finally
            If con.State <> ConnectionState.Closed Then
                con.Close()
            End If
            DS.Dispose()
        End Try
    End Sub

    ''new LT LoolupVal
    Public Sub GridLTLookup(rowIndex As Integer, FieldID As Integer, ByRef ddl As DropDownList, lblMsg As Label, MainFormPnl As Panel)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If


        Dim oda As SqlDataAdapter = New SqlDataAdapter("select Fieldtype,dropdown,documenttype,dropdowntype,eid,LTLookupval,DDLlookupValueSource from MMM_MST_FIELDS WHERE FIELDID=" & FieldID & "", con)
        Dim GRD As GridView = TryCast(ddl.Parent.Parent.Parent.Parent, GridView)
        Dim DS As New DataSet
        Dim xwhr As String = ""
        Try
            oda.Fill(DS, "data")
            Dim eid As Integer = Val(DS.Tables("data").Rows(0).Item("eid"))
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("LTLookupval").ToString()
            Dim documenttype() As String '= DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            Dim DocType As String = ""
            Dim Fldtype As String = DS.Tables("data").Rows(0).Item("fieldtype").ToString()


            If Fldtype.ToUpper = "DROP DOWN" Then
                documenttype = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
                DocType = documenttype(1).ToString
            ElseIf Fldtype.ToUpper = "LOOKUPDDL" Then
                DocType = DS.Tables("data").Rows(0).Item("DDLlookupValueSource").ToString
            End If

            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then
                    For iLookFld As Integer = 0 To lookfld.Length - 1    ' for each control in multilookupval field 
                        '' loop for lookup vals 
                        If (lookfld(iLookFld) <> String.Empty) Then
                            Dim fldPair() As String = lookfld(iLookFld).Split(":")   '' get Mapping Type
                            'select top 1 a.fld12 from mmm_mst_doc_item as a inner join mmm_mst_doc as b on a.docid=b.tid and eid=43 and a.documenttype='Purchase Order Details' where b.documenttype='Purchase order' and a.fld1='604485' order by docid desc   For Child item
                            If fldPair.Length > 1 Then  ' if valid string in fldpair 
                                Dim FillID As String() = Convert.ToString(fldPair(1)).Split("$")
                                Dim ctrl1 = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & Val(FillID(1)).ToString().Trim() & rowIndex), TextBox)
                                If Not IsNothing(ctrl1) Then   '' check if control to be filled exists
                                    If fldPair(0).Trim() = "C-C" Then
                                        Dim AllSplitVal As String() = FillID(0).Split("-")
                                        Dim doc As String() = Convert.ToString(AllSplitVal(1)).Split("|")
                                        Dim finalstr As String = "select top 1 a." & Convert.ToString(AllSplitVal(3)) & " from mmm_mst_doc_Item  as a inner join mmm_mst_doc  as b on a.docid=b.tid and eid=" & HttpContext.Current.Session("EID") & " and a.documenttype='" & doc(1) & "' where b.documenttype='" & doc(0) & "' and  a." & AllSplitVal(2) & "='" & ddl.SelectedValue & "' order by docid desc"
                                        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                        da.SelectCommand.CommandText = finalstr
                                        Dim TXTBOX = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & Val(FillID(1)).ToString().Trim() & rowIndex), TextBox)
                                        If Not IsNothing(TXTBOX) Then
                                            TXTBOX.Text = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                        End If

                                    ElseIf fldPair(0).Trim() = "C-M" Then
                                        Dim AllSplitVal As String() = FillID(0).Split("-")
                                        Dim finalstr As String = "select top 1 " & Convert.ToString(AllSplitVal(3)) & " from mmm_mst_doc where  eid=" & HttpContext.Current.Session("EID") & " and documenttype='" & Convert.ToString(AllSplitVal(1)) & "' and  " & AllSplitVal(2) & "='" & ddl.SelectedValue & "' order by tid desc"
                                        Dim da As SqlDataAdapter = New SqlDataAdapter("", con)
                                        da.SelectCommand.CommandText = finalstr
                                        Dim TXTBOX = DirectCast(GRD.Rows(rowIndex).FindControl("fld" & Val(FillID(1)).ToString().Trim() & rowIndex), TextBox)
                                        If Not IsNothing(TXTBOX) Then
                                            TXTBOX.Text = Convert.ToString(da.SelectCommand.ExecuteScalar())
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If

        Catch ex As Exception

        Finally
            If con.State <> ConnectionState.Closed Then
                con.Close()
            End If
        End Try
    End Sub

    Public Function GetChildItemValues(GV As GridView) As DataTable
        Dim dt As New DataTable()
        Try
            dt = DirectCast(GV.DataSource, DataTable).Copy()
            dt.Clear()
            If dt.Columns.Contains("tid") Then
                dt.Columns.Remove("tid")
            End If
            If dt.Columns.Contains("cmastertid") Then
                dt.Columns.Remove("cmastertid")
            End If

            'For i As Integer = 0 To dtsrc.Columns.Count - 1
            '    dt.Columns.Add(dtsrc.Columns(i).ColumnName)
            'Next

            For i As Integer = 0 To GV.Rows.Count - 1
                'For i As Integer = 0 To GV.Rows.Count - 1
                Dim Gr As GridViewRow = GV.Rows(i)
                If Gr.RowType = DataControlRowType.Header Then
                    Continue For
                End If
                Dim dr As DataRow = dt.NewRow()
                If i = GV.Rows.Count - 1 Then
                    Continue For
                End If
                For j As Integer = 0 To dt.Columns.Count - 1
                    Dim ctrl = GV.Rows(i).Cells(j).Controls(0)
                    If ctrl.GetType() = GetType(System.Web.UI.WebControls.TextBox) Then
                        dr(j) = DirectCast(ctrl, System.Web.UI.WebControls.TextBox).Text
                        Dim hdnAutoComplete = Nothing
                        If GV.Rows(i).Cells(j).Controls.Count > 1 Then
                            hdnAutoComplete = GV.Rows(i).Cells(j).Controls(1)
                        End If
                        If Not IsNothing(hdnAutoComplete) Then
                            If hdnAutoComplete.GetType() = GetType(System.Web.UI.WebControls.HiddenField) Then
                                dr(j) &= "," & DirectCast(hdnAutoComplete, System.Web.UI.WebControls.HiddenField).Value
                            End If
                        End If
                    ElseIf ctrl.GetType() = GetType(DropDownList) Then
                        dr(j) = DirectCast(ctrl, DropDownList).SelectedItem.Text
                    ElseIf ctrl.GetType() = GetType(System.Web.UI.WebControls.CheckBox) Then
                        dr(j) = DirectCast(ctrl, System.Web.UI.WebControls.CheckBox).Checked
                    ElseIf ctrl.GetType() = GetType(FileUpload) Then
                        dr(j) = DirectCast(GV.Rows(i).Cells(j).Controls(1), HiddenField).Value
                    ElseIf ctrl.GetType() = GetType(CheckBoxList) Then
                        Dim chklist As CheckBoxList = DirectCast(ctrl, CheckBoxList)
                        Dim str = ""
                        For Each item As ListItem In chklist.Items
                            If item.Selected Then
                                str &= item.Text & ","
                            End If
                        Next
                        dr(j) = str.Substring(0, str.Length - 1)
                    End If
                Next
                dt.Rows.Add(dr)
            Next
        Catch ex As Exception
            ex.ToString()
        End Try
        Return dt
    End Function

    Public Function GetChildItemValuesForDocDtl(GV As GridView) As DataTable
        Dim dt As New DataTable()
        Try
            dt = DirectCast(GV.DataSource, DataTable).Copy()
            dt.Clear()
            If dt.Columns.Contains("tid") Then
                dt.Columns.Remove("tid")
            End If
            If dt.Columns.Contains("cmastertid") Then
                dt.Columns.Remove("cmastertid")
            End If

            'For i As Integer = 0 To dtsrc.Columns.Count - 1
            '    dt.Columns.Add(dtsrc.Columns(i).ColumnName)
            'Next

            For i As Integer = 0 To GV.Rows.Count - 1
                'For i As Integer = 0 To GV.Rows.Count - 1
                Dim Gr As GridViewRow = GV.Rows(i)
                If Gr.RowType = DataControlRowType.Header Then
                    Continue For
                End If
                Dim dr As DataRow = dt.NewRow()
                'If i = GV.Rows.Count - 1 Then
                '    Continue For
                'End If
                For j As Integer = 0 To dt.Columns.Count - 1
                    Dim ctrl = GV.Rows(i).Cells(j).Controls(0)
                    If ctrl.GetType() = GetType(System.Web.UI.WebControls.TextBox) Then
                        dr(j) = DirectCast(ctrl, System.Web.UI.WebControls.TextBox).Text
                        Dim hdnAutoComplete = Nothing
                        If GV.Rows(i).Cells(j).Controls.Count > 1 Then
                            hdnAutoComplete = GV.Rows(i).Cells(j).Controls(1)
                        End If
                        If Not IsNothing(hdnAutoComplete) Then
                            If hdnAutoComplete.GetType() = GetType(System.Web.UI.WebControls.HiddenField) Then
                                dr(j) &= "," & DirectCast(hdnAutoComplete, System.Web.UI.WebControls.HiddenField).Value
                            End If
                        End If
                    ElseIf ctrl.GetType() = GetType(DropDownList) Then
                        dr(j) = DirectCast(ctrl, DropDownList).SelectedItem.Text
                    ElseIf ctrl.GetType() = GetType(System.Web.UI.WebControls.CheckBox) Then
                        dr(j) = DirectCast(ctrl, System.Web.UI.WebControls.CheckBox).Checked
                    ElseIf ctrl.GetType() = GetType(FileUpload) Then
                        dr(j) = DirectCast(GV.Rows(i).Cells(j).Controls(1), HiddenField).Value
                    ElseIf ctrl.GetType() = GetType(CheckBoxList) Then
                        Dim chklist As CheckBoxList = DirectCast(ctrl, CheckBoxList)
                        Dim str = ""
                        For Each item As ListItem In chklist.Items
                            If item.Selected Then
                                str &= item.Text & ","
                            End If
                        Next
                        dr(j) = str.Substring(0, str.Length - 1)
                    End If
                Next
                dt.Rows.Add(dr)
            Next
        Catch ex As Exception
            ex.ToString()
        End Try
        Return dt
    End Function

    Public Sub FillChildItemValues(GV As GridView, dt As DataTable)
        Try
            For i As Integer = 0 To GV.Rows.Count - 1
                Dim Gr As GridViewRow = GV.Rows(i)
                If Gr.RowType = DataControlRowType.Header Then
                    Continue For
                End If
                For j As Integer = 0 To dt.Columns.Count - 1
                    Dim ctrl = Gr.Cells(j).Controls(0)
                    If ctrl.GetType() = GetType(System.Web.UI.WebControls.TextBox) Then
                        Dim hdn = Nothing
                        If GV.Rows(i).Cells(j).Controls.Count > 1 Then
                            '' below check of cal. ext. is done by sunil for handling date type field on 02-dec-21
                            If GV.Rows(i).Cells(j).Controls(1).GetType() Is GetType(AjaxControlToolkit.CalendarExtender) Then
                            Else
                                hdn = DirectCast(GV.Rows(i).Cells(j).Controls(1), HiddenField)
                            End If
                        End If
                        If Not IsNothing(hdn) Then
                            Dim arr() = dt.Rows(i).Item(j).ToString.Split(",")
                            DirectCast(ctrl, System.Web.UI.WebControls.TextBox).Text = arr(0)
                            hdn.Value = arr(1)
                        Else
                            DirectCast(ctrl, System.Web.UI.WebControls.TextBox).Text = dt.Rows(i).Item(j).ToString
                        End If

                    ElseIf ctrl.GetType() = GetType(DropDownList) Then
                        Dim ddl = DirectCast(ctrl, DropDownList)
                        If ddl.Items.FindByText(dt.Rows(i).Item(j).ToString) IsNot Nothing Then
                            ddl.Items.FindByText(dt.Rows(i).Item(j).ToString).Selected = True
                        End If
                    ElseIf ctrl.GetType() = GetType(System.Web.UI.WebControls.CheckBox) Then
                        DirectCast(ctrl, System.Web.UI.WebControls.CheckBox).Checked = Convert.ToBoolean(dt.Rows(i).Item(j))
                    ElseIf ctrl.GetType() = GetType(FileUpload) Then
                        Dim hdn = DirectCast(GV.Rows(i).Cells(j).Controls(1), HiddenField)
                        Dim lbl = DirectCast(GV.Rows(i).Cells(j).Controls(2), System.Web.UI.WebControls.Label)
                        hdn.Value = dt.Rows(i).Item(j).ToString
                        lbl.Text = dt.Rows(i).Item(j).ToString
                    ElseIf ctrl.GetType() = GetType(CheckBoxList) Then
                        Dim chklist As CheckBoxList = DirectCast(ctrl, CheckBoxList)
                        Dim arr = dt.Rows(i).Item(j).ToString.Split(",")
                        For a As Integer = 0 To arr.Length
                            If chklist.Items.FindByText(arr(a)) IsNot Nothing Then
                                chklist.Items.FindByText(arr(a)).Selected = True
                            End If
                        Next
                    End If
                Next
            Next
        Catch ex As Exception

        End Try
    End Sub

    Public Function GetScript(Eid As String, DocumentType As String, FieldID As String) As String
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim script As New StringBuilder()
        Try
            Dim qry = "Select * from mmm_mst_Fields where Eid=" & Eid.ToString & " and Documenttype='" & DocumentType & "'"
            da.SelectCommand.CommandText = qry
            Dim dt As New DataTable()
            da.Fill(dt)
            Dim dtCalfld = Convert.ToString(dt.Select("FieldID='" & FieldID & "'")(0).Item("Cal_text"))

            If dtCalfld.Trim = "" Then
                Return ""
            End If
            Dim arrFormula = dtCalfld.Split(",")

            For i As Integer = 0 To arrFormula.Length - 1
                Dim strFormula = arrFormula(i)
                If strFormula.Trim = "" Then
                    Continue For
                End If
                Dim separators() As String = {"-", "+", "*", "/"}
                Dim LHS = strFormula.Split("=")(0)
                Dim RHS = strFormula.Split("=")(1)
                Dim flds() As String = RHS.Split(separators, StringSplitOptions.RemoveEmptyEntries)

                Dim fldid = ""
                For Each fld In flds
                    If IsNumeric(fld.Replace("}", "").Replace("{", "")) Then
                        RHS = RHS.Replace(fld, fld.Replace("}", "").Replace("{", ""))
                    Else
                        fldid = Convert.ToString(dt.Select("DisplayName='" & fld.Replace("}", "").Replace("{", "") & "'")(0).Item("FieldID"))
                        RHS = RHS.Replace(fld, "parseFloat($('#ContentPlaceHolder1_fld" & fldid & "').val())")
                    End If


                Next

                fldid = Convert.ToString(dt.Select("DisplayName='" & LHS.Replace("}", "").Replace("{", "") & "'")(0).Item("FieldID"))
                LHS = "parseFloat($('#ContentPlaceHolder1_fld" & fldid & "').val(@@@@)).toPrecision(2);"
                script.Append(LHS.Replace("@@@@", RHS) & "; ")
            Next
            Return script.ToString()
        Catch ex As Exception

        Finally

        End Try
        Return ""
    End Function

    Public Sub ExecuteControllevelRule(ctrlID As String, pnlP As Panel, pnlC As Panel, screenname As String, dtparent As DataTable, dtChild As DataTable, ErrorLbl As Label, Optional IsChildForm As Boolean = False)
        Try
            'Code For Rule Engine Execution
            'Ajeet'
            Dim ObjRet As New RuleResponse()
            Dim RE As New RuleEngin()
            Dim objD As New DynamicForm()
            Dim ActionPanel As Panel = pnlP
            Dim lstData As New List(Of UserData)
            Dim lstDataC As List(Of UserData) = Nothing
            'in case of child item create collection of both panel
            If IsChildForm Then
                ActionPanel = pnlC
                lstDataC = New List(Of UserData)
                lstDataC = objD.CreateCollection(pnlP, dtChild)
            End If
            'Initialising rule Object
            Dim ObjRule As New RuleEngin(HttpContext.Current.Session("EID"), screenname, "CREATED", "CONTROL", ctrlID.ToString)
            'Getting 
            Dim dt As DataTable = dtparent
            lstData = objD.CreateCollection(pnlP, dt)
            Dim dsrule As DataSet = ObjRule.GetRules()
            Dim dtrule As New DataTable
            dtrule = dsrule.Tables(1)

            For Each dr As DataRow In dsrule.Tables(0).Rows
                ObjRet = ObjRule.ExecuteRule(lstData, lstDataC, IsChildForm, "", dr, dtrule)


                If Not ObjRet.Success Then
                    If Convert.ToString(ObjRet.FailActionType).ToUpper = "ALERT" Then
                        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "popup", "alert('" + ObjRet.ErrorMessage + "');", True)
                        Exit Sub
                    End If
                End If
                If Not String.IsNullOrEmpty(ObjRet.TargetField.Trim) And ObjRet.HasRule = True Then
                    'displaying rule message
                    'changes by Himank on 11september 2015
                    If Not ObjRet.Success Then
                        If Not IsNothing(ErrorLbl) Then
                            ErrorLbl.Text = Convert.ToString(ObjRet.ErrorMessage)
                            ErrorLbl.ForeColor = System.Drawing.Color.Red
                        End If

                    Else
                        If Not IsNothing(ErrorLbl) Then
                            ErrorLbl.Text = Convert.ToString(ObjRet.SucessMessage)
                            ErrorLbl.ForeColor = System.Drawing.Color.Black
                        End If
                    End If

                    'Spliting it with "," because there can be more than one target controls
                    Dim arr = ObjRet.TargetField.Split(",")

                    Dim trgCtrl = Nothing
                    Dim lbl As New Label()
                    Dim imgbtn As New ImageButton()
                    'Dim ActionType As String = ObjRet.ActionType.Trim.ToUpper
                    For i As Integer = 0 To arr.Length - 1
                        trgCtrl = Nothing

                        If (arr(i).Trim <> "") Then
                            Dim ctrl = ActionPanel.FindControl("fld" & arr(i))
                            If Not ctrl Is Nothing Then
                                lbl = ActionPanel.FindControl("lbl" & arr(i))
                                imgbtn = ActionPanel.FindControl("imgresset_" & arr(i))
                                If ctrl.GetType() Is GetType(System.Web.UI.WebControls.DropDownList) Then
                                    trgCtrl = CType(ctrl, DropDownList)
                                ElseIf ctrl.GetType() Is GetType(System.Web.UI.WebControls.TextBox) Then
                                    trgCtrl = CType(ctrl, TextBox)

                                ElseIf ctrl.GetType() Is GetType(System.Web.UI.WebControls.FileUpload) Then
                                    trgCtrl = CType(ctrl, FileUpload)
                                    'Add By Manvendra 02-12-2019
                                ElseIf ctrl.GetType() Is GetType(System.Web.UI.WebControls.ImageButton) Then
                                    trgCtrl = CType(ctrl, ImageButton)
                                Else
                                    trgCtrl = CType(ctrl, CheckBox)
                                End If
                                'changing control properties according to rule configuration
                                'changes by Himank on 11september 2015
                                If ObjRet.Success Then
                                    Select Case ObjRet.SuccActionType.ToUpper
                                        Case "CHANGE DROPDOWN COLOR"
                                            trgCtrl.CssClass = "txtBox"
                                            lbl.CssClass = ""
                                        Case "DISABLE"
                                            trgCtrl.Enabled = False
                                        Case "INVISIBLE"
                                            trgCtrl.CssClass = "invisible"
                                            imgbtn.CssClass = "invisible"
                                            If Not IsNothing(lbl) Then
                                                lbl.CssClass = "invisible"
                                            End If
                                        Case "ENABLE"
                                            trgCtrl.Enabled = True
                                        Case "VISIBLE"
                                            trgCtrl.CssClass = "txtBox"
                                            If Not IsNothing(lbl) Then
                                                lbl.CssClass = ""
                                            End If
                                        Case "NO ACTION"

                                    End Select
                                Else
                                    Select Case ObjRet.FailActionType.ToUpper
                                        Case "CHANGE DROPDOWN COLOR"
                                            trgCtrl.CssClass = "Heiglight"
                                            lbl.CssClass = "Heiglight"
                                        Case "DISABLE"
                                            trgCtrl.Enabled = False
                                        Case "ENABLE"
                                            trgCtrl.Enabled = False
                                        Case "INVISIBLE"
                                            trgCtrl.CssClass = "invisible"
                                            imgbtn.CssClass = "invisible"
                                            If Not IsNothing(lbl) Then
                                                lbl.CssClass = "invisible"
                                            End If
                                        Case "VISIBLE"
                                            trgCtrl.CssClass = "txtBox"
                                            If Not IsNothing(lbl) Then
                                                lbl.CssClass = ""
                                            End If
                                    End Select
                                End If
                            End If
                        End If
                    Next
                    'Exit Sub
                End If
            Next
        Catch ex As Exception
            Throw New Exception("Exception in control level Rule Ececution")
        End Try
    End Sub
    Public Sub DynamicGrdFilter(Optional ByRef pnlFields As Panel = Nothing, Optional ByRef UpdatePanel1 As UpdatePanel = Nothing, Optional ByRef lbltab As Label = Nothing)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As New SqlDataAdapter("", con)
        Dim ob As DynamicForm = New DynamicForm()
        HttpContext.Current.Session("ddlChange") = Nothing
        Try
            Dim dtIsdv As New DataTable
            Dim strdf As String = ""
            Dim row() As DataRow = HttpContext.Current.Session("ALLCHILD")
            If row.Length > 0 Then
                Dim btn1 As New Button
                For i As Integer = 0 To row.Length - 1
                    Dim PRitem() As String = row(i).Item("dropdown").ToString().Split("-")
                    'With(nolock) added by Himank on 29th sep 2015
                    strdf = "select * from mmm_mst_forms  WITH(NOLOCK)  where formname='" & PRitem(0).ToString() & "' and formsource='DETAIL FORM' and EID=" & HttpContext.Current.Session("EID").ToString() & " and isnull(isinlineediting,0)=1"
                    oda.SelectCommand.CommandText = strdf    ' 
                    'ViewState("ddlChange") = 1
                    HttpContext.Current.Session("ddlChange") = 1
                    oda.Fill(dtIsdv)
                    If dtIsdv.Rows.Count > 0 Then
                        insert_InlineEditing(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pnlFields, UpdatePanel1, lbltab)
                    End If
                    DdlFiltersAfterFilter(PRitem(0).ToString, row(i).Item("FieldID").ToString(), pnlFields, lbltab)
                Next
                oda.Dispose()
                dtIsdv.Dispose()
            End If
        Catch ex As Exception
        Finally
            con.Close()
            oda.Dispose()

        End Try
    End Sub
    Public Sub DdlFiltersAfterFilter(DocType As String, FieldID As String, Optional ByRef pnlFields As Panel = Nothing, Optional ByRef lbltab As Label = Nothing)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim oda As New SqlDataAdapter("", con)
        Try
            Dim grd As GridView = CType(pnlFields.FindControl("GRD" & FieldID), GridView)
            If IsNothing(grd) Then
                Exit Sub
            End If
            'With(nolock) added by Himank on 29th sep 2015
            Dim qry = "Select * from mmm_mst_Fields  WITH(NOLOCK)  where Documenttype='" & DocType & "' and Eid=" & HttpContext.Current.Session("Eid") & " and IsActive=1 and FieldType='Drop Down' and (nullif(lookupvalue,'') is not null or nullif(multilookUpVal,'') is not null or nullif(ddlmultilookUpVal,'') is not null) "
            oda.SelectCommand.CommandText = qry
            Dim dt As New DataTable()
            oda.Fill(dt)
            For i As Integer = 0 To dt.Rows.Count - 1
                For Each gr As GridViewRow In grd.Rows
                    Dim ddl As DropDownList = CType(gr.FindControl("fld" & dt.Rows(i).Item("FieldID") & "_" & gr.RowIndex), DropDownList)
                    If IsNothing(ddl) Then
                        Continue For
                    End If
                    GridDdl_TextChanged(ddl, Nothing, pnlFields, lbltab)
                Next
            Next
        Catch ex As Exception
        End Try
    End Sub
    Public Sub insert_InlineEditing(ByVal FN As String, ByVal fldID As String, Optional ByRef pnlFields As Panel = Nothing, Optional ByRef UpdatePanel1 As UpdatePanel = Nothing, Optional ByRef lbltab As Label = Nothing)
        Dim scrname As String = HttpContext.Current.Request.QueryString("SC").ToString()
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim da As New SqlDataAdapter("", con)
        Dim dss As New DataTable
        Try
            Dim formname As String = FN
            Dim FormnameDVM As String = ""
            'formname = Right(formname, formname.Length - 8).Trim()
            HttpContext.Current.Session("FN") = formname

            'Dim ID() As String = btnDetails.ID.Split("_")
            HttpContext.Current.Session("ID") = fldID.ToString  'ID(1).ToString
            'ViewState("ID") = "BTN" & fldID.ToString  'ID(1).ToString
            HttpContext.Current.Session("VID") = "BTN" & fldID.ToString
            Dim ob As New DynamicForm
            Dim DS As New DataSet
            'With(nolock) added by Himank on 29th sep 2015
            Dim oda As SqlDataAdapter = New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF   WITH(NOLOCK) left outer JOIN MMM_MST_FORMS F  WITH(NOLOCK)  on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & HttpContext.Current.Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
            oda.Fill(DS, "CHILD")
            'Uncheck After Testing 19/10/2016
            'Session("CHILD") = DS.Tables("CHILD")
            HttpContext.Current.Session("D" & formname) = DS.Tables("CHILD")

            Dim sqlStrF As String = ""
            'With(nolock) added by Himank on 29th sep 2015
            da.SelectCommand.CommandText = "select * from MMM_MST_forms  WITH(NOLOCK)  where eid=" & HttpContext.Current.Session("EID") & " and formname='" & FN & "'"
            'Dim DS As New DataSet
            Dim DSM As New DataTable
            Dim DSF As New DataTable
            Dim field As New DataTable
            Dim field1 As New DataTable
            da.Fill(DS, "inlineediting")


            If DS.Tables("inlineediting").Rows.Count > 0 Then
                Dim inlineSDoc As String = DS.Tables("inlineediting").Rows(0).Item("inlinesourceDoc").ToString
                Dim inlineType As String = DS.Tables("inlineediting").Rows(0).Item("inlineType").ToString
                'Dim inlineFilter As String() = Split(DS.Tables("inlineediting").Rows(0).Item("inlinefilter"), ":")

                Dim inlineFilter As String() = Split(DS.Tables("inlineediting").Rows(0).Item("inlinefilter"), "~")

                Dim tablename As String = ""
                Dim Pid As String = ""
                If inlineType.ToUpper = "MASTER" Then
                    tablename = "MMM_MST_MASTER"
                    Pid = "TID"
                ElseIf inlineType.ToUpper = "DOCUMENT" Then
                    tablename = "MMM_MST_DOC"
                    Pid = "TID"
                ElseIf inlineType.ToUpper = "DETAIL FORM" Then
                    tablename = "MMM_MST_DOC_ITEM"
                    Pid = "TID"
                End If

                Dim sqlStrM As String = ""
                Dim sqlStrMfld As String = ""
                'With(nolock) added by Himank on 29th sep 2015
                da.SelectCommand.CommandText = "select * from MMM_MST_Fields   WITH(NOLOCK) where documenttype='" & FN & "' and eid=" & HttpContext.Current.Session("EID") & " and inlinemapping is not null order by displayorder "
                da.Fill(field)


                Dim filterRows() As DataRow
                Dim filterRows1() As DataRow
                filterRows = field.Select("inlinemapping is not null and inlinemapping <>''", "DisplayOrder")
                filterRows1 = field.Select("InLineEditing=1 and inlinemapping is null", "DisplayOrder")
                If filterRows.Length > 0 Then
                    field = filterRows.CopyToDataTable()
                    If filterRows1.Length > 0 Then
                        field.Merge(filterRows1.CopyToDataTable())
                    End If
                Else
                    field = filterRows1.CopyToDataTable()
                End If

                If field.Rows.Count > 0 Then
                    For i As Integer = 0 To field.Rows.Count - 1
                        sqlStrM = sqlStrM & " " & field.Rows(i).Item("inlinemapping").ToString() & "[" & field.Rows(i).Item("displayname") & "],"
                        sqlStrMfld = sqlStrMfld & " |" & field.Rows(i).Item("inlinemapping").ToString() & "|,"
                    Next
                    sqlStrM = Left(sqlStrM, sqlStrM.Length - 1)
                    sqlStrMfld = Left(sqlStrMfld, sqlStrMfld.Length - 1)

                    Dim filter As String = ""
                    Dim flag As Int16 = 0   ' flag for checking multiple condition and adding 'and' operator to the sql query 
                    For k As Integer = 0 To inlineFilter.Length - 1
                        Dim SD As String() = Split(inlineFilter(k), "-")  ' check for static or dynamic filter
                        Dim Opr As String() = Split(SD(1), "|")
                        If SD.Length > 1 Then
                            If SD(0).ToUpper = "S" Then  ' for static check S
                                If flag = 1 Then
                                    'filter &= " and " & " convert(float," & Opr(0) & ") " & Opr(1) & " '" & Opr(2) & "'"
                                    'filter &= " and " & " Cast(Replace(Replace(" & Opr(0) & ",',','.'),'.','') AS FLOAT) " & Opr(1) & " '" & Opr(2) & "'"
                                    filter &= " and " & Opr(0) & Opr(1) & " '" & Opr(2) & "'"
                                Else
                                    'filter = "convert(float," & Opr(0) & ") " & Opr(1) & " '" & Opr(2) & "'"
                                    'filter = "Cast(Replace(Replace(" & Opr(0) & ",',','.'),'.','') AS FLOAT) " & Opr(1) & " '" & Opr(2) & "'"
                                    filter = Opr(0) & Opr(1) & " '" & Opr(2) & "'"

                                End If
                                flag = 1

                            Else  ' for dynamic check D
                                If DynamicForm.GetControl(pnlFields, "fld" & Opr(2)) Then
                                    Dim ddl As New DropDownList
                                    ddl = pnlFields.FindControl("fld" & Opr(2))
                                    HttpContext.Current.Session("BindGrdOnDdl") = Opr(2) & "-" & FN    ' this is used in page init and DynamicGrdFilter
                                    If flag = 1 Then
                                        If HttpContext.Current.Session("ddlChange") = 1 Then
                                            'filter &= "and " & " convert(float," & Opr(0) & ") " & Opr(1) & " '" & ddl.SelectedItem.Value.Trim & "'"
                                            ' filter &= "and " & " Cast(Replace(Replace(" & Opr(0) & ",',','.'),'.','') AS FLOAT)  " & Opr(1) & " '" & ddl.SelectedItem.Value.Trim & "'"
                                            ''filter &= "and " & Opr(0) & Opr(1) & " '" & ddl.SelectedItem.Value.Trim & "'"

                                            filter &= "and " & Opr(0) & Opr(1) & " '" & IIf(DS.Tables("inlineediting").Rows(0).Item("InLineMathType").ToString.ToUpper = "VALUE", ddl.SelectedItem.Value.Trim, ddl.SelectedItem.Text.Trim) & "'"

                                        Else
                                            'filter &= "and " & " convert(float," & Opr(0) & ") " & Opr(1) & " " & ddl.SelectedItem.Value & ""
                                            'filter &= "and " & " Cast(Replace(Replace(" & Opr(0) & ",',','.'),'.','') AS FLOAT)  " & Opr(1) & " '" & ddl.SelectedItem.Value & "'"   ' this is commenting because first time dynamic condition is not applied
                                            Exit Sub
                                        End If
                                    Else
                                        If HttpContext.Current.Session("ddlChange") = 1 Then
                                            'filter = " convert(float," & Opr(0) & ") " & Opr(1) & " '" & ddl.SelectedItem.Value.Trim & "'"
                                            'filter = " Cast(Replace(Replace(" & Opr(0) & ",',','.'),'.','') AS FLOAT) " & Opr(1) & " '" & ddl.SelectedItem.Value.Trim & "'"

                                            filter = Opr(0) & Opr(1) & " '" & IIf(DS.Tables("inlineediting").Rows(0).Item("InLineMathType").ToString.ToUpper = "VALUE", ddl.SelectedItem.Value.Trim, ddl.SelectedItem.Text.Trim) & "'"
                                        Else
                                            Exit Sub
                                            ''filter = " convert(float," & Opr(0) & ") " & Opr(1) & " " & ddl.SelectedItem.Value & ""
                                        End If
                                    End If
                                    flag = 1
                                End If
                            End If
                        End If
                        'sqlStrMfld = Replace(Left(sqlStrMfld, sqlStrMfld.Length - 1), "'", "''")
                    Next
                    'Session("Filert") = filter
                    da.SelectCommand.CommandText = "uspGetInlineValuesFromMaster_new1"
                    da.SelectCommand.CommandType = CommandType.StoredProcedure
                    da.SelectCommand.Parameters.AddWithValue("FN", inlineSDoc)
                    da.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                    da.SelectCommand.Parameters.AddWithValue("childDoctype", FN)
                    da.SelectCommand.Parameters.AddWithValue("sqlMfld", sqlStrMfld)
                    da.SelectCommand.Parameters.AddWithValue("tablename", tablename)
                    ' parameters for filtering 
                    da.SelectCommand.Parameters.AddWithValue("filter", filter)

                    DSM.Columns.Add("All", GetType(String)) ' adding checkbox for grid to select All
                    da.Fill(DSM)


                    If DSM.Rows.Count < 1 Then  ' if no data then dispose the Dynamic grid and show the message
                        Dim lbl As Label = CType(pnlFields.FindControl("LblGrd" & fldID.ToString), Label)
                        lbl.Text = "No Records found!"
                        lbl.Visible = True
                        'UpdatePanel1.Update()
                        'Exit Sub
                    Else
                        Dim lbl As Label = CType(pnlFields.FindControl("LblGrd" & fldID.ToString), Label)
                        lbl.Text = ""
                        lbl.Visible = False
                    End If
                End If
                'With(nolock) added by Himank on 29th sep 2015
                da.SelectCommand.CommandText = "select * from MMM_MST_Fields   WITH(NOLOCK)  where documenttype='" & FN & "' and eid=" & HttpContext.Current.Session("EID") & " and inlineediting=1 order by InLineEditing, displayorder "
                da.SelectCommand.CommandType = CommandType.Text
                da.Fill(field1)
                If field1.Rows.Count > 0 Then
                    For i As Integer = 0 To field1.Rows.Count - 1
                        sqlStrF = sqlStrF & " " & field1.Rows(i).Item("fieldmapping").ToString() & "[" & field1.Rows(i).Item("displayname") & "],"
                    Next
                    sqlStrF = Left(sqlStrF, sqlStrF.Length - 1)
                    'da.SelectCommand.CommandText = "select " & sqlStrF & " from " & tablename & " where documenttype='" & inlineSDoc & "' and eid=" & Session("EID") & ""
                    'With(nolock) added by Himank on 29th sep 2015
                    da.SelectCommand.CommandText = "select " & sqlStrF & " from MMM_MST_DOC_ITEM  WITH(NOLOCK)  where documenttype='" & FN & "' and 1=0"
                    da.SelectCommand.CommandType = CommandType.Text
                    da.Fill(DSF)
                End If
                DSM.Merge(DSF, True, MissingSchemaAction.Add)
                DSM.Merge(DSF, True, MissingSchemaAction.Add)
                DSM.Columns.Item("cmastertid").SetOrdinal(DSM.Columns.Count - 1)
                DSM.Columns.Item("tid").SetOrdinal(DSM.Columns.Count - 1)
                DSM.DefaultView.ToTable()

                'For i As Integer = 1 To field1.Rows.Count - 1
                '    DSM.Columns.Item(field1.Rows(i - 1).Item("displayname").ToString).SetOrdinal(i)
                'Next

                'DSF.Merge(DSM, True, MissingSchemaAction.Add)
                'DSF.Columns.Item("cmastertid").SetOrdinal(DSM.Columns.Count - 1)
                'DSF.Columns.Item("tid").SetOrdinal(DSM.Columns.Count - 1)
                'If DSF.Columns.Contains("All") Then
                '    DSF.Columns.Item("All").SetOrdinal(0)
                'End If

                'DSF.DefaultView.ToTable()

            End If
            ADD_DV_ITEMSTOGRID(FN, DSM, DSM, pnlFields:=pnlFields, UpdatePanel1:=UpdatePanel1, lbltab:=lbltab)
            'ADD_DV_ITEMSTOGRID(FN, DSF, DSF)
            '        Dim oda As New SqlDataAdapter("SELECT FF.*,F.*  FROM MMM_MST_FIELDS FF left outer JOIN MMM_MST_FORMS F on F.FormName = FF.DocumentType and F.EID = FF.EID  where FF.isactive=1 and F.EID=" & Session("EID").ToString() & " and FormName = '" & formname & "' order by displayOrder", con)
            da.Dispose()
            con.Close()
            DS.Dispose()

        Catch ex As Exception
        Finally
            con.Dispose()
            da.Dispose()
            con.Close()
        End Try
    End Sub
    Public Sub ADD_DV_ITEMSTOGRID(ByVal FORMNAME As String, ByVal DtDV As DataTable, ByVal DtDV_Vals As DataTable, Optional ByVal childGdId As String = Nothing, Optional ByRef pnlFields As Panel = Nothing, Optional ByRef UpdatePanel1 As UpdatePanel = Nothing, Optional ByRef lbltab As Label = Nothing)
        Dim dtFD As New DataTable
        Dim dtField As New DataTable
        Dim DTVALUE As New DataTable
        Dim errormsg As String = "Please Enter "
        dtField = HttpContext.Current.Session("D" & FORMNAME)
        dtFD = DtDV
        DTVALUE = DtDV_Vals
        HttpContext.Current.Session(FORMNAME) = dtFD
        HttpContext.Current.Session(FORMNAME & "VAL") = DTVALUE
        BINDGRID1(dtFD, FORMNAME, childGdId, pnlFields, UpdatePanel1, lbltab)
        ' ModalPopupExtender1.Hide()
    End Sub
    Public Sub BINDGRID1(ByVal DT As DataTable, Optional ByVal frmname As String = Nothing, Optional ByVal childGridId As String = Nothing, Optional ByRef pnlFields As Panel = Nothing, Optional ByRef UpdatePanel1 As UpdatePanel = Nothing, Optional ByRef lbltab As Label = Nothing)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        Dim ODA As SqlDataAdapter = New SqlDataAdapter("", con)
        Dim scrname As String = HttpContext.Current.Request.QueryString("SC").ToString()
        Dim DS As New DataSet

        Dim dt_item As DataTable = New DataTable()
        dt_item = DT
        ODA.SelectCommand.CommandType = CommandType.Text
        If Not IsNothing(frmname) Then
            'With(nolock) added by Himank on 29th sep 2015
            ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,f1.fieldtype,f1.child_specific_text FROM MMM_MST_FIELDS F1  WITH(NOLOCK)  INNER JOIN MMM_MST_FIELDS F2  WITH(NOLOCK)  ON F1.dropdown =F2.Fieldid  WHERE F1.isactive=1 and F1.EID=" & HttpContext.Current.Session("EID") & " and F2.EID=" & HttpContext.Current.Session("EID") & " AND F1.FieldType in ('CHILD ITEM MAX','CHILD ITEM TOTAL')  AND F2.DocumentType ='" & frmname & "' AND F1.DOCUMENTTYPE='" & scrname & "'union all Select FieldID,displayName,fieldtype,child_specific_text from mmm_mst_fields where eid=" & HttpContext.Current.Session("EID") & " and DOCUMENTTYPE='" & scrname & "' and Child_Specific_text is not null"
        Else
            ODA.SelectCommand.CommandText = "SELECT F1.FieldID,F2.displayName,f1.fieldtype,f1.child_specific_text FROM MMM_MST_FIELDS F1   WITH(NOLOCK) INNER JOIN MMM_MST_FIELDS F2   WITH(NOLOCK) ON F1.dropdown =F2.Fieldid  WHERE F1.isactive=1 and F1.EID=" & HttpContext.Current.Session("EID") & " and F2.EID=" & HttpContext.Current.Session("EID") & " AND F1.FieldType in ('CHILD ITEM MAX','CHILD ITEM TOTAL')  AND F2.DocumentType ='" & HttpContext.Current.Session("FN") & "' AND F1.DOCUMENTTYPE='" & scrname & "'union all Select FieldID,displayName,fieldtype,child_specific_text from mmm_mst_fields where eid=" & HttpContext.Current.Session("EID") & " and DOCUMENTTYPE='" & scrname & "' and Child_Specific_text is not null"

        End If

        ODA.Fill(DS, "TOTAL")
        ODA.Dispose()
        DS.Dispose()
        Dim OB As New DynamicForm

        Dim defRows As Integer = -1
        Dim hasDefVal As Integer = -1
        If IsNothing(HttpContext.Current.Session("Default")) = False Then
            If HttpContext.Current.Session("Default").ToString IsNot "" Then
                Dim ar() As String = HttpContext.Current.Session("Default").ToString().Split("_")
                If ar(0).ToString IsNot "" Then
                    defRows = CInt(ar(0))
                End If

                If defRows = 0 Then
                    defRows = -1
                End If
                If Not ar(1).ToString() = "" Then
                    hasDefVal = CInt(ar(1))
                End If

            End If
        End If
        If HttpContext.Current.Session("VID") IsNot Nothing Then
            Dim Gid As String = Right(HttpContext.Current.Session("VID").ToString(), HttpContext.Current.Session("VID").ToString().Length - 3)
            If Not Gid = childGridId Then
                HttpContext.Current.Session("NewChildId") = "BTN" & childGridId
            End If
        End If

        OB.BINDITEMGRID(dt_item, pnlFields, HttpContext.Current.Session("VID"), UpdatePanel1, DS.Tables("TOTAL"), defRows, hasDefVal, scrname, HttpContext.Current.Session("FN").ToString, Convert.ToInt32(HttpContext.Current.Session("EID")), childGridId)
    End Sub
    Public Sub GridDdl_TextChanged(ByVal sender As Object, ByVal e As EventArgs, Optional ByRef pnlFields As Panel = Nothing, Optional ByRef lbltab As Label = Nothing)
        Dim ddl As DropDownList = TryCast(sender, DropDownList)
        Dim id As String = Right(ddl.ID, ddl.ID.Length - 3)
        Dim ar() As String = id.Split("_")
        Dim id1 As Integer = CInt(ar(0))
        'Update by Manvendra 10-01-2022 
        'BindGRidLookup(ar(1), id1, ddl)
        BindGRidLookup(ar(1), id1, ddl, pnlFields)
        Dim ob As New DynamicForm()
        GridMultiLookup(ar(1), id1, ddl, lbltab, pnlFields)
        GridLTLookup(ar(1), id1, ddl, lbltab, pnlFields)
        BindGRidLookupDDL(ar(1), id1, ddl, pnlFields)
    End Sub


    Public Sub BindGRidLookupDDL(rowIndex As Integer, ddlid As Integer, ByRef ddl As DropDownList, Optional ByRef pnlFields As Panel = Nothing)
        Dim conStr As String = ConfigurationManager.ConnectionStrings("conStr").ConnectionString
        Dim con As SqlConnection = New SqlConnection(conStr)
        If con.State <> ConnectionState.Open Then
            con.Open()
        End If
        'With(nolock) added by Himank on 29th sep 2015
        Dim oda As SqlDataAdapter = New SqlDataAdapter("select DDLLOOKUPVALUE,dropdown,documenttype,dropdowntype from MMM_MST_FIELDS  WITH(NOLOCK)  WHERE FIELDID=" & ddlid & "", con)
        Try
            Dim DS As New DataSet
            Dim xwhr As String = ""
            Dim fldType As String = ""
            oda.Fill(DS, "data")
            Dim LOOKUPVALUE As String = DS.Tables("data").Rows(0).Item("DDLlookupvalue").ToString()
            Dim documenttype() As String = DS.Tables("data").Rows(0).Item("dropdown").ToString.Split("-")
            If LOOKUPVALUE.Length > 0 Then
                Dim lookfld() As String = LOOKUPVALUE.ToString().Split(",")  '' get all controls to fill in lookup
                If lookfld.Length > 0 Then

                    For iLookFld As Integer = 0 To lookfld.Length - 1
                        Dim fldPair() As String = lookfld(iLookFld).Split("-")   '' get fieldid and mapping
                        If fldPair.Length > 1 Then
                            Dim GRD As GridView = TryCast(ddl.Parent.Parent.Parent.Parent, GridView)
                            Dim grdRow As GridViewRow
                            Dim control As Control = Nothing

                            If IsNothing(GRD) = False Then
                                oda = New SqlDataAdapter("SELECT * FROM MMM_MST_FIELDS WHERE FIELDID=" & fldPair(0) & "", con)
                                Dim dt As New DataTable
                                oda.Fill(dt)
                                If IsLookupDDLField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString(), pnlFields) Then  '' check if control to be filled exists
                                    ' get fld dtl from fld master
                                    Dim STR As String = ""
                                    If fldPair(1).ToString.ToUpper = "C" Then    '' fldpair(0) = fieldid to be filled 
                                        Dim proc As String = dt.Rows(0).Item("CAL_FIELDS").ToString()
                                        If proc.Length > 1 Then
                                            Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                            Dim DDL0 As DropDownList
                                            If IsNothing(GRD) = False Then
                                                grdRow = GRD.Rows(rowIndex)
                                                Dim ctrlId As String = "fld" & DROPDOWN1
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                    If IsNothing(control) = True Then
                                                        DDL0 = CType(control, DropDownList)
                                                    End If
                                                Next
                                            End If

                                            ' = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                            If DDL0.SelectedItem.Text.ToUpper <> "SELECT" Then
                                                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                                oda.SelectCommand.Parameters.Clear()
                                                oda.SelectCommand.CommandText = proc
                                                oda.SelectCommand.Parameters.AddWithValue("DOCID", DDL0.SelectedValue)
                                                oda.SelectCommand.Parameters.AddWithValue("FIELDID", CInt(DROPDOWN1))
                                                oda.SelectCommand.Parameters.AddWithValue("VALUE", ddl.SelectedValue)
                                                Dim dss As New DataTable
                                                oda.Fill(dss)
                                                Dim ddl1 As DropDownList '= TryCast(pnlFields.FindControl("fld" & fldPair(0).ToString()), DropDownList)
                                                If IsNothing(GRD) = False Then
                                                    grdRow = GRD.Rows(rowIndex)
                                                    Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                                    For i As Integer = 0 To grdRow.Cells.Count - 1
                                                        control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                        If IsNothing(control) = True Then
                                                            ddl1 = CType(control, DropDownList)
                                                        End If

                                                    Next
                                                End If
                                                If IsNothing(ddl1) = False Then
                                                    ddl1.Items.Clear()
                                                    ddl1.Items.Add("SELECT")
                                                    ddl1.Items(0).Value = "0"
                                                    For i As Integer = 0 To dss.Rows.Count - 1
                                                        ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                        ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                                    Next
                                                End If

                                            End If
                                        End If
                                    ElseIf fldPair(1).ToString.ToUpper = "R" Then
                                        Dim TAB1 As String = ""
                                        Dim TAB2 As String = ""
                                        Dim STID As String = ""
                                        Dim TID As String = ""
                                        If documenttype(0).ToString.ToUpper = "MASTER" Then
                                            TAB2 = "MMM_MST_MASTER"
                                            TID = "TID"
                                        ElseIf documenttype(0).ToString.ToUpper = "DOCUMENT" Then
                                            TAB2 = "MMM_MST_DOC"
                                            TID = "TID"
                                        ElseIf documenttype(1).ToString.ToUpper = "USER" Then
                                            TAB2 = "MMM_MST_USER"
                                            TID = "UID"
                                        End If
                                        Dim DOCTYPE() As String = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")
                                        If DOCTYPE(0).ToString.ToUpper = "MASTER" Then
                                            TAB1 = "MMM_MST_MASTER"
                                            STID = "TID"
                                        ElseIf DOCTYPE(0).ToString.ToUpper = "DOCUMENT" Then
                                            TAB1 = "MMM_MST_DOC"
                                            STID = "TID"
                                        ElseIf DOCTYPE(1).ToString.ToUpper = "USER" Then
                                            TAB1 = "MMM_MST_USER"
                                            STID = "UID"
                                        End If
                                        Dim DROPDOWN1 As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                        ''Dim DDL0 As DropDownList = TryCast(pnlFields.FindControl("fld" & DROPDOWN1), DropDownList)
                                        oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                        oda.SelectCommand.Parameters.Clear()
                                        oda.SelectCommand.CommandText = "USP_GETMANNUALFILTER"
                                        oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                        oda.SelectCommand.Parameters.AddWithValue("@TAB1", TAB1)
                                        oda.SelectCommand.Parameters.AddWithValue("@TAB2", TAB2)
                                        oda.SelectCommand.Parameters.AddWithValue("@DOCUMENTTYPE", DOCTYPE(1).ToString)
                                        oda.SelectCommand.Parameters.AddWithValue("@FLDMAPPING", DOCTYPE(2).ToString)
                                        oda.SelectCommand.Parameters.AddWithValue("@AUTOFILTER", dt.Rows(0).Item("AUTOFILTER").ToString())
                                        oda.SelectCommand.Parameters.AddWithValue("@TID", TID)
                                        oda.SelectCommand.Parameters.AddWithValue("@STID", STID)
                                        oda.SelectCommand.Parameters.AddWithValue("@VAL", ddl.SelectedValue)
                                        Dim dss As New DataTable
                                        oda.Fill(dss)
                                        Dim ddl1 As DropDownList
                                        If IsNothing(GRD) = False Then
                                            grdRow = GRD.Rows(rowIndex)
                                            Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                            For i As Integer = 0 To grdRow.Cells.Count - 1
                                                control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                If IsNothing(control) = True Then
                                                    ddl1 = CType(control, DropDownList)
                                                End If

                                            Next
                                        End If
                                        If IsNothing(ddl1) = False Then
                                            ddl1.Items.Clear()
                                            ddl1.Items.Add("SELECT")
                                            ddl1.Items(0).Value = "0"
                                            For i As Integer = 0 To dss.Rows.Count - 1
                                                ddl1.Items.Add(dss.Rows(i).Item(0).ToString())
                                                ddl1.Items(i + 1).Value = dss.Rows(i).Item("tID")
                                            Next
                                        End If


                                    Else

                                        Dim DROPDOWN As String() = dt.Rows(0).Item("DROPDOWN").ToString.Split("-")  ' this contains to be filled values 
                                        Dim TABLENAME As String = ""
                                        Dim TID As String = "TID"
                                        If UCase(DROPDOWN(0).ToString()) = "MASTER" Then
                                            TABLENAME = "MMM_MST_MASTER"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "DOCUMENT" Then
                                            TABLENAME = "MMM_MST_DOC"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "CHILD" Then
                                            TABLENAME = "MMM_MST_DOC_ITEM"
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "STATIC" Then
                                            If UCase(DROPDOWN(1).ToString()) = "USER" Then
                                                TABLENAME = "MMM_MST_USER"
                                                TID = "UID"
                                            ElseIf UCase(DROPDOWN(1).ToString()) = "LOCATION" Then
                                                TABLENAME = "MMM_MST_LOCATION"
                                                If DROPDOWN(2).ToString.ToUpper = "LOCATIONSTATE" Then
                                                    TID = "SID"
                                                Else
                                                    TID = "LOCID"
                                                End If
                                            Else
                                                TABLENAME = dt.Rows(0).Item("DBTABLENAME").ToString
                                            End If
                                        ElseIf UCase(DROPDOWN(0).ToString()) = "SESSION" Then
                                            TABLENAME = "MMM_MST_USER"
                                            TID = "UID"
                                        End If
                                        Dim SLVALUE As String() = ddl.SelectedValue.Split("|")
                                        If dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "AUTOCOMPLETE" Then

                                            If IsLookupDDLField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString(), pnlFields) Then


                                                Dim txtBox As TextBox
                                                grdRow = GRD.Rows(rowIndex)
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.Cells(i).FindControl("fld" & Val(fldPair(0)).ToString())
                                                    If IsNothing(control) = True Then
                                                        txtBox = CType(control, TextBox)
                                                        txtBox.Text = String.Empty
                                                    End If

                                                Next


                                            End If

                                        ElseIf dt.Rows(0).Item("fieldtype").ToString.ToUpper() = "DROP DOWN" Then
                                            Dim ob As New DynamicForm
                                            Dim AUTOFILTER As String = dt.Rows(0).Item("AUTOFILTER").ToString()
                                            Dim tids As String = ""

                                            ''Filter Data according to Userid
                                            tids = ob.UserDataFilter(DS.Tables("data").Rows(0).Item("documenttype").ToString(), DROPDOWN(1).ToString())

                                            '' below new func  by sunil for checking Role assignment fields in any master dropdown
                                            '' if found then restric no. of list as per rights
                                            Dim StrforRoleAssn As String = ""
                                            StrforRoleAssn = "SELECT SUBSTRING((SELECT ',' + CONVERT(NVARCHAR, TID" & ")  FROM " & TABLENAME & " M where EID=" & HttpContext.Current.Session("eid") & " and documenttype='" & DROPDOWN(1).ToString() & "'"
                                            If Not (tids.Length > 2) Then
                                                tids = CheckRoleAsgnmentDdn(DROPDOWN(1).ToString(), StrforRoleAssn)
                                            End If

                                            If tids.Length > 2 Then
                                                xwhr = " AND CONVERT(NVARCHAR(10),TID) IN (" & tids & ")"
                                            Else
                                                xwhr = ""
                                            End If

                                            Dim ChildDoctype As String = ""

                                            If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                                Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                                ChildDoctype = ChildMid(1).ToString
                                            End If

                                            oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                            oda.SelectCommand.CommandText = "USP_BINDDDL"
                                            oda.SelectCommand.Parameters.Clear()
                                            oda.SelectCommand.Parameters.AddWithValue("@EID", HttpContext.Current.Session("EID"))
                                            oda.SelectCommand.Parameters.AddWithValue("@TableName", TABLENAME)
                                            oda.SelectCommand.Parameters.AddWithValue("@Val", SLVALUE(0))
                                            oda.SelectCommand.Parameters.AddWithValue("@xwhr", xwhr)
                                            oda.SelectCommand.Parameters.AddWithValue("@tid", TID)
                                            If ChildDoctype.Length > 0 Then
                                                oda.SelectCommand.Parameters.AddWithValue("@documenttype", ChildDoctype)
                                            Else
                                                oda.SelectCommand.Parameters.AddWithValue("@documenttype", DROPDOWN(1))
                                            End If
                                            oda.SelectCommand.Parameters.AddWithValue("@fldmapping", DROPDOWN(2))
                                            oda.SelectCommand.Parameters.AddWithValue("@autofilter", AUTOFILTER)
                                            'oda.SelectCommand.CommandText = STR & " AND isAuth=1 " & xwhr & " Order by " & DROPDOWN(2).ToString()
                                            Dim dtFinal As New DataTable
                                            oda.Fill(dtFinal)
                                            Dim ddlo As DropDownList

                                            If IsNothing(GRD) = False Then
                                                grdRow = GRD.Rows(rowIndex)
                                                Dim ctrlId As String = "fld" & Val(fldPair(0)).ToString()
                                                'For i As Integer = 0 To grdRow.Cells.Count - 1
                                                control = grdRow.FindControl(ctrlId & "_" & rowIndex)
                                                'control = grdRow.Cells(i).FindControl(ctrlId & "_" & rowIndex)
                                                If IsNothing(control) = False Then
                                                    ddlo = CType(control, DropDownList)
                                                End If

                                                ' Next
                                            End If
                                            If IsNothing(ddlo) = False Then
                                                ddlo.Items.Clear()
                                                ddlo.Items.Add("SELECT")
                                                ddlo.Items(0).Value = "0"
                                                For i As Integer = 0 To dtFinal.Rows.Count - 1
                                                    ddlo.Items.Add(dtFinal.Rows(i).Item(0).ToString())
                                                    ddlo.Items(i + 1).Value = dtFinal.Rows(i).Item("tID")
                                                Next
                                            End If

                                        Else
                                            Dim TID1 As String() = ddl.SelectedValue.ToString.Split("|")
                                            Dim SELTID As String = ""
                                            If TID1.Length > 1 Then
                                                SELTID = TID1(1).ToString
                                            Else
                                                SELTID = TID1(0).ToString
                                            End If
                                            Dim value As String = ""
                                            Dim ChildDoctype As String = ""
                                            If DS.Tables("data").Rows(0).Item("dropdowntype") = "CHILD VALUED" Then
                                                Dim ChildMid() As String = documenttype(1).ToString.Split(":")
                                                ChildDoctype = ChildMid(1).ToString
                                            End If

                                            If SELTID.ToString <> "0" And SELTID.ToString <> "" Then
                                                oda = New SqlDataAdapter("", con)
                                                oda.SelectCommand.CommandType = CommandType.StoredProcedure
                                                oda.SelectCommand.Parameters.Clear()
                                                oda.SelectCommand.CommandText = "uspGetMasterValue"
                                                oda.SelectCommand.Parameters.AddWithValue("EID", HttpContext.Current.Session("EID"))
                                                If ChildDoctype.Length > 0 Then
                                                    oda.SelectCommand.Parameters.AddWithValue("documentType", ChildDoctype)
                                                Else
                                                    oda.SelectCommand.Parameters.AddWithValue("documentType", documenttype(1))
                                                End If
                                                oda.SelectCommand.Parameters.AddWithValue("Type", documenttype(0))
                                                oda.SelectCommand.Parameters.AddWithValue("TID", SELTID)
                                                oda.SelectCommand.Parameters.AddWithValue("FLDMAPPING", fldPair(1))
                                                If con.State <> ConnectionState.Open Then
                                                    con.Open()
                                                End If
                                                value = oda.SelectCommand.ExecuteScalar().ToString()
                                            End If

                                            If IsLookupDDLField(rowIndex, GRD.ID, "fld" & Val(fldPair(0)).ToString(), dt.Rows(0).Item("FieldType").ToString(), pnlFields) Then

                                                Dim txtBox As DropDownList
                                                grdRow = GRD.Rows(rowIndex)
                                                For i As Integer = 0 To grdRow.Cells.Count - 1
                                                    control = grdRow.FindControl("fld" & Val(fldPair(0)) & "_" & rowIndex.ToString())

                                                    If IsNothing(control) = False Then
                                                        txtBox = CType(control, DropDownList)
                                                        txtBox.SelectedIndex = txtBox.Items.IndexOf(txtBox.Items.FindByText(value))
                                                        ' txtBox.Text = value
                                                    End If
                                                Next
                                            End If

                                        End If


                                    End If
                                End If
                            End If
                        End If
                    Next
                End If
            End If




        Catch ex As Exception
        Finally
            If Not con Is Nothing Then
                con.Dispose()
            End If
            If Not oda Is Nothing Then
                oda.Dispose()
            End If
        End Try


    End Sub
    Private Function IsLookupDDLField(rowIndex As Integer, grdId As String, ctrlId As String, fldType As String, Optional ByRef pnlFields As Panel = Nothing) As Boolean
        Try
            Dim GRD As GridView = TryCast(pnlFields.FindControl(grdId), GridView)
            Dim grdRow As GridViewRow
            Dim control As Control = Nothing

            If IsNothing(GRD) = False Then
                grdRow = GRD.Rows(rowIndex)
                If fldType.ToUpper = "LOOKUPDDL" Then
                    control = grdRow.FindControl(ctrlId & "_" & rowIndex)
                Else
                    control = grdRow.FindControl(ctrlId & rowIndex)
                End If

            End If
            If IsNothing(control) = False Then
                Return True
            Else
                Return False
            End If
        Catch ex As Exception
            Return False
        End Try

    End Function
    Private Function IsLookupField1(rowIndex As Integer, grdId As String, ctrlId As String, fldType As String, Optional ByRef pnlFields As Panel = Nothing) As Boolean
        Try
            Dim GRD As GridView = TryCast(pnlFields.FindControl(grdId), GridView)
            Dim grdRow As GridViewRow
            Dim control As Control = Nothing

            If IsNothing(GRD) = False Then
                grdRow = GRD.Rows(rowIndex)
                If fldType = "Drop Down" Then
                    control = grdRow.FindControl(ctrlId & "_" & rowIndex)
                Else
                    control = grdRow.FindControl(ctrlId & rowIndex)
                End If

            End If
            If IsNothing(control) = False Then
                Return True
            Else
                Return False
            End If
        Catch ex As Exception
            Return False
        End Try

    End Function

    Public Function ValidateEmail(ByVal strCheck As String) As Boolean
        Try
            Dim vEmailAddress As New System.Net.Mail.MailAddress(strCheck)
        Catch ex As Exception
            Return False
        End Try
        Return True
    End Function
    Public Function GSTValidation(ByVal strCheck As String) As Boolean
        Try
            Dim Gstregex As Regex = New Regex("[0-9]{2}[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9A-Za-z]{1}[Z]{1}[0-9a-zA-Z]{1}")
            If Not Gstregex.IsMatch(strCheck.Trim()) Then
                Return False
            End If
        Catch ex As Exception
            Return False
        End Try
        Return True
    End Function
    Public Function PanCardValidation(ByVal strCheck As String) As Boolean
        Try
            Dim Pancardregex As Regex = New Regex("([A-Za-z]){5}([0-9]){4}([A-Za-z]){1}$")
            If Not Pancardregex.IsMatch(strCheck.Trim()) Then
                Return False
            End If
        Catch ex As Exception
            Return False
        End Try
        Return True
    End Function
    Public Function IFSCValidation(ByVal strCheck As String) As Boolean
        Try
            Dim Pancardregex As Regex = New Regex("^[A-Za-z]{4}[0]{1}[a-zA-Z0-9]{6}$")
            If Not Pancardregex.IsMatch(strCheck.Trim()) Then
                Return False
            End If
        Catch ex As Exception
            Return False
        End Try
        Return True
    End Function
End Class